/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernIr from "../../..";

export type HttpEndpointExample = FernIr.HttpEndpointExample.UserProvided | FernIr.HttpEndpointExample.Generated;

export declare namespace HttpEndpointExample {
    interface UserProvided extends FernIr.ExampleEndpointCall, _Utils {
        exampleType: "userProvided";
    }

    interface Generated extends FernIr.ExampleEndpointCall, _Utils {
        exampleType: "generated";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernIr.HttpEndpointExample._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        userProvided: (value: FernIr.ExampleEndpointCall) => _Result;
        generated: (value: FernIr.ExampleEndpointCall) => _Result;
        _other: (value: { exampleType: string }) => _Result;
    }
}

export const HttpEndpointExample = {
    userProvided: (value: FernIr.ExampleEndpointCall): FernIr.HttpEndpointExample.UserProvided => {
        return {
            ...value,
            exampleType: "userProvided",
            _visit: function <_Result>(
                this: FernIr.HttpEndpointExample.UserProvided,
                visitor: FernIr.HttpEndpointExample._Visitor<_Result>
            ) {
                return FernIr.HttpEndpointExample._visit(this, visitor);
            },
        };
    },

    generated: (value: FernIr.ExampleEndpointCall): FernIr.HttpEndpointExample.Generated => {
        return {
            ...value,
            exampleType: "generated",
            _visit: function <_Result>(
                this: FernIr.HttpEndpointExample.Generated,
                visitor: FernIr.HttpEndpointExample._Visitor<_Result>
            ) {
                return FernIr.HttpEndpointExample._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernIr.HttpEndpointExample,
        visitor: FernIr.HttpEndpointExample._Visitor<_Result>
    ): _Result => {
        switch (value.exampleType) {
            case "userProvided":
                return visitor.userProvided(value);
            case "generated":
                return visitor.generated(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;

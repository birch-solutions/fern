/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const BasicAuthScheme: core.serialization.ObjectSchema<serializers.BasicAuthScheme.Raw, FernIr.BasicAuthScheme> =
    core.serialization
        .objectWithoutOptionalProperties({
            username: core.serialization.lazyObject(async () => (await import("../../..")).Name),
            usernameEnvVar: core.serialization
                .lazy(async () => (await import("../../..")).EnvironmentVariable)
                .optional(),
            password: core.serialization.lazyObject(async () => (await import("../../..")).Name),
            passwordEnvVar: core.serialization
                .lazy(async () => (await import("../../..")).EnvironmentVariable)
                .optional(),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDocs));

export declare namespace BasicAuthScheme {
    interface Raw extends serializers.WithDocs.Raw {
        username: serializers.Name.Raw;
        usernameEnvVar?: serializers.EnvironmentVariable.Raw | null;
        password: serializers.Name.Raw;
        passwordEnvVar?: serializers.EnvironmentVariable.Raw | null;
    }
}

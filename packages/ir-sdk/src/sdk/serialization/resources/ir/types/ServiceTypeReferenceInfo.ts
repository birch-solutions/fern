/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const ServiceTypeReferenceInfo: core.serialization.ObjectSchema<
    serializers.ServiceTypeReferenceInfo.Raw,
    FernIr.ServiceTypeReferenceInfo
> = core.serialization.objectWithoutOptionalProperties({
    typesReferencedOnlyByService: core.serialization.record(
        core.serialization.lazy(async () => (await import("../../..")).ServiceId),
        core.serialization.list(core.serialization.lazy(async () => (await import("../../..")).TypeId))
    ),
    sharedTypes: core.serialization.list(core.serialization.lazy(async () => (await import("../../..")).TypeId)),
});

export declare namespace ServiceTypeReferenceInfo {
    interface Raw {
        typesReferencedOnlyByService: Record<serializers.ServiceId.Raw, serializers.TypeId.Raw[]>;
        sharedTypes: serializers.TypeId.Raw[];
    }
}

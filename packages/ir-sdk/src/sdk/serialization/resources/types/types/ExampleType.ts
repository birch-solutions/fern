/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const ExampleType: core.serialization.ObjectSchema<serializers.ExampleType.Raw, FernIr.ExampleType> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: core.serialization.lazyObject(async () => (await import("../../..")).Name).optional(),
            shape: core.serialization.lazy(async () => (await import("../../..")).ExampleTypeShape),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithJsonExample))
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDocs));

export declare namespace ExampleType {
    interface Raw extends serializers.WithJsonExample.Raw, serializers.WithDocs.Raw {
        name?: serializers.Name.Raw | null;
        shape: serializers.ExampleTypeShape.Raw;
    }
}

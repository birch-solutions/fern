/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const VariableDeclaration: core.serialization.ObjectSchema<
    serializers.VariableDeclaration.Raw,
    FernIr.VariableDeclaration
> = core.serialization
    .objectWithoutOptionalProperties({
        id: core.serialization.lazy(async () => (await import("../../..")).VariableId),
        name: core.serialization.lazyObject(async () => (await import("../../..")).Name),
        type: core.serialization.lazy(async () => (await import("../../..")).TypeReference),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDocs));

export declare namespace VariableDeclaration {
    interface Raw extends serializers.WithDocs.Raw {
        id: serializers.VariableId.Raw;
        name: serializers.Name.Raw;
        type: serializers.TypeReference.Raw;
    }
}

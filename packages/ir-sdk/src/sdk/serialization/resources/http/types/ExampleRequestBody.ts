/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const ExampleRequestBody: core.serialization.Schema<
    serializers.ExampleRequestBody.Raw,
    FernIr.ExampleRequestBody
> = core.serialization
    .union("type", {
        inlinedRequestBody: core.serialization.lazyObject(
            async () => (await import("../../..")).ExampleInlinedRequestBody
        ),
        reference: core.serialization.lazyObject(async () => (await import("../../..")).ExampleTypeReference),
    })
    .transform<FernIr.ExampleRequestBody>({
        transform: (value) => {
            switch (value.type) {
                case "inlinedRequestBody":
                    return FernIr.ExampleRequestBody.inlinedRequestBody(value);
                case "reference":
                    return FernIr.ExampleRequestBody.reference(value);
                default:
                    return value as FernIr.ExampleRequestBody;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace ExampleRequestBody {
    type Raw = ExampleRequestBody.InlinedRequestBody | ExampleRequestBody.Reference;

    interface InlinedRequestBody extends serializers.ExampleInlinedRequestBody.Raw {
        type: "inlinedRequestBody";
    }

    interface Reference extends serializers.ExampleTypeReference.Raw {
        type: "reference";
    }
}

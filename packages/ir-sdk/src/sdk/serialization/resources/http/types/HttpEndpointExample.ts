/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const HttpEndpointExample: core.serialization.Schema<
    serializers.HttpEndpointExample.Raw,
    FernIr.HttpEndpointExample
> = core.serialization
    .union("exampleType", {
        userProvided: core.serialization.lazyObject(async () => (await import("../../..")).ExampleEndpointCall),
        generated: core.serialization.lazyObject(async () => (await import("../../..")).ExampleEndpointCall),
    })
    .transform<FernIr.HttpEndpointExample>({
        transform: (value) => {
            switch (value.exampleType) {
                case "userProvided":
                    return FernIr.HttpEndpointExample.userProvided(value);
                case "generated":
                    return FernIr.HttpEndpointExample.generated(value);
                default:
                    return value as FernIr.HttpEndpointExample;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace HttpEndpointExample {
    type Raw = HttpEndpointExample.UserProvided | HttpEndpointExample.Generated;

    interface UserProvided extends serializers.ExampleEndpointCall.Raw {
        exampleType: "userProvided";
    }

    interface Generated extends serializers.ExampleEndpointCall.Raw {
        exampleType: "generated";
    }
}

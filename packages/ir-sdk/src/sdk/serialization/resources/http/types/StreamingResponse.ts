/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const StreamingResponse: core.serialization.ObjectSchema<
    serializers.StreamingResponse.Raw,
    FernIr.StreamingResponse
> = core.serialization
    .objectWithoutOptionalProperties({
        dataEventType: core.serialization.lazy(async () => (await import("../../..")).StreamingResponseChunkType),
        terminator: core.serialization.string().optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDocs));

export declare namespace StreamingResponse {
    interface Raw extends serializers.WithDocs.Raw {
        dataEventType: serializers.StreamingResponseChunkType.Raw;
        terminator?: string | null;
    }
}

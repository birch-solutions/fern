/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernDocsConfig from "../../../../api";
import * as core from "../../../../core";

export const NavbarLink: core.serialization.Schema<serializers.NavbarLink.Raw, FernDocsConfig.NavbarLink> =
    core.serialization
        .union("type", {
            filled: core.serialization.lazyObject(async () => (await import("../../..")).NavbarLinkConfiguration),
            outlined: core.serialization.lazyObject(async () => (await import("../../..")).NavbarLinkConfiguration),
            minimal: core.serialization.lazyObject(async () => (await import("../../..")).NavbarLinkConfiguration),
            primary: core.serialization.lazyObject(async () => (await import("../../..")).NavbarLinkConfiguration),
            secondary: core.serialization.lazyObject(async () => (await import("../../..")).NavbarLinkConfiguration)
        })
        .transform<FernDocsConfig.NavbarLink>({
            transform: (value) => value,
            untransform: (value) => value
        });

export declare namespace NavbarLink {
    type Raw = NavbarLink.Filled | NavbarLink.Outlined | NavbarLink.Minimal | NavbarLink.Primary | NavbarLink.Secondary;

    interface Filled extends serializers.NavbarLinkConfiguration.Raw {
        type: "filled";
    }

    interface Outlined extends serializers.NavbarLinkConfiguration.Raw {
        type: "outlined";
    }

    interface Minimal extends serializers.NavbarLinkConfiguration.Raw {
        type: "minimal";
    }

    interface Primary extends serializers.NavbarLinkConfiguration.Raw {
        type: "primary";
    }

    interface Secondary extends serializers.NavbarLinkConfiguration.Raw {
        type: "secondary";
    }
}

/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernDocsConfig from "../../../../api";
import * as core from "../../../../core";

export const LayoutConfig: core.serialization.ObjectSchema<serializers.LayoutConfig.Raw, FernDocsConfig.LayoutConfig> =
    core.serialization.object({
        pageWidth: core.serialization.property("page-width", core.serialization.string().optional()),
        contentWidth: core.serialization.property("content-width", core.serialization.string().optional()),
        sidebarWidth: core.serialization.property("sidebar-width", core.serialization.string().optional()),
        headerHeight: core.serialization.property("header-height", core.serialization.string().optional()),
        searchbarPlacement: core.serialization.property(
            "searchbar-placement",
            core.serialization.lazy(async () => (await import("../../..")).SidebarOrHeaderPlacement).optional()
        ),
        tabsPlacement: core.serialization.property(
            "tabs-placement",
            core.serialization.lazy(async () => (await import("../../..")).SidebarOrHeaderPlacement).optional()
        )
    });

export declare namespace LayoutConfig {
    interface Raw {
        "page-width"?: string | null;
        "content-width"?: string | null;
        "sidebar-width"?: string | null;
        "header-height"?: string | null;
        "searchbar-placement"?: serializers.SidebarOrHeaderPlacement.Raw | null;
        "tabs-placement"?: serializers.SidebarOrHeaderPlacement.Raw | null;
    }
}

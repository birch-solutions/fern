/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernOpenapiIr from "../../../index";

/**
 * An example that has either a list of streaming examples or a single non-streaming example.
 */
export type EndpointResponseExample =
    | FernOpenapiIr.EndpointResponseExample.WithStreaming
    | FernOpenapiIr.EndpointResponseExample.WithoutStreaming;

export declare namespace EndpointResponseExample {
    interface WithStreaming extends _Utils {
        type: "withStreaming";
        value: FernOpenapiIr.FullExample[];
    }

    interface WithoutStreaming extends _Utils {
        type: "withoutStreaming";
        value: FernOpenapiIr.FullExample;
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernOpenapiIr.EndpointResponseExample._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        withStreaming: (value: FernOpenapiIr.FullExample[]) => _Result;
        withoutStreaming: (value: FernOpenapiIr.FullExample) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const EndpointResponseExample = {
    withStreaming: (value: FernOpenapiIr.FullExample[]): FernOpenapiIr.EndpointResponseExample.WithStreaming => {
        return {
            value: value,
            type: "withStreaming",
            _visit: function <_Result>(
                this: FernOpenapiIr.EndpointResponseExample.WithStreaming,
                visitor: FernOpenapiIr.EndpointResponseExample._Visitor<_Result>
            ) {
                return FernOpenapiIr.EndpointResponseExample._visit(this, visitor);
            },
        };
    },

    withoutStreaming: (value: FernOpenapiIr.FullExample): FernOpenapiIr.EndpointResponseExample.WithoutStreaming => {
        return {
            value: value,
            type: "withoutStreaming",
            _visit: function <_Result>(
                this: FernOpenapiIr.EndpointResponseExample.WithoutStreaming,
                visitor: FernOpenapiIr.EndpointResponseExample._Visitor<_Result>
            ) {
                return FernOpenapiIr.EndpointResponseExample._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernOpenapiIr.EndpointResponseExample,
        visitor: FernOpenapiIr.EndpointResponseExample._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case "withStreaming":
                return visitor.withStreaming(value.value);
            case "withoutStreaming":
                return visitor.withoutStreaming(value.value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;

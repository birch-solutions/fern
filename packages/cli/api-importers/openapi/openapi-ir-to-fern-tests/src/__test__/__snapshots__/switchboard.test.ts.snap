// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`open api parser > switchboard > docs 1`] = `
{
  "definitionFiles": {
    "auth.yml": {
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "andRedirect": {
            "auth": false,
            "display-name": "Auth and redirect sessions",
            "docs": "Auth and redirect sessions by ID",
            "examples": [
              {},
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/auth",
            "request": {
              "headers": {
                "x-call-type": {
                  "docs": "call type, e.g. CHROMEDRIVER_EXTERNAL",
                  "name": "callType",
                  "type": "optional<string>",
                },
                "x-session-id": {
                  "docs": "session id",
                  "name": "sessionId",
                  "type": "optional<string>",
                },
              },
              "name": "AuthAndRedirectRequest",
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
    "extensions.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Delete extensions matching name query",
            "docs": "Delete an extension by ID",
            "examples": [
              {
                "query-parameters": {
                  "name": "Widget",
                },
              },
            ],
            "method": "DELETE",
            "pagination": undefined,
            "path": "/extensions",
            "request": {
              "name": "ExtensionsDeleteRequest",
              "query-parameters": {
                "name": {
                  "docs": "Name to search for, supports regex, case insensitive",
                  "type": "optional<string>",
                },
              },
            },
          },
          "get": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Get extensions",
            "docs": "Get extensions, searching by name",
            "examples": [
              {
                "query-parameters": {
                  "name": "Widget",
                },
                "response": {
                  "body": {
                    "data": [
                      {
                        "date_created": "2024-01-15T09:30:00Z",
                        "id": "73df0106-1781-4b03-a288-e749e1a43481",
                        "name": "Special Widget",
                        "upload_uri": "upload_uri",
                      },
                    ],
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/extensions",
            "request": {
              "name": "ExtensionsGetRequest",
              "query-parameters": {
                "name": {
                  "docs": "Name to search for, supports regex, case insensitive",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.ListExtensionV1EnvelopeDefaultMetaWrapper",
            },
          },
          "getById": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Get an extension",
            "docs": "Get an extension by ID",
            "errors": [
              "root.ExtensionsGetByIdRequestNotFoundError",
              "root.ExtensionsGetByIdRequestUnprocessableEntityError",
              "root.ExtensionsGetByIdRequestInternalServerError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "4a61a55c-391b-4f73-957e-ffbd29ac7cba",
                },
                "response": {
                  "body": {
                    "data": {
                      "date_created": "2024-01-15T09:30:00Z",
                      "id": "73df0106-1781-4b03-a288-e749e1a43481",
                      "name": "Special Widget",
                      "upload_uri": "upload_uri",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/extensions/{id}",
            "path-parameters": {
              "id": {
                "docs": "UUID of the profile to get",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.ExtensionV1EnvelopeDefaultMetaWrapper",
            },
          },
          "post": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Create an extension",
            "docs": undefined,
            "examples": [
              {
                "request": {
                  "name": "Special Widget",
                },
                "response": {
                  "body": {
                    "data": {
                      "date_created": "2024-01-15T09:30:00Z",
                      "id": "73df0106-1781-4b03-a288-e749e1a43481",
                      "name": "Special Widget",
                      "upload_uri": "upload_uri",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/extensions",
            "request": {
              "body": {
                "properties": {
                  "name": {
                    "docs": "Name of the extension",
                    "type": "string",
                  },
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "ExtensionsPostRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.ExtensionV1EnvelopeDefaultMetaWrapper",
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
    "profiles.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Delete profiles matching query",
            "docs": "Delete profiles matching query",
            "examples": [
              {
                "query-parameters": {
                  "name": "^Acme.*",
                },
              },
            ],
            "method": "DELETE",
            "pagination": undefined,
            "path": "/profiles",
            "request": {
              "name": "ProfilesDeleteRequest",
              "query-parameters": {
                "name": {
                  "docs": "Name to search for, supports regex, case insensitive",
                  "type": "optional<string>",
                },
                "tags": {
                  "allow-multiple": true,
                  "docs": "a comma separated list of tags to filter by (joined by OR, e.g. tag is red OR blue)",
                  "type": "optional<string>",
                },
              },
            },
          },
          "get": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get profiles",
            "docs": "Get profiles, searching by name or tags",
            "examples": [
              {
                "query-parameters": {
                  "name": "^Acme.*",
                },
                "response": {
                  "body": {
                    "data": [
                      {
                        "name": "Acme corp login",
                        "status": "status",
                        "tags": [
                          "blue",
                          "red",
                        ],
                        "upload_uri": "upload_uri",
                      },
                    ],
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/profiles",
            "request": {
              "name": "ProfilesGetRequest",
              "query-parameters": {
                "name": {
                  "docs": "Name to search for, supports regex, case insensitive",
                  "type": "optional<string>",
                },
                "tags": {
                  "allow-multiple": true,
                  "docs": "a comma separated list of tags to filter by (joined by OR, e.g. tag is red OR blue)",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.ListProfileV1EnvelopeDefaultMetaWrapper",
            },
          },
          "getById": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get a profile",
            "docs": "Get a profile by ID",
            "errors": [
              "root.ProfilesGetByIdRequestNotFoundError",
              "root.ProfilesGetByIdRequestUnprocessableEntityError",
              "root.ProfilesGetByIdRequestInternalServerError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "4a61a55c-391b-4f73-957e-ffbd29ac7cba",
                },
                "response": {
                  "body": {
                    "data": {
                      "name": "Acme corp login",
                      "status": "status",
                      "tags": [
                        "blue",
                        "red",
                      ],
                      "upload_uri": "upload_uri",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/profiles/{id}",
            "path-parameters": {
              "id": {
                "docs": "name of the profile to get",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.ProfileV1EnvelopeDefaultMetaWrapper",
            },
          },
          "post": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Create a profile",
            "docs": undefined,
            "examples": [
              {
                "request": {
                  "name": "Acme corp login",
                },
                "response": {
                  "body": {
                    "data": {
                      "name": "Acme corp login",
                      "status": "status",
                      "tags": [
                        "blue",
                        "red",
                      ],
                      "upload_uri": "upload_uri",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/profiles",
            "request": {
              "body": {
                "properties": {
                  "name": {
                    "docs": "Name of the Profile",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": 100,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "tags": {
                    "docs": "a comma separated list of tags for this profile",
                    "type": "optional<list<string>>",
                  },
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "ProfileInput",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.ProfileV1EnvelopeDefaultMetaWrapper",
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
    "sessions.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "events": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get a session event stream",
            "docs": "Get a session event stream for a given session ID",
            "errors": [
              "root.SessionsEventsRequestNotFoundError",
              "root.SessionsEventsRequestUnprocessableEntityError",
              "root.SessionsEventsRequestInternalServerError",
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions/{id}/events",
            "path-parameters": {
              "id": {
                "docs": "UUID of the session to get status info for",
                "type": "string",
              },
            },
            "response-stream": {
              "docs": "OK",
              "format": "sse",
              "type": "SessionsEventsResponse",
            },
          },
          "getinfo": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get info for a session",
            "docs": "Get a session by ID",
            "errors": [
              "root.SessionsGetInfoRequestNotFoundError",
              "root.SessionsGetInfoRequestUnprocessableEntityError",
              "root.SessionsGetInfoRequestInternalServerError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                },
                "response": {
                  "body": {
                    "data": {
                      "cdp_url": "cdp_url",
                      "cdp_ws_url": "cdp_ws_url",
                      "chromedriver_url": "chromedriver_url",
                      "configuration": {
                        "persist_profile": true,
                        "persist_profile_name": "default",
                        "persist_profile_tags": [
                          "persist_profile_tags",
                        ],
                        "profile_id": "linkedin",
                        "timeoutMinutes": 10,
                      },
                      "current_usage": 1000000,
                      "date_created": "2024-01-15T09:30:00Z",
                      "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                      "last_activity": "2024-01-15T09:30:00Z",
                      "live_view": {
                        "airtop_browser_url": "airtop_browser_url",
                        "token": "token",
                      },
                      "status": "active",
                      "url": "url",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions/{id}",
            "path-parameters": {
              "id": {
                "docs": "UUID of the session to get",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SessionWithConnectionInfoEnvelopeDefaultMetaWrapper",
            },
          },
          "list": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get a list of sessions",
            "docs": "Get a list of sessions by ID",
            "errors": [
              "root.SessionsListRequestNotFoundError",
              "root.SessionsListRequestUnprocessableEntityError",
              "root.SessionsListRequestInternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "limit": 10,
                  "offset": 1,
                },
                "response": {
                  "body": {
                    "data": {
                      "pagination": {
                        "currentLimit": 1000000,
                        "currentPage": 1000000,
                        "finalCount": 1000000,
                        "hasMore": true,
                        "initialCount": 1000000,
                        "nextOffset": 1000000,
                        "numberOfPages": 1000000,
                        "totalItems": 1000000,
                      },
                      "sessions": [
                        {
                          "configuration": {
                            "persist_profile": true,
                            "persist_profile_name": "default",
                            "profile_id": "linkedin",
                            "timeoutMinutes": 10,
                          },
                          "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                          "status": "active",
                        },
                      ],
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions",
            "request": {
              "name": "SessionsListRequest",
              "query-parameters": {
                "limit": {
                  "docs": "limit for pagination",
                  "type": "optional<long>",
                },
                "offset": {
                  "docs": "offset for pagination",
                  "type": "optional<long>",
                },
                "sessionIds": {
                  "allow-multiple": true,
                  "docs": "a comma separated list of UUIDs of the session to get",
                  "type": "optional<string>",
                },
                "status": {
                  "docs": "status of the session to get",
                  "type": "optional<SessionsListRequestStatus>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SessionsWithPaginationEnvelopeDefaultMetaWrapper",
            },
          },
          "post": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Create a session",
            "docs": undefined,
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "data": {
                      "cdp_url": "cdp_url",
                      "cdp_ws_url": "cdp_ws_url",
                      "chromedriver_url": "chromedriver_url",
                      "configuration": {
                        "persist_profile": true,
                        "persist_profile_name": "default",
                        "persist_profile_tags": [
                          "persist_profile_tags",
                        ],
                        "profile_id": "linkedin",
                        "timeoutMinutes": 10,
                      },
                      "current_usage": 1000000,
                      "date_created": "2024-01-15T09:30:00Z",
                      "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                      "last_activity": "2024-01-15T09:30:00Z",
                      "live_view": {
                        "airtop_browser_url": "airtop_browser_url",
                        "token": "token",
                      },
                      "status": "active",
                      "url": "url",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/sessions",
            "request": {
              "body": {
                "properties": {
                  "configuration": {
                    "docs": "Session configuration",
                    "type": "optional<root.SessionConfigV1>",
                  },
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "SessionRestInputV1",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.SessionWithConnectionInfoEnvelopeDefaultMetaWrapper",
            },
          },
          "terminate": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Ends a session",
            "docs": "Ends a session by ID. If a given session id does not exist within the organization, it is ignored.",
            "examples": [
              {
                "path-parameters": {
                  "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                },
              },
            ],
            "method": "DELETE",
            "pagination": undefined,
            "path": "/sessions/{id}",
            "path-parameters": {
              "id": {
                "docs": "UUID of the session to delete",
                "type": "string",
              },
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "types": {
        "SessionsEventsResponse": {
          "availability": undefined,
          "base-properties": {},
          "discriminant": "event",
          "docs": "Each oneOf object in the array represents one possible Server Sent Events (SSE) message, serialized as UTF-8 text according to the SSE specification.",
          "encoding": undefined,
          "source": {
            "openapi": "switchboard/openapi.yml",
          },
          "union": {
            "error": {
              "type": "SessionsEventsResponseError",
            },
            "status": {
              "type": "SessionsEventsResponseStatus",
            },
          },
        },
        "SessionsEventsResponseError": {
          "docs": undefined,
          "properties": {
            "data": "root.ErrorMessage",
            "id": {
              "docs": "The event ID.",
              "type": "optional<integer>",
            },
            "retry": {
              "docs": "The retry time in milliseconds.",
              "type": "optional<integer>",
            },
          },
          "source": {
            "openapi": "switchboard/openapi.yml",
          },
        },
        "SessionsEventsResponseStatus": {
          "docs": undefined,
          "properties": {
            "data": "root.StatusMessage",
            "id": {
              "docs": "The event ID.",
              "type": "optional<integer>",
            },
            "retry": {
              "docs": "The retry time in milliseconds.",
              "type": "optional<integer>",
            },
          },
          "source": {
            "openapi": "switchboard/openapi.yml",
          },
        },
        "SessionsListRequestStatus": {
          "docs": "status of the session to get",
          "enum": [
            "awaiting_capacity",
            "initializing",
            "running",
            "ended",
          ],
          "source": {
            "openapi": "switchboard/openapi.yml",
          },
        },
      },
    },
    "windows.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get-window-info": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get information about a browser window in a session",
            "docs": undefined,
            "examples": [
              {
                "path-parameters": {
                  "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "windowId": "7334da2a-91b0-42c5-6156-76a5eba87430",
                },
                "query-parameters": {
                  "Screen resolution": "1920x1080",
                },
                "response": {
                  "body": {
                    "data": {
                      "liveViewUrl": "liveViewUrl",
                      "token": "token",
                      "windowId": "windowId",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions/{sessionId}/windows/{windowId}/get-window-info",
            "path-parameters": {
              "sessionId": {
                "docs": "UUID of the session that owns the window",
                "type": "string",
              },
              "windowId": {
                "docs": "id of the browser window, either the windowId (uuid) or targetId (simple string)",
                "type": "string",
              },
            },
            "request": {
              "name": "GetWindowInfoRequest",
              "query-parameters": {
                "Screen resolution": {
                  "docs": "Ex: Screen resolution of the live view in format wxh, e.g. 1920x1080. When this value is provided the live view won't adapt it's resolution to the live view window size",
                  "type": "optional<string>",
                },
                "disableResize": {
                  "docs": "By default browsers will adapt its resolution to the live view window size. This flag disables that behavior",
                  "type": "optional<boolean>",
                },
                "includeNavigationBar": {
                  "docs": "Renders a navigation bar as part of the live view session",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "Created",
              "type": "root.WindowEnvelopeDefaultMetaWrapper",
            },
          },
          "prompt-content": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Submit a prompt about the content in a specific browser window.",
            "docs": undefined,
            "examples": [
              {
                "path-parameters": {
                  "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "windowId": "0334da2a-91b0-42c5-6156-76a5eba87430",
                },
                "request": {
                  "prompt": "What is the main idea of this page?",
                },
                "response": {
                  "body": {
                    "data": {
                      "modelResponse": "modelResponse",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "clientProvided": {
                        "clientRequestId": "clientRequestId",
                        "timeThresholdMs": 1000000,
                      },
                      "requestId": "requestId",
                      "status": "success",
                      "usage": {
                        "credits": 1000000,
                        "id": "id",
                      },
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/sessions/{sessionId}/windows/{windowId}/prompt-content",
            "path-parameters": {
              "sessionId": {
                "docs": "The session id to submit a prompt about",
                "type": "string",
              },
              "windowId": {
                "docs": "The window id to submit a prompt about",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "clientRequestId": "optional<string>",
                  "costThresholdCredits": "optional<float>",
                  "followPaginationLinks": {
                    "default": false,
                    "docs": "Whether to follow pagination links in the content and load additional results",
                    "type": "optional<boolean>",
                  },
                  "prompt": {
                    "docs": "The prompt to submit about the content in the browser window",
                    "type": "string",
                  },
                  "timeThresholdSeconds": "optional<long>",
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "PromptContentRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.ModelResponseExternalSessionAiResponseMetadataWrapper",
            },
          },
          "scrape-content": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Scrape a window",
            "docs": undefined,
            "examples": [
              {
                "path-parameters": {
                  "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "windowId": "0334da2a-91b0-42c5-6156-76a5eba87430",
                },
                "response": {
                  "body": {
                    "data": {
                      "modelResponse": {
                        "scrapedContent": {
                          "contentType": "contentType",
                          "text": "text",
                        },
                        "selectedText": "selectedText",
                        "title": "title",
                      },
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "clientProvided": {
                        "clientRequestId": "clientRequestId",
                        "timeThresholdMs": 1000000,
                      },
                      "requestId": "requestId",
                      "status": "success",
                      "usage": {
                        "credits": 1000000,
                        "id": "id",
                      },
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions/{sessionId}/windows/{windowId}/scrape-content",
            "path-parameters": {
              "sessionId": {
                "docs": "The session id to scrape",
                "type": "string",
              },
              "windowId": {
                "docs": "The window id to scrape",
                "type": "string",
              },
            },
            "response": {
              "docs": "Created",
              "type": "root.ScrapeModelResponseExternalSessionAiResponseMetadataWrapper",
            },
          },
          "summarize-content": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get a summary of content in a browser window",
            "docs": undefined,
            "examples": [
              {
                "path-parameters": {
                  "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "windowId": "0334da2a-91b0-42c5-6156-76a5eba87430",
                },
                "request": {},
                "response": {
                  "body": {
                    "data": {
                      "modelResponse": "modelResponse",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "clientProvided": {
                        "clientRequestId": "clientRequestId",
                        "timeThresholdMs": 1000000,
                      },
                      "requestId": "requestId",
                      "status": "success",
                      "usage": {
                        "credits": 1000000,
                        "id": "id",
                      },
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/sessions/{sessionId}/windows/{windowId}/summarize-content",
            "path-parameters": {
              "sessionId": {
                "docs": "The session id to summarize",
                "type": "string",
              },
              "windowId": {
                "docs": "The window id to summarize",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "clientRequestId": "optional<string>",
                  "costThresholdCredits": "optional<float>",
                  "prompt": {
                    "docs": "The prompt to submit about the content in the browser window",
                    "type": "optional<string>",
                  },
                  "timeThresholdSeconds": "optional<long>",
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "SummarizeContentRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.ModelResponseExternalSessionAiResponseMetadataWrapper",
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
  },
  "packageMarkerFile": {
    "errors": {
      "ExtensionsGetByIdRequestInternalServerError": {
        "docs": "Internal Server Error",
        "status-code": 500,
        "type": "ErrorEnvelope",
      },
      "ExtensionsGetByIdRequestNotFoundError": {
        "docs": "Not Found",
        "status-code": 404,
        "type": "ErrorEnvelope",
      },
      "ExtensionsGetByIdRequestUnprocessableEntityError": {
        "docs": "Unprocessable Entity",
        "status-code": 422,
        "type": "ErrorEnvelope",
      },
      "ProfilesGetByIdRequestInternalServerError": {
        "docs": "Internal Server Error",
        "status-code": 500,
        "type": "ErrorEnvelope",
      },
      "ProfilesGetByIdRequestNotFoundError": {
        "docs": "Not Found",
        "status-code": 404,
        "type": "ErrorEnvelope",
      },
      "ProfilesGetByIdRequestUnprocessableEntityError": {
        "docs": "Unprocessable Entity",
        "status-code": 422,
        "type": "ErrorEnvelope",
      },
      "SessionsEventsRequestInternalServerError": {
        "docs": "Internal Server Error",
        "status-code": 500,
        "type": "ErrorEnvelope",
      },
      "SessionsEventsRequestNotFoundError": {
        "docs": "Not Found",
        "status-code": 404,
        "type": "ErrorEnvelope",
      },
      "SessionsEventsRequestUnprocessableEntityError": {
        "docs": "Unprocessable Entity",
        "status-code": 422,
        "type": "ErrorEnvelope",
      },
      "SessionsGetInfoRequestInternalServerError": {
        "docs": "Internal Server Error",
        "status-code": 500,
        "type": "ErrorEnvelope",
      },
      "SessionsGetInfoRequestNotFoundError": {
        "docs": "Not Found",
        "status-code": 404,
        "type": "ErrorEnvelope",
      },
      "SessionsGetInfoRequestUnprocessableEntityError": {
        "docs": "Unprocessable Entity",
        "status-code": 422,
        "type": "ErrorEnvelope",
      },
      "SessionsListRequestInternalServerError": {
        "docs": "Internal Server Error",
        "status-code": 500,
        "type": "ErrorEnvelope",
      },
      "SessionsListRequestNotFoundError": {
        "docs": "Not Found",
        "status-code": 404,
        "type": "ErrorEnvelope",
      },
      "SessionsListRequestUnprocessableEntityError": {
        "docs": "Unprocessable Entity",
        "status-code": 422,
        "type": "ErrorEnvelope",
      },
    },
    "types": {
      "ClientProvidedResponseMetadata": {
        "docs": undefined,
        "properties": {
          "clientRequestId": "optional<string>",
          "timeThresholdMs": "optional<long>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "DefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "requestId": "optional<string>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ErrorEnvelope": {
        "docs": undefined,
        "properties": {
          "HttpStatus": "long",
          "Message": "string",
          "data": "unknown",
          "errors": "optional<list<Issue>>",
          "meta": "unknown",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ErrorMessage": {
        "docs": undefined,
        "properties": {
          "code": {
            "docs": "Error code",
            "type": "string",
          },
          "event": {
            "docs": "Event name",
            "type": "string",
          },
          "message": {
            "docs": "Error message",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExtensionV1": {
        "docs": undefined,
        "properties": {
          "date_created": {
            "docs": "Date the extension was created",
            "type": "datetime",
          },
          "id": {
            "docs": "Unique identifier for the extension",
            "type": "string",
          },
          "name": {
            "docs": "Name of the extension",
            "type": "string",
          },
          "upload_uri": {
            "docs": "URI to upload profile data to",
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExtensionV1EnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "ExtensionV1",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExternalSessionAiResponseMetadata": {
        "docs": undefined,
        "properties": {
          "clientProvided": "optional<ClientProvidedResponseMetadata>",
          "requestId": "optional<string>",
          "status": "ExternalSessionAiResponseMetadataStatus",
          "usage": "ExternalSessionAiResponseMetadataUsage",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExternalSessionAiResponseMetadataStatus": {
        "enum": [
          "success",
          "partial_success",
          "failure",
        ],
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExternalSessionAiResponseMetadataUsage": {
        "docs": undefined,
        "properties": {
          "credits": {
            "docs": "The credit usage for this request",
            "type": "long",
          },
          "id": {
            "docs": "The id of the request",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "Issue": {
        "docs": undefined,
        "properties": {
          "code": {
            "docs": "Issue code",
            "type": "optional<string>",
          },
          "details": {
            "docs": "Any associated details",
            "type": "optional<map<string, unknown>>",
          },
          "message": {
            "docs": "Message describing the issue",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ListExtensionV1EnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "optional<list<ExtensionV1>>",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ListProfileV1EnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "optional<list<ProfileV1>>",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "LiveViewConnectionInfo": {
        "docs": undefined,
        "properties": {
          "airtop_browser_url": {
            "docs": "Websocket url to connect to the airtop browser",
            "type": "string",
          },
          "token": {
            "docs": "Token to connect to the airtop browser, use as a header: 'Authorization: Bearer <token>' ",
            "type": "optional<string>",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ModelResponse": {
        "docs": undefined,
        "properties": {
          "modelResponse": "string",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ModelResponseExternalSessionAiResponseMetadataWrapper": {
        "docs": undefined,
        "properties": {
          "data": "ModelResponse",
          "errors": "optional<list<Issue>>",
          "meta": "ExternalSessionAiResponseMetadata",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "Pagination": {
        "docs": undefined,
        "properties": {
          "currentLimit": "long",
          "currentPage": "long",
          "finalCount": "long",
          "hasMore": "boolean",
          "initialCount": "long",
          "nextOffset": "long",
          "numberOfPages": "long",
          "totalItems": "long",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ProfileV1": {
        "docs": undefined,
        "properties": {
          "name": {
            "docs": "Name of the profile",
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": 100,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "status": {
            "docs": "Status of the profile",
            "type": "optional<string>",
          },
          "tags": {
            "docs": "a comma separated list of tags for this profile",
            "type": "optional<list<string>>",
          },
          "upload_uri": {
            "docs": "URI to upload profile data to",
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ProfileV1EnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "ProfileV1",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ScrapeModelResponse": {
        "docs": undefined,
        "properties": {
          "modelResponse": "ScrapeResponseOutput",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ScrapeModelResponseExternalSessionAiResponseMetadataWrapper": {
        "docs": undefined,
        "properties": {
          "data": "ScrapeModelResponse",
          "errors": "optional<list<Issue>>",
          "meta": "ExternalSessionAiResponseMetadata",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ScrapeResponseContent": {
        "docs": undefined,
        "properties": {
          "contentType": {
            "docs": "The mime type of content extracted from the browser window",
            "type": "string",
          },
          "text": {
            "docs": "The text content of the browser window",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ScrapeResponseOutput": {
        "docs": undefined,
        "properties": {
          "scrapedContent": {
            "docs": "The scraped content of the browser window",
            "type": "ScrapeResponseContent",
          },
          "selectedText": {
            "docs": "Any text that was highlighted in the browser window",
            "type": "optional<string>",
          },
          "title": {
            "docs": "The title of the browser page",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionConfig": {
        "docs": undefined,
        "properties": {
          "persist_profile": {
            "docs": "Persist the profile",
            "type": "optional<boolean>",
          },
          "persist_profile_name": {
            "docs": "Profile name to persist resulting profile (required when persist_profile is true). Must contain A-Za-z0-9 only",
            "type": "optional<string>",
          },
          "persist_profile_tags": {
            "docs": "Profile tags",
            "type": "optional<list<string>>",
          },
          "profile_id": {
            "docs": "Id of a profile to use with this session",
            "type": "optional<string>",
          },
          "timeoutMinutes": {
            "default": 10,
            "docs": "Max length of session in minutes, after which it will terminate if not already deleted",
            "type": "optional<integer>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1440,
              "min": 1,
              "multipleOf": undefined,
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionConfigV1": {
        "docs": undefined,
        "properties": {
          "persist_profile": {
            "docs": "Persist the profile",
            "type": "optional<boolean>",
          },
          "persist_profile_name": {
            "docs": "Profile name to persist resulting profile (required when persist_profile is true). Must contain A-Za-z0-9 only",
            "type": "optional<string>",
          },
          "persist_profile_tags": {
            "docs": "Profile tags",
            "type": "optional<list<string>>",
          },
          "profile_id": {
            "docs": "Id of a profile to use with this session",
            "type": "optional<string>",
          },
          "timeoutMinutes": {
            "default": 10,
            "docs": "Max length of session in minutes, after which it will terminate if not already deleted",
            "type": "optional<integer>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1440,
              "min": 1,
              "multipleOf": undefined,
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionWithConnectionInfo": {
        "docs": undefined,
        "properties": {
          "cdp_url": {
            "docs": "Url to connect to chrome devtools protocol port on the airtop browser. Include the header 'Authorization: Bearer <api-key>.'",
            "type": "optional<string>",
          },
          "cdp_ws_url": {
            "docs": "Websocket url to connect to CDP webSocketDebuggerUrl on the airtop browser. Include the header 'Authorization: Bearer <api-key>.'",
            "type": "optional<string>",
          },
          "chromedriver_url": {
            "docs": "Websocket url to connect to the chromedriver on the airtop browser. Include the header 'Authorization: Bearer <api-key>.'",
            "type": "optional<string>",
          },
          "configuration": {
            "docs": "Session configuration",
            "type": "SessionConfig",
          },
          "current_usage": {
            "docs": "Current usage in minutes",
            "type": "optional<long>",
          },
          "date_created": {
            "docs": "Date the session was created",
            "type": "optional<datetime>",
          },
          "id": {
            "docs": "UUID of the session",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "last_activity": {
            "docs": "Date of the last activity",
            "type": "optional<datetime>",
          },
          "live_view": {
            "docs": "Connection info for the live view",
            "type": "optional<LiveViewConnectionInfo>",
          },
          "status": {
            "docs": "Session status",
            "type": "string",
          },
          "url": {
            "docs": "URL of the session",
            "type": "optional<string>",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionWithConnectionInfoEnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "SessionWithConnectionInfo",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionsWithPagination": {
        "docs": undefined,
        "properties": {
          "pagination": {
            "docs": "Pagination info",
            "type": "Pagination",
          },
          "sessions": {
            "docs": "List of sessions",
            "type": "optional<list<SessionWithConnectionInfo>>",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionsWithPaginationEnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "SessionsWithPagination",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "StatusMessage": {
        "docs": undefined,
        "properties": {
          "event": {
            "docs": "Event name",
            "type": "string",
          },
          "eventTimeMillis": {
            "docs": "Time of the event in milliseconds since epoch",
            "type": "long",
          },
          "id": {
            "docs": "ID of the session",
            "type": "string",
          },
          "status": {
            "docs": "Status of the session",
            "type": "StatusMessageStatus",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "StatusMessageStatus": {
        "docs": "Status of the session",
        "enum": [
          "awaiting_capacity",
          "initializing",
          "running",
          "ended",
        ],
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "Window": {
        "docs": undefined,
        "properties": {
          "liveViewUrl": {
            "docs": "Url for live view session",
            "type": "string",
          },
          "token": {
            "docs": "Token for authenticating to a live view session",
            "type": "string",
          },
          "windowId": {
            "docs": "Window ID for live view session",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "WindowEnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "Window",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
  },
  "rootApiFile": {
    "auth": "BearerAuthScheme",
    "auth-schemes": {
      "BearerAuthScheme": {
        "scheme": "bearer",
        "token": {
          "name": "apiKey",
        },
      },
    },
    "default-environment": "Default",
    "display-name": "Browser Control API",
    "environments": {
      "Default": "https://api.airtop.ai/v1",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "name": "api",
  },
}
`;

exports[`open api parser > switchboard > simple 1`] = `
{
  "definitionFiles": {
    "auth.yml": {
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "andRedirect": {
            "auth": false,
            "display-name": "Auth and redirect sessions",
            "docs": "Auth and redirect sessions by ID",
            "examples": [
              {},
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/auth",
            "request": {
              "headers": {
                "x-call-type": {
                  "docs": "call type, e.g. CHROMEDRIVER_EXTERNAL",
                  "name": "callType",
                  "type": "optional<string>",
                },
                "x-session-id": {
                  "docs": "session id",
                  "name": "sessionId",
                  "type": "optional<string>",
                },
              },
              "name": "AuthAndRedirectRequest",
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
    "extensions.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Delete extensions matching name query",
            "docs": "Delete an extension by ID",
            "examples": [
              {
                "query-parameters": {
                  "name": "Widget",
                },
              },
            ],
            "method": "DELETE",
            "pagination": undefined,
            "path": "/extensions",
            "request": {
              "name": "ExtensionsDeleteRequest",
              "query-parameters": {
                "name": {
                  "docs": "Name to search for, supports regex, case insensitive",
                  "type": "optional<string>",
                },
              },
            },
          },
          "get": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Get extensions",
            "docs": "Get extensions, searching by name",
            "examples": [
              {
                "query-parameters": {
                  "name": "Widget",
                },
                "response": {
                  "body": {
                    "data": [
                      {
                        "date_created": "2024-01-15T09:30:00Z",
                        "id": "73df0106-1781-4b03-a288-e749e1a43481",
                        "name": "Special Widget",
                        "upload_uri": "upload_uri",
                      },
                    ],
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/extensions",
            "request": {
              "name": "ExtensionsGetRequest",
              "query-parameters": {
                "name": {
                  "docs": "Name to search for, supports regex, case insensitive",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.ListExtensionV1EnvelopeDefaultMetaWrapper",
            },
          },
          "getById": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Get an extension",
            "docs": "Get an extension by ID",
            "errors": [
              "root.NotFoundError",
              "root.UnprocessableEntityError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "4a61a55c-391b-4f73-957e-ffbd29ac7cba",
                },
                "response": {
                  "body": {
                    "data": {
                      "date_created": "2024-01-15T09:30:00Z",
                      "id": "73df0106-1781-4b03-a288-e749e1a43481",
                      "name": "Special Widget",
                      "upload_uri": "upload_uri",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/extensions/{id}",
            "path-parameters": {
              "id": {
                "docs": "UUID of the profile to get",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.ExtensionV1EnvelopeDefaultMetaWrapper",
            },
          },
          "post": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Create an extension",
            "docs": undefined,
            "examples": [
              {
                "request": {
                  "name": "Special Widget",
                },
                "response": {
                  "body": {
                    "data": {
                      "date_created": "2024-01-15T09:30:00Z",
                      "id": "73df0106-1781-4b03-a288-e749e1a43481",
                      "name": "Special Widget",
                      "upload_uri": "upload_uri",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/extensions",
            "request": {
              "body": {
                "properties": {
                  "name": {
                    "docs": "Name of the extension",
                    "type": "string",
                  },
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "ExtensionsPostRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.ExtensionV1EnvelopeDefaultMetaWrapper",
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
    "profiles.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "delete": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Delete profiles matching query",
            "docs": "Delete profiles matching query",
            "examples": [
              {
                "query-parameters": {
                  "name": "^Acme.*",
                },
              },
            ],
            "method": "DELETE",
            "pagination": undefined,
            "path": "/profiles",
            "request": {
              "name": "ProfilesDeleteRequest",
              "query-parameters": {
                "name": {
                  "docs": "Name to search for, supports regex, case insensitive",
                  "type": "optional<string>",
                },
                "tags": {
                  "allow-multiple": true,
                  "docs": "a comma separated list of tags to filter by (joined by OR, e.g. tag is red OR blue)",
                  "type": "optional<string>",
                },
              },
            },
          },
          "get": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get profiles",
            "docs": "Get profiles, searching by name or tags",
            "examples": [
              {
                "query-parameters": {
                  "name": "^Acme.*",
                },
                "response": {
                  "body": {
                    "data": [
                      {
                        "name": "Acme corp login",
                        "status": "status",
                        "tags": [
                          "blue",
                          "red",
                        ],
                        "upload_uri": "upload_uri",
                      },
                    ],
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/profiles",
            "request": {
              "name": "ProfilesGetRequest",
              "query-parameters": {
                "name": {
                  "docs": "Name to search for, supports regex, case insensitive",
                  "type": "optional<string>",
                },
                "tags": {
                  "allow-multiple": true,
                  "docs": "a comma separated list of tags to filter by (joined by OR, e.g. tag is red OR blue)",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.ListProfileV1EnvelopeDefaultMetaWrapper",
            },
          },
          "getById": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get a profile",
            "docs": "Get a profile by ID",
            "errors": [
              "root.NotFoundError",
              "root.UnprocessableEntityError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "4a61a55c-391b-4f73-957e-ffbd29ac7cba",
                },
                "response": {
                  "body": {
                    "data": {
                      "name": "Acme corp login",
                      "status": "status",
                      "tags": [
                        "blue",
                        "red",
                      ],
                      "upload_uri": "upload_uri",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/profiles/{id}",
            "path-parameters": {
              "id": {
                "docs": "name of the profile to get",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.ProfileV1EnvelopeDefaultMetaWrapper",
            },
          },
          "post": {
            "audiences": [
              "beta",
            ],
            "auth": false,
            "display-name": "Create a profile",
            "docs": undefined,
            "examples": [
              {
                "request": {
                  "name": "Acme corp login",
                },
                "response": {
                  "body": {
                    "data": {
                      "name": "Acme corp login",
                      "status": "status",
                      "tags": [
                        "blue",
                        "red",
                      ],
                      "upload_uri": "upload_uri",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/profiles",
            "request": {
              "body": {
                "properties": {
                  "name": {
                    "docs": "Name of the Profile",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": 100,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                  "tags": {
                    "docs": "a comma separated list of tags for this profile",
                    "type": "optional<list<string>>",
                  },
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "ProfileInput",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.ProfileV1EnvelopeDefaultMetaWrapper",
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
    "sessions.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "events": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get a session event stream",
            "docs": "Get a session event stream for a given session ID",
            "errors": [
              "root.NotFoundError",
              "root.UnprocessableEntityError",
              "root.InternalServerError",
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions/{id}/events",
            "path-parameters": {
              "id": {
                "docs": "UUID of the session to get status info for",
                "type": "string",
              },
            },
            "response-stream": {
              "docs": "OK",
              "format": "sse",
              "type": "SessionsEventsResponse",
            },
          },
          "getinfo": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get info for a session",
            "docs": "Get a session by ID",
            "errors": [
              "root.NotFoundError",
              "root.UnprocessableEntityError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "path-parameters": {
                  "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                },
                "response": {
                  "body": {
                    "data": {
                      "cdp_url": "cdp_url",
                      "cdp_ws_url": "cdp_ws_url",
                      "chromedriver_url": "chromedriver_url",
                      "configuration": {
                        "persist_profile": true,
                        "persist_profile_name": "default",
                        "persist_profile_tags": [
                          "persist_profile_tags",
                        ],
                        "profile_id": "linkedin",
                        "timeoutMinutes": 10,
                      },
                      "current_usage": 1000000,
                      "date_created": "2024-01-15T09:30:00Z",
                      "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                      "last_activity": "2024-01-15T09:30:00Z",
                      "live_view": {
                        "airtop_browser_url": "airtop_browser_url",
                        "token": "token",
                      },
                      "status": "active",
                      "url": "url",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions/{id}",
            "path-parameters": {
              "id": {
                "docs": "UUID of the session to get",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SessionWithConnectionInfoEnvelopeDefaultMetaWrapper",
            },
          },
          "list": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get a list of sessions",
            "docs": "Get a list of sessions by ID",
            "errors": [
              "root.NotFoundError",
              "root.UnprocessableEntityError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "query-parameters": {
                  "limit": 10,
                  "offset": 1,
                },
                "response": {
                  "body": {
                    "data": {
                      "pagination": {
                        "currentLimit": 1000000,
                        "currentPage": 1000000,
                        "finalCount": 1000000,
                        "hasMore": true,
                        "initialCount": 1000000,
                        "nextOffset": 1000000,
                        "numberOfPages": 1000000,
                        "totalItems": 1000000,
                      },
                      "sessions": [
                        {
                          "configuration": {
                            "persist_profile": true,
                            "persist_profile_name": "default",
                            "profile_id": "linkedin",
                            "timeoutMinutes": 10,
                          },
                          "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                          "status": "active",
                        },
                      ],
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions",
            "request": {
              "name": "SessionsListRequest",
              "query-parameters": {
                "limit": {
                  "docs": "limit for pagination",
                  "type": "optional<long>",
                },
                "offset": {
                  "docs": "offset for pagination",
                  "type": "optional<long>",
                },
                "sessionIds": {
                  "allow-multiple": true,
                  "docs": "a comma separated list of UUIDs of the session to get",
                  "type": "optional<string>",
                },
                "status": {
                  "docs": "status of the session to get",
                  "type": "optional<SessionsListRequestStatus>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SessionsWithPaginationEnvelopeDefaultMetaWrapper",
            },
          },
          "post": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Create a session",
            "docs": undefined,
            "examples": [
              {
                "request": {},
                "response": {
                  "body": {
                    "data": {
                      "cdp_url": "cdp_url",
                      "cdp_ws_url": "cdp_ws_url",
                      "chromedriver_url": "chromedriver_url",
                      "configuration": {
                        "persist_profile": true,
                        "persist_profile_name": "default",
                        "persist_profile_tags": [
                          "persist_profile_tags",
                        ],
                        "profile_id": "linkedin",
                        "timeoutMinutes": 10,
                      },
                      "current_usage": 1000000,
                      "date_created": "2024-01-15T09:30:00Z",
                      "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                      "last_activity": "2024-01-15T09:30:00Z",
                      "live_view": {
                        "airtop_browser_url": "airtop_browser_url",
                        "token": "token",
                      },
                      "status": "active",
                      "url": "url",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/sessions",
            "request": {
              "body": {
                "properties": {
                  "configuration": {
                    "docs": "Session configuration",
                    "type": "optional<root.SessionConfigV1>",
                  },
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "SessionRestInputV1",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.SessionWithConnectionInfoEnvelopeDefaultMetaWrapper",
            },
          },
          "terminate": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Ends a session",
            "docs": "Ends a session by ID. If a given session id does not exist within the organization, it is ignored.",
            "examples": [
              {
                "path-parameters": {
                  "id": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                },
              },
            ],
            "method": "DELETE",
            "pagination": undefined,
            "path": "/sessions/{id}",
            "path-parameters": {
              "id": {
                "docs": "UUID of the session to delete",
                "type": "string",
              },
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "types": {
        "SessionsEventsResponse": {
          "availability": undefined,
          "base-properties": {},
          "discriminant": "event",
          "docs": "Each oneOf object in the array represents one possible Server Sent Events (SSE) message, serialized as UTF-8 text according to the SSE specification.",
          "encoding": undefined,
          "source": {
            "openapi": "switchboard/openapi.yml",
          },
          "union": {
            "error": {
              "type": "SessionsEventsResponseError",
            },
            "status": {
              "type": "SessionsEventsResponseStatus",
            },
          },
        },
        "SessionsEventsResponseError": {
          "docs": undefined,
          "properties": {
            "data": "root.ErrorMessage",
            "id": {
              "docs": "The event ID.",
              "type": "optional<integer>",
            },
            "retry": {
              "docs": "The retry time in milliseconds.",
              "type": "optional<integer>",
            },
          },
          "source": {
            "openapi": "switchboard/openapi.yml",
          },
        },
        "SessionsEventsResponseStatus": {
          "docs": undefined,
          "properties": {
            "data": "root.StatusMessage",
            "id": {
              "docs": "The event ID.",
              "type": "optional<integer>",
            },
            "retry": {
              "docs": "The retry time in milliseconds.",
              "type": "optional<integer>",
            },
          },
          "source": {
            "openapi": "switchboard/openapi.yml",
          },
        },
        "SessionsListRequestStatus": {
          "docs": "status of the session to get",
          "enum": [
            "awaiting_capacity",
            "initializing",
            "running",
            "ended",
          ],
          "source": {
            "openapi": "switchboard/openapi.yml",
          },
        },
      },
    },
    "windows.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get-window-info": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get information about a browser window in a session",
            "docs": undefined,
            "examples": [
              {
                "path-parameters": {
                  "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "windowId": "7334da2a-91b0-42c5-6156-76a5eba87430",
                },
                "query-parameters": {
                  "Screen resolution": "1920x1080",
                },
                "response": {
                  "body": {
                    "data": {
                      "liveViewUrl": "liveViewUrl",
                      "token": "token",
                      "windowId": "windowId",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "requestId": "requestId",
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions/{sessionId}/windows/{windowId}/get-window-info",
            "path-parameters": {
              "sessionId": {
                "docs": "UUID of the session that owns the window",
                "type": "string",
              },
              "windowId": {
                "docs": "id of the browser window, either the windowId (uuid) or targetId (simple string)",
                "type": "string",
              },
            },
            "request": {
              "name": "GetWindowInfoRequest",
              "query-parameters": {
                "Screen resolution": {
                  "docs": "Ex: Screen resolution of the live view in format wxh, e.g. 1920x1080. When this value is provided the live view won't adapt it's resolution to the live view window size",
                  "type": "optional<string>",
                },
                "disableResize": {
                  "docs": "By default browsers will adapt its resolution to the live view window size. This flag disables that behavior",
                  "type": "optional<boolean>",
                },
                "includeNavigationBar": {
                  "docs": "Renders a navigation bar as part of the live view session",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "Created",
              "type": "root.WindowEnvelopeDefaultMetaWrapper",
            },
          },
          "prompt-content": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Submit a prompt about the content in a specific browser window.",
            "docs": undefined,
            "examples": [
              {
                "path-parameters": {
                  "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "windowId": "0334da2a-91b0-42c5-6156-76a5eba87430",
                },
                "request": {
                  "prompt": "What is the main idea of this page?",
                },
                "response": {
                  "body": {
                    "data": {
                      "modelResponse": "modelResponse",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "clientProvided": {
                        "clientRequestId": "clientRequestId",
                        "timeThresholdMs": 1000000,
                      },
                      "requestId": "requestId",
                      "status": "success",
                      "usage": {
                        "credits": 1000000,
                        "id": "id",
                      },
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/sessions/{sessionId}/windows/{windowId}/prompt-content",
            "path-parameters": {
              "sessionId": {
                "docs": "The session id to submit a prompt about",
                "type": "string",
              },
              "windowId": {
                "docs": "The window id to submit a prompt about",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "clientRequestId": "optional<string>",
                  "costThresholdCredits": "optional<float>",
                  "followPaginationLinks": {
                    "default": false,
                    "docs": "Whether to follow pagination links in the content and load additional results",
                    "type": "optional<boolean>",
                  },
                  "prompt": {
                    "docs": "The prompt to submit about the content in the browser window",
                    "type": "string",
                  },
                  "timeThresholdSeconds": "optional<long>",
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "PromptContentRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.ModelResponseExternalSessionAiResponseMetadataWrapper",
            },
          },
          "scrape-content": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Scrape a window",
            "docs": undefined,
            "examples": [
              {
                "path-parameters": {
                  "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "windowId": "0334da2a-91b0-42c5-6156-76a5eba87430",
                },
                "response": {
                  "body": {
                    "data": {
                      "modelResponse": {
                        "scrapedContent": {
                          "contentType": "contentType",
                          "text": "text",
                        },
                        "selectedText": "selectedText",
                        "title": "title",
                      },
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "clientProvided": {
                        "clientRequestId": "clientRequestId",
                        "timeThresholdMs": 1000000,
                      },
                      "requestId": "requestId",
                      "status": "success",
                      "usage": {
                        "credits": 1000000,
                        "id": "id",
                      },
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "pagination": undefined,
            "path": "/sessions/{sessionId}/windows/{windowId}/scrape-content",
            "path-parameters": {
              "sessionId": {
                "docs": "The session id to scrape",
                "type": "string",
              },
              "windowId": {
                "docs": "The window id to scrape",
                "type": "string",
              },
            },
            "response": {
              "docs": "Created",
              "type": "root.ScrapeModelResponseExternalSessionAiResponseMetadataWrapper",
            },
          },
          "summarize-content": {
            "audiences": [
              "public",
            ],
            "auth": false,
            "display-name": "Get a summary of content in a browser window",
            "docs": undefined,
            "examples": [
              {
                "path-parameters": {
                  "sessionId": "6aac6f73-bd89-4a76-ab32-5a6c422e8b0b",
                  "windowId": "0334da2a-91b0-42c5-6156-76a5eba87430",
                },
                "request": {},
                "response": {
                  "body": {
                    "data": {
                      "modelResponse": "modelResponse",
                    },
                    "errors": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                    "meta": {
                      "clientProvided": {
                        "clientRequestId": "clientRequestId",
                        "timeThresholdMs": 1000000,
                      },
                      "requestId": "requestId",
                      "status": "success",
                      "usage": {
                        "credits": 1000000,
                        "id": "id",
                      },
                    },
                    "warnings": [
                      {
                        "code": "code",
                        "details": {
                          "key": "value",
                        },
                        "message": "message",
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/sessions/{sessionId}/windows/{windowId}/summarize-content",
            "path-parameters": {
              "sessionId": {
                "docs": "The session id to summarize",
                "type": "string",
              },
              "windowId": {
                "docs": "The window id to summarize",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "clientRequestId": "optional<string>",
                  "costThresholdCredits": "optional<float>",
                  "prompt": {
                    "docs": "The prompt to submit about the content in the browser window",
                    "type": "optional<string>",
                  },
                  "timeThresholdSeconds": "optional<long>",
                },
              },
              "content-type": "application/json",
              "headers": undefined,
              "name": "SummarizeContentRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Created",
              "type": "root.ModelResponseExternalSessionAiResponseMetadataWrapper",
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
  },
  "packageMarkerFile": {
    "errors": {
      "InternalServerError": {
        "docs": "Internal Server Error",
        "status-code": 500,
        "type": "ErrorEnvelope",
      },
      "NotFoundError": {
        "docs": "Not Found",
        "status-code": 404,
        "type": "ErrorEnvelope",
      },
      "UnprocessableEntityError": {
        "docs": "Unprocessable Entity",
        "status-code": 422,
        "type": "ErrorEnvelope",
      },
    },
    "types": {
      "ClientProvidedResponseMetadata": {
        "docs": undefined,
        "properties": {
          "clientRequestId": "optional<string>",
          "timeThresholdMs": "optional<long>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "DefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "requestId": "optional<string>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ErrorEnvelope": {
        "docs": undefined,
        "properties": {
          "HttpStatus": "long",
          "Message": "string",
          "data": "unknown",
          "errors": "optional<list<Issue>>",
          "meta": "unknown",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ErrorMessage": {
        "docs": undefined,
        "properties": {
          "code": {
            "docs": "Error code",
            "type": "string",
          },
          "event": {
            "docs": "Event name",
            "type": "string",
          },
          "message": {
            "docs": "Error message",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExtensionV1": {
        "docs": undefined,
        "properties": {
          "date_created": {
            "docs": "Date the extension was created",
            "type": "datetime",
          },
          "id": {
            "docs": "Unique identifier for the extension",
            "type": "string",
          },
          "name": {
            "docs": "Name of the extension",
            "type": "string",
          },
          "upload_uri": {
            "docs": "URI to upload profile data to",
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExtensionV1EnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "ExtensionV1",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExternalSessionAiResponseMetadata": {
        "docs": undefined,
        "properties": {
          "clientProvided": "optional<ClientProvidedResponseMetadata>",
          "requestId": "optional<string>",
          "status": "ExternalSessionAiResponseMetadataStatus",
          "usage": "ExternalSessionAiResponseMetadataUsage",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExternalSessionAiResponseMetadataStatus": {
        "enum": [
          "success",
          "partial_success",
          "failure",
        ],
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ExternalSessionAiResponseMetadataUsage": {
        "docs": undefined,
        "properties": {
          "credits": {
            "docs": "The credit usage for this request",
            "type": "long",
          },
          "id": {
            "docs": "The id of the request",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "Issue": {
        "docs": undefined,
        "properties": {
          "code": {
            "docs": "Issue code",
            "type": "optional<string>",
          },
          "details": {
            "docs": "Any associated details",
            "type": "optional<map<string, unknown>>",
          },
          "message": {
            "docs": "Message describing the issue",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ListExtensionV1EnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "optional<list<ExtensionV1>>",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ListProfileV1EnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "optional<list<ProfileV1>>",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "LiveViewConnectionInfo": {
        "docs": undefined,
        "properties": {
          "airtop_browser_url": {
            "docs": "Websocket url to connect to the airtop browser",
            "type": "string",
          },
          "token": {
            "docs": "Token to connect to the airtop browser, use as a header: 'Authorization: Bearer <token>' ",
            "type": "optional<string>",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ModelResponse": {
        "docs": undefined,
        "properties": {
          "modelResponse": "string",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ModelResponseExternalSessionAiResponseMetadataWrapper": {
        "docs": undefined,
        "properties": {
          "data": "ModelResponse",
          "errors": "optional<list<Issue>>",
          "meta": "ExternalSessionAiResponseMetadata",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "Pagination": {
        "docs": undefined,
        "properties": {
          "currentLimit": "long",
          "currentPage": "long",
          "finalCount": "long",
          "hasMore": "boolean",
          "initialCount": "long",
          "nextOffset": "long",
          "numberOfPages": "long",
          "totalItems": "long",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ProfileV1": {
        "docs": undefined,
        "properties": {
          "name": {
            "docs": "Name of the profile",
            "type": "string",
            "validation": {
              "format": undefined,
              "maxLength": 100,
              "minLength": 1,
              "pattern": undefined,
            },
          },
          "status": {
            "docs": "Status of the profile",
            "type": "optional<string>",
          },
          "tags": {
            "docs": "a comma separated list of tags for this profile",
            "type": "optional<list<string>>",
          },
          "upload_uri": {
            "docs": "URI to upload profile data to",
            "type": "optional<string>",
            "validation": {
              "format": "uri",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ProfileV1EnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "ProfileV1",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ScrapeModelResponse": {
        "docs": undefined,
        "properties": {
          "modelResponse": "ScrapeResponseOutput",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ScrapeModelResponseExternalSessionAiResponseMetadataWrapper": {
        "docs": undefined,
        "properties": {
          "data": "ScrapeModelResponse",
          "errors": "optional<list<Issue>>",
          "meta": "ExternalSessionAiResponseMetadata",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ScrapeResponseContent": {
        "docs": undefined,
        "properties": {
          "contentType": {
            "docs": "The mime type of content extracted from the browser window",
            "type": "string",
          },
          "text": {
            "docs": "The text content of the browser window",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "ScrapeResponseOutput": {
        "docs": undefined,
        "properties": {
          "scrapedContent": {
            "docs": "The scraped content of the browser window",
            "type": "ScrapeResponseContent",
          },
          "selectedText": {
            "docs": "Any text that was highlighted in the browser window",
            "type": "optional<string>",
          },
          "title": {
            "docs": "The title of the browser page",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionConfig": {
        "docs": undefined,
        "properties": {
          "persist_profile": {
            "docs": "Persist the profile",
            "type": "optional<boolean>",
          },
          "persist_profile_name": {
            "docs": "Profile name to persist resulting profile (required when persist_profile is true). Must contain A-Za-z0-9 only",
            "type": "optional<string>",
          },
          "persist_profile_tags": {
            "docs": "Profile tags",
            "type": "optional<list<string>>",
          },
          "profile_id": {
            "docs": "Id of a profile to use with this session",
            "type": "optional<string>",
          },
          "timeoutMinutes": {
            "default": 10,
            "docs": "Max length of session in minutes, after which it will terminate if not already deleted",
            "type": "optional<integer>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1440,
              "min": 1,
              "multipleOf": undefined,
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionConfigV1": {
        "docs": undefined,
        "properties": {
          "persist_profile": {
            "docs": "Persist the profile",
            "type": "optional<boolean>",
          },
          "persist_profile_name": {
            "docs": "Profile name to persist resulting profile (required when persist_profile is true). Must contain A-Za-z0-9 only",
            "type": "optional<string>",
          },
          "persist_profile_tags": {
            "docs": "Profile tags",
            "type": "optional<list<string>>",
          },
          "profile_id": {
            "docs": "Id of a profile to use with this session",
            "type": "optional<string>",
          },
          "timeoutMinutes": {
            "default": 10,
            "docs": "Max length of session in minutes, after which it will terminate if not already deleted",
            "type": "optional<integer>",
            "validation": {
              "exclusiveMax": undefined,
              "exclusiveMin": undefined,
              "max": 1440,
              "min": 1,
              "multipleOf": undefined,
            },
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionWithConnectionInfo": {
        "docs": undefined,
        "properties": {
          "cdp_url": {
            "docs": "Url to connect to chrome devtools protocol port on the airtop browser. Include the header 'Authorization: Bearer <api-key>.'",
            "type": "optional<string>",
          },
          "cdp_ws_url": {
            "docs": "Websocket url to connect to CDP webSocketDebuggerUrl on the airtop browser. Include the header 'Authorization: Bearer <api-key>.'",
            "type": "optional<string>",
          },
          "chromedriver_url": {
            "docs": "Websocket url to connect to the chromedriver on the airtop browser. Include the header 'Authorization: Bearer <api-key>.'",
            "type": "optional<string>",
          },
          "configuration": {
            "docs": "Session configuration",
            "type": "SessionConfig",
          },
          "current_usage": {
            "docs": "Current usage in minutes",
            "type": "optional<long>",
          },
          "date_created": {
            "docs": "Date the session was created",
            "type": "optional<datetime>",
          },
          "id": {
            "docs": "UUID of the session",
            "type": "string",
            "validation": {
              "format": "uuid",
              "maxLength": undefined,
              "minLength": undefined,
              "pattern": undefined,
            },
          },
          "last_activity": {
            "docs": "Date of the last activity",
            "type": "optional<datetime>",
          },
          "live_view": {
            "docs": "Connection info for the live view",
            "type": "optional<LiveViewConnectionInfo>",
          },
          "status": {
            "docs": "Session status",
            "type": "string",
          },
          "url": {
            "docs": "URL of the session",
            "type": "optional<string>",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionWithConnectionInfoEnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "SessionWithConnectionInfo",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionsWithPagination": {
        "docs": undefined,
        "properties": {
          "pagination": {
            "docs": "Pagination info",
            "type": "Pagination",
          },
          "sessions": {
            "docs": "List of sessions",
            "type": "optional<list<SessionWithConnectionInfo>>",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "SessionsWithPaginationEnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "SessionsWithPagination",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "StatusMessage": {
        "docs": undefined,
        "properties": {
          "event": {
            "docs": "Event name",
            "type": "string",
          },
          "eventTimeMillis": {
            "docs": "Time of the event in milliseconds since epoch",
            "type": "long",
          },
          "id": {
            "docs": "ID of the session",
            "type": "string",
          },
          "status": {
            "docs": "Status of the session",
            "type": "StatusMessageStatus",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "StatusMessageStatus": {
        "docs": "Status of the session",
        "enum": [
          "awaiting_capacity",
          "initializing",
          "running",
          "ended",
        ],
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "Window": {
        "docs": undefined,
        "properties": {
          "liveViewUrl": {
            "docs": "Url for live view session",
            "type": "string",
          },
          "token": {
            "docs": "Token for authenticating to a live view session",
            "type": "string",
          },
          "windowId": {
            "docs": "Window ID for live view session",
            "type": "string",
          },
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
      "WindowEnvelopeDefaultMetaWrapper": {
        "docs": undefined,
        "properties": {
          "data": "Window",
          "errors": "optional<list<Issue>>",
          "meta": "DefaultMetaWrapper",
          "warnings": "optional<list<Issue>>",
        },
        "source": {
          "openapi": "switchboard/openapi.yml",
        },
      },
    },
  },
  "rootApiFile": {
    "auth": "BearerAuthScheme",
    "auth-schemes": {
      "BearerAuthScheme": {
        "scheme": "bearer",
        "token": {
          "name": "apiKey",
        },
      },
    },
    "default-environment": "Default",
    "display-name": "Browser Control API",
    "environments": {
      "Default": "https://api.airtop.ai/v1",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "name": "api",
  },
}
`;

{
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/Users/alex/code/fern/fern/packages/cli/api-importers/openapi/openapi-ir-to-fern-tests/src/__test__/fixtures/ada/fern",
      "contents": {
        "errors": {
          "GetEndUserByIdRequestInternalServerError": {
            "docs": "Internal Server Error",
            "examples": [
              {
                "docs": undefined,
                "name": "InternalServerError",
                "value": {
                  "errors": [
                    {
                      "details": "An unknown error occurred. error_id: 91d435a7-e0b4-4c56-a097-8907e9ed851e",
                      "msg": "internal_server_error",
                    },
                  ],
                },
              },
            ],
            "status-code": 500,
            "type": "Errors",
          },
          "GetEndUserByIdRequestNotFoundError": {
            "docs": "Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "NotFoundError",
                "value": {
                  "errors": [
                    {
                      "details": "The requested resource with ID 5f7e0e2c1e7c7e000f0f9c3a was not found",
                      "msg": "resource_not_found",
                    },
                  ],
                },
              },
            ],
            "status-code": 404,
            "type": "Errors",
          },
          "GetEndUserByIdRequestTooManyRequestsError": {
            "docs": "Too Many Requests",
            "examples": [
              {
                "docs": undefined,
                "name": "TooManyRequestsError",
                "value": {
                  "errors": [
                    {
                      "details": "50 requests allowed per second",
                      "msg": "rate_limit_exceeded",
                    },
                  ],
                },
              },
            ],
            "status-code": 429,
            "type": "Errors",
          },
          "GetEndUserByIdRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "UnauthorizedError",
                "value": {
                  "errors": [
                    {
                      "details": "You are not authorized to access this resource",
                      "msg": "unauthorized",
                    },
                  ],
                },
              },
            ],
            "status-code": 401,
            "type": "Errors",
          },
          "GetEndUsersRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": "BadRequestError",
                "value": {
                  "errors": [
                    {
                      "details": "{'profile': {'system_properties': ['Unknown field.']}}",
                      "msg": "bad_request",
                    },
                  ],
                },
              },
            ],
            "status-code": 400,
            "type": "Errors",
          },
          "GetEndUsersRequestInternalServerError": {
            "docs": "Internal Server Error",
            "examples": [
              {
                "docs": undefined,
                "name": "InternalServerError",
                "value": {
                  "errors": [
                    {
                      "details": "An unknown error occurred. error_id: 91d435a7-e0b4-4c56-a097-8907e9ed851e",
                      "msg": "internal_server_error",
                    },
                  ],
                },
              },
            ],
            "status-code": 500,
            "type": "Errors",
          },
          "GetEndUsersRequestTooManyRequestsError": {
            "docs": "Too Many Requests",
            "examples": [
              {
                "docs": undefined,
                "name": "TooManyRequestsError",
                "value": {
                  "errors": [
                    {
                      "details": "50 requests allowed per second",
                      "msg": "rate_limit_exceeded",
                    },
                  ],
                },
              },
            ],
            "status-code": 429,
            "type": "Errors",
          },
          "GetEndUsersRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "UnauthorizedError",
                "value": {
                  "errors": [
                    {
                      "details": "You are not authorized to access this resource",
                      "msg": "unauthorized",
                    },
                  ],
                },
              },
            ],
            "status-code": 401,
            "type": "Errors",
          },
          "UpdateEndUserByIdRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": "BadRequestError",
                "value": {
                  "errors": [
                    {
                      "details": "{'profile': {'system_properties': ['Unknown field.']}}",
                      "msg": "bad_request",
                    },
                  ],
                },
              },
            ],
            "status-code": 400,
            "type": "Errors",
          },
          "UpdateEndUserByIdRequestContentTooLargeError": {
            "docs": "Content Too Large",
            "examples": [
              {
                "docs": undefined,
                "name": "ContentTooLargeError",
                "value": {
                  "errors": [
                    {
                      "details": "Maximum request size of 4.0 MB exceeded. Content length: 5.0 MB.",
                      "msg": "content_too_large",
                    },
                  ],
                },
              },
            ],
            "status-code": 413,
            "type": "Errors",
          },
          "UpdateEndUserByIdRequestInternalServerError": {
            "docs": "Internal Server Error",
            "examples": [
              {
                "docs": undefined,
                "name": "InternalServerError",
                "value": {
                  "errors": [
                    {
                      "details": "An unknown error occurred. error_id: 91d435a7-e0b4-4c56-a097-8907e9ed851e",
                      "msg": "internal_server_error",
                    },
                  ],
                },
              },
            ],
            "status-code": 500,
            "type": "Errors",
          },
          "UpdateEndUserByIdRequestNotFoundError": {
            "docs": "Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "NotFoundError",
                "value": {
                  "errors": [
                    {
                      "details": "The requested resource with ID 5f7e0e2c1e7c7e000f0f9c3a was not found",
                      "msg": "resource_not_found",
                    },
                  ],
                },
              },
            ],
            "status-code": 404,
            "type": "Errors",
          },
          "UpdateEndUserByIdRequestTooManyRequestsError": {
            "docs": "Too Many Requests",
            "examples": [
              {
                "docs": undefined,
                "name": "TooManyRequestsError",
                "value": {
                  "errors": [
                    {
                      "details": "50 requests allowed per second",
                      "msg": "rate_limit_exceeded",
                    },
                  ],
                },
              },
            ],
            "status-code": 429,
            "type": "Errors",
          },
          "UpdateEndUserByIdRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "UnauthorizedError",
                "value": {
                  "errors": [
                    {
                      "details": "You are not authorized to access this resource",
                      "msg": "unauthorized",
                    },
                  ],
                },
              },
            ],
            "status-code": 401,
            "type": "Errors",
          },
        },
        "types": {
          "EndUser": "unknown",
          "EndUserCreatedWebhookPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<unknown>",
              "timestamp": "optional<string>",
              "type": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUserRequest": "unknown",
          "EndUserUpdatedWebhookPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": "optional<unknown>",
              "timestamp": "optional<string>",
              "type": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUsers": "unknown",
          "Error": "unknown",
          "Errors": "unknown",
        },
      },
      "rawContents": "errors:
  GetEndUserByIdRequestUnauthorizedError:
    status-code: 401
    type: Errors
    docs: Unauthorized
    examples:
      - value:
          errors:
            - msg: unauthorized
              details: You are not authorized to access this resource
        name: UnauthorizedError
  GetEndUserByIdRequestNotFoundError:
    status-code: 404
    type: Errors
    docs: Not Found
    examples:
      - value:
          errors:
            - msg: resource_not_found
              details: >-
                The requested resource with ID 5f7e0e2c1e7c7e000f0f9c3a was not
                found
        name: NotFoundError
  GetEndUserByIdRequestTooManyRequestsError:
    status-code: 429
    type: Errors
    docs: Too Many Requests
    examples:
      - value:
          errors:
            - msg: rate_limit_exceeded
              details: 50 requests allowed per second
        name: TooManyRequestsError
  GetEndUserByIdRequestInternalServerError:
    status-code: 500
    type: Errors
    docs: Internal Server Error
    examples:
      - value:
          errors:
            - msg: internal_server_error
              details: >-
                An unknown error occurred. error_id:
                91d435a7-e0b4-4c56-a097-8907e9ed851e
        name: InternalServerError
  UpdateEndUserByIdRequestBadRequestError:
    status-code: 400
    type: Errors
    docs: Bad Request
    examples:
      - value:
          errors:
            - msg: bad_request
              details: '{''profile'': {''system_properties'': [''Unknown field.'']}}'
        name: BadRequestError
  UpdateEndUserByIdRequestUnauthorizedError:
    status-code: 401
    type: Errors
    docs: Unauthorized
    examples:
      - value:
          errors:
            - msg: unauthorized
              details: You are not authorized to access this resource
        name: UnauthorizedError
  UpdateEndUserByIdRequestNotFoundError:
    status-code: 404
    type: Errors
    docs: Not Found
    examples:
      - value:
          errors:
            - msg: resource_not_found
              details: >-
                The requested resource with ID 5f7e0e2c1e7c7e000f0f9c3a was not
                found
        name: NotFoundError
  UpdateEndUserByIdRequestContentTooLargeError:
    status-code: 413
    type: Errors
    docs: Content Too Large
    examples:
      - value:
          errors:
            - msg: content_too_large
              details: 'Maximum request size of 4.0 MB exceeded. Content length: 5.0 MB.'
        name: ContentTooLargeError
  UpdateEndUserByIdRequestTooManyRequestsError:
    status-code: 429
    type: Errors
    docs: Too Many Requests
    examples:
      - value:
          errors:
            - msg: rate_limit_exceeded
              details: 50 requests allowed per second
        name: TooManyRequestsError
  UpdateEndUserByIdRequestInternalServerError:
    status-code: 500
    type: Errors
    docs: Internal Server Error
    examples:
      - value:
          errors:
            - msg: internal_server_error
              details: >-
                An unknown error occurred. error_id:
                91d435a7-e0b4-4c56-a097-8907e9ed851e
        name: InternalServerError
  GetEndUsersRequestBadRequestError:
    status-code: 400
    type: Errors
    docs: Bad Request
    examples:
      - value:
          errors:
            - msg: bad_request
              details: '{''profile'': {''system_properties'': [''Unknown field.'']}}'
        name: BadRequestError
  GetEndUsersRequestUnauthorizedError:
    status-code: 401
    type: Errors
    docs: Unauthorized
    examples:
      - value:
          errors:
            - msg: unauthorized
              details: You are not authorized to access this resource
        name: UnauthorizedError
  GetEndUsersRequestTooManyRequestsError:
    status-code: 429
    type: Errors
    docs: Too Many Requests
    examples:
      - value:
          errors:
            - msg: rate_limit_exceeded
              details: 50 requests allowed per second
        name: TooManyRequestsError
  GetEndUsersRequestInternalServerError:
    status-code: 500
    type: Errors
    docs: Internal Server Error
    examples:
      - value:
          errors:
            - msg: internal_server_error
              details: >-
                An unknown error occurred. error_id:
                91d435a7-e0b4-4c56-a097-8907e9ed851e
        name: InternalServerError
types:
  EndUser: unknown
  EndUserRequest: unknown
  Error: unknown
  Errors: unknown
  EndUsers: unknown
  EndUserCreatedWebhookPayload:
    properties:
      type: optional<string>
      timestamp: optional<string>
      data: optional<unknown>
    source:
      openapi: ../openapi.json
  EndUserUpdatedWebhookPayload:
    properties:
      type: optional<string>
      timestamp: optional<string>
      data: optional<unknown>
    source:
      openapi: ../openapi.json
",
    },
    "endUsers.yml": {
      "absoluteFilepath": "/Users/alex/code/fern/fern/packages/cli/api-importers/openapi/openapi-ir-to-fern-tests/src/__test__/fixtures/ada/fern",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "getEndUserById": {
              "auth": true,
              "display-name": "Get an end user by ID",
              "docs": "Get a specific end user",
              "errors": [
                "root.GetEndUserByIdRequestUnauthorizedError",
                "root.GetEndUserByIdRequestNotFoundError",
                "root.GetEndUserByIdRequestTooManyRequestsError",
                "root.GetEndUserByIdRequestInternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "end_user_id": "end_user_id",
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/end-users/v1/{end_user_id}",
              "path-parameters": {
                "end_user_id": {
                  "docs": "The end_user_id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "OK",
                "type": "root.EndUser",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getEndUsers": {
              "auth": true,
              "display-name": "Get multiple end users by ID",
              "docs": "Get multiple end users",
              "errors": [
                "root.GetEndUsersRequestBadRequestError",
                "root.GetEndUsersRequestUnauthorizedError",
                "root.GetEndUsersRequestTooManyRequestsError",
                "root.GetEndUsersRequestInternalServerError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "cursor": "65a17e3f43bec88e2792d0eb",
                    "limit": 8,
                  },
                  "response": {
                    "body": {
                      "key": "value",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/end-users/v1",
              "request": {
                "name": "GetEndUsersRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "The end user ID that marks the start or beginning of the returned profile records.",
                    "type": "optional<string>",
                  },
                  "limit": {
                    "docs": "The number of end user profile records to return",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 100,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "OK",
                "type": "root.EndUsers",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "updateEndUserById": {
              "auth": true,
              "display-name": "Update an end user by ID",
              "docs": "Update an end user. Request data is limited to 4KB in size total.",
              "errors": [
                "root.UpdateEndUserByIdRequestBadRequestError",
                "root.UpdateEndUserByIdRequestUnauthorizedError",
                "root.UpdateEndUserByIdRequestNotFoundError",
                "root.UpdateEndUserByIdRequestContentTooLargeError",
                "root.UpdateEndUserByIdRequestTooManyRequestsError",
                "root.UpdateEndUserByIdRequestInternalServerError",
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/end-users/v1/{end_user_id}",
              "path-parameters": {
                "end_user_id": {
                  "docs": "The end_user_id",
                  "type": "string",
                },
              },
              "request": {
                "body": "root.EndUserRequest",
                "content-type": "application/json",
              },
              "response": {
                "docs": "OK",
                "type": "root.EndUser",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getEndUserById:
      path: /end-users/v1/{end_user_id}
      method: GET
      auth: true
      docs: Get a specific end user
      source:
        openapi: ../openapi.json
      path-parameters:
        end_user_id:
          type: string
          docs: The end_user_id
      display-name: Get an end user by ID
      response:
        docs: OK
        type: root.EndUser
      errors:
        - root.GetEndUserByIdRequestUnauthorizedError
        - root.GetEndUserByIdRequestNotFoundError
        - root.GetEndUserByIdRequestTooManyRequestsError
        - root.GetEndUserByIdRequestInternalServerError
      examples:
        - path-parameters:
            end_user_id: end_user_id
          response:
            body:
              key: value
    updateEndUserById:
      path: /end-users/v1/{end_user_id}
      method: PATCH
      auth: true
      docs: Update an end user. Request data is limited to 4KB in size total.
      source:
        openapi: ../openapi.json
      path-parameters:
        end_user_id:
          type: string
          docs: The end_user_id
      display-name: Update an end user by ID
      request:
        body: root.EndUserRequest
        content-type: application/json
      response:
        docs: OK
        type: root.EndUser
      errors:
        - root.UpdateEndUserByIdRequestBadRequestError
        - root.UpdateEndUserByIdRequestUnauthorizedError
        - root.UpdateEndUserByIdRequestNotFoundError
        - root.UpdateEndUserByIdRequestContentTooLargeError
        - root.UpdateEndUserByIdRequestTooManyRequestsError
        - root.UpdateEndUserByIdRequestInternalServerError
    getEndUsers:
      path: /end-users/v1
      method: GET
      auth: true
      docs: Get multiple end users
      source:
        openapi: ../openapi.json
      display-name: Get multiple end users by ID
      request:
        name: GetEndUsersRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: >-
              The end user ID that marks the start or beginning of the returned
              profile records.
          limit:
            type: optional<integer>
            docs: The number of end user profile records to return
            validation:
              min: 1
              max: 100
      response:
        docs: OK
        type: root.EndUsers
      errors:
        - root.GetEndUsersRequestBadRequestError
        - root.GetEndUsersRequestUnauthorizedError
        - root.GetEndUsersRequestTooManyRequestsError
        - root.GetEndUsersRequestInternalServerError
      examples:
        - query-parameters:
            cursor: 65a17e3f43bec88e2792d0eb
            limit: 8
          response:
            body:
              key: value
  source:
    openapi: ../openapi.json
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "End Users API",
      "environments": {
        "Default": "https://example.ada.support/api",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: End Users API
environments:
  Default: https://example.ada.support/api
default-environment: Default
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
",
  },
}
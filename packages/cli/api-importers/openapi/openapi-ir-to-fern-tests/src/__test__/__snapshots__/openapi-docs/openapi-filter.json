{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "CreateOrUpdateCompanyRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": "Bad Request",
                "value": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "message": "bad 'test' parameter",
                    },
                  ],
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "CreateOrUpdateCompanyRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "9b0d6fb9-d2d7-4904-a13c-97557a802323",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveCompanyRequestNotFoundError": {
            "docs": "Company Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "c97dd75f-a434-4c83-a8e8-c4d1887d6c48",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveCompanyRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "6ef54f1c-70a4-4779-b3a6-29e4fd65d9dd",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
        },
        "imports": {
          "companies": "companies.yml",
        },
        "types": {
          "Companies": {
            "docs": "This will return a list of companies for the App.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array containing Company Objects.",
                "type": "optional<list<companies.Company>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "total_count": {
                "docs": "The total number of companies.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of object - `list`.",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateOrUpdateCompanyRequest": {
            "docs": "You can create or update a Company",
            "inline": undefined,
            "properties": {
              "company_id": {
                "docs": "The company id you have defined for the company. Can't be updated",
                "type": "optional<string>",
              },
              "custom_attributes": {
                "docs": "A hash of key/value pairs containing any other data about the company you want Intercom to store.",
                "type": "optional<map<string, string>>",
              },
              "industry": {
                "docs": "The industry that this company operates in.",
                "type": "optional<string>",
              },
              "monthly_spend": {
                "docs": "How much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647..",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "The name of the Company",
                "type": "optional<string>",
              },
              "plan": {
                "docs": "The name of the plan you have associated with the company.",
                "type": "optional<string>",
              },
              "remote_created_at": {
                "docs": "The time the company was created by you.",
                "type": "optional<integer>",
              },
              "size": {
                "docs": "The number of employees in this company.",
                "type": "optional<integer>",
              },
              "website": {
                "docs": "The URL for this company's website. Please note that the value specified here is not validated. Accepts any string.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CursorPages": {
            "docs": "Cursor-based pagination is a technique used in the Intercom API to navigate through large amounts of data.
A "cursor" or pointer is used to keep track of the current position in the result set, allowing the API to return the data in small chunks or "pages" as needed.
",
            "inline": undefined,
            "properties": {
              "next": {
                "type": "optional<StartingAfterPaging>",
              },
              "page": {
                "docs": "The current page",
                "type": "optional<integer>",
              },
              "per_page": {
                "docs": "Number of results per page",
                "type": "optional<integer>",
              },
              "total_pages": {
                "docs": "Total number of pages",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "the type of object `pages`.",
                "type": "optional<literal<"pages">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Error": {
            "docs": "The API will return an Error List for a failed request, which will contain one or more Error objects.",
            "inline": undefined,
            "properties": {
              "errors": {
                "docs": "An array of one or more error objects",
                "type": "list<ErrorErrorsItem>",
              },
              "request_id": {
                "docs": "",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "type": {
                "docs": "The type is error.list",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ErrorErrorsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "A string indicating the kind of error, used to further qualify the HTTP response code",
                "type": "string",
              },
              "field": {
                "docs": "Optional. Used to identify a particular field or query parameter that was in error.",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Optional. Human readable description of the error.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "StartingAfterPaging": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "per_page": {
                "docs": "The number of results to fetch per page.",
                "type": "optional<integer>",
              },
              "starting_after": {
                "docs": "The cursor to use in the next request to get the next page of results.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "errors:
  RetrieveCompanyRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 6ef54f1c-70a4-4779-b3a6-29e4fd65d9dd
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveCompanyRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Company Not Found
    examples:
      - value:
          type: error.list
          request_id: c97dd75f-a434-4c83-a8e8-c4d1887d6c48
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company Not Found
  CreateOrUpdateCompanyRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Bad Request
    examples:
      - value:
          type: error.list
          errors:
            - code: bad_request
              message: bad 'test' parameter
        name: Bad Request
  CreateOrUpdateCompanyRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 9b0d6fb9-d2d7-4904-a13c-97557a802323
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
imports:
  companies: companies.yml
types:
  Companies:
    docs: This will return a list of companies for the App.
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of object - `list`.
      pages:
        type: optional<CursorPages>
      total_count:
        type: optional<integer>
        docs: The total number of companies.
      data:
        type: optional<list<companies.Company>>
        docs: An array containing Company Objects.
    source:
      openapi: ../openapi.yml
  CreateOrUpdateCompanyRequest:
    docs: You can create or update a Company
    properties:
      name:
        type: optional<string>
        docs: The name of the Company
      company_id:
        type: optional<string>
        docs: The company id you have defined for the company. Can't be updated
      plan:
        type: optional<string>
        docs: The name of the plan you have associated with the company.
      size:
        type: optional<integer>
        docs: The number of employees in this company.
      website:
        type: optional<string>
        docs: >-
          The URL for this company's website. Please note that the value
          specified here is not validated. Accepts any string.
      industry:
        type: optional<string>
        docs: The industry that this company operates in.
      custom_attributes:
        type: optional<map<string, string>>
        docs: >-
          A hash of key/value pairs containing any other data about the company
          you want Intercom to store.
      remote_created_at:
        type: optional<integer>
        docs: The time the company was created by you.
      monthly_spend:
        type: optional<integer>
        docs: >-
          How much revenue the company generates for your business. Note that
          this will truncate floats. i.e. it only allow for whole integers,
          155.98 will be truncated to 155. Note that this has an upper limit of
          2**31-1 or 2147483647..
    source:
      openapi: ../openapi.yml
  CursorPages:
    docs: >
      Cursor-based pagination is a technique used in the Intercom API to
      navigate through large amounts of data.

      A "cursor" or pointer is used to keep track of the current position in the
      result set, allowing the API to return the data in small chunks or "pages"
      as needed.
    properties:
      type:
        type: optional<literal<"pages">>
        docs: the type of object `pages`.
      page:
        type: optional<integer>
        docs: The current page
      next:
        type: optional<StartingAfterPaging>
      per_page:
        type: optional<integer>
        docs: Number of results per page
      total_pages:
        type: optional<integer>
        docs: Total number of pages
    source:
      openapi: ../openapi.yml
  ErrorErrorsItem:
    properties:
      code:
        type: string
        docs: >-
          A string indicating the kind of error, used to further qualify the
          HTTP response code
      message:
        type: optional<string>
        docs: Optional. Human readable description of the error.
      field:
        type: optional<string>
        docs: >-
          Optional. Used to identify a particular field or query parameter that
          was in error.
    source:
      openapi: ../openapi.yml
    inline: true
  Error:
    docs: >-
      The API will return an Error List for a failed request, which will contain
      one or more Error objects.
    properties:
      type:
        type: string
        docs: The type is error.list
      request_id:
        type: optional<string>
        docs: ''
        validation:
          format: uuid
      errors:
        docs: An array of one or more error objects
        type: list<ErrorErrorsItem>
    source:
      openapi: ../openapi.yml
  StartingAfterPaging:
    properties:
      per_page:
        type: optional<integer>
        docs: The number of results to fetch per page.
      starting_after:
        type: optional<string>
        docs: The cursor to use in the next request to get the next page of results.
    source:
      openapi: ../openapi.yml
",
    },
    "companies.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Companies",
        "imports": {
          "root": "__package__.yml",
          "segments": "segments.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Companies",
          "endpoints": {
            "createOrUpdateCompany": {
              "auth": true,
              "display-name": "Create or Update a company",
              "docs": "You can create or update a company.

Companies will be only visible in Intercom when there is at least one associated user.

Companies are looked up via `company_id` in a `POST` request, if not found via `company_id`, the new company will be created, if found, that company will be updated.

{% admonition type="attention" name="Using `company_id`" %}
  You can set a unique `company_id` value when creating a company. However, it is not possible to update `company_id`. Be sure to set a unique value once upon creation of the company.
{% /admonition %}
",
              "errors": [
                "root.CreateOrUpdateCompanyRequestBadRequestError",
                "root.CreateOrUpdateCompanyRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "request": {
                    "company_id": "company_remote_id",
                    "name": "my company",
                    "remote_created_at": 1374138000,
                  },
                  "response": {
                    "body": {
                      "app_id": "this_is_an_id116_that_should_be_at_least_",
                      "company_id": "company_remote_id",
                      "created_at": 1719492732,
                      "custom_attributes": {
                        "creation_source": "api",
                      },
                      "id": "667d607c8a68186f43bafd1e",
                      "industry": "Software",
                      "last_request_at": 1663597223,
                      "monthly_spend": 0,
                      "name": "my company",
                      "plan": {
                        "id": "269315",
                        "name": "Pro",
                        "type": "plan",
                      },
                      "remote_created_at": 1374138000,
                      "segments": {
                        "segments": [
                          {
                            "created_at": 1394621988,
                            "id": "56203d253cba154d39010062",
                            "name": "Active",
                            "updated_at": 1394622004,
                          },
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "size": 100,
                      "tags": {
                        "tags": [
                          {
                            "key": "value",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "company",
                      "updated_at": 1719492732,
                      "user_count": 0,
                      "website": "https://www.intercom.com",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/companies",
              "request": {
                "body": {
                  "type": "optional<root.CreateOrUpdateCompanyRequest>",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "Successful",
                "type": "Company",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveCompany": {
              "auth": true,
              "display-name": "Retrieve companies",
              "docs": "You can fetch a single company by passing in `company_id` or `name`.

  `https://api.intercom.io/companies?name={name}`

  `https://api.intercom.io/companies?company_id={company_id}`

You can fetch all companies and filter by `segment_id` or `tag_id` as a query parameter.

  `https://api.intercom.io/companies?tag_id={tag_id}`

  `https://api.intercom.io/companies?segment_id={segment_id}`
",
              "errors": [
                "root.RetrieveCompanyRequestUnauthorizedError",
                "root.RetrieveCompanyRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "query-parameters": {
                    "company_id": "12345",
                    "name": "my company",
                    "segment_id": "98765",
                    "tag_id": "678910",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "app_id": "this_is_an_id122_that_should_be_at_least_",
                          "company_id": "remote_companies_scroll_2",
                          "created_at": 1719492734,
                          "custom_attributes": {
                            "key": "value",
                          },
                          "id": "667d607e8a68186f43bafd26",
                          "industry": "Software",
                          "last_request_at": 1663597223,
                          "monthly_spend": 0,
                          "name": "IntercomQATest1",
                          "plan": {
                            "id": "269315",
                            "name": "Pro",
                            "type": "plan",
                          },
                          "remote_created_at": 1719492734,
                          "segments": {
                            "segments": [
                              {
                                "created_at": 1394621988,
                                "id": "56203d253cba154d39010062",
                                "name": "Active",
                                "updated_at": 1394622004,
                              },
                            ],
                            "type": "segment.list",
                          },
                          "session_count": 0,
                          "size": 100,
                          "tags": {
                            "type": "tag.list",
                          },
                          "type": "company",
                          "updated_at": 1719492734,
                          "user_count": 4,
                          "website": "https://www.intercom.com",
                        },
                      ],
                      "pages": {
                        "page": 1,
                        "per_page": 15,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 1,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/companies",
              "request": {
                "name": "RetrieveCompanyRequest",
                "query-parameters": {
                  "company_id": {
                    "docs": "The `company_id` of the company to filter by.",
                    "type": "optional<string>",
                  },
                  "name": {
                    "docs": "The `name` of the company to filter by.",
                    "type": "optional<string>",
                  },
                  "page": {
                    "docs": "The page of results to fetch. Defaults to first page",
                    "type": "optional<integer>",
                  },
                  "per_page": {
                    "docs": "How many results to display per page. Defaults to 15",
                    "type": "optional<integer>",
                  },
                  "segment_id": {
                    "docs": "The `segment_id` of the company to filter by.",
                    "type": "optional<string>",
                  },
                  "tag_id": {
                    "docs": "The `tag_id` of the company to filter by.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Successful",
                "type": "root.Companies",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Company": {
            "docs": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.",
            "inline": undefined,
            "properties": {
              "app_id": {
                "docs": "The Intercom defined code of the workspace the company is associated to.",
                "type": "optional<string>",
              },
              "company_id": {
                "docs": "The company id you have defined for the company.",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time the company was added in Intercom.",
                "type": "optional<integer>",
              },
              "custom_attributes": {
                "docs": "The custom attributes you have set on the company.",
                "type": "optional<map<string, string>>",
              },
              "id": {
                "docs": "The Intercom defined id representing the company.",
                "type": "optional<string>",
              },
              "industry": {
                "docs": "The industry that the company operates in.",
                "type": "optional<string>",
              },
              "last_request_at": {
                "docs": "The time the company last recorded making a request.",
                "type": "optional<integer>",
              },
              "monthly_spend": {
                "docs": "How much revenue the company generates for your business.",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "The name of the company.",
                "type": "optional<string>",
              },
              "plan": {
                "type": "optional<CompanyPlan>",
              },
              "remote_created_at": {
                "docs": "The time the company was created by you.",
                "type": "optional<integer>",
              },
              "segments": {
                "docs": "The list of segments associated with the company",
                "type": "optional<CompanySegments>",
              },
              "session_count": {
                "docs": "How many sessions the company has recorded.",
                "type": "optional<integer>",
              },
              "size": {
                "docs": "The number of employees in the company.",
                "type": "optional<integer>",
              },
              "tags": {
                "docs": "The list of tags associated with the company",
                "type": "optional<CompanyTags>",
              },
              "type": {
                "docs": "Value is `company`",
                "type": "optional<literal<"company">>",
              },
              "updated_at": {
                "docs": "The last time the company was updated.",
                "type": "optional<integer>",
              },
              "user_count": {
                "docs": "The number of users in the company.",
                "type": "optional<integer>",
              },
              "website": {
                "docs": "The URL for the company website.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompanyPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The id of the plan",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the plan",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Value is always "plan"",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompanySegments": {
            "docs": "The list of segments associated with the company",
            "inline": true,
            "properties": {
              "segments": "optional<list<segments.Segment>>",
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"segment.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompanyTags": {
            "docs": "The list of tags associated with the company",
            "inline": true,
            "properties": {
              "tags": "optional<list<unknown>>",
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"tag.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
  segments: segments.yml
service:
  auth: false
  base-path: ''
  endpoints:
    retrieveCompany:
      path: /companies
      method: GET
      auth: true
      docs: >
        You can fetch a single company by passing in `company_id` or `name`.

          `https://api.intercom.io/companies?name={name}`

          `https://api.intercom.io/companies?company_id={company_id}`

        You can fetch all companies and filter by `segment_id` or `tag_id` as a
        query parameter.

          `https://api.intercom.io/companies?tag_id={tag_id}`

          `https://api.intercom.io/companies?segment_id={segment_id}`
      source:
        openapi: ../openapi.yml
      display-name: Retrieve companies
      request:
        name: RetrieveCompanyRequest
        query-parameters:
          name:
            type: optional<string>
            docs: The `name` of the company to filter by.
          company_id:
            type: optional<string>
            docs: The `company_id` of the company to filter by.
          tag_id:
            type: optional<string>
            docs: The `tag_id` of the company to filter by.
          segment_id:
            type: optional<string>
            docs: The `segment_id` of the company to filter by.
          page:
            type: optional<integer>
            docs: The page of results to fetch. Defaults to first page
          per_page:
            type: optional<integer>
            docs: How many results to display per page. Defaults to 15
      response:
        docs: Successful
        type: root.Companies
      errors:
        - root.RetrieveCompanyRequestUnauthorizedError
        - root.RetrieveCompanyRequestNotFoundError
      examples:
        - name: Successful
          query-parameters:
            name: my company
            company_id: '12345'
            tag_id: '678910'
            segment_id: '98765'
          response:
            body:
              type: list
              pages:
                type: pages
                page: 1
                per_page: 15
                total_pages: 1
              total_count: 1
              data:
                - type: company
                  id: 667d607e8a68186f43bafd26
                  name: IntercomQATest1
                  app_id: this_is_an_id122_that_should_be_at_least_
                  plan:
                    type: plan
                    id: '269315'
                    name: Pro
                  company_id: remote_companies_scroll_2
                  remote_created_at: 1719492734
                  created_at: 1719492734
                  updated_at: 1719492734
                  last_request_at: 1663597223
                  size: 100
                  website: https://www.intercom.com
                  industry: Software
                  monthly_spend: 0
                  session_count: 0
                  user_count: 4
                  custom_attributes:
                    key: value
                  tags:
                    type: tag.list
                  segments:
                    type: segment.list
                    segments:
                      - id: 56203d253cba154d39010062
                        name: Active
                        created_at: 1394621988
                        updated_at: 1394622004
    createOrUpdateCompany:
      path: /companies
      method: POST
      auth: true
      docs: >
        You can create or update a company.


        Companies will be only visible in Intercom when there is at least one
        associated user.


        Companies are looked up via `company_id` in a `POST` request, if not
        found via `company_id`, the new company will be created, if found, that
        company will be updated.


        {% admonition type="attention" name="Using `company_id`" %}
          You can set a unique `company_id` value when creating a company. However, it is not possible to update `company_id`. Be sure to set a unique value once upon creation of the company.
        {% /admonition %}
      source:
        openapi: ../openapi.yml
      display-name: Create or Update a company
      request:
        body:
          type: optional<root.CreateOrUpdateCompanyRequest>
        content-type: application/json
      response:
        docs: Successful
        type: Company
      errors:
        - root.CreateOrUpdateCompanyRequestBadRequestError
        - root.CreateOrUpdateCompanyRequestUnauthorizedError
      examples:
        - name: Successful
          request:
            name: my company
            company_id: company_remote_id
            remote_created_at: 1374138000
          response:
            body:
              type: company
              id: 667d607c8a68186f43bafd1e
              name: my company
              app_id: this_is_an_id116_that_should_be_at_least_
              plan:
                type: plan
                id: '269315'
                name: Pro
              company_id: company_remote_id
              remote_created_at: 1374138000
              created_at: 1719492732
              updated_at: 1719492732
              last_request_at: 1663597223
              size: 100
              website: https://www.intercom.com
              industry: Software
              monthly_spend: 0
              session_count: 0
              user_count: 0
              custom_attributes:
                creation_source: api
              tags:
                type: tag.list
                tags:
                  - key: value
              segments:
                type: segment.list
                segments:
                  - id: 56203d253cba154d39010062
                    name: Active
                    created_at: 1394621988
                    updated_at: 1394622004
  source:
    openapi: ../openapi.yml
  display-name: Companies
docs: Everything about your Companies
types:
  CompanyPlan:
    properties:
      type:
        type: optional<string>
        docs: Value is always "plan"
      id:
        type: optional<string>
        docs: The id of the plan
      name:
        type: optional<string>
        docs: The name of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  CompanyTags:
    docs: The list of tags associated with the company
    properties:
      type:
        type: optional<literal<"tag.list">>
        docs: The type of the object
      tags: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
    inline: true
  CompanySegments:
    docs: The list of segments associated with the company
    properties:
      type:
        type: optional<literal<"segment.list">>
        docs: The type of the object
      segments: optional<list<segments.Segment>>
    source:
      openapi: ../openapi.yml
    inline: true
  Company:
    docs: >-
      Companies allow you to represent organizations using your product. Each
      company will have its own description and be associated with contacts. You
      can fetch, create, update and list companies.
    properties:
      type:
        type: optional<literal<"company">>
        docs: Value is `company`
      id:
        type: optional<string>
        docs: The Intercom defined id representing the company.
      name:
        type: optional<string>
        docs: The name of the company.
      app_id:
        type: optional<string>
        docs: >-
          The Intercom defined code of the workspace the company is associated
          to.
      plan:
        type: optional<CompanyPlan>
      company_id:
        type: optional<string>
        docs: The company id you have defined for the company.
      remote_created_at:
        type: optional<integer>
        docs: The time the company was created by you.
      created_at:
        type: optional<integer>
        docs: The time the company was added in Intercom.
      updated_at:
        type: optional<integer>
        docs: The last time the company was updated.
      last_request_at:
        type: optional<integer>
        docs: The time the company last recorded making a request.
      size:
        type: optional<integer>
        docs: The number of employees in the company.
      website:
        type: optional<string>
        docs: The URL for the company website.
      industry:
        type: optional<string>
        docs: The industry that the company operates in.
      monthly_spend:
        type: optional<integer>
        docs: How much revenue the company generates for your business.
      session_count:
        type: optional<integer>
        docs: How many sessions the company has recorded.
      user_count:
        type: optional<integer>
        docs: The number of users in the company.
      custom_attributes:
        type: optional<map<string, string>>
        docs: The custom attributes you have set on the company.
      tags:
        type: optional<CompanyTags>
        docs: The list of tags associated with the company
      segments:
        type: optional<CompanySegments>
        docs: The list of segments associated with the company
    source:
      openapi: ../openapi.yml
",
    },
    "segments.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "types": {
          "Segment": {
            "docs": "A segment is a group of your contacts defined by the rules that you set.",
            "inline": undefined,
            "properties": {
              "count": {
                "docs": "The number of items in the user segment. It's returned when `include_count=true` is included in the request.",
                "type": "optional<integer>",
              },
              "created_at": {
                "docs": "The time the segment was created.",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "The unique identifier representing the segment.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the segment.",
                "type": "optional<string>",
              },
              "person_type": {
                "docs": "Type of the contact: contact (lead) or user.",
                "type": "optional<SegmentPersonType>",
              },
              "type": {
                "docs": "The type of object.",
                "type": "optional<literal<"segment">>",
              },
              "updated_at": {
                "docs": "The time the segment was updated.",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SegmentPersonType": {
            "docs": "Type of the contact: contact (lead) or user.",
            "enum": [
              "contact",
              "user",
            ],
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  SegmentPersonType:
    enum:
      - contact
      - user
    docs: 'Type of the contact: contact (lead) or user.'
    source:
      openapi: ../openapi.yml
  Segment:
    docs: A segment is a group of your contacts defined by the rules that you set.
    properties:
      type:
        type: optional<literal<"segment">>
        docs: The type of object.
      id:
        type: optional<string>
        docs: The unique identifier representing the segment.
      name:
        type: optional<string>
        docs: The name of the segment.
      created_at:
        type: optional<integer>
        docs: The time the segment was created.
      updated_at:
        type: optional<integer>
        docs: The time the segment was updated.
      person_type:
        type: optional<SegmentPersonType>
        docs: 'Type of the contact: contact (lead) or user.'
      count:
        type: optional<integer>
        docs: >-
          The number of items in the user segment. It's returned when
          `include_count=true` is included in the request.
    source:
      openapi: ../openapi.yml
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "Intercom API",
      "environments": {
        "Default": "https://api.intercom.io",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "headers": {
        "Intercom-Version": {
          "name": "intercomVersion",
          "type": "optional<root.IntercomVersion>",
        },
      },
      "imports": {
        "root": "__package__.yml",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Intercom API
environments:
  Default: https://api.intercom.io
default-environment: Default
imports:
  root: __package__.yml
headers:
  Intercom-Version:
    type: optional<root.IntercomVersion>
    name: intercomVersion
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
",
  },
}
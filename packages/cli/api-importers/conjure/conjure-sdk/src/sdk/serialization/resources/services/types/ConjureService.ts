/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernConjure from "../../../../api/index";
import * as core from "../../../../core";
import { ConjureEndpoint } from "./ConjureEndpoint";
import { WithDocs } from "../../commons/types/WithDocs";

export const ConjureService: core.serialization.ObjectSchema<
    serializers.ConjureService.Raw,
    FernConjure.ConjureService
> = core.serialization
    .objectWithoutOptionalProperties({
        name: core.serialization.string().optional(),
        package: core.serialization.string().optional(),
        basePath: core.serialization.property("base-path", core.serialization.string().optional()),
        endpoints: core.serialization.record(core.serialization.string(), ConjureEndpoint).optional(),
    })
    .extend(WithDocs);

export declare namespace ConjureService {
    export interface Raw extends WithDocs.Raw {
        name?: string | null;
        package?: string | null;
        "base-path"?: string | null;
        endpoints?: Record<string, ConjureEndpoint.Raw> | null;
    }
}

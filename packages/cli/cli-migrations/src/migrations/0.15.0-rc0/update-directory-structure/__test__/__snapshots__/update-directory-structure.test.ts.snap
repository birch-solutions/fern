// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`update-directory-structure > multiple-apis 1`] = `
[
  {
    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern",
    "contents": [
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis",
        "contents": [
          {
            "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis/api",
            "contents": [
              {
                "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis/api/definition",
                "contents": [
                  {
                    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis/api/definition/api.yml",
                    "contents": "name: api
error-discrimination:
  strategy: status-code
",
                    "name": "api.yml",
                    "type": "file",
                  },
                  {
                    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis/api/definition/imdb.yml",
                    "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /movies
  endpoints:
    createMovie:
      docs: Add a movie to the database
      method: POST
      path: /create-movie
      request: CreateMovieRequest
      response: MovieId

    getMovie:
      docs: Retrieve a movie from the database based on the ID
      method: GET
      path: /{id}
      path-parameters:
        id: MovieId
      response: Movie
      errors:
        - MovieDoesNotExistError
      examples:
        # Success response
        - path-parameters:
            id: tt0111161
          response:
            body:
              id: tt0111161
              title: The Shawshank Redemption
              rating: 9.3
        # Error response
        - path-parameters:
            id: tt1234
          response:
            error: MovieDoesNotExistError
            body: tt1234

types:
  MovieId:
    type: string
    docs: The unique identifier for a Movie in the database

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale out of ten stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
",
                    "name": "imdb.yml",
                    "type": "file",
                  },
                ],
                "name": "definition",
                "type": "directory",
              },
              {
                "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis/api/generators.yml",
                "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-node-sdk
        version: 0.7.2
        output:
          location: local-file-system
          path: ../../../generated/typescript
",
                "name": "generators.yml",
                "type": "file",
              },
            ],
            "name": "api",
            "type": "directory",
          },
          {
            "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis/api1",
            "contents": [
              {
                "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis/api1/generators.yml",
                "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-node-sdk
        version: 0.7.2
        output:
          location: local-file-system
          path: ../../../generated/typescript
",
                "name": "generators.yml",
                "type": "file",
              },
              {
                "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis/api1/openapi",
                "contents": [
                  {
                    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/apis/api1/openapi/openapi.yml",
                    "contents": "|
  openapi: "3.0.0"
  info:
    version: 1.0.0
    title: Swagger Petstore
    license:
      name: MIT
  servers:
    - url: http://petstore.swagger.io/v1
  paths:
    /pets:
      get:
        summary: List all pets
        operationId: listPets
        tags:
          - pets
        parameters:
          - name: limit
            in: query
            description: How many items to return at one time (max 100)
            required: false
            schema:
              type: integer
              maximum: 100
              format: int32
        responses:
          '200':
            description: A paged array of pets
            headers:
              x-next:
                description: A link to the next page of responses
                schema:
                  type: string
            content:
              application/json:    
                schema:
                  $ref: "#/components/schemas/Pets"
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
      post:
        summary: Create a pet
        operationId: createPets
        tags:
          - pets
        responses:
          '201':
            description: Null response
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    /pets/{petId}:
      get:
        summary: Info for a specific pet
        operationId: showPetById
        tags:
          - pets
        parameters:
          - name: petId
            in: path
            required: true
            description: The id of the pet to retrieve
            schema:
              type: string
        responses:
          '200':
            description: Expected response to a valid request
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Pet"
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
  components:
    schemas:
      Pet:
        type: object
        required:
          - id
          - name
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
          tag:
            type: string
      Pets:
        type: array
        maxItems: 100
        items:
          $ref: "#/components/schemas/Pet"
      Error:
        type: object
        required:
          - code
          - message
        properties:
          code:
            type: integer
            format: int32
          message:
            type: string
",
                    "name": "openapi.yml",
                    "type": "file",
                  },
                ],
                "name": "openapi",
                "type": "directory",
              },
            ],
            "name": "api1",
            "type": "directory",
          },
        ],
        "name": "apis",
        "type": "directory",
      },
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-G0w8e9wo8R3U/fern/fern.config.json",
        "contents": "{
    "organization": "dsinghvi",
    "version": "0.14.3"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`update-directory-structure > multiple-apis-with-docs 1`] = `
[
  {
    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern",
    "contents": [
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis",
        "contents": [
          {
            "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api",
            "contents": [
              {
                "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api/definition",
                "contents": [
                  {
                    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api/definition/api.yml",
                    "contents": "name: api
error-discrimination:
  strategy: status-code
",
                    "name": "api.yml",
                    "type": "file",
                  },
                  {
                    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api/definition/imdb.yml",
                    "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /movies
  endpoints:
    createMovie:
      docs: Add a movie to the database
      method: POST
      path: /create-movie
      request: CreateMovieRequest
      response: MovieId

    getMovie:
      docs: Retrieve a movie from the database based on the ID
      method: GET
      path: /{id}
      path-parameters:
        id: MovieId
      response: Movie
      errors:
        - MovieDoesNotExistError
      examples:
        # Success response
        - path-parameters:
            id: tt0111161
          response:
            body:
              id: tt0111161
              title: The Shawshank Redemption
              rating: 9.3
        # Error response
        - path-parameters:
            id: tt1234
          response:
            error: MovieDoesNotExistError
            body: tt1234

types:
  MovieId:
    type: string
    docs: The unique identifier for a Movie in the database

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale out of ten stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
",
                    "name": "imdb.yml",
                    "type": "file",
                  },
                ],
                "name": "definition",
                "type": "directory",
              },
              {
                "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api/generators.yml",
                "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-node-sdk
        version: 0.7.2
        output:
          location: local-file-system
          path: ../../../generated/typescript
",
                "name": "generators.yml",
                "type": "file",
              },
            ],
            "name": "api",
            "type": "directory",
          },
          {
            "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api1",
            "contents": [
              {
                "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api1/definition",
                "contents": [
                  {
                    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api1/definition/api.yml",
                    "contents": "name: api
error-discrimination:
  strategy: status-code
",
                    "name": "api.yml",
                    "type": "file",
                  },
                  {
                    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api1/definition/imdb.yml",
                    "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /movies
  endpoints:
    createMovie:
      docs: Add a movie to the database
      method: POST
      path: /create-movie
      request: CreateMovieRequest
      response: MovieId

    getMovie:
      docs: Retrieve a movie from the database based on the ID
      method: GET
      path: /{id}
      path-parameters:
        id: MovieId
      response: Movie
      errors:
        - MovieDoesNotExistError
      examples:
        # Success response
        - path-parameters:
            id: tt0111161
          response:
            body:
              id: tt0111161
              title: The Shawshank Redemption
              rating: 9.3
        # Error response
        - path-parameters:
            id: tt1234
          response:
            error: MovieDoesNotExistError
            body: tt1234

types:
  MovieId:
    type: string
    docs: The unique identifier for a Movie in the database

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale out of ten stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
",
                    "name": "imdb.yml",
                    "type": "file",
                  },
                ],
                "name": "definition",
                "type": "directory",
              },
              {
                "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/apis/api1/generators.yml",
                "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-node-sdk
        version: 0.7.2
        output:
          location: local-file-system
          path: ../../../generated/typescript
",
                "name": "generators.yml",
                "type": "file",
              },
            ],
            "name": "api1",
            "type": "directory",
          },
        ],
        "name": "apis",
        "type": "directory",
      },
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/docs.yml",
        "contents": "title: dsinghvi
navigation:
  - api: API Reference
    apiName: api
colors:
  accentPrimary: '#ffffff'
logo:
  dark: ./logo.png
instances:
  - url: dsinghvi.docs.buildwithfern.com
",
        "name": "docs.yml",
        "type": "file",
      },
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-yiYETfZpSy5X/fern/fern.config.json",
        "contents": "{
    "organization": "dsinghvi",
    "version": "0.14.3"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`update-directory-structure > single-api 1`] = `
[
  {
    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-969xDADqM619/fern",
    "contents": [
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-969xDADqM619/fern/definition",
        "contents": [
          {
            "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-969xDADqM619/fern/definition/api.yml",
            "contents": "name: api
error-discrimination:
  strategy: status-code
",
            "name": "api.yml",
            "type": "file",
          },
          {
            "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-969xDADqM619/fern/definition/imdb.yml",
            "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /movies
  endpoints:
    createMovie:
      docs: Add a movie to the database
      method: POST
      path: /create-movie
      request: CreateMovieRequest
      response: MovieId

    getMovie:
      docs: Retrieve a movie from the database based on the ID
      method: GET
      path: /{id}
      path-parameters:
        id: MovieId
      response: Movie
      errors:
        - MovieDoesNotExistError
      examples:
        # Success response
        - path-parameters:
            id: tt0111161
          response:
            body:
              id: tt0111161
              title: The Shawshank Redemption
              rating: 9.3
        # Error response
        - path-parameters:
            id: tt1234
          response:
            error: MovieDoesNotExistError
            body: tt1234

types:
  MovieId:
    type: string
    docs: The unique identifier for a Movie in the database

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale out of ten stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
",
            "name": "imdb.yml",
            "type": "file",
          },
        ],
        "name": "definition",
        "type": "directory",
      },
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-969xDADqM619/fern/fern.config.json",
        "contents": "{
    "organization": "dsinghvi",
    "version": "0.14.3"
}",
        "name": "fern.config.json",
        "type": "file",
      },
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-969xDADqM619/fern/generators.yml",
        "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-node-sdk
        version: 0.7.2
        output:
          location: local-file-system
          path: ../generated/typescript
",
        "name": "generators.yml",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`update-directory-structure > single-api-with-docs 1`] = `
[
  {
    "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-mG0TAuKYMdEw/fern",
    "contents": [
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-mG0TAuKYMdEw/fern/definition",
        "contents": [
          {
            "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-mG0TAuKYMdEw/fern/definition/api.yml",
            "contents": "name: api
error-discrimination:
  strategy: status-code
",
            "name": "api.yml",
            "type": "file",
          },
          {
            "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-mG0TAuKYMdEw/fern/definition/imdb.yml",
            "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /movies
  endpoints:
    createMovie:
      docs: Add a movie to the database
      method: POST
      path: /create-movie
      request: CreateMovieRequest
      response: MovieId

    getMovie:
      docs: Retrieve a movie from the database based on the ID
      method: GET
      path: /{id}
      path-parameters:
        id: MovieId
      response: Movie
      errors:
        - MovieDoesNotExistError
      examples:
        # Success response
        - path-parameters:
            id: tt0111161
          response:
            body:
              id: tt0111161
              title: The Shawshank Redemption
              rating: 9.3
        # Error response
        - path-parameters:
            id: tt1234
          response:
            error: MovieDoesNotExistError
            body: tt1234

types:
  MovieId:
    type: string
    docs: The unique identifier for a Movie in the database

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale out of ten stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
",
            "name": "imdb.yml",
            "type": "file",
          },
        ],
        "name": "definition",
        "type": "directory",
      },
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-mG0TAuKYMdEw/fern/docs.yml",
        "contents": "title: dsinghvi
navigation:
  - api: API Reference
colors:
  accentPrimary: '#ffffff'
logo:
  dark: ./logo.png
instances:
  - url: dsinghvi.docs.buildwithfern.com
",
        "name": "docs.yml",
        "type": "file",
      },
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-mG0TAuKYMdEw/fern/fern.config.json",
        "contents": "{
    "organization": "dsinghvi",
    "version": "0.14.3"
}",
        "name": "fern.config.json",
        "type": "file",
      },
      {
        "absolutePath": "/var/folders/w1/7f9rr7hn4tj00dt00x_46q540000gn/T/tmp-62171-mG0TAuKYMdEw/fern/generators.yml",
        "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-node-sdk
        version: 0.7.2
        output:
          location: local-file-system
          path: ../generated/typescript
",
        "name": "generators.yml",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

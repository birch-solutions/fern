// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser flagright simple 1`] = `
{
  "definitionFiles": {},
  "packageMarkerFile": {
    "errors": {
      "BadRequestError": {
        "status-code": 400,
        "type": "unknown",
      },
      "TooManyRequestsError": {
        "status-code": 429,
        "type": "unknown",
      },
      "UnauthorizedError": {
        "status-code": 401,
        "type": "unknown",
      },
    },
    "service": {
      "auth": false,
      "base-path": "",
      "endpoints": {
        "get-business-user-userId": {
          "auth": true,
          "display-name": "Retrieve a Business User",
          "docs": "### GET Business User

\`/business/user\` endpoint allows you to operate on the [Business User entity](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user).

Calling \`GET /business/user/{userId}\` will return the entire User payload and rule execution results for the User with the corresponding \`userId\`",
          "errors": [
            "UnauthorizedError",
            "TooManyRequestsError",
          ],
          "examples": [
            {
              "path-parameters": {
                "userId": "userId",
              },
              "response": {
                "body": {
                  "acquisitionChannel": "ORGANIC",
                  "allowedPaymentMethods": [
                    "ACH",
                  ],
                  "createdTimestamp": 1641654664000,
                  "directors": [
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "pepStatus": [
                        {
                          "isPepHit": true,
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "pepStatus": [
                        {
                          "isPepHit": true,
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "kycStatusDetails": {
                    "reason": "reason",
                    "status": "SUCCESSFUL",
                  },
                  "legalEntity": {
                    "companyFinancialDetails": {
                      "expectedTransactionAmountPerMonth": {
                        "amountCurrency": "GBP",
                        "amountValue": 800,
                      },
                      "expectedTurnoverPerMonth": {
                        "amountCurrency": "USD",
                        "amountValue": 8000,
                      },
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    "companyGeneralDetails": {
                      "businessIndustry": [
                        "Farming",
                        "businessIndustry",
                      ],
                      "legalName": "Ozkan Hazelnut Export JSC",
                      "mainProductsServicesSold": [
                        "Hazelnut",
                        "mainProductsServicesSold",
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                      "userRegistrationStatus": "REGISTERED",
                      "userSegment": "SOLE_PROPRIETORSHIP",
                    },
                    "companyRegistrationDetails": {
                      "dateOfRegistration": "dateOfRegistration",
                      "legalEntityType": "legalEntityType",
                      "registrationCountry": "DE",
                      "registrationIdentifier": "PSJ554342",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                      "taxIdentifier": "taxIdentifier",
                    },
                    "contactDetails": {
                      "addresses": [
                        {
                          "addressLines": [
                            "Klara-Franke Str 20",
                          ],
                          "city": "Berlin",
                          "country": "Germany",
                          "postcode": "10557",
                          "state": "Berlin",
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "addressLines": [
                            "Klara-Franke Str 20",
                          ],
                          "city": "Berlin",
                          "country": "Germany",
                          "postcode": "10557",
                          "state": "Berlin",
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "contactNumbers": [
                        "contactNumbers",
                      ],
                      "emailIds": [
                        "emailIds",
                      ],
                      "faxNumbers": [
                        "faxNumbers",
                      ],
                      "websites": [
                        "websites",
                      ],
                    },
                    "reasonForAccountOpening": [
                      "string",
                      "reasonForAccountOpening",
                    ],
                  },
                  "linkedEntities": {
                    "childUserIds": [
                      "childUserIds",
                    ],
                    "parentUserId": "parentUserId",
                  },
                  "mccDetails": {
                    "code": 1.1,
                    "description": "description",
                  },
                  "riskLevel": "VERY_HIGH",
                  "shareHolders": [
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "pepStatus": [
                        {
                          "isPepHit": true,
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "pepStatus": [
                        {
                          "isPepHit": true,
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                  ],
                  "transactionLimits": {
                    "maximumDailyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumMonthlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumWeeklyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumYearlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                  },
                  "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
                  "userStateDetails": {
                    "reason": "reason",
                    "state": "UNACCEPTABLE",
                    "userId": "userId",
                  },
                },
              },
            },
          ],
          "method": "GET",
          "path": "/business/users/{userId}",
          "path-parameters": {
            "userId": {
              "docs": "",
              "type": "string",
            },
          },
          "response": {
            "docs": "OK",
            "type": "Business",
          },
        },
        "get-consumer-transaction": {
          "auth": true,
          "display-name": "Retrieve a Transaction",
          "docs": "### GET Transactions

\`/transactions\` endpoint allows you to operate on the [Transaction entity](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction).

Calling \`GET /transactions/{transactionId}\` will return the entire transaction payload and rule execution results for the transaction with the corresponding \`transactionId\`",
          "errors": [
            "UnauthorizedError",
            "TooManyRequestsError",
          ],
          "examples": [
            {
              "path-parameters": {
                "transactionId": "transactionId",
              },
              "response": {
                "body": {
                  "destinationAmountDetails": {
                    "country": "IN",
                    "transactionAmount": 68351.34,
                    "transactionCurrency": "INR",
                  },
                  "destinationUserId": "9350a2611e0771cba03310f74bf6",
                  "deviceData": {
                    "appVersion": "1.1.0",
                    "batteryLevel": 95,
                    "deviceIdentifier": "3c49f915d04485e34caba",
                    "deviceLatitude": 13.0033,
                    "deviceLongitude": 76.1004,
                    "deviceMaker": "ASUS",
                    "deviceModel": "Zenphone M2 Pro Max",
                    "deviceYear": "2018",
                    "ipAddress": "10.23.191.2",
                    "operatingSystem": "Android 11.2",
                    "vpnUsed": false,
                  },
                  "executedRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "hitRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "FRAUD",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "originAmountDetails": {
                    "country": "DE",
                    "transactionAmount": 800,
                    "transactionCurrency": "EUR",
                  },
                  "originUserId": "8650a2611d0771cba03310f74bf6",
                  "productType": "productType",
                  "promotionCodeUsed": true,
                  "reference": "loan repayment",
                  "relatedTransactionIds": [
                    "relatedTransactionIds",
                  ],
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                  ],
                  "timestamp": 1641654664000,
                  "transactionId": "7b80a539eea6e78acbd6d458e5971482",
                  "transactionState": "CREATED",
                  "type": "DEPOSIT",
                },
              },
            },
          ],
          "method": "GET",
          "path": "/transactions/{transactionId}",
          "path-parameters": {
            "transactionId": {
              "docs": "Unique Transaction Identifier",
              "type": "string",
            },
          },
          "response": {
            "docs": "OK",
            "type": "TransactionWithRulesResult",
          },
        },
        "get-consumer-user": {
          "auth": true,
          "display-name": "Retrieve a Consumer User",
          "docs": "### GET Consumer User

\`/consumer/user\` endpoint allows you to operate on the [Consumer User entity](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user).

Calling \`GET /consumer/user/{userId}\` will return the entire user payload and rule execution results for the user with the corresponding \`userId\`",
          "errors": [
            "UnauthorizedError",
            "TooManyRequestsError",
          ],
          "examples": [
            {
              "path-parameters": {
                "userId": "userId",
              },
              "response": {
                "body": {
                  "acquisitionChannel": "ORGANIC",
                  "contactDetails": {
                    "addresses": [
                      {
                        "addressLines": [
                          "Klara-Franke Str 20",
                        ],
                        "city": "Berlin",
                        "country": "Germany",
                        "postcode": "10557",
                        "state": "Berlin",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                        ],
                      },
                      {
                        "addressLines": [
                          "Klara-Franke Str 20",
                        ],
                        "city": "Berlin",
                        "country": "Germany",
                        "postcode": "10557",
                        "state": "Berlin",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                        ],
                      },
                    ],
                    "contactNumbers": [
                      "+37112345432",
                      "contactNumbers",
                    ],
                    "emailIds": [
                      "baran@flagright.com",
                      "emailIds",
                    ],
                    "faxNumbers": [
                      "faxNumbers",
                    ],
                    "websites": [
                      "flagright.com",
                      "websites",
                    ],
                  },
                  "createdTimestamp": 1641654664000,
                  "kycStatusDetails": {
                    "reason": "reason",
                    "status": "SUCCESSFUL",
                  },
                  "legalDocuments": [
                    {
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "documentIssuedDate": 1639939034000,
                      "documentNumber": "Z9431P",
                      "documentType": "passport",
                      "nameOnDocument": {
                        "firstName": "Baran",
                        "lastName": "Ozkan",
                        "middleName": "Realblood",
                      },
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    {
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "documentIssuedDate": 1639939034000,
                      "documentNumber": "Z9431P",
                      "documentType": "passport",
                      "nameOnDocument": {
                        "firstName": "Baran",
                        "lastName": "Ozkan",
                        "middleName": "Realblood",
                      },
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "pepStatus": [
                    {
                      "isPepHit": true,
                      "pepCountry": "pepCountry",
                    },
                  ],
                  "reasonForAccountOpening": [
                    "reasonForAccountOpening",
                  ],
                  "riskLevel": "VERY_HIGH",
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                  ],
                  "transactionLimits": {
                    "maximumDailyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumMonthlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumWeeklyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumYearlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                  },
                  "userDetails": {
                    "countryOfNationality": "DE",
                    "countryOfResidence": "US",
                    "dateOfBirth": "1991-01-01",
                    "gender": "M",
                    "name": {
                      "firstName": "Baran",
                      "lastName": "Ozkan",
                      "middleName": "Realblood",
                    },
                  },
                  "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
                  "userSegment": "RETAIL",
                  "userStateDetails": {
                    "reason": "reason",
                    "state": "UNACCEPTABLE",
                    "userId": "userId",
                  },
                },
              },
            },
          ],
          "method": "GET",
          "path": "/consumer/users/{userId}",
          "path-parameters": {
            "userId": {
              "docs": "",
              "type": "string",
            },
          },
          "response": {
            "docs": "OK",
            "type": "User",
          },
        },
        "post-business-user": {
          "auth": true,
          "display-name": "Create a Business User",
          "docs": "## POST Business User

\`/business/user\` endpoint allows you to operate on the [Business user entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user)

In order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.

### Payload


Each consumer Business entity needs three mandatory fields:

* \`userId\` - Unique identifier for the user
* \`legalEntity\` - Details of the business legal entity (CompanyGeneralDetails, FinancialDetails etc) - only \`legalName\`in \`CompanyGeneralDetails\` is mandatory
* \`createdTimestamp\` - UNIX timestamp in *milliseconds* for when the User is created in your system",
          "errors": [
            "BadRequestError",
            "UnauthorizedError",
            "TooManyRequestsError",
          ],
          "examples": [
            {
              "request": {
                "createdTimestamp": 1.1,
                "directors": [
                  {
                    "contactDetails": {
                      "addresses": [
                        {
                          "addressLines": [
                            "Klara-Franke Str 20",
                          ],
                          "city": "Berlin",
                          "country": "Germany",
                          "postcode": "10557",
                          "state": "Berlin",
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "addressLines": [
                            "Klara-Franke Str 20",
                          ],
                          "city": "Berlin",
                          "country": "Germany",
                          "postcode": "10557",
                          "state": "Berlin",
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "contactNumbers": [
                        "+371 123132",
                        "contactNumbers",
                      ],
                      "emailIds": [
                        "baran@flagright.com",
                        "emailIds",
                      ],
                      "websites": [
                        "flagright.com",
                        "websites",
                      ],
                    },
                    "generalDetails": {
                      "countryOfNationality": "DE",
                      "countryOfResidence": "US",
                      "dateOfBirth": "1991-01-01",
                      "name": {
                        "firstName": "Baran",
                        "lastName": "Ozkan",
                        "middleName": "Realblood",
                      },
                    },
                    "legalDocuments": [
                      {
                        "documentExpirationDate": 1839939034000,
                        "documentIssuedCountry": "DE",
                        "documentIssuedDate": 1639939034000,
                        "documentNumber": "Z9431P",
                        "documentType": "passport",
                        "nameOnDocument": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                        "tags": [
                          {
                            "key": "customerType",
                            "value": "wallet",
                          },
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                        ],
                      },
                      {
                        "documentExpirationDate": 1839939034000,
                        "documentIssuedCountry": "DE",
                        "documentIssuedDate": 1639939034000,
                        "documentNumber": "Z9431P",
                        "documentType": "passport",
                        "nameOnDocument": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                        "tags": [
                          {
                            "key": "customerType",
                            "value": "wallet",
                          },
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                        ],
                      },
                    ],
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                    ],
                  },
                ],
                "legalEntity": {
                  "companyFinancialDetails": {
                    "expectedTransactionAmountPerMonth": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "expectedTurnoverPerMonth": {
                      "amountCurrency": "USD",
                      "amountValue": 8000,
                    },
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                    ],
                  },
                  "companyGeneralDetails": {
                    "businessIndustry": [
                      "Farming",
                      "businessIndustry",
                    ],
                    "legalName": "Ozkan Hazelnut Export JSC",
                    "mainProductsServicesSold": [
                      "Hazelnut",
                      "mainProductsServicesSold",
                    ],
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                    ],
                  },
                  "companyRegistrationDetails": {
                    "registrationCountry": "DE",
                    "registrationIdentifier": "PSJ554342",
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                    ],
                  },
                },
                "shareHolders": [
                  {
                    "contactDetails": {
                      "addresses": [
                        {
                          "addressLines": [
                            "Klara-Franke Str 20",
                          ],
                          "city": "Berlin",
                          "country": "Germany",
                          "postcode": "10557",
                          "state": "Berlin",
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "addressLines": [
                            "Klara-Franke Str 20",
                          ],
                          "city": "Berlin",
                          "country": "Germany",
                          "postcode": "10557",
                          "state": "Berlin",
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "contactNumbers": [
                        "+371 123132",
                        "contactNumbers",
                      ],
                      "emailIds": [
                        "baran@flagright.com",
                        "emailIds",
                      ],
                      "websites": [
                        "flagright.com",
                        "websites",
                      ],
                    },
                    "generalDetails": {
                      "countryOfNationality": "DE",
                      "countryOfResidence": "US",
                      "dateOfBirth": "1991-01-01",
                      "name": {
                        "firstName": "Baran",
                        "lastName": "Ozkan",
                        "middleName": "Realblood",
                      },
                    },
                    "legalDocuments": [
                      {
                        "documentExpirationDate": 1839939034000,
                        "documentIssuedCountry": "DE",
                        "documentIssuedDate": 1639939034000,
                        "documentNumber": "Z9431P",
                        "documentType": "passport",
                        "nameOnDocument": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                        "tags": [
                          {
                            "key": "customerType",
                            "value": "wallet",
                          },
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                        ],
                      },
                      {
                        "documentExpirationDate": 1839939034000,
                        "documentIssuedCountry": "DE",
                        "documentIssuedDate": 1639939034000,
                        "documentNumber": "Z9431P",
                        "documentType": "passport",
                        "nameOnDocument": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                        "tags": [
                          {
                            "key": "customerType",
                            "value": "wallet",
                          },
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                        ],
                      },
                    ],
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                    ],
                  },
                ],
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue",
                  },
                ],
                "transactionLimits": {
                  "maximumDailyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumMonthlyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumQuarterlyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumWeeklyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumYearlyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                },
                "userId": "userId",
              },
              "response": {
                "body": {
                  "executedRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "hitRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "FRAUD",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "message": "message",
                  "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
                },
              },
            },
          ],
          "method": "POST",
          "path": "/business/users",
          "request": {
            "body": "Business",
          },
          "response": {
            "docs": "Created",
            "type": "PostBusinessUserResponse",
          },
        },
        "post-business-user-event": {
          "auth": true,
          "display-name": "Create a Business User Event",
          "docs": "## POST Business User Events

\`/events/business/user\` endpoint allows you to operate on the Business User Events entity.

User events are created after the initial \`POST /business/users\` call (which creates a user) and are used to:

* Update the STATE and KYC Status of the user, using the \`userStateDetails\` or \`kycStatusDetails\` field
* Update the user details, using the \`updatedBusinessUserAttributes\` field.

> If you have neither of the above two use cases, you do not need to use user events. 

### Payload

Each user event needs three mandatory fields:

* \`timestamp\`- the timestamp of when the event was created or occured in your system
* \`userId\` - The ID of the transaction for which this event is generated. 

In order to make individual events retrievable, you also need to pass in a unique \`eventId\` to the request body.
",
          "errors": [
            "BadRequestError",
            "UnauthorizedError",
            "TooManyRequestsError",
          ],
          "examples": [
            {
              "request": {
                "timestamp": 1.1,
                "updatedBusinessUserAttributes": {
                  "directors": [
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "legalEntity": {
                    "companyFinancialDetails": {
                      "expectedTransactionAmountPerMonth": {
                        "amountCurrency": "GBP",
                        "amountValue": 800,
                      },
                      "expectedTurnoverPerMonth": {
                        "amountCurrency": "USD",
                        "amountValue": 8000,
                      },
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    "companyGeneralDetails": {
                      "businessIndustry": [
                        "Farming",
                        "businessIndustry",
                      ],
                      "legalName": "Ozkan Hazelnut Export JSC",
                      "mainProductsServicesSold": [
                        "Hazelnut",
                        "mainProductsServicesSold",
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    "companyRegistrationDetails": {
                      "registrationCountry": "DE",
                      "registrationIdentifier": "PSJ554342",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    "contactDetails": {
                      "addresses": [
                        {
                          "addressLines": [
                            "Klara-Franke Str 20",
                          ],
                          "city": "Berlin",
                          "country": "Germany",
                          "postcode": "10557",
                          "state": "Berlin",
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "addressLines": [
                            "Klara-Franke Str 20",
                          ],
                          "city": "Berlin",
                          "country": "Germany",
                          "postcode": "10557",
                          "state": "Berlin",
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                    },
                    "reasonForAccountOpening": [
                      "string",
                      "reasonForAccountOpening",
                    ],
                  },
                  "shareHolders": [
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                  ],
                  "transactionLimits": {
                    "maximumDailyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumMonthlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumWeeklyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumYearlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                  },
                },
                "userId": "userId",
              },
              "response": {
                "body": {
                  "acquisitionChannel": "ORGANIC",
                  "allowedPaymentMethods": [
                    "ACH",
                  ],
                  "createdTimestamp": 1.1,
                  "directors": [
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "pepStatus": [
                        {
                          "isPepHit": true,
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "executedRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "hitRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "FRAUD",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "kycStatusDetails": {
                    "reason": "reason",
                    "status": "SUCCESSFUL",
                  },
                  "legalEntity": {
                    "companyFinancialDetails": {
                      "expectedTransactionAmountPerMonth": {
                        "amountCurrency": "GBP",
                        "amountValue": 800,
                      },
                      "expectedTurnoverPerMonth": {
                        "amountCurrency": "USD",
                        "amountValue": 8000,
                      },
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    "companyGeneralDetails": {
                      "businessIndustry": [
                        "Farming",
                        "businessIndustry",
                      ],
                      "legalName": "Ozkan Hazelnut Export JSC",
                      "mainProductsServicesSold": [
                        "Hazelnut",
                        "mainProductsServicesSold",
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                      "userRegistrationStatus": "REGISTERED",
                      "userSegment": "SOLE_PROPRIETORSHIP",
                    },
                    "companyRegistrationDetails": {
                      "dateOfRegistration": "dateOfRegistration",
                      "legalEntityType": "legalEntityType",
                      "registrationCountry": "DE",
                      "registrationIdentifier": "PSJ554342",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                      "taxIdentifier": "taxIdentifier",
                    },
                    "contactDetails": {
                      "addresses": [
                        {
                          "addressLines": [
                            "Klara-Franke Str 20",
                          ],
                          "city": "Berlin",
                          "country": "Germany",
                          "postcode": "10557",
                          "state": "Berlin",
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "contactNumbers": [
                        "contactNumbers",
                      ],
                      "emailIds": [
                        "emailIds",
                      ],
                      "faxNumbers": [
                        "faxNumbers",
                      ],
                      "websites": [
                        "websites",
                      ],
                    },
                    "reasonForAccountOpening": [
                      "reasonForAccountOpening",
                    ],
                  },
                  "linkedEntities": {
                    "childUserIds": [
                      "childUserIds",
                    ],
                    "parentUserId": "parentUserId",
                  },
                  "mccDetails": {
                    "code": 1.1,
                    "description": "description",
                  },
                  "riskLevel": "VERY_HIGH",
                  "shareHolders": [
                    {
                      "contactDetails": {
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                          {
                            "addressLines": [
                              "Klara-Franke Str 20",
                            ],
                            "city": "Berlin",
                            "country": "Germany",
                            "postcode": "10557",
                            "state": "Berlin",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                              {
                                "key": "customKey",
                                "value": "customValue",
                              },
                            ],
                          },
                        ],
                        "contactNumbers": [
                          "+371 123132",
                          "contactNumbers",
                        ],
                        "emailIds": [
                          "baran@flagright.com",
                          "emailIds",
                        ],
                        "websites": [
                          "flagright.com",
                          "websites",
                        ],
                      },
                      "generalDetails": {
                        "countryOfNationality": "DE",
                        "countryOfResidence": "US",
                        "dateOfBirth": "1991-01-01",
                        "name": {
                          "firstName": "Baran",
                          "lastName": "Ozkan",
                          "middleName": "Realblood",
                        },
                      },
                      "legalDocuments": [
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                        {
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "documentIssuedDate": 1639939034000,
                          "documentNumber": "Z9431P",
                          "documentType": "passport",
                          "nameOnDocument": {
                            "firstName": "Baran",
                            "lastName": "Ozkan",
                            "middleName": "Realblood",
                          },
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet",
                            },
                            {
                              "key": "customKey",
                              "value": "customValue",
                            },
                          ],
                        },
                      ],
                      "pepStatus": [
                        {
                          "isPepHit": true,
                        },
                      ],
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                  ],
                  "transactionLimits": {
                    "maximumDailyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumMonthlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumWeeklyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumYearlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                  },
                  "userId": "userId",
                  "userStateDetails": {
                    "reason": "reason",
                    "state": "UNACCEPTABLE",
                    "userId": "userId",
                  },
                },
              },
            },
          ],
          "method": "POST",
          "path": "/events/business/user",
          "request": {
            "body": {
              "properties": {
                "eventDescription": {
                  "docs": "Event description",
                  "type": "optional<string>",
                },
                "eventId": {
                  "docs": "Unique event ID",
                  "type": "optional<string>",
                },
                "reason": {
                  "docs": "Reason for the event or a state change",
                  "type": "optional<string>",
                },
                "timestamp": {
                  "docs": "Timestamp of the event",
                  "type": "double",
                },
                "updatedBusinessUserAttributes": "optional<BusinessOptional>",
                "userId": {
                  "docs": "Transaction ID the event pertains to",
                  "type": "string",
                },
              },
            },
            "headers": undefined,
            "name": "BusinessUserEvent",
            "query-parameters": undefined,
          },
          "response": {
            "docs": "Created",
            "type": "BusinessWithRulesResult",
          },
        },
        "post-consumer-transaction": {
          "auth": true,
          "display-name": "Verify a Transaction",
          "docs": "## POST Transactions

\`/transactions\` endpoint allows you to operate on the [Transaction entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction)

In order to pass the payload of a transaction to Flagright and verify the transaciton, you will need to call this endpoint with the transaction payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup. 


### Payload

Here are some of the most used payload fields explained (you can find the full payload [schema below](https://docs.flagright.com/docs/flagright-api/87742ed31b30e-verify-a-transaction#request-body) with 1 line descriptions):

* \`type\`: Type of transaction (Ex: \`WITHDRAWAL\`, \`DEPOSIT\`, \`TRANSFER\` etc). 
* \`transactionId\` - Unique Identifier for the transaction. Flagright API will generate a \`transactionId\` if this field is left empty
* \`timestamp\` - UNIX timestamp in *milliseconds* of when the transaction took place
* \`transactionState\` - The state of the transaction, set to \`CREATED\` by default. [More details here](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships-in-the-api#transaction-lifecycle-through-transaction-events)
* \`originUserId\` - Unique identifier (if any) of the user who is sending the money. This user must be created within the Flagright system before using the [create a consumer user](https://docs.flagright.com/docs/flagright-api/18132cd454603-create-a-consumer-user) or [create a business user](https://docs.flagright.com/docs/flagright-api/f651463db29d8-create-a-business-user) endpoint
* \`destinationUserId\` - Unique identifier (if any) of the user who is receiving the money. This user must be created within the Flagright system before using the [create a consumer user](https://docs.flagright.com/docs/flagright-api/18132cd454603-create-a-consumer-user) or [create a business user](https://docs.flagright.com/docs/flagright-api/f651463db29d8-create-a-business-user) endpoint
* \`originAmountDetails\` - Details of the amount being sent from the origin
* \`destinationAmountDetails\` - Details of the amount being received at the destination
* \`originPaymentDetails\` - Payment details (if any) used at the origin (ex: \`CARD\`, \`IBAN\`, \`WALLET\` etc). You can click on the dropdown next to the field in the schema below to view all supported payment types.
* \`destinationPaymentDetails\` - Payment details (if any) used at the destination (ex: \`CARD\`, \`IBAN\`, \`WALLET\` etc). You can click on the dropdown next to the field in the schema below to view all supported payment types.",
          "errors": [
            "BadRequestError",
            "UnauthorizedError",
            "TooManyRequestsError",
          ],
          "examples": [
            {
              "name": "example-1",
              "request": {
                "destinationAmountDetails": {
                  "country": "IN",
                  "transactionAmount": 68351.34,
                  "transactionCurrency": "INR",
                },
                "destinationUserId": "9350a2611e0771cba03310f74bf6",
                "deviceData": {
                  "appVersion": "1.1.0",
                  "batteryLevel": 95,
                  "deviceIdentifier": "3c49f915d04485e34caba",
                  "deviceLatitude": 13.0033,
                  "deviceLongitude": 76.1004,
                  "deviceMaker": "ASUS",
                  "deviceModel": "Zenphone M2 Pro Max",
                  "deviceYear": "2018",
                  "ipAddress": "10.23.191.2",
                  "operatingSystem": "Android 11.2",
                  "vpnUsed": false,
                },
                "originAmountDetails": {
                  "country": "DE",
                  "transactionAmount": 800,
                  "transactionCurrency": "EUR",
                },
                "originUserId": "8650a2611d0771cba03310f74bf6",
                "promotionCodeUsed": true,
                "reference": "loan repayment",
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue",
                  },
                  {
                    "key": "customKey",
                    "value": "customValue",
                  },
                ],
                "timestamp": 1641654664000,
                "transactionId": "7b80a539eea6e78acbd6d458e5971482",
              },
              "response": {
                "body": {
                  "executedRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "hitRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "FRAUD",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "message": "message",
                  "transactionId": "7b80a539eea6e78acbd6d458e5971482",
                },
              },
            },
          ],
          "method": "POST",
          "path": "/transactions",
          "request": {
            "body": "Transaction",
            "name": "PostConsumerTransactionRequest",
            "query-parameters": {
              "validateDestinationUserId": {
                "docs": "Boolean string whether Flagright should validate if provided destinationUserId exist. True by default",
                "type": "optional<string>",
              },
              "validateOriginUserId": {
                "docs": "Boolean string whether Flagright should validate if provided originUserId exist. True by default",
                "type": "optional<string>",
              },
            },
          },
          "response": {
            "docs": "Created",
            "type": "PostConsumerTransactionResponse",
          },
        },
        "post-consumer-user": {
          "auth": true,
          "display-name": "Create a Consumer User",
          "docs": "## POST Consumer User

\`/consumer/user\` endpoint allows you to operate on the [Consumer user entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user)

In order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.

### Payload

Each consumer User entity needs three mandatory fields:

* \`userId\` - Unique identifier for the user
* \`createdTimestamp\` - UNIX timestamp in *milliseconds* for when the User is created in your system
",
          "errors": [
            "BadRequestError",
            "UnauthorizedError",
            "TooManyRequestsError",
          ],
          "examples": [
            {
              "name": "example-1",
              "request": {
                "contactDetails": {
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20",
                      ],
                      "city": "Berlin",
                      "country": "Germany",
                      "postcode": "10557",
                      "state": "Berlin",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    {
                      "addressLines": [
                        "Klara-Franke Str 20",
                      ],
                      "city": "Berlin",
                      "country": "Germany",
                      "postcode": "10557",
                      "state": "Berlin",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "contactNumbers": [
                    "+37112345432",
                    "contactNumbers",
                  ],
                  "emailIds": [
                    "baran@flagright.com",
                    "emailIds",
                  ],
                  "websites": [
                    "flagright.com",
                    "websites",
                  ],
                },
                "createdTimestamp": 1641654664000,
                "legalDocuments": [
                  {
                    "documentExpirationDate": 1839939034000,
                    "documentIssuedCountry": "DE",
                    "documentIssuedDate": 1639939034000,
                    "documentNumber": "Z9431P",
                    "documentType": "passport",
                    "nameOnDocument": {
                      "firstName": "Baran",
                      "lastName": "Ozkan",
                      "middleName": "Realblood",
                    },
                    "tags": [
                      {
                        "key": "customerType",
                        "value": "wallet",
                      },
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                    ],
                  },
                  {
                    "documentExpirationDate": 1839939034000,
                    "documentIssuedCountry": "DE",
                    "documentIssuedDate": 1639939034000,
                    "documentNumber": "Z9431P",
                    "documentType": "passport",
                    "nameOnDocument": {
                      "firstName": "Baran",
                      "lastName": "Ozkan",
                      "middleName": "Realblood",
                    },
                    "tags": [
                      {
                        "key": "customerType",
                        "value": "wallet",
                      },
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                    ],
                  },
                ],
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue",
                  },
                  {
                    "key": "customKey",
                    "value": "customValue",
                  },
                ],
                "transactionLimits": {
                  "maximumDailyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumMonthlyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumQuarterlyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumWeeklyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                  "maximumYearlyTransactionLimit": {
                    "amountCurrency": "GBP",
                    "amountValue": 800,
                  },
                },
                "userDetails": {
                  "countryOfNationality": "DE",
                  "countryOfResidence": "US",
                  "dateOfBirth": "1991-01-01",
                  "name": {
                    "firstName": "Baran",
                    "lastName": "Ozkan",
                    "middleName": "Realblood",
                  },
                },
                "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
              },
              "response": {
                "body": {
                  "executedRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "hitRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "FRAUD",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "message": "message",
                  "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
                },
              },
            },
          ],
          "method": "POST",
          "path": "/consumer/users",
          "request": {
            "body": "User",
          },
          "response": {
            "docs": "Created",
            "type": "PostConsumerUserResponse",
          },
        },
        "post-transaction-event": {
          "auth": true,
          "display-name": "Create a Transaction Event",
          "docs": "## POST Transaction Events

\`/events/transaction\` endpoint allows you to operate on the [Transaction Events entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction-event)

Transaction events are created after the initial \`POST /transactions\` call (which creates a transaction) and are used to:

* Update the STATE of the transaction, using the \`transactionState\` field and manage the [Transaction Lifecycle](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction-lifecycle-through-transaction-events)
* Update the transaction details, using the \`updatedTransactionAttributes\` field.

> If you have neither of the above two use cases, you do not need to use transaction events. 

### Payload

Each transaction event needs three mandatory fields:

* \`transactionState\` - STATE of the transaction -> value is set to \`CREATED\` after \`POST /transactions\` call
* \`timestamp\`- the timestamp of when the event was created or occured in your system
* \`transactionId\` - The ID of the transaction for which this event is generated. 

In order to make individual events retrievable, you also need to pass in a unique \`eventId\` to the request body.
",
          "errors": [
            "BadRequestError",
            "UnauthorizedError",
            "TooManyRequestsError",
          ],
          "examples": [
            {
              "name": "example-2",
              "request": {
                "eventDescription": "Transaction created",
                "eventId": "aaeeb166147a406b957dd9147a406b957",
                "metaData": {
                  "batteryLevel": 76.3,
                  "deviceLatitude": 13.009711,
                  "deviceLongitude": 76.102898,
                  "ipAddress": "79.144.2.20",
                  "vpnUsed": true,
                },
                "timestamp": 1431231244001,
                "transactionId": "443dea26147a406b957d9ee3a1247b11",
                "transactionState": "SUCCESSFUL",
                "updatedTransactionAttributes": {
                  "destinationAmountDetails": {
                    "country": "IN",
                    "transactionAmount": 68351.34,
                    "transactionCurrency": "INR",
                  },
                  "deviceData": {
                    "appVersion": "1.1.0",
                    "batteryLevel": 95,
                    "deviceIdentifier": "3c49f915d04485e34caba",
                    "deviceLatitude": 13.0033,
                    "deviceLongitude": 76.1004,
                    "deviceMaker": "ASUS",
                    "deviceModel": "Zenphone M2 Pro Max",
                    "deviceYear": "2018",
                    "ipAddress": "10.23.191.2",
                    "operatingSystem": "Android 11.2",
                    "vpnUsed": false,
                  },
                  "originAmountDetails": {
                    "country": "DE",
                    "transactionAmount": 800,
                    "transactionCurrency": "EUR",
                  },
                  "promotionCodeUsed": true,
                  "reference": "loan repayment",
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                  ],
                },
              },
              "response": {
                "body": {
                  "eventId": "7b80a539eea6e78acbd6d458e5971482",
                  "executedRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "hitRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "FRAUD",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "transaction": {
                    "destinationAmountDetails": {
                      "country": "IN",
                      "transactionAmount": 68351.34,
                      "transactionCurrency": "INR",
                    },
                    "destinationUserId": "9350a2611e0771cba03310f74bf6",
                    "deviceData": {
                      "appVersion": "1.1.0",
                      "batteryLevel": 95,
                      "deviceIdentifier": "3c49f915d04485e34caba",
                      "deviceLatitude": 13.0033,
                      "deviceLongitude": 76.1004,
                      "deviceMaker": "ASUS",
                      "deviceModel": "Zenphone M2 Pro Max",
                      "deviceYear": "2018",
                      "ipAddress": "10.23.191.2",
                      "operatingSystem": "Android 11.2",
                      "vpnUsed": false,
                    },
                    "originAmountDetails": {
                      "country": "DE",
                      "transactionAmount": 800,
                      "transactionCurrency": "EUR",
                    },
                    "originUserId": "8650a2611d0771cba03310f74bf6",
                    "productType": "productType",
                    "promotionCodeUsed": true,
                    "reference": "loan repayment",
                    "relatedTransactionIds": [
                      "relatedTransactionIds",
                    ],
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                      {
                        "key": "customKey",
                        "value": "customValue",
                      },
                    ],
                    "timestamp": 1641654664000,
                    "transactionId": "7b80a539eea6e78acbd6d458e5971482",
                    "transactionState": "CREATED",
                    "type": "DEPOSIT",
                  },
                },
              },
            },
          ],
          "method": "POST",
          "path": "/events/transaction",
          "request": {
            "body": {
              "properties": {
                "eventDescription": {
                  "docs": "Event description",
                  "type": "optional<string>",
                },
                "eventId": {
                  "docs": "Unique event ID",
                  "type": "optional<string>",
                },
                "metaData": "optional<DeviceData>",
                "reason": {
                  "docs": "Reason for the event or a state change",
                  "type": "optional<string>",
                },
                "timestamp": {
                  "docs": "Timestamp of the event",
                  "type": "double",
                },
                "transactionId": {
                  "docs": "Transaction ID the event pertains to",
                  "type": "string",
                },
                "transactionState": "TransactionState",
                "updatedTransactionAttributes": "optional<TransactionUpdatable>",
              },
            },
            "headers": undefined,
            "name": "TransactionEvent",
            "query-parameters": undefined,
          },
          "response": {
            "docs": "Created",
            "type": "TransactionEventMonitoringResult",
          },
        },
        "post-user-event": {
          "auth": true,
          "display-name": "Create a Consumer User Event",
          "docs": "## POST Consumer User Events

\`/events/consumer/user\` endpoint allows you to operate on the Consumer User Events entity.

User events are created after the initial \`POST /consumer/users\` call (which creates a user) and are used to:

* Update the STATE and KYC Status of the user, using the \`userStateDetails\` or \`kycStatusDetails\` field
* Update the user details, using the \`updatedConsumerUserAttributes\` field.

> If you have neither of the above two use cases, you do not need to use user events. 

### Payload

Each user event needs three mandatory fields:

* \`timestamp\`- the timestamp of when the event was created or occured in your system
* \`userId\` - The ID of the transaction for which this event is generated. 

In order to make individual events retrievable, you also need to pass in a unique \`eventId\` to the request body.
",
          "errors": [
            "BadRequestError",
            "UnauthorizedError",
            "TooManyRequestsError",
          ],
          "examples": [
            {
              "request": {
                "timestamp": 1.1,
                "updatedConsumerUserAttributes": {
                  "contactDetails": {
                    "addresses": [
                      {
                        "addressLines": [
                          "Klara-Franke Str 20",
                        ],
                        "city": "Berlin",
                        "country": "Germany",
                        "postcode": "10557",
                        "state": "Berlin",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                        ],
                      },
                      {
                        "addressLines": [
                          "Klara-Franke Str 20",
                        ],
                        "city": "Berlin",
                        "country": "Germany",
                        "postcode": "10557",
                        "state": "Berlin",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                        ],
                      },
                    ],
                    "contactNumbers": [
                      "+37112345432",
                      "contactNumbers",
                    ],
                    "emailIds": [
                      "baran@flagright.com",
                      "emailIds",
                    ],
                    "websites": [
                      "flagright.com",
                      "websites",
                    ],
                  },
                  "legalDocuments": [
                    {
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "documentIssuedDate": 1639939034000,
                      "documentNumber": "Z9431P",
                      "documentType": "passport",
                      "nameOnDocument": {
                        "firstName": "Baran",
                        "lastName": "Ozkan",
                        "middleName": "Realblood",
                      },
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                    {
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "documentIssuedDate": 1639939034000,
                      "documentNumber": "Z9431P",
                      "documentType": "passport",
                      "nameOnDocument": {
                        "firstName": "Baran",
                        "lastName": "Ozkan",
                        "middleName": "Realblood",
                      },
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                  ],
                  "transactionLimits": {
                    "maximumDailyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumMonthlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumWeeklyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumYearlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                  },
                },
                "userId": "userId",
              },
              "response": {
                "body": {
                  "acquisitionChannel": "ORGANIC",
                  "contactDetails": {
                    "addresses": [
                      {
                        "addressLines": [
                          "Klara-Franke Str 20",
                        ],
                        "city": "Berlin",
                        "country": "Germany",
                        "postcode": "10557",
                        "state": "Berlin",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                          {
                            "key": "customKey",
                            "value": "customValue",
                          },
                        ],
                      },
                    ],
                    "contactNumbers": [
                      "contactNumbers",
                    ],
                    "emailIds": [
                      "emailIds",
                    ],
                    "faxNumbers": [
                      "faxNumbers",
                    ],
                    "websites": [
                      "websites",
                    ],
                  },
                  "createdTimestamp": 1.1,
                  "executedRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "AML",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleHit": true,
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "hitRules": [
                    {
                      "labels": [
                        "UNEXPECTED_BEHAVIOR",
                      ],
                      "nature": "FRAUD",
                      "ruleAction": "BLOCK",
                      "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                      "ruleId": "R-1a",
                      "ruleInstanceId": "ruleInstanceId",
                      "ruleName": "Proof of funds for high value transactions",
                    },
                  ],
                  "kycStatusDetails": {
                    "reason": "reason",
                    "status": "SUCCESSFUL",
                  },
                  "legalDocuments": [
                    {
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "documentIssuedDate": 1639939034000,
                      "documentNumber": "Z9431P",
                      "documentType": "passport",
                      "nameOnDocument": {
                        "firstName": "Baran",
                        "lastName": "Ozkan",
                        "middleName": "Realblood",
                      },
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet",
                        },
                        {
                          "key": "customKey",
                          "value": "customValue",
                        },
                      ],
                    },
                  ],
                  "pepStatus": [
                    {
                      "isPepHit": true,
                      "pepCountry": "pepCountry",
                    },
                  ],
                  "reasonForAccountOpening": [
                    "reasonForAccountOpening",
                  ],
                  "riskLevel": "VERY_HIGH",
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue",
                    },
                  ],
                  "transactionLimits": {
                    "maximumDailyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumMonthlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumQuarterlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumWeeklyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                    "maximumYearlyTransactionLimit": {
                      "amountCurrency": "GBP",
                      "amountValue": 800,
                    },
                  },
                  "userDetails": {
                    "countryOfNationality": "DE",
                    "countryOfResidence": "US",
                    "dateOfBirth": "1991-01-01",
                    "gender": "M",
                    "name": {
                      "firstName": "Baran",
                      "lastName": "Ozkan",
                      "middleName": "Realblood",
                    },
                  },
                  "userId": "userId",
                  "userSegment": "RETAIL",
                  "userStateDetails": {
                    "reason": "reason",
                    "state": "UNACCEPTABLE",
                    "userId": "userId",
                  },
                },
              },
            },
          ],
          "method": "POST",
          "path": "/events/consumer/user",
          "request": {
            "body": {
              "properties": {
                "eventDescription": {
                  "docs": "Event description",
                  "type": "optional<string>",
                },
                "eventId": {
                  "docs": "Unique event ID",
                  "type": "optional<string>",
                },
                "reason": {
                  "docs": "Reason for the event or a state change",
                  "type": "optional<string>",
                },
                "timestamp": {
                  "docs": "Timestamp of the event",
                  "type": "double",
                },
                "updatedConsumerUserAttributes": "optional<UserOptional>",
                "userId": {
                  "docs": "Transaction ID the event pertains to",
                  "type": "string",
                },
              },
            },
            "headers": undefined,
            "name": "ConsumerUserEvent",
            "query-parameters": undefined,
          },
          "response": {
            "docs": "Created",
            "type": "UserWithRulesResult",
          },
        },
      },
    },
    "types": {
      "ACHDetails": {
        "docs": "Model for ACH payment method",
        "properties": {
          "accountNumber": {
            "docs": "Bank account number of the individual",
            "type": "optional<string>",
          },
          "bankAddress": "optional<Address>",
          "bankName": {
            "docs": "Name of the bank",
            "type": "optional<string>",
          },
          "beneficiaryName": {
            "docs": "Beneficiary name of the account",
            "type": "optional<string>",
          },
          "name": {
            "docs": "Name of the account holder",
            "type": "optional<string>",
          },
          "routingNumber": {
            "docs": "Routing number of the bank",
            "type": "optional<string>",
          },
        },
      },
      "ACHPaymentMethod": "literal<"ACH">",
      "AcquisitionChannel": {
        "docs": "Model for User acquisition channel",
        "enum": [
          {
            "value": "ORGANIC",
          },
          {
            "value": "PAID",
          },
          {
            "value": "REFERRAL",
          },
          {
            "value": "OFFLINE",
          },
          {
            "value": "GATHERING",
          },
          {
            "value": "UNKNOWN",
          },
        ],
      },
      "Address": {
        "docs": "Model for standardized address",
        "properties": {
          "addressLines": {
            "docs": "Address lines of the user's residence address",
            "type": "list<unknown>",
          },
          "city": {
            "docs": "City of the user's residence address",
            "type": "string",
          },
          "country": {
            "docs": "User's country of residence",
            "type": "string",
          },
          "postcode": {
            "docs": "Post code of the user's residence address",
            "type": "string",
          },
          "state": {
            "docs": "State of the user's residence address",
            "type": "optional<string>",
          },
          "tags": {
            "docs": "Additional information that can be added via tags",
            "type": "optional<list<Tag>>",
          },
        },
      },
      "AlertClosedDetails": {
        "docs": undefined,
        "properties": {
          "alertId": "optional<string>",
          "comment": "optional<string>",
          "reasonDescriptionForOther": "optional<list<string>>",
          "reasons": "optional<list<string>>",
          "ruleDescription": "optional<string>",
          "ruleId": "optional<string>",
          "ruleInstanceId": "optional<string>",
          "ruleName": "optional<string>",
          "status": "optional<string>",
          "transactionIds": "optional<list<string>>",
          "userId": "optional<string>",
        },
      },
      "Amount": {
        "docs": "Model for amount",
        "properties": {
          "amountCurrency": "CurrencyCode",
          "amountValue": {
            "docs": "Numerical value of the transaction",
            "type": "double",
          },
        },
      },
      "Business": {
        "docs": undefined,
        "extends": [
          "BusinessBase",
          "BusinessOptional",
        ],
        "properties": {},
      },
      "BusinessBase": {
        "docs": "Model for a business user base fields",
        "properties": {
          "createdTimestamp": {
            "docs": "Timestamp when the user was created",
            "type": "double",
          },
          "userId": {
            "docs": "Unique user ID for the user",
            "type": "string",
          },
        },
      },
      "BusinessEntityLink": {
        "docs": undefined,
        "properties": {
          "childUserIds": "optional<list<string>>",
          "parentUserId": "optional<string>",
        },
      },
      "BusinessOptional": {
        "docs": "Model for a business user - optional fields",
        "properties": {
          "acquisitionChannel": "optional<AcquisitionChannel>",
          "allowedPaymentMethods": "optional<list<PaymentMethod>>",
          "directors": {
            "docs": "Director(s) of the company. Must be at least one",
            "type": "optional<list<Person>>",
          },
          "kycStatusDetails": "optional<KYCStatusDetails>",
          "legalEntity": "optional<LegalEntity>",
          "linkedEntities": "optional<BusinessEntityLink>",
          "mccDetails": "optional<MCCDetails>",
          "riskLevel": "optional<RiskLevel>",
          "savedPaymentDetails": "optional<list<BusinessOptionalSavedPaymentDetailsItem>>",
          "shareHolders": {
            "docs": "Shareholders (beneficiaries) of the company that hold at least 25% ownership. Can be another company or an individual",
            "type": "optional<list<Person>>",
          },
          "tags": {
            "docs": "Additional information that can be added via tags",
            "type": "optional<list<Tag>>",
          },
          "transactionLimits": "optional<TransactionLimits>",
          "userStateDetails": "optional<UserStateDetails>",
        },
      },
      "BusinessOptionalSavedPaymentDetailsItem": {
        "base-properties": {},
        "discriminant": "method",
        "docs": undefined,
        "union": {
          "ACH": "ACHDetails",
          "CARD": "CardDetails",
          "CHECK": "CheckDetails",
          "GENERIC_BANK_ACCOUNT": "GenericBankAccountDetails",
          "IBAN": "IBANDetails",
          "MPESA": "MpesaDetails",
          "SWIFT": "SWIFTDetails",
          "UPI": "UPIDetails",
          "WALLET": "WalletDetails",
        },
      },
      "BusinessUsersResponse": {
        "docs": "Model for business user risk score response",
        "properties": {
          "userId": {
            "docs": "user ID the risk score pertains to",
            "type": "string",
          },
        },
      },
      "BusinessWithRulesResult": {
        "docs": "Model for business payload with rules result",
        "extends": [
          "Business",
        ],
        "properties": {
          "executedRules": "optional<list<ExecutedRulesResult>>",
          "hitRules": "optional<list<HitRulesDetails>>",
        },
      },
      "CardDetails": {
        "docs": "Model for credit or debit card details",
        "properties": {
          "3dsDone": {
            "docs": "Whether 3ds was successfully enforced for the transaction",
            "name": "_3dsDone",
            "type": "optional<boolean>",
          },
          "cardAuthenticated": {
            "docs": "Authentication of Card",
            "type": "optional<boolean>",
          },
          "cardBrand": {
            "docs": "Brand of Card",
            "type": "optional<CardDetailsCardBrand>",
          },
          "cardExpiry": "optional<CardExpiry>",
          "cardFingerprint": {
            "docs": "Unique card fingerprint that helps identify a specific card without having to use explicit card number. This is likely available at your card payment scheme provider",
            "type": "optional<string>",
          },
          "cardFunding": {
            "docs": "Funding of Card",
            "type": "optional<CardDetailsCardFunding>",
          },
          "cardIssuedCountry": "optional<CountryCode>",
          "cardLast4Digits": {
            "docs": "Last 4 digits of Card",
            "type": "optional<string>",
          },
          "cardType": "optional<CardDetailsCardType>",
          "merchantDetails": "optional<CardMerchantDetails>",
          "nameOnCard": "optional<ConsumerName>",
          "paymentChannel": "optional<string>",
          "transactionReferenceField": {
            "docs": "Reference for the transaction",
            "type": "optional<string>",
          },
        },
      },
      "CardDetailsCardBrand": {
        "docs": "Brand of Card",
        "enum": [
          {
            "value": "VISA",
          },
          {
            "value": "MASTERCARD",
          },
          {
            "value": "AMERICAN_EXPRESS",
          },
          {
            "value": "DISCOVER",
          },
          {
            "value": "UNIONPAY",
          },
          {
            "value": "RUPAY",
          },
          {
            "value": "JCB",
          },
        ],
      },
      "CardDetailsCardFunding": {
        "docs": "Funding of Card",
        "enum": [
          {
            "value": "CREDIT",
          },
          {
            "value": "DEBIT",
          },
          {
            "value": "PREPAID",
          },
        ],
      },
      "CardDetailsCardType": {
        "enum": [
          {
            "value": "VIRTUAL",
          },
          {
            "value": "PHYSICAL",
          },
        ],
      },
      "CardExpiry": {
        "docs": undefined,
        "properties": {
          "month": "optional<double>",
          "year": "optional<double>",
        },
      },
      "CardMerchantDetails": {
        "docs": undefined,
        "properties": {
          "MCC": "optional<string>",
          "category": "optional<string>",
          "city": "optional<string>",
          "country": "optional<string>",
          "id": "optional<string>",
          "postCode": "optional<string>",
          "state": "optional<string>",
        },
      },
      "CardPaymentMethod": "literal<"CARD">",
      "CaseClosedDetails": {
        "docs": undefined,
        "properties": {
          "caseId": "optional<string>",
          "comment": "optional<string>",
          "reasonDescriptionForOther": "optional<list<string>>",
          "reasons": "optional<list<string>>",
          "status": "optional<string>",
          "transactionIds": "optional<list<string>>",
          "userId": "optional<string>",
        },
      },
      "CaseManagementEvent": {
        "docs": "Model for case management events",
        "properties": {
          "caseStatus": {
            "docs": "Status of a case. E.g. Open, Closed etc.",
            "type": "CaseManagementEventCaseStatus",
          },
          "caseStatusReason": {
            "docs": "Case status reason. E.g. Closed & False Positive, Closed & Investigation Completed etc.",
            "type": "CaseManagementEventCaseStatusReason",
          },
          "caseStatusReasonDescription": {
            "docs": "Case status reason description",
            "type": "optional<string>",
          },
          "eventId": {
            "docs": "Event ID the case pertains to",
            "type": "optional<string>",
          },
          "timestamp": {
            "docs": "Timestamp of the event",
            "type": "double",
          },
          "transactionId": {
            "docs": "Transaction ID the case pertains to",
            "type": "optional<string>",
          },
          "userId": {
            "docs": "User ID the case pertains to",
            "type": "optional<string>",
          },
        },
      },
      "CaseManagementEventCaseStatus": {
        "docs": "Status of a case. E.g. Open, Closed etc.",
        "enum": [
          {
            "value": "CLOSED",
          },
          {
            "value": "HIT",
          },
        ],
      },
      "CaseManagementEventCaseStatusReason": {
        "docs": "Case status reason. E.g. Closed & False Positive, Closed & Investigation Completed etc.",
        "enum": [
          {
            "value": "FALSE_POSITIVE",
          },
          {
            "value": "INVESTIGATION_COMPLETED",
          },
          {
            "value": "DOCUMENTS_COLLECTED",
          },
          {
            "value": "OTHER",
          },
        ],
      },
      "CheckDetails": {
        "docs": undefined,
        "properties": {
          "checkIdentifier": "optional<string>",
          "checkNumber": "optional<string>",
          "deliveryStatus": "optional<CheckDetailsDeliveryStatus>",
          "etaTimestamp": "optional<double>",
          "name": "optional<string>",
          "shippingAddress": "optional<Address>",
        },
      },
      "CheckDetailsDeliveryStatus": {
        "enum": [
          {
            "value": "COMPLETED",
          },
          {
            "value": "PENDING",
          },
          {
            "value": "SETTLED",
          },
          {
            "value": "CANCELED",
          },
          {
            "value": "REFUND",
          },
          {
            "value": "DECLINED",
          },
        ],
      },
      "CheckPaymentMethod": "literal<"CHECK">",
      "CompanyFinancialDetails": {
        "docs": "Model for business user company financial details",
        "properties": {
          "expectedTransactionAmountPerMonth": "optional<Amount>",
          "expectedTurnoverPerMonth": "optional<Amount>",
          "tags": {
            "docs": "Additional information that can be added via tags",
            "type": "optional<list<Tag>>",
          },
        },
      },
      "CompanyGeneralDetails": {
        "docs": "Model for business user company general details",
        "properties": {
          "businessIndustry": {
            "docs": "The industry the business operates in for a business customer",
            "type": "optional<list<string>>",
          },
          "legalName": {
            "docs": "Legal name of the company",
            "type": "string",
          },
          "mainProductsServicesSold": {
            "docs": "The key products and services provided by the company",
            "type": "optional<list<string>>",
          },
          "tags": {
            "docs": "Additional information that can be added via tags",
            "type": "optional<list<Tag>>",
          },
          "userRegistrationStatus": "optional<UserRegistrationStatus>",
          "userSegment": {
            "docs": "Segmentation of the business user",
            "type": "optional<CompanyGeneralDetailsUserSegment>",
          },
        },
      },
      "CompanyGeneralDetailsUserSegment": {
        "docs": "Segmentation of the business user",
        "enum": [
          {
            "value": "SOLE_PROPRIETORSHIP",
          },
          {
            "value": "SMB",
          },
          {
            "value": "SMALL",
          },
          {
            "value": "MEDIUM",
          },
          {
            "value": "LARGE",
          },
          {
            "value": "UNKNOWN",
          },
        ],
      },
      "CompanyRegistrationDetails": {
        "docs": "Model for business user company registration details",
        "properties": {
          "dateOfRegistration": "optional<string>",
          "legalEntityType": {
            "docs": "Type of legal entity. Ex: Limited Liability",
            "type": "optional<string>",
          },
          "registrationCountry": "CountryCode",
          "registrationIdentifier": {
            "docs": "Commercial registry registration number for the company in its registration country",
            "type": "string",
          },
          "tags": {
            "docs": "Additional information that can be added via tags",
            "type": "optional<list<Tag>>",
          },
          "taxIdentifier": {
            "docs": "Tax ID number of the registered entity",
            "type": "optional<string>",
          },
        },
      },
      "ConsumerName": {
        "docs": "Model for a generic consumer name",
        "properties": {
          "firstName": {
            "docs": "First name of the user",
            "type": "string",
          },
          "lastName": {
            "docs": "Last name of the user",
            "type": "optional<string>",
          },
          "middleName": {
            "docs": "Middle name of the user",
            "type": "optional<string>",
          },
        },
      },
      "ConsumerUsersResponse": {
        "docs": "Model for consumer user risk score response",
        "properties": {
          "userId": {
            "docs": "user ID the risk score pertains to",
            "type": "string",
          },
        },
      },
      "ContactDetails": {
        "docs": "Model for business user contact information details",
        "properties": {
          "addresses": {
            "docs": "Address(es) of the company",
            "type": "optional<list<Address>>",
          },
          "contactNumbers": {
            "docs": "Phone numbers to contact a given business customer",
            "type": "optional<list<string>>",
          },
          "emailIds": {
            "docs": "Email addresses of the contacts for a given business customer",
            "type": "optional<list<string>>",
          },
          "faxNumbers": {
            "docs": "Fax numbers to contact a business customer",
            "type": "optional<list<string>>",
          },
          "websites": {
            "docs": "Website of the company",
            "type": "optional<list<string>>",
          },
        },
      },
      "CountryCode": {
        "enum": [
          {
            "value": "AF",
          },
          {
            "value": "AL",
          },
          {
            "value": "DZ",
          },
          {
            "value": "AS",
          },
          {
            "value": "AD",
          },
          {
            "value": "AO",
          },
          {
            "value": "AI",
          },
          {
            "value": "AQ",
          },
          {
            "value": "AG",
          },
          {
            "value": "AR",
          },
          {
            "value": "AM",
          },
          {
            "value": "AW",
          },
          {
            "value": "AU",
          },
          {
            "value": "AT",
          },
          {
            "value": "AZ",
          },
          {
            "value": "BS",
          },
          {
            "value": "BH",
          },
          {
            "value": "BD",
          },
          {
            "value": "BB",
          },
          {
            "value": "BY",
          },
          {
            "value": "BE",
          },
          {
            "value": "BZ",
          },
          {
            "value": "BJ",
          },
          {
            "value": "BM",
          },
          {
            "value": "BT",
          },
          {
            "value": "BO",
          },
          {
            "value": "BQ",
          },
          {
            "value": "BA",
          },
          {
            "value": "BW",
          },
          {
            "value": "BV",
          },
          {
            "value": "BR",
          },
          {
            "value": "IO",
          },
          {
            "value": "BN",
          },
          {
            "value": "BG",
          },
          {
            "value": "BF",
          },
          {
            "value": "BI",
          },
          {
            "value": "CV",
          },
          {
            "value": "KH",
          },
          {
            "value": "CM",
          },
          {
            "value": "CA",
          },
          {
            "value": "KY",
          },
          {
            "value": "CF",
          },
          {
            "value": "TD",
          },
          {
            "value": "CL",
          },
          {
            "value": "CN",
          },
          {
            "value": "CX",
          },
          {
            "value": "CC",
          },
          {
            "value": "CO",
          },
          {
            "value": "KM",
          },
          {
            "value": "CD",
          },
          {
            "value": "CG",
          },
          {
            "value": "CK",
          },
          {
            "value": "CR",
          },
          {
            "value": "HR",
          },
          {
            "value": "CU",
          },
          {
            "value": "CW",
          },
          {
            "value": "CY",
          },
          {
            "value": "CZ",
          },
          {
            "value": "CI",
          },
          {
            "value": "DK",
          },
          {
            "value": "DJ",
          },
          {
            "value": "DM",
          },
          {
            "value": "DO",
          },
          {
            "value": "EC",
          },
          {
            "value": "EG",
          },
          {
            "value": "SV",
          },
          {
            "value": "GQ",
          },
          {
            "value": "ER",
          },
          {
            "value": "EE",
          },
          {
            "value": "SZ",
          },
          {
            "value": "ET",
          },
          {
            "value": "FK",
          },
          {
            "value": "FO",
          },
          {
            "value": "FJ",
          },
          {
            "value": "FI",
          },
          {
            "value": "FR",
          },
          {
            "value": "GF",
          },
          {
            "value": "PF",
          },
          {
            "value": "TF",
          },
          {
            "value": "GA",
          },
          {
            "value": "GM",
          },
          {
            "value": "GE",
          },
          {
            "value": "DE",
          },
          {
            "value": "GH",
          },
          {
            "value": "GI",
          },
          {
            "value": "GR",
          },
          {
            "value": "GL",
          },
          {
            "value": "GD",
          },
          {
            "value": "GP",
          },
          {
            "value": "GU",
          },
          {
            "value": "GT",
          },
          {
            "value": "GG",
          },
          {
            "value": "GN",
          },
          {
            "value": "GW",
          },
          {
            "value": "GY",
          },
          {
            "value": "HT",
          },
          {
            "value": "HM",
          },
          {
            "value": "VA",
          },
          {
            "value": "HN",
          },
          {
            "value": "HK",
          },
          {
            "value": "HU",
          },
          {
            "value": "IS",
          },
          {
            "value": "IN",
          },
          {
            "value": "ID",
          },
          {
            "value": "IR",
          },
          {
            "value": "IQ",
          },
          {
            "value": "IE",
          },
          {
            "value": "IM",
          },
          {
            "value": "IL",
          },
          {
            "value": "IT",
          },
          {
            "value": "JM",
          },
          {
            "value": "JP",
          },
          {
            "value": "JE",
          },
          {
            "value": "JO",
          },
          {
            "value": "KZ",
          },
          {
            "value": "KE",
          },
          {
            "value": "KI",
          },
          {
            "value": "KP",
          },
          {
            "value": "KR",
          },
          {
            "value": "KW",
          },
          {
            "value": "KG",
          },
          {
            "value": "LA",
          },
          {
            "value": "LV",
          },
          {
            "value": "LB",
          },
          {
            "value": "LS",
          },
          {
            "value": "LR",
          },
          {
            "value": "LY",
          },
          {
            "value": "LI",
          },
          {
            "value": "LT",
          },
          {
            "value": "LU",
          },
          {
            "value": "MO",
          },
          {
            "value": "MG",
          },
          {
            "value": "MW",
          },
          {
            "value": "MY",
          },
          {
            "value": "MV",
          },
          {
            "value": "ML",
          },
          {
            "value": "MT",
          },
          {
            "value": "MH",
          },
          {
            "value": "MQ",
          },
          {
            "value": "MR",
          },
          {
            "value": "MU",
          },
          {
            "value": "YT",
          },
          {
            "value": "MX",
          },
          {
            "value": "FM",
          },
          {
            "value": "MD",
          },
          {
            "value": "MC",
          },
          {
            "value": "MN",
          },
          {
            "value": "ME",
          },
          {
            "value": "MS",
          },
          {
            "value": "MA",
          },
          {
            "value": "MZ",
          },
          {
            "value": "MM",
          },
          {
            "value": "NA",
          },
          {
            "value": "NR",
          },
          {
            "value": "NP",
          },
          {
            "value": "NL",
          },
          {
            "value": "NC",
          },
          {
            "value": "NZ",
          },
          {
            "value": "NI",
          },
          {
            "value": "NE",
          },
          {
            "value": "NG",
          },
          {
            "value": "NU",
          },
          {
            "value": "NF",
          },
          {
            "value": "MK",
          },
          {
            "value": "MP",
          },
          {
            "value": "NO",
          },
          {
            "value": "OM",
          },
          {
            "value": "PK",
          },
          {
            "value": "PW",
          },
          {
            "value": "PS",
          },
          {
            "value": "PA",
          },
          {
            "value": "PG",
          },
          {
            "value": "PY",
          },
          {
            "value": "PE",
          },
          {
            "value": "PH",
          },
          {
            "value": "PN",
          },
          {
            "value": "PL",
          },
          {
            "value": "PT",
          },
          {
            "value": "PR",
          },
          {
            "value": "QA",
          },
          {
            "value": "RO",
          },
          {
            "value": "RU",
          },
          {
            "value": "RW",
          },
          {
            "value": "RE",
          },
          {
            "value": "BL",
          },
          {
            "value": "SH",
          },
          {
            "value": "KN",
          },
          {
            "value": "LC",
          },
          {
            "value": "MF",
          },
          {
            "value": "PM",
          },
          {
            "value": "VC",
          },
          {
            "value": "WS",
          },
          {
            "value": "SM",
          },
          {
            "value": "ST",
          },
          {
            "value": "SA",
          },
          {
            "value": "SN",
          },
          {
            "value": "RS",
          },
          {
            "value": "SC",
          },
          {
            "value": "SL",
          },
          {
            "value": "SG",
          },
          {
            "value": "SX",
          },
          {
            "value": "SK",
          },
          {
            "value": "SI",
          },
          {
            "value": "SB",
          },
          {
            "value": "SO",
          },
          {
            "value": "ZA",
          },
          {
            "value": "GS",
          },
          {
            "value": "SS",
          },
          {
            "value": "ES",
          },
          {
            "value": "LK",
          },
          {
            "value": "SD",
          },
          {
            "value": "SR",
          },
          {
            "value": "SJ",
          },
          {
            "value": "SE",
          },
          {
            "value": "CH",
          },
          {
            "value": "SY",
          },
          {
            "value": "TW",
          },
          {
            "value": "TJ",
          },
          {
            "value": "TZ",
          },
          {
            "value": "TH",
          },
          {
            "value": "TL",
          },
          {
            "value": "TG",
          },
          {
            "value": "TK",
          },
          {
            "value": "TO",
          },
          {
            "value": "TT",
          },
          {
            "value": "TN",
          },
          {
            "value": "TM",
          },
          {
            "value": "TC",
          },
          {
            "value": "TV",
          },
          {
            "value": "TR",
          },
          {
            "value": "UG",
          },
          {
            "value": "UA",
          },
          {
            "value": "AE",
          },
          {
            "value": "GB",
          },
          {
            "value": "UM",
          },
          {
            "value": "US",
          },
          {
            "value": "UY",
          },
          {
            "value": "UZ",
          },
          {
            "value": "VU",
          },
          {
            "value": "VE",
          },
          {
            "value": "VN",
          },
          {
            "value": "VG",
          },
          {
            "value": "VI",
          },
          {
            "value": "WF",
          },
          {
            "value": "EH",
          },
          {
            "value": "YE",
          },
          {
            "value": "ZM",
          },
          {
            "value": "ZW",
          },
          {
            "value": "AX",
          },
          {
            "name": "NOT_APPLICABLE",
            "value": "N/A",
          },
        ],
      },
      "CurrencyCode": {
        "enum": [
          {
            "name": "OneInch",
            "value": "1INCH",
          },
          {
            "value": "AAVE",
          },
          {
            "value": "ADA",
          },
          {
            "value": "AED",
          },
          {
            "value": "AFN",
          },
          {
            "value": "ALGO",
          },
          {
            "value": "ALL",
          },
          {
            "value": "AMD",
          },
          {
            "value": "AMP",
          },
          {
            "value": "ANG",
          },
          {
            "value": "AOA",
          },
          {
            "value": "AR",
          },
          {
            "value": "ARS",
          },
          {
            "value": "ATOM",
          },
          {
            "value": "AUD",
          },
          {
            "value": "AVAX",
          },
          {
            "value": "AWG",
          },
          {
            "value": "AXS",
          },
          {
            "value": "AZN",
          },
          {
            "value": "BAM",
          },
          {
            "value": "BAT",
          },
          {
            "value": "BBD",
          },
          {
            "value": "BCH",
          },
          {
            "value": "BDT",
          },
          {
            "value": "BGN",
          },
          {
            "value": "BHD",
          },
          {
            "value": "BIF",
          },
          {
            "value": "BMD",
          },
          {
            "value": "BNB",
          },
          {
            "value": "BND",
          },
          {
            "value": "BOB",
          },
          {
            "value": "BRL",
          },
          {
            "value": "BSD",
          },
          {
            "value": "BSV",
          },
          {
            "value": "BTC",
          },
          {
            "value": "BTCB",
          },
          {
            "value": "BTG",
          },
          {
            "value": "BTN",
          },
          {
            "value": "BUSD",
          },
          {
            "value": "BWP",
          },
          {
            "value": "BYN",
          },
          {
            "value": "BYR",
          },
          {
            "value": "BZD",
          },
          {
            "value": "CAD",
          },
          {
            "value": "CAKE",
          },
          {
            "value": "CDF",
          },
          {
            "value": "CELO",
          },
          {
            "value": "CHF",
          },
          {
            "value": "CHZ",
          },
          {
            "value": "CLF",
          },
          {
            "value": "CLP",
          },
          {
            "value": "CNY",
          },
          {
            "value": "COMP",
          },
          {
            "value": "COP",
          },
          {
            "value": "CRC",
          },
          {
            "value": "CRO",
          },
          {
            "value": "CRV",
          },
          {
            "value": "CUC",
          },
          {
            "value": "CUP",
          },
          {
            "value": "CVE",
          },
          {
            "value": "CVX",
          },
          {
            "value": "CZK",
          },
          {
            "value": "DAI",
          },
          {
            "value": "DASH",
          },
          {
            "value": "DCR",
          },
          {
            "value": "DFI",
          },
          {
            "value": "DJF",
          },
          {
            "value": "DKK",
          },
          {
            "value": "DOGE",
          },
          {
            "value": "DOP",
          },
          {
            "value": "DOT",
          },
          {
            "value": "DZD",
          },
          {
            "value": "EGLD",
          },
          {
            "value": "EGP",
          },
          {
            "value": "ENJ",
          },
          {
            "value": "EOS",
          },
          {
            "value": "ERN",
          },
          {
            "value": "ETB",
          },
          {
            "value": "ETC",
          },
          {
            "value": "ETH",
          },
          {
            "value": "EUR",
          },
          {
            "value": "FEI",
          },
          {
            "value": "FIL",
          },
          {
            "value": "FJD",
          },
          {
            "value": "FKP",
          },
          {
            "value": "FLOW",
          },
          {
            "value": "FRAX",
          },
          {
            "value": "FTM",
          },
          {
            "value": "FTT",
          },
          {
            "value": "GALA",
          },
          {
            "value": "GBP",
          },
          {
            "value": "GEL",
          },
          {
            "value": "GGP",
          },
          {
            "value": "GHS",
          },
          {
            "value": "GIP",
          },
          {
            "value": "GMD",
          },
          {
            "value": "GNF",
          },
          {
            "value": "GNO",
          },
          {
            "value": "GRT",
          },
          {
            "value": "GT",
          },
          {
            "value": "GTQ",
          },
          {
            "value": "GYD",
          },
          {
            "value": "HBAR",
          },
          {
            "value": "HKD",
          },
          {
            "value": "HNL",
          },
          {
            "value": "HNT",
          },
          {
            "value": "HOT",
          },
          {
            "value": "HRK",
          },
          {
            "value": "HT",
          },
          {
            "value": "HTG",
          },
          {
            "value": "HUF",
          },
          {
            "value": "ICP",
          },
          {
            "value": "IDR",
          },
          {
            "value": "ILS",
          },
          {
            "value": "IMP",
          },
          {
            "value": "INJ",
          },
          {
            "value": "INR",
          },
          {
            "value": "IQD",
          },
          {
            "value": "IRR",
          },
          {
            "value": "ISK",
          },
          {
            "value": "JEP",
          },
          {
            "value": "JMD",
          },
          {
            "value": "JOD",
          },
          {
            "value": "JPY",
          },
          {
            "value": "KAVA",
          },
          {
            "value": "KCS",
          },
          {
            "value": "KDA",
          },
          {
            "value": "KES",
          },
          {
            "value": "KGS",
          },
          {
            "value": "KHR",
          },
          {
            "value": "KLAY",
          },
          {
            "value": "KMF",
          },
          {
            "value": "KNC",
          },
          {
            "value": "KPW",
          },
          {
            "value": "KRW",
          },
          {
            "value": "KSM",
          },
          {
            "value": "KWD",
          },
          {
            "value": "KYD",
          },
          {
            "value": "KZT",
          },
          {
            "value": "LAK",
          },
          {
            "value": "LBP",
          },
          {
            "value": "LEO",
          },
          {
            "value": "LINK",
          },
          {
            "value": "LKR",
          },
          {
            "value": "LRC",
          },
          {
            "value": "LRD",
          },
          {
            "value": "LSL",
          },
          {
            "value": "LTC",
          },
          {
            "value": "LTL",
          },
          {
            "value": "LUNA",
          },
          {
            "value": "LVL",
          },
          {
            "value": "LYD",
          },
          {
            "value": "MAD",
          },
          {
            "value": "MANA",
          },
          {
            "value": "MATIC",
          },
          {
            "value": "MDL",
          },
          {
            "value": "MGA",
          },
          {
            "value": "MINA",
          },
          {
            "value": "MIOTA",
          },
          {
            "value": "MKD",
          },
          {
            "value": "MKR",
          },
          {
            "value": "MMK",
          },
          {
            "value": "MNT",
          },
          {
            "value": "MOP",
          },
          {
            "value": "MRO",
          },
          {
            "value": "MUR",
          },
          {
            "value": "MVR",
          },
          {
            "value": "MWK",
          },
          {
            "value": "MXN",
          },
          {
            "value": "MYR",
          },
          {
            "value": "MZN",
          },
          {
            "value": "NAD",
          },
          {
            "value": "NEAR",
          },
          {
            "value": "NEO",
          },
          {
            "value": "NEXO",
          },
          {
            "value": "NGN",
          },
          {
            "value": "NIO",
          },
          {
            "value": "NOK",
          },
          {
            "value": "NPR",
          },
          {
            "value": "NZD",
          },
          {
            "value": "OKB",
          },
          {
            "value": "OMR",
          },
          {
            "value": "ONE",
          },
          {
            "value": "PAB",
          },
          {
            "value": "PAXG",
          },
          {
            "value": "PEN",
          },
          {
            "value": "PGK",
          },
          {
            "value": "PHP",
          },
          {
            "value": "PKR",
          },
          {
            "value": "PLN",
          },
          {
            "value": "PYG",
          },
          {
            "value": "QAR",
          },
          {
            "value": "QNT",
          },
          {
            "value": "QTUM",
          },
          {
            "value": "RON",
          },
          {
            "value": "RSD",
          },
          {
            "value": "RUB",
          },
          {
            "value": "RUNE",
          },
          {
            "value": "RWF",
          },
          {
            "value": "SAND",
          },
          {
            "value": "SAR",
          },
          {
            "value": "SBD",
          },
          {
            "value": "SCR",
          },
          {
            "value": "SDG",
          },
          {
            "value": "SEK",
          },
          {
            "value": "SGD",
          },
          {
            "value": "SHIB",
          },
          {
            "value": "SHP",
          },
          {
            "value": "SLE",
          },
          {
            "value": "SLL",
          },
          {
            "value": "SOL",
          },
          {
            "value": "SOS",
          },
          {
            "value": "SRD",
          },
          {
            "value": "STD",
          },
          {
            "value": "STX",
          },
          {
            "value": "SVC",
          },
          {
            "value": "SYP",
          },
          {
            "value": "SZL",
          },
          {
            "value": "THB",
          },
          {
            "value": "THETA",
          },
          {
            "value": "TJS",
          },
          {
            "value": "TMT",
          },
          {
            "value": "TND",
          },
          {
            "value": "TOP",
          },
          {
            "value": "TRX",
          },
          {
            "value": "TRY",
          },
          {
            "value": "TTD",
          },
          {
            "value": "TTT",
          },
          {
            "value": "TUSD",
          },
          {
            "value": "TWD",
          },
          {
            "value": "TZS",
          },
          {
            "value": "UAH",
          },
          {
            "value": "UGX",
          },
          {
            "value": "UNI",
          },
          {
            "value": "USD",
          },
          {
            "value": "USDC",
          },
          {
            "value": "USDP",
          },
          {
            "value": "USDT",
          },
          {
            "value": "UYU",
          },
          {
            "value": "UZS",
          },
          {
            "value": "VEF",
          },
          {
            "value": "VET",
          },
          {
            "value": "VND",
          },
          {
            "value": "VUV",
          },
          {
            "value": "WAVES",
          },
          {
            "value": "WBTC",
          },
          {
            "value": "WEMIX",
          },
          {
            "value": "WST",
          },
          {
            "value": "XAF",
          },
          {
            "value": "XAG",
          },
          {
            "value": "XAU",
          },
          {
            "value": "XCD",
          },
          {
            "value": "XCH",
          },
          {
            "value": "XDC",
          },
          {
            "value": "XDR",
          },
          {
            "value": "XEC",
          },
          {
            "value": "XEM",
          },
          {
            "value": "XLM",
          },
          {
            "value": "XMR",
          },
          {
            "value": "XOF",
          },
          {
            "value": "XPF",
          },
          {
            "value": "XRP",
          },
          {
            "value": "XTZ",
          },
          {
            "value": "YER",
          },
          {
            "value": "ZAR",
          },
          {
            "value": "ZEC",
          },
          {
            "value": "ZIL",
          },
          {
            "value": "ZMK",
          },
          {
            "value": "ZMW",
          },
          {
            "value": "ZWL",
          },
        ],
      },
      "Date": {
        "docs": "Model for date",
        "properties": {
          "day": {
            "docs": "Day of date",
            "type": "double",
          },
          "month": {
            "docs": "Month of date",
            "type": "double",
          },
          "year": {
            "docs": "Year of date",
            "type": "double",
          },
        },
      },
      "DeviceData": {
        "docs": "Model for device data",
        "properties": {
          "appVersion": {
            "docs": "The version of the app your user is using on their device at a given timestamp for an event or transaction",
            "type": "optional<string>",
          },
          "batteryLevel": {
            "docs": "Battery level of the device used for a transaction or event at a given timestamp",
            "type": "optional<double>",
          },
          "deviceIdentifier": {
            "docs": "Device identifier number",
            "type": "optional<string>",
          },
          "deviceLatitude": {
            "docs": "Device latitude at a give timestamp for an event or transaction",
            "type": "optional<double>",
          },
          "deviceLongitude": {
            "docs": "Device longitude at a give timestamp for an event or transaction",
            "type": "optional<double>",
          },
          "deviceMaker": {
            "docs": "The maker of the device at a given timestamp for an event or transaction",
            "type": "optional<string>",
          },
          "deviceModel": {
            "docs": "The model of the device at a given timestamp for an event or transaction",
            "type": "optional<string>",
          },
          "deviceYear": {
            "docs": "The year the device was manufactured at a given timestamp for an event or transaction",
            "type": "optional<string>",
          },
          "ipAddress": {
            "docs": "IP address of the device at a given timestamp for an event or transaction",
            "type": "optional<string>",
          },
          "operatingSystem": {
            "docs": "Operating system of the device at a given timestamp for an event or transaction",
            "type": "optional<string>",
          },
          "vpnUsed": {
            "docs": "Whether VPN was used at a given timestamp for an event or transaction",
            "type": "optional<boolean>",
          },
        },
      },
      "ExecutedRulesResult": {
        "docs": "Model for list of executed rules",
        "properties": {
          "labels": "optional<list<RuleLabels>>",
          "nature": "optional<RuleNature>",
          "ruleAction": "RuleAction",
          "ruleDescription": {
            "docs": "Description of the rule",
            "type": "string",
          },
          "ruleHit": "boolean",
          "ruleHitMeta": "optional<RuleHitMeta>",
          "ruleId": {
            "docs": "Unique rule identifier",
            "type": "string",
          },
          "ruleInstanceId": "string",
          "ruleName": {
            "docs": "Name of the rule",
            "type": "string",
          },
        },
      },
      "FailedRulesResult": {
        "docs": "Model for list of rules failed execution. It means rules could not be run",
        "properties": {
          "failureException": "RuleFailureException",
          "ruleDescription": {
            "docs": "Description of the rule",
            "type": "string",
          },
          "ruleId": {
            "docs": "Unique rule identifier",
            "type": "string",
          },
          "ruleName": {
            "docs": "Name of the rule",
            "type": "string",
          },
        },
      },
      "FalsePositiveDetails": {
        "docs": undefined,
        "properties": {
          "confidenceScore": "double",
          "isFalsePositive": "boolean",
        },
      },
      "GeneralBankAccountPaymentMethod": "literal<"GENERIC_BANK_ACCOUNT">",
      "GenericBankAccountDetails": {
        "docs": "Model for any generic bank account",
        "properties": {
          "accountNumber": {
            "docs": "Bank account number",
            "type": "optional<string>",
          },
          "accountType": {
            "docs": "Bank account type. E.g. Checking, Savings etc.",
            "type": "optional<string>",
          },
          "bankAddress": "optional<Address>",
          "bankCode": {
            "docs": "Unique identifier of the bank. In some countries, this can be the same as the bank's SWIFT code",
            "type": "optional<string>",
          },
          "bankName": {
            "docs": "Name of the bank",
            "type": "optional<string>",
          },
          "name": {
            "docs": "Name of the account holder",
            "type": "optional<string>",
          },
          "paymentChannel": "optional<string>",
          "specialInstructions": {
            "docs": "Special instructions to be specified if any",
            "type": "optional<string>",
          },
        },
      },
      "HitRulesDetails": {
        "docs": "Model for list of hit rules",
        "properties": {
          "labels": "optional<list<RuleLabels>>",
          "nature": "optional<RuleNature>",
          "ruleAction": "RuleAction",
          "ruleDescription": {
            "docs": "Description of the rule",
            "type": "string",
          },
          "ruleHitMeta": "optional<RuleHitMeta>",
          "ruleId": {
            "docs": "Unique rule identifier",
            "type": "string",
          },
          "ruleInstanceId": "string",
          "ruleName": {
            "docs": "Name of the rule",
            "type": "string",
          },
        },
      },
      "IBANDetails": {
        "docs": "Standardized model for Bank Details",
        "properties": {
          "BIC": {
            "docs": "Identifier for the bank. Can be routing number, BIK number, SWIFT code, BIC number etc.",
            "type": "optional<string>",
          },
          "IBAN": {
            "docs": "Account number of the user. Can be account number, IBAN number etc.",
            "type": "optional<string>",
          },
          "bankAddress": "optional<Address>",
          "bankBranchCode": {
            "docs": "Branch code of the bank. In some countries, this can be the same as the bank's SWIFT code",
            "type": "optional<string>",
          },
          "bankName": {
            "docs": "Name of the bank",
            "type": "optional<string>",
          },
          "country": "optional<CountryCode>",
          "name": {
            "docs": "Name of the bank account holder",
            "type": "optional<string>",
          },
          "paymentChannel": "optional<string>",
          "tags": "optional<Tag>",
        },
      },
      "IBANPaymentMethod": "literal<"IBAN">",
      "KYCStatus": {
        "enum": [
          {
            "value": "SUCCESSFUL",
          },
          {
            "value": "FAILED",
          },
          {
            "value": "NOT_STARTED",
          },
          {
            "value": "IN_PROGRESS",
          },
          {
            "value": "MANUAL_REVIEW",
          },
        ],
      },
      "KYCStatusDetails": {
        "docs": undefined,
        "properties": {
          "reason": "optional<string>",
          "status": "optional<KYCStatus>",
        },
      },
      "LegalDocument": {
        "docs": "LegalDocument model generalizes User's identity document type (ex: Passport)",
        "properties": {
          "documentExpirationDate": {
            "docs": "User's identity document expiration date (UNIX timestamp in milliseconds)",
            "type": "optional<double>",
          },
          "documentIssuedCountry": "CountryCode",
          "documentIssuedDate": {
            "docs": "User's identity document issuance date (UNIX timestamp in milliseconds)",
            "type": "optional<double>",
          },
          "documentNumber": {
            "docs": "User's unique identity document number such as passport number",
            "type": "string",
          },
          "documentType": {
            "docs": "User's identity document type such as passport, national ID etc.",
            "type": "string",
          },
          "nameOnDocument": "optional<ConsumerName>",
          "tags": {
            "docs": "Additional information that can be added via tags",
            "type": "optional<list<Tag>>",
          },
        },
      },
      "LegalEntity": {
        "docs": "Model for business user legal entity details",
        "properties": {
          "companyFinancialDetails": "optional<CompanyFinancialDetails>",
          "companyGeneralDetails": "CompanyGeneralDetails",
          "companyRegistrationDetails": "optional<CompanyRegistrationDetails>",
          "contactDetails": "optional<ContactDetails>",
          "reasonForAccountOpening": {
            "docs": "Reason for opening the account at financial institution",
            "type": "optional<list<string>>",
          },
        },
      },
      "ListData": {
        "docs": "Payload of a list, new or existed",
        "properties": {
          "items": {
            "docs": "List items",
            "type": "optional<list<ListItem>>",
          },
          "metadata": "optional<ListMetadata>",
        },
      },
      "ListExisted": {
        "docs": "List with ID and header",
        "properties": {
          "header": "ListHeader",
          "items": {
            "docs": "List items",
            "type": "list<ListItem>",
          },
          "listId": "string",
        },
      },
      "ListHeader": {
        "docs": undefined,
        "properties": {
          "createdTimestamp": "double",
          "listId": "string",
          "listType": "ListType",
          "metadata": "optional<ListMetadata>",
          "size": "double",
          "subtype": "ListSubtype",
        },
      },
      "ListItem": {
        "docs": undefined,
        "properties": {
          "key": "string",
          "metadata": "optional<ListKeyMetadata>",
        },
      },
      "ListKeyMetadata": "map<string, unknown>",
      "ListMetadata": {
        "docs": undefined,
        "properties": {
          "checksum": "optional<string>",
          "description": {
            "docs": "List description",
            "type": "optional<string>",
          },
          "name": {
            "docs": "List name",
            "type": "optional<string>",
          },
          "status": "optional<boolean>",
        },
      },
      "ListSubtype": {
        "enum": [
          {
            "value": "USER_ID",
          },
          {
            "value": "CARD_FINGERPRINT_NUMBER",
          },
          {
            "value": "IBAN_NUMBER",
          },
          {
            "value": "BANK_ACCOUNT_NUMBER",
          },
          {
            "value": "ACH_ACCOUNT_NUMBER",
          },
          {
            "value": "SWIFT_ACCOUNT_NUMBER",
          },
          {
            "value": "BIC",
          },
          {
            "value": "BANK_SWIFT_CODE",
          },
          {
            "value": "UPI_IDENTIFYING_NUMBER",
          },
          {
            "value": "IP_ADDRESS",
          },
          {
            "value": "STRING",
          },
        ],
      },
      "ListType": {
        "enum": [
          {
            "value": "WHITELIST",
          },
          {
            "value": "BLACKLIST",
          },
          {
            "value": "FLAGRIGHT_LIBRARY",
          },
        ],
      },
      "MCCDetails": {
        "docs": undefined,
        "properties": {
          "code": {
            "docs": "Merchant code",
            "type": "double",
          },
          "description": {
            "docs": "Merchant Description",
            "type": "optional<string>",
          },
        },
      },
      "MpesaDetails": {
        "docs": "Model for Mpesa payment method",
        "properties": {
          "businessShortCode": {
            "docs": "Business code",
            "type": "string",
          },
          "phoneNumber": {
            "docs": "Contact Number of the account holder",
            "type": "string",
          },
          "transactionType": {
            "docs": "Type of transaction",
            "type": "MpesaDetailsTransactionType",
          },
        },
      },
      "MpesaDetailsTransactionType": {
        "docs": "Type of transaction",
        "enum": [
          {
            "value": "CustomerPayBillOnline",
          },
          {
            "value": "CustomerBuyGoodsOnline",
          },
          {
            "value": "SalaryPayment",
          },
          {
            "value": "BusinessPayment",
          },
          {
            "value": "PromotionPayment",
          },
        ],
      },
      "MpesaPaymentMethod": "literal<"MPESA">",
      "PEPStatus": {
        "docs": undefined,
        "properties": {
          "isPepHit": "boolean",
          "pepCountry": "optional<string>",
        },
      },
      "PaymentMethod": {
        "enum": [
          {
            "value": "ACH",
          },
          {
            "value": "CARD",
          },
          {
            "value": "IBAN",
          },
          {
            "value": "UPI",
          },
          {
            "value": "GENERIC_BANK_ACCOUNT",
          },
          {
            "value": "MPESA",
          },
          {
            "value": "SWIFT",
          },
          {
            "value": "WALLET",
          },
          {
            "value": "CHECK",
          },
        ],
      },
      "Person": {
        "docs": "Model for a generic individual - different from User model by not having userId field",
        "properties": {
          "contactDetails": "optional<ContactDetails>",
          "generalDetails": "UserDetails",
          "legalDocuments": {
            "docs": "User's legal identity documents - See Document Model for details",
            "type": "optional<list<LegalDocument>>",
          },
          "pepStatus": "optional<list<PEPStatus>>",
          "tags": {
            "docs": "Additional information that can be added via tags",
            "type": "optional<list<Tag>>",
          },
        },
      },
      "PostBusinessUserResponse": {
        "docs": undefined,
        "extends": [
          "RulesResults",
        ],
        "properties": {
          "message": "optional<string>",
          "userId": {
            "docs": "user ID the risk score pertains to",
            "type": "string",
          },
        },
      },
      "PostConsumerTransactionResponse": {
        "docs": undefined,
        "extends": [
          "TransactionMonitoringResult",
        ],
        "properties": {
          "message": "optional<string>",
        },
      },
      "PostConsumerUserResponse": {
        "docs": undefined,
        "extends": [
          "RulesResults",
        ],
        "properties": {
          "message": "optional<string>",
          "userId": {
            "docs": "user ID the risk score pertains to",
            "type": "string",
          },
        },
      },
      "RiskLevel": {
        "enum": [
          {
            "value": "VERY_HIGH",
          },
          {
            "value": "HIGH",
          },
          {
            "value": "MEDIUM",
          },
          {
            "value": "LOW",
          },
          {
            "value": "VERY_LOW",
          },
        ],
      },
      "RiskScoringResult": {
        "docs": "Model for results from Risk Scoring",
        "properties": {
          "customerRiskAssessment": {
            "docs": "Quantified dynamic risk score",
            "type": "optional<double>",
          },
          "kycRiskScore": {
            "docs": "Quantified KYC risk score",
            "type": "double",
          },
          "transactionRiskScore": {
            "docs": "Quantified action risk score",
            "type": "double",
          },
        },
      },
      "RuleAction": {
        "docs": "Model for rule action if a rule is hit. This is returned in the API response and can be configured on Console by operational accounts like a Compliance Analyst",
        "enum": [
          {
            "value": "ALLOW",
          },
          {
            "value": "FLAG",
          },
          {
            "value": "BLOCK",
          },
          {
            "value": "SUSPEND",
          },
        ],
      },
      "RuleFailureException": {
        "docs": undefined,
        "properties": {
          "exceptionDescription": {
            "docs": "Name of the rule",
            "type": "string",
          },
          "exceptionName": {
            "docs": "Unique rule identifier",
            "type": "string",
          },
        },
      },
      "RuleHitDirection": {
        "enum": [
          {
            "value": "ORIGIN",
          },
          {
            "value": "DESTINATION",
          },
        ],
      },
      "RuleHitMeta": {
        "docs": "Details of rule execution, for internal purposes only",
        "properties": {
          "falsePositiveDetails": "optional<FalsePositiveDetails>",
          "hitDirections": "optional<list<RuleHitDirection>>",
          "sanctionsDetails": "optional<list<SanctionsDetails>>",
        },
      },
      "RuleLabels": {
        "enum": [
          {
            "value": "UNEXPECTED_BEHAVIOR",
          },
          {
            "value": "ILLICIT_GAINS_CHECK",
          },
          {
            "value": "RFI_TRIGGER",
          },
          {
            "value": "EDD_TRIGGER",
          },
          {
            "value": "KYC_TRIGGER",
          },
          {
            "value": "SCAM",
          },
          {
            "value": "ABUSE",
          },
          {
            "value": "ACCOUNT_TAKEOVER",
          },
          {
            "value": "DISPUTE",
          },
          {
            "value": "SANCTIONS",
          },
          {
            "value": "SANCTIONS_PEP",
          },
          {
            "value": "SANCTIONS_PEP_ADVERSE_MEDIA",
          },
        ],
      },
      "RuleNature": {
        "enum": [
          {
            "value": "AML",
          },
          {
            "value": "FRAUD",
          },
          {
            "value": "CTF",
          },
          {
            "value": "SCREENING",
          },
        ],
      },
      "RulesResults": {
        "docs": undefined,
        "properties": {
          "executedRules": {
            "docs": "Unique transaction identifier",
            "type": "list<ExecutedRulesResult>",
          },
          "hitRules": {
            "docs": "Unique transaction identifier",
            "type": "list<HitRulesDetails>",
          },
        },
      },
      "SWIFTDetails": {
        "docs": "Model for SWIFT payment method",
        "properties": {
          "accountNumber": {
            "docs": "Account number",
            "type": "optional<string>",
          },
          "accountType": {
            "docs": "Account type. E.g. Checking, Savings etc.",
            "type": "optional<string>",
          },
          "bankAddress": "optional<Address>",
          "bankName": {
            "docs": "Name of the bank",
            "type": "optional<string>",
          },
          "name": {
            "docs": "Name of the account holder",
            "type": "optional<string>",
          },
          "specialInstructions": {
            "docs": "Special instructions if any",
            "type": "optional<string>",
          },
          "swiftCode": {
            "docs": "SWIFT code of the financial institution",
            "type": "optional<string>",
          },
        },
      },
      "SWIFTPaymentMethod": "literal<"SWIFT">",
      "SanctionsDetails": {
        "docs": undefined,
        "properties": {
          "entityType": "optional<SanctionsDetailsEntityType>",
          "name": "string",
          "searchId": "string",
        },
      },
      "SanctionsDetailsEntityType": {
        "enum": [
          {
            "value": "CONSUMER_NAME",
          },
          {
            "value": "LEGAL_NAME",
          },
          {
            "value": "SHAREHOLDER",
          },
          {
            "value": "DIRECTOR",
          },
          {
            "value": "NAME_ON_CARD",
          },
          {
            "value": "PAYMENT_NAME",
          },
          {
            "value": "PAYMENT_BENEFICIARY_NAME",
          },
          {
            "value": "BANK_NAME",
          },
        ],
      },
      "Tag": {
        "docs": "Generic key-value pair model to append a custom variable being sent to Flagright API",
        "properties": {
          "key": {
            "docs": "Key value when you are creating a custom variable",
            "type": "string",
          },
          "value": {
            "docs": "Value for a given key when you are creating a custom variable",
            "type": "string",
          },
        },
      },
      "Thing": {
        "docs": undefined,
        "properties": {
          "publishedAt": "optional<string>",
        },
      },
      "Transaction": {
        "docs": undefined,
        "extends": [
          "TransactionBase",
          "TransactionUpdatable",
        ],
        "properties": {},
      },
      "TransactionAmountDetails": {
        "docs": "Model for transaction amount details",
        "properties": {
          "country": "optional<CountryCode>",
          "transactionAmount": {
            "docs": "Amount of the transaction",
            "type": "double",
          },
          "transactionCurrency": "CurrencyCode",
        },
      },
      "TransactionAmountLimit": {
        "docs": undefined,
        "properties": {
          "day": "optional<Amount>",
          "month": "optional<Amount>",
          "week": "optional<Amount>",
          "year": "optional<Amount>",
        },
      },
      "TransactionBase": {
        "docs": "Model for transaction base Payload",
        "properties": {
          "destinationUserId": {
            "docs": "UserId for transaction's destination. In other words, where the value is being transferred to.",
            "type": "optional<string>",
          },
          "originUserId": {
            "docs": "UserId for where the transaction originates from",
            "type": "optional<string>",
          },
          "timestamp": {
            "docs": "Timestamp of when transaction took place",
            "type": "double",
          },
          "transactionId": {
            "docs": "Unique transaction identifier",
            "type": "string",
          },
          "type": "optional<TransactionType>",
        },
      },
      "TransactionCountLimit": {
        "docs": undefined,
        "properties": {
          "day": "optional<double>",
          "month": "optional<double>",
          "week": "optional<double>",
          "year": "optional<double>",
        },
      },
      "TransactionEventMonitoringResult": {
        "docs": undefined,
        "extends": [
          "RulesResults",
        ],
        "properties": {
          "eventId": "string",
          "transaction": "Transaction",
        },
      },
      "TransactionLimit": {
        "docs": undefined,
        "properties": {
          "averageTransactionAmountLimit": "optional<TransactionAmountLimit>",
          "transactionAmountLimit": "optional<TransactionAmountLimit>",
          "transactionCountLimit": "optional<TransactionCountLimit>",
        },
      },
      "TransactionLimits": {
        "docs": "Model for transaction limits for a given user",
        "properties": {
          "maximumDailyTransactionLimit": "optional<Amount>",
          "maximumMonthlyTransactionLimit": "optional<Amount>",
          "maximumQuarterlyTransactionLimit": "optional<Amount>",
          "maximumTransactionLimit": "optional<Amount>",
          "maximumWeeklyTransactionLimit": "optional<Amount>",
          "maximumYearlyTransactionLimit": "optional<Amount>",
          "paymentMethodLimits": "optional<TransactionLimitsPaymentMethodLimits>",
        },
      },
      "TransactionLimitsPaymentMethodLimits": {
        "docs": undefined,
        "properties": {
          "ACH": "optional<TransactionLimit>",
          "CARD": "optional<TransactionLimit>",
          "CHECK": "optional<TransactionLimit>",
          "GENERIC_BANK_ACCOUNT": "optional<TransactionLimit>",
          "IBAN": "optional<TransactionLimit>",
          "MPESA": "optional<TransactionLimit>",
          "SWIFT": "optional<TransactionLimit>",
          "UPI": "optional<TransactionLimit>",
          "WALLET": "optional<TransactionLimit>",
        },
      },
      "TransactionMonitoringResult": {
        "docs": undefined,
        "extends": [
          "RulesResults",
        ],
        "properties": {
          "transactionId": {
            "docs": "Transaction ID that the results pertain to",
            "type": "string",
          },
        },
      },
      "TransactionState": {
        "docs": "Model for transaction states. E.g. Processing, Refunded, Successful etc.",
        "enum": [
          {
            "value": "CREATED",
          },
          {
            "value": "PROCESSING",
          },
          {
            "value": "SENT",
          },
          {
            "value": "EXPIRED",
          },
          {
            "value": "DECLINED",
          },
          {
            "value": "SUSPENDED",
          },
          {
            "value": "REFUNDED",
          },
          {
            "value": "SUCCESSFUL",
          },
        ],
      },
      "TransactionType": {
        "enum": [
          {
            "value": "DEPOSIT",
          },
          {
            "value": "TRANSFER",
          },
          {
            "value": "EXTERNAL_PAYMENT",
          },
          {
            "value": "WITHDRAWAL",
          },
          {
            "value": "REFUND",
          },
          {
            "value": "OTHER",
          },
        ],
      },
      "TransactionUpdatable": {
        "docs": "Model for transaction additional payload",
        "properties": {
          "destinationAmountDetails": "optional<TransactionAmountDetails>",
          "destinationPaymentDetails": {
            "docs": "Payment details of the destination. It can be a bank account number, wallet ID, card fingerprint etc.",
            "type": "optional<TransactionUpdatableDestinationPaymentDetails>",
          },
          "deviceData": "optional<DeviceData>",
          "originAmountDetails": "optional<TransactionAmountDetails>",
          "originPaymentDetails": {
            "docs": "Payment details of the origin. It can be a bank account number, wallet ID, card fingerprint etc.",
            "type": "optional<TransactionUpdatableOriginPaymentDetails>",
          },
          "productType": {
            "docs": "Type of produce being used by the consumer (ex wallets, payments etc)",
            "type": "optional<string>",
          },
          "promotionCodeUsed": {
            "docs": "Whether a promotion code was used or not the transaction",
            "type": "optional<boolean>",
          },
          "reference": {
            "docs": "Reference field for the transaction indicating the purpose of the transaction etc.",
            "type": "optional<string>",
          },
          "relatedTransactionIds": {
            "docs": "IDs of transactions related to this transaction. Ex: refund, split bills",
            "type": "optional<list<string>>",
          },
          "tags": {
            "docs": "Additional information that can be added via tags",
            "type": "optional<list<Tag>>",
          },
          "transactionState": "optional<TransactionState>",
        },
      },
      "TransactionUpdatableDestinationPaymentDetails": {
        "base-properties": {},
        "discriminant": "method",
        "docs": "Payment details of the destination. It can be a bank account number, wallet ID, card fingerprint etc.",
        "union": {
          "ACH": "ACHDetails",
          "CARD": "CardDetails",
          "CHECK": "CheckDetails",
          "GENERIC_BANK_ACCOUNT": "GenericBankAccountDetails",
          "IBAN": "IBANDetails",
          "MPESA": "MpesaDetails",
          "SWIFT": "SWIFTDetails",
          "UPI": "UPIDetails",
          "WALLET": "WalletDetails",
        },
      },
      "TransactionUpdatableOriginPaymentDetails": {
        "base-properties": {},
        "discriminant": "method",
        "docs": "Payment details of the origin. It can be a bank account number, wallet ID, card fingerprint etc.",
        "union": {
          "ACH": "ACHDetails",
          "CARD": "CardDetails",
          "CHECK": "CheckDetails",
          "GENERIC_BANK_ACCOUNT": "GenericBankAccountDetails",
          "IBAN": "IBANDetails",
          "MPESA": "MpesaDetails",
          "SWIFT": "SWIFTDetails",
          "UPI": "UPIDetails",
          "WALLET": "WalletDetails",
        },
      },
      "TransactionWithRulesResult": {
        "docs": "Model for transaction payload with rules result",
        "extends": [
          "Transaction",
        ],
        "properties": {
          "executedRules": "list<ExecutedRulesResult>",
          "hitRules": "list<HitRulesDetails>",
        },
      },
      "UPIDetails": {
        "docs": "Model for UPI payment method",
        "properties": {
          "bankProvider": {
            "docs": "Bank provider name",
            "type": "optional<string>",
          },
          "interfaceProvider": {
            "docs": "Interface provider name",
            "type": "optional<string>",
          },
          "name": {
            "docs": "Name of the account holder",
            "type": "optional<string>",
          },
          "upiID": {
            "docs": "UPI Id number",
            "type": "string",
          },
        },
      },
      "UPIPaymentMethod": "literal<"UPI">",
      "User": {
        "docs": "Model for User details",
        "extends": [
          "UserBase",
          "UserOptional",
        ],
        "properties": {},
      },
      "UserBase": {
        "docs": "Model for User details",
        "properties": {
          "createdTimestamp": {
            "docs": "Timestamp when userId is created",
            "type": "double",
          },
          "userDetails": "optional<UserDetails>",
          "userId": {
            "docs": "Unique user ID",
            "type": "string",
          },
        },
      },
      "UserDetails": {
        "docs": "Model for consumer user personal details",
        "properties": {
          "countryOfNationality": "optional<CountryCode>",
          "countryOfResidence": "optional<CountryCode>",
          "dateOfBirth": {
            "docs": "Date of birth of the user (YYYY-MM-DD)",
            "type": "optional<string>",
          },
          "gender": {
            "docs": "Gender of the individual - Male, Female or Non-Binary",
            "type": "optional<UserDetailsGender>",
          },
          "name": "ConsumerName",
        },
      },
      "UserDetailsGender": {
        "docs": "Gender of the individual - Male, Female or Non-Binary",
        "enum": [
          {
            "value": "M",
          },
          {
            "value": "F",
          },
          {
            "value": "NB",
          },
        ],
      },
      "UserMonitoringResult": {
        "docs": undefined,
        "extends": [
          "RulesResults",
        ],
        "properties": {
          "userId": {
            "docs": "User ID that the results pertain to",
            "type": "string",
          },
        },
      },
      "UserOptional": {
        "docs": "Model for User details",
        "properties": {
          "acquisitionChannel": "optional<AcquisitionChannel>",
          "contactDetails": "optional<ContactDetails>",
          "kycStatusDetails": "optional<KYCStatusDetails>",
          "legalDocuments": {
            "docs": "User's legal identity documents - See Document Model for details",
            "type": "optional<list<LegalDocument>>",
          },
          "pepStatus": "optional<list<PEPStatus>>",
          "reasonForAccountOpening": "optional<list<string>>",
          "riskLevel": "optional<RiskLevel>",
          "tags": {
            "docs": "Additional information that can be added via tags",
            "type": "optional<list<Tag>>",
          },
          "transactionLimits": "optional<TransactionLimits>",
          "userSegment": "optional<UserOptionalUserSegment>",
          "userStateDetails": "optional<UserStateDetails>",
        },
      },
      "UserOptionalUserSegment": {
        "enum": [
          {
            "value": "RETAIL",
          },
          {
            "value": "PROFESSIONAL",
          },
        ],
      },
      "UserRegistrationStatus": {
        "enum": [
          {
            "value": "REGISTERED",
          },
          {
            "value": "UNREGISTERED",
          },
        ],
      },
      "UserState": {
        "enum": [
          {
            "value": "UNACCEPTABLE",
          },
          {
            "value": "UNDECIDED",
          },
          {
            "value": "TERMINATED",
          },
          {
            "value": "ACTIVE",
          },
          {
            "value": "INACTIVE",
          },
          {
            "value": "DORMANT",
          },
          {
            "value": "CREATED",
          },
          {
            "value": "DELETED",
          },
          {
            "value": "SUSPENDED",
          },
          {
            "value": "BLOCKED",
          },
        ],
      },
      "UserStateDetails": {
        "docs": undefined,
        "properties": {
          "reason": "optional<string>",
          "state": "UserState",
          "userId": "optional<string>",
        },
      },
      "UserWithRulesResult": {
        "docs": "Model for consumer user payload with rules result",
        "extends": [
          "User",
        ],
        "properties": {
          "executedRules": "optional<list<ExecutedRulesResult>>",
          "hitRules": "optional<list<HitRulesDetails>>",
        },
      },
      "WalletDetails": {
        "docs": "Standardized model for a Generic wallet transaction",
        "properties": {
          "name": {
            "docs": "Name of the account holder for a specific wallet",
            "type": "optional<string>",
          },
          "paymentChannel": {
            "docs": "Payment Channel used through wallet",
            "type": "optional<string>",
          },
          "tags": "optional<Tag>",
          "walletId": {
            "docs": "Unique ID of the wallet",
            "type": "optional<string>",
          },
          "walletPhoneNumber": {
            "docs": "Phone number associated with the wallet, if any",
            "type": "optional<string>",
          },
          "walletType": {
            "docs": "Wallet type if there are various types of wallets belonging to the same user. E.g. Checking, savings, vault, different currency wallets etc.",
            "type": "string",
          },
        },
      },
      "WalletPaymentMethod": "literal<"WALLET">",
      "WebhookEvent": {
        "docs": undefined,
        "properties": {
          "createdTimestamp": "double",
          "data": "UserStateDetails",
          "id": "string",
          "type": "WebhookEventType",
        },
      },
      "WebhookEventType": {
        "enum": [
          {
            "value": "CASE_CLOSED",
          },
          {
            "value": "USER_STATE_UPDATED",
          },
          {
            "value": "ALERT_CLOSED",
          },
        ],
      },
    },
  },
  "rootApiFile": {
    "auth": "x-api-key",
    "auth-schemes": {
      "x-api-key": {
        "header": "x-api-key",
        "name": "apiKey",
        "type": "string",
      },
    },
    "default-environment": "Default",
    "display-name": "Flagright API",
    "environments": {
      "Default": "https://sandbox.api.flagright.com",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "name": "api",
  },
}
`;

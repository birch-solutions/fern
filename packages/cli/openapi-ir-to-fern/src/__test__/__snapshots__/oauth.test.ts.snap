// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`oauth > oauth > docs 1`] = `
{
  "definitionFiles": {
    "auth.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get-token": {
            "auth": false,
            "display-name": "Request an access token",
            "docs": "Exchange credentials or refresh token for an access token",
            "errors": [
              "root.AuthGetTokenRequestBadRequestError",
              "root.AuthGetTokenRequestUnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "client_id": "client_id",
                  "client_secret": "client_secret",
                  "grant_type": "password",
                },
                "response": {
                  "body": {
                    "access_token": "access_token",
                    "expires_in": 1,
                    "refresh_token": "refresh_token",
                    "token_type": "Bearer",
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/oauth/token",
            "request": {
              "body": {
                "properties": {
                  "client_id": {
                    "docs": "The client identifier",
                    "type": "string",
                  },
                  "client_secret": {
                    "docs": "The client secret",
                    "type": "string",
                  },
                  "grant_type": {
                    "docs": "The type of grant to request",
                    "type": "AuthGetTokenRequestGrantType",
                  },
                  "password": {
                    "docs": "Required for password grant type",
                    "type": "optional<string>",
                  },
                  "refresh_token": {
                    "docs": "Required for refresh_token grant type",
                    "type": "optional<string>",
                  },
                  "username": {
                    "docs": "Required for password grant type",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "AuthGetTokenRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Successful token response",
              "type": "AuthGetTokenResponse",
            },
          },
        },
        "source": {
          "openapi": "oauth/openapi.yml",
        },
      },
      "types": {
        "AuthGetTokenRequestGrantType": {
          "docs": "The type of grant to request",
          "enum": [
            "password",
            "refresh_token",
            "client_credentials",
          ],
          "source": {
            "openapi": "oauth/openapi.yml",
          },
        },
        "AuthGetTokenResponse": {
          "docs": undefined,
          "properties": {
            "access_token": "optional<string>",
            "expires_in": {
              "docs": "Token expiration time in seconds",
              "type": "optional<integer>",
            },
            "refresh_token": "optional<string>",
            "token_type": "optional<string>",
          },
          "source": {
            "openapi": "oauth/openapi.yml",
          },
        },
      },
    },
  },
  "packageMarkerFile": {
    "errors": {
      "AuthGetTokenRequestBadRequestError": {
        "docs": "Bad request",
        "status-code": 400,
        "type": "unknown",
      },
      "AuthGetTokenRequestUnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
    },
  },
  "rootApiFile": {
    "auth": "OAuthScheme",
    "auth-schemes": {
      "OAuthScheme": {
        "get-token": {
          "endpoint": "auth.get_token",
        },
        "scheme": "oauth",
        "type": "client-credentials",
      },
    },
    "default-environment": "Default",
    "display-name": "OAuth Token API",
    "environments": {
      "Default": "https://api.example.com/v1",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "name": "api",
  },
}
`;

exports[`oauth > oauth > simple 1`] = `
{
  "definitionFiles": {
    "auth.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "get-token": {
            "auth": false,
            "display-name": "Request an access token",
            "docs": "Exchange credentials or refresh token for an access token",
            "errors": [
              "root.BadRequestError",
              "root.UnauthorizedError",
            ],
            "examples": [
              {
                "request": {
                  "client_id": "client_id",
                  "client_secret": "client_secret",
                  "grant_type": "password",
                },
                "response": {
                  "body": {
                    "access_token": "access_token",
                    "expires_in": 1,
                    "refresh_token": "refresh_token",
                    "token_type": "Bearer",
                  },
                },
              },
            ],
            "method": "POST",
            "pagination": undefined,
            "path": "/oauth/token",
            "request": {
              "body": {
                "properties": {
                  "client_id": {
                    "docs": "The client identifier",
                    "type": "string",
                  },
                  "client_secret": {
                    "docs": "The client secret",
                    "type": "string",
                  },
                  "grant_type": {
                    "docs": "The type of grant to request",
                    "type": "AuthGetTokenRequestGrantType",
                  },
                  "password": {
                    "docs": "Required for password grant type",
                    "type": "optional<string>",
                  },
                  "refresh_token": {
                    "docs": "Required for refresh_token grant type",
                    "type": "optional<string>",
                  },
                  "username": {
                    "docs": "Required for password grant type",
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "AuthGetTokenRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "Successful token response",
              "type": "AuthGetTokenResponse",
            },
          },
        },
        "source": {
          "openapi": "oauth/openapi.yml",
        },
      },
      "types": {
        "AuthGetTokenRequestGrantType": {
          "docs": "The type of grant to request",
          "enum": [
            "password",
            "refresh_token",
            "client_credentials",
          ],
          "source": {
            "openapi": "oauth/openapi.yml",
          },
        },
        "AuthGetTokenResponse": {
          "docs": undefined,
          "properties": {
            "access_token": "optional<string>",
            "expires_in": {
              "docs": "Token expiration time in seconds",
              "type": "optional<integer>",
            },
            "refresh_token": "optional<string>",
            "token_type": "optional<string>",
          },
          "source": {
            "openapi": "oauth/openapi.yml",
          },
        },
      },
    },
  },
  "packageMarkerFile": {
    "errors": {
      "BadRequestError": {
        "docs": "Bad request",
        "status-code": 400,
        "type": "unknown",
      },
      "UnauthorizedError": {
        "docs": "Unauthorized",
        "status-code": 401,
        "type": "unknown",
      },
    },
  },
  "rootApiFile": {
    "auth": "OAuthScheme",
    "auth-schemes": {
      "OAuthScheme": {
        "get-token": {
          "endpoint": "auth.get_token",
        },
        "scheme": "oauth",
        "type": "client-credentials",
      },
    },
    "default-environment": "Default",
    "display-name": "OAuth Token API",
    "environments": {
      "Default": "https://api.example.com/v1",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "name": "api",
  },
}
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser suger simple 1`] = `
{
  "definitionFiles": {
    "__package__.yml": {
      "errors": {
        "BadRequestError": {
          "status-code": 400,
          "type": "unknown",
        },
        "ConflictError": {
          "status-code": 409,
          "type": "string",
        },
        "InternalServerError": {
          "status-code": 500,
          "type": "unknown",
        },
        "NotFoundError": {
          "status-code": 404,
          "type": "string",
        },
      },
      "service": undefined,
      "types": {
        "AzureAudience": {
          "docs": undefined,
          "properties": {
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureGovernmentCertification": {
          "docs": undefined,
          "properties": {
            "title": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "uri": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "validationResults": {
              "docs": undefined,
              "type": "optional<list<AzureValidationResult>>",
            },
          },
        },
        "AzureIncludedBaseQuantity": {
          "docs": undefined,
          "properties": {
            "isInfinite": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "quantity": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "recurringUnit": {
              "docs": undefined,
              "type": "optional<AzureIncludedBaseQuantityRecurringUnit>",
            },
          },
        },
        "AzureIncludedBaseQuantityRecurringUnit": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Monthly",
              "value": "Monthly",
            },
            {
              "docs": undefined,
              "name": "Annual",
              "value": "Annual",
            },
          ],
        },
        "AzureListingContact": {
          "docs": undefined,
          "properties": {
            "email": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "phone": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "type": {
              "docs": undefined,
              "type": "optional<AzureListingContactType>",
            },
            "uri": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureListingContactType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "CustomerSupport",
              "value": "CustomerSupport",
            },
            {
              "docs": undefined,
              "name": "Engineering",
              "value": "Engineering",
            },
            {
              "docs": undefined,
              "name": "ChannelManager",
              "value": "ChannelManager",
            },
          ],
        },
        "AzureListingUri": {
          "docs": undefined,
          "properties": {
            "displayText": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "subtype": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "type": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "uri": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureLocalizedDateTime": {
          "docs": undefined,
          "properties": {
            "dateTimeInUtc": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "localizePerMarket": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
          },
        },
        "AzureLocalizedTimeRange": {
          "docs": undefined,
          "properties": {
            "endAt": {
              "docs": undefined,
              "type": "optional<AzureLocalizedDateTime>",
            },
            "startAt": {
              "docs": undefined,
              "type": "optional<AzureLocalizedDateTime>",
            },
          },
        },
        "AzureMarket": {
          "docs": undefined,
          "properties": {
            "friendlyName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "marketCode": {
              "docs": "ISO Country Code",
              "type": "optional<string>",
            },
          },
        },
        "AzureMarketState": {
          "docs": undefined,
          "properties": {
            "marketCode": {
              "docs": "ISO Country Code",
              "type": "optional<string>",
            },
            "state": {
              "docs": undefined,
              "type": "optional<AzureMarketStateState>",
            },
          },
        },
        "AzureMarketStateState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Disabled",
              "value": "Disabled",
            },
            {
              "docs": undefined,
              "name": "Enabled",
              "value": "Enabled",
            },
            {
              "docs": undefined,
              "name": "StopSelling",
              "value": "StopSelling",
            },
            {
              "docs": undefined,
              "name": "Terminated",
              "value": "Terminated",
            },
          ],
        },
        "AzureMarketplacePrice": {
          "docs": undefined,
          "properties": {
            "currency": {
              "docs": "ISO 4217 currency code",
              "type": "optional<string>",
            },
            "markets": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "price": {
              "docs": "default 0",
              "type": "optional<double>",
            },
            "prices": {
              "docs": undefined,
              "type": "optional<unknown>",
            },
          },
        },
        "AzureMarketplacePrivateOffer": {
          "docs": undefined,
          "properties": {
            "$schema": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "acceptBy": {
              "docs": "in format YYYY-MM-DD",
              "type": "optional<datetime>",
            },
            "acceptanceLinks": {
              "docs": undefined,
              "type": "optional<list<AzureMarketplacePrivateOfferAcceptanceLink>>",
            },
            "beneficiaries": {
              "docs": "array of email addresses.",
              "type": "optional<list<AzureMarketplacePrivateOfferBeneficiary>>",
            },
            "eTag": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "end": {
              "docs": "in format YYYY-MM-DD",
              "type": "optional<datetime>",
            },
            "id": {
              "docs": "in format of "private-offer/private-offer-durable-id"",
              "type": "optional<string>",
            },
            "lastModified": {
              "docs": "in format YYYY-MM-DD",
              "type": "optional<datetime>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "notificationContacts": {
              "docs": "array of email addresses of the users to be notified of any changes in the private offer status.",
              "type": "optional<list<string>>",
            },
            "preparedBy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "pricing": {
              "docs": "Up to 10 pricing entries are allowed.",
              "type": "optional<list<AzureMarketplacePrivateOfferPricing>>",
            },
            "privateOfferType": {
              "docs": undefined,
              "type": "optional<AzureMarketplacePrivateOfferPrivateOfferType>",
            },
            "resourceName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "start": {
              "docs": "in format YYYY-MM-DD, if VariableStartDate = true, this field should be empty.",
              "type": "optional<datetime>",
            },
            "state": {
              "docs": undefined,
              "type": "optional<AzureMarketplacePrivateOfferState>",
            },
            "subState": {
              "docs": undefined,
              "type": "optional<AzureMarketplacePrivateOfferSubState>",
            },
            "termsAndConditionsDocSasUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "upgradedFrom": {
              "docs": undefined,
              "type": "optional<AzureMarketplacePrivateOfferPromotionReference>",
            },
            "validations": {
              "docs": undefined,
              "type": "optional<list<AzureMarketplaceValidation>>",
            },
            "variableStartDate": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
          },
        },
        "AzureMarketplacePrivateOfferAcceptanceLink": {
          "docs": undefined,
          "properties": {
            "beneficiaryId": {
              "docs": "The Customer Billing Account ID.",
              "type": "optional<string>",
            },
            "link": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureMarketplacePrivateOfferBeneficiary": {
          "docs": undefined,
          "properties": {
            "beneficiaryRecipients": {
              "docs": undefined,
              "type": "optional<list<AzureMarketplacePrivateOfferBeneficiaryRecipient>>",
            },
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": "the customer billing account id.",
              "type": "optional<string>",
            },
          },
        },
        "AzureMarketplacePrivateOfferBeneficiaryRecipient": {
          "docs": undefined,
          "properties": {
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "recipientType": {
              "docs": undefined,
              "type": "optional<AzureMarketplacePrivateOfferBeneficiaryRecipientRecipientType>",
            },
          },
        },
        "AzureMarketplacePrivateOfferBeneficiaryRecipientRecipientType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "cspCustomer",
              "value": "cspCustomer",
            },
            {
              "docs": undefined,
              "name": "billingGroup",
              "value": "billingGroup",
            },
          ],
        },
        "AzureMarketplacePrivateOfferPricing": {
          "docs": undefined,
          "properties": {
            "discountPercentage": {
              "docs": "between 0 and 100",
              "type": "optional<double>",
            },
            "discountType": {
              "docs": undefined,
              "type": "optional<AzureMarketplacePrivateOfferPricingDiscountType>",
            },
            "originalPlan": {
              "docs": "the pricing plan of the original plan.",
              "type": "optional<AzurePriceAndAvailabilityPrivateOfferPlan>",
            },
            "plan": {
              "docs": "in format of "plan/product-durable-id/plan-durable-id"",
              "type": "optional<string>",
            },
            "planName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "planType": {
              "docs": "The type of the plan, FLAT_RATE or PER_USER.",
              "type": "optional<AzureMarketplacePrivateOfferPricingPlanType>",
            },
            "priceDetails": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "privateOfferPlan": {
              "docs": "the pricing plan of the private offer",
              "type": "optional<AzurePriceAndAvailabilityPrivateOfferPlan>",
            },
            "product": {
              "docs": "in format of "product/product-durable-id"",
              "type": "optional<string>",
            },
            "sugerOfferId": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureMarketplacePrivateOfferPricingDiscountType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "percentage",
              "value": "percentage",
            },
            {
              "docs": undefined,
              "name": "absolute",
              "value": "absolute",
            },
          ],
        },
        "AzureMarketplacePrivateOfferPricingPlanType": {
          "docs": "The type of the plan, FLAT_RATE or PER_USER.",
          "enum": [
            {
              "docs": undefined,
              "name": "FLAT_RATE",
              "value": "FLAT_RATE",
            },
            {
              "docs": undefined,
              "name": "PER_USER",
              "value": "PER_USER",
            },
          ],
        },
        "AzureMarketplacePrivateOfferPrivateOfferType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "customerPromotion",
              "value": "customerPromotion",
            },
            {
              "docs": undefined,
              "name": "cspPromotion",
              "value": "cspPromotion",
            },
          ],
        },
        "AzureMarketplacePrivateOfferPromotionReference": {
          "docs": undefined,
          "properties": {
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureMarketplacePrivateOfferState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "draft",
              "value": "draft",
            },
            {
              "docs": undefined,
              "name": "live",
              "value": "live",
            },
            {
              "docs": undefined,
              "name": "withdrawn",
              "value": "withdrawn",
            },
            {
              "docs": undefined,
              "name": "deleted",
              "value": "deleted",
            },
          ],
        },
        "AzureMarketplacePrivateOfferSubState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "pendingAcceptance",
              "value": "pendingAcceptance",
            },
            {
              "docs": undefined,
              "name": "accepted",
              "value": "accepted",
            },
          ],
        },
        "AzureMarketplaceTerm": {
          "docs": undefined,
          "properties": {
            "type": {
              "docs": undefined,
              "type": "optional<AzureMarketplaceTermType>",
            },
            "value": {
              "docs": "default 0",
              "type": "optional<double>",
            },
          },
        },
        "AzureMarketplaceTermType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "day",
              "value": "day",
            },
            {
              "docs": undefined,
              "name": "week",
              "value": "week",
            },
            {
              "docs": undefined,
              "name": "month",
              "value": "month",
            },
            {
              "docs": undefined,
              "name": "year",
              "value": "year",
            },
          ],
        },
        "AzureMarketplaceValidation": {
          "docs": undefined,
          "properties": {
            "$schema": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "code": {
              "docs": undefined,
              "type": "optional<AzureMarketplaceValidationCode>",
            },
            "level": {
              "docs": undefined,
              "type": "optional<AzureMarketplaceValidationLevel>",
            },
            "message": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "resourceId": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureMarketplaceValidationCode": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "businessValidationError",
              "value": "businessValidationError",
            },
            {
              "docs": undefined,
              "name": "collectionLimitExceeded",
              "value": "collectionLimitExceeded",
            },
            {
              "docs": undefined,
              "name": "invalidId",
              "value": "invalidId",
            },
            {
              "docs": undefined,
              "name": "invalidEntityStatus",
              "value": "invalidEntityStatus",
            },
            {
              "docs": undefined,
              "name": "invalidRequest",
              "value": "invalidRequest",
            },
            {
              "docs": undefined,
              "name": "invalidResource",
              "value": "invalidResource",
            },
            {
              "docs": undefined,
              "name": "invalidState",
              "value": "invalidState",
            },
            {
              "docs": undefined,
              "name": "notDeployed",
              "value": "notDeployed",
            },
            {
              "docs": undefined,
              "name": "notSupported",
              "value": "notSupported",
            },
            {
              "docs": undefined,
              "name": "operationCanceled",
              "value": "operationCanceled",
            },
            {
              "docs": undefined,
              "name": "productLocked",
              "value": "productLocked",
            },
            {
              "docs": undefined,
              "name": "resourceNotFound",
              "value": "resourceNotFound",
            },
            {
              "docs": undefined,
              "name": "schemaValidationError",
              "value": "schemaValidationError",
            },
          ],
        },
        "AzureMarketplaceValidationLevel": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "informational",
              "value": "informational",
            },
            {
              "docs": undefined,
              "name": "warning",
              "value": "warning",
            },
          ],
        },
        "AzurePendingUpdateInfo": {
          "docs": undefined,
          "properties": {
            "status": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "updateType": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzurePrice": {
          "docs": undefined,
          "properties": {
            "currencyCode": {
              "docs": "ISO currency code, Three characters",
              "type": "optional<string>",
            },
            "openPrice": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "priceTierID": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzurePriceAndAvailabilityPrivateOfferCustomMeters": {
          "docs": undefined,
          "properties": {
            "meters": {
              "docs": undefined,
              "type": "optional<unknown>",
            },
            "priceInputOption": {
              "docs": "default "usd"",
              "type": "optional<AzurePriceAndAvailabilityPrivateOfferCustomMetersPriceInputOption>",
            },
          },
        },
        "AzurePriceAndAvailabilityPrivateOfferCustomMetersPriceInputOption": {
          "docs": "default "usd"",
          "enum": [
            {
              "docs": undefined,
              "name": "perMarket",
              "value": "perMarket",
            },
            {
              "docs": undefined,
              "name": "usd",
              "value": "usd",
            },
          ],
        },
        "AzurePriceAndAvailabilityPrivateOfferPlan": {
          "docs": undefined,
          "properties": {
            "$schema": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "plan": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "pricing": {
              "docs": undefined,
              "type": "optional<AzurePriceAndAvailabilityPrivateOfferPrice>",
            },
            "product": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "resourceName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "validations": {
              "docs": undefined,
              "type": "optional<list<AzureMarketplaceValidation>>",
            },
          },
        },
        "AzurePriceAndAvailabilityPrivateOfferPrice": {
          "docs": undefined,
          "properties": {
            "customMeters": {
              "docs": undefined,
              "type": "optional<AzurePriceAndAvailabilityPrivateOfferCustomMeters>",
            },
            "recurrentPrice": {
              "docs": undefined,
              "type": "optional<AzurePriceAndAvailabilityRecurrentPrice>",
            },
          },
        },
        "AzurePriceAndAvailabilityRecurrentPrice": {
          "docs": undefined,
          "properties": {
            "priceInputOption": {
              "docs": "default "usd"",
              "type": "optional<AzurePriceAndAvailabilityRecurrentPricePriceInputOption>",
            },
            "prices": {
              "docs": undefined,
              "type": "optional<list<AzurePriceAndAvailabilityRecurrentPriceItem>>",
            },
          },
        },
        "AzurePriceAndAvailabilityRecurrentPriceItem": {
          "docs": undefined,
          "properties": {
            "billingTerm": {
              "docs": undefined,
              "type": "optional<AzureMarketplaceTerm>",
            },
            "paymentOption": {
              "docs": undefined,
              "type": "optional<AzureMarketplaceTerm>",
            },
            "pricePerPaymentInUsd": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "prices": {
              "docs": undefined,
              "type": "optional<list<AzureMarketplacePrice>>",
            },
          },
        },
        "AzurePriceAndAvailabilityRecurrentPricePriceInputOption": {
          "docs": "default "usd"",
          "enum": [
            {
              "docs": undefined,
              "name": "perMarket",
              "value": "perMarket",
            },
            {
              "docs": undefined,
              "name": "usd",
              "value": "usd",
            },
          ],
        },
        "AzurePriceCadence": {
          "docs": undefined,
          "properties": {
            "type": {
              "docs": undefined,
              "type": "optional<AzurePriceCadenceType>",
            },
            "value": {
              "docs": undefined,
              "type": "optional<integer>",
            },
          },
        },
        "AzurePriceCadenceType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Month",
              "value": "Month",
            },
            {
              "docs": undefined,
              "name": "Year",
              "value": "Year",
            },
          ],
        },
        "AzurePriceSchedule": {
          "docs": undefined,
          "properties": {
            "priceCadence": {
              "docs": undefined,
              "type": "optional<AzurePriceCadence>",
            },
            "pricingModel": {
              "docs": undefined,
              "type": "optional<AzurePriceSchedulePricingModel>",
            },
            "pricingUnits": {
              "docs": undefined,
              "type": "optional<list<AzurePricingUnit>>",
            },
            "retailPrice": {
              "docs": undefined,
              "type": "optional<AzurePrice>",
            },
          },
        },
        "AzurePriceSchedulePricingModel": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Flat",
              "value": "Flat",
            },
            {
              "docs": undefined,
              "name": "Recurring",
              "value": "Recurring",
            },
            {
              "docs": undefined,
              "name": "Usage",
              "value": "Usage",
            },
          ],
        },
        "AzurePricingUnit": {
          "docs": undefined,
          "properties": {
            "isUnlimitedUnit": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "lowerUnit": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<AzurePricingUnitName>",
            },
            "unitType": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "upperUnit": {
              "docs": undefined,
              "type": "optional<integer>",
            },
          },
        },
        "AzurePricingUnitName": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "sharedcore",
              "value": "sharedcore",
            },
            {
              "docs": undefined,
              "name": "transactions",
              "value": "transactions",
            },
          ],
        },
        "AzureProduct": {
          "docs": undefined,
          "properties": {
            "availabilities": {
              "docs": undefined,
              "type": "optional<list<AzureProductAvailability>>",
            },
            "branches": {
              "docs": undefined,
              "type": "optional<list<AzureProductBranch>>",
            },
            "externalIDs": {
              "docs": undefined,
              "type": "optional<list<AzureTypeValue>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "isModularPublishing": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "listings": {
              "docs": undefined,
              "type": "optional<list<AzureProductListing>>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "packageConfigurations": {
              "docs": undefined,
              "type": "optional<list<AzureProductPackageConfiguration>>",
            },
            "properties": {
              "docs": undefined,
              "type": "optional<list<AzureProductProperty>>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "setup": {
              "docs": "Not original fields. They are populated by other API calls",
              "type": "optional<AzureProductSetup>",
            },
            "submissions": {
              "docs": undefined,
              "type": "optional<list<AzureProductSubmission>>",
            },
            "variants": {
              "docs": undefined,
              "type": "optional<list<AzureProductVariant>>",
            },
          },
        },
        "AzureProductAvailability": {
          "docs": undefined,
          "properties": {
            "emailAudiences": {
              "docs": undefined,
              "type": "optional<list<AzureAudience>>",
            },
            "enterpriseLicensing": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "subscriptionAudiences": {
              "docs": undefined,
              "type": "optional<list<AzureAudience>>",
            },
            "visibility": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureProductBranch": {
          "docs": undefined,
          "properties": {
            "currentDraftInstanceID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "friendlyName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "module": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "type": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "variantID": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureProductFeatureAvailability": {
          "docs": undefined,
          "properties": {
            "customMeters": {
              "docs": undefined,
              "type": "optional<list<AzureProductVariantCustomMeter>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "isHidden": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "marketStates": {
              "docs": undefined,
              "type": "optional<list<AzureMarketState>>",
            },
            "markets": {
              "docs": undefined,
              "type": "optional<list<AzureMarket>>",
            },
            "priceSchedules": {
              "docs": undefined,
              "type": "optional<list<AzureProductVariantPriceSchedule>>",
            },
            "properties": {
              "docs": undefined,
              "type": "optional<list<AzureTypeValue>>",
            },
            "resourceType": {
              "docs": "ResourceType = FeatureAvailability",
              "type": "optional<string>",
            },
            "subscriptionAudiences": {
              "docs": undefined,
              "type": "optional<list<AzureAudience>>",
            },
            "tenantAudiences": {
              "docs": undefined,
              "type": "optional<list<AzureAudience>>",
            },
            "trial": {
              "docs": undefined,
              "type": "optional<AzureProductVariantTrial>",
            },
            "visibility": {
              "docs": undefined,
              "type": "optional<AzureProductFeatureAvailabilityVisibility>",
            },
          },
        },
        "AzureProductFeatureAvailabilityVisibility": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Public",
              "value": "Public",
            },
            {
              "docs": undefined,
              "name": "Private",
              "value": "Private",
            },
          ],
        },
        "AzureProductListing": {
          "docs": undefined,
          "properties": {
            "accessInformation": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "assets": {
              "docs": "Not original fields. They are populated by other API calls",
              "type": "optional<list<AzureProductListingAsset>>",
            },
            "compatibleProducts": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "gettingStartedInstructions": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "keywords": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "languageCode": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "listingContacts": {
              "docs": undefined,
              "type": "optional<list<AzureListingContact>>",
            },
            "listingUris": {
              "docs": undefined,
              "type": "optional<list<AzureListingUri>>",
            },
            "productDisplayName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "publisherName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<literal<"AzureListing">>",
            },
            "shortDescription": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "summary": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "title": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureProductListingAsset": {
          "docs": undefined,
          "properties": {
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "fileName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "fileSasUri": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "friendlyName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "order": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "publisherDefinedSasUri": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<AzureProductListingAssetResourceType>",
            },
            "state": {
              "docs": undefined,
              "type": "optional<AzureProductListingAssetState>",
            },
            "type": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureProductListingAssetResourceType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "ListingAsset",
              "value": "ListingAsset",
            },
            {
              "docs": undefined,
              "name": "ListingImage",
              "value": "ListingImage",
            },
            {
              "docs": undefined,
              "name": "ListingVideo",
              "value": "ListingVideo",
            },
          ],
        },
        "AzureProductListingAssetState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "PendingUpload",
              "value": "PendingUpload",
            },
            {
              "docs": undefined,
              "name": "Uploaded",
              "value": "Uploaded",
            },
            {
              "docs": undefined,
              "name": "InProcessing",
              "value": "InProcessing",
            },
            {
              "docs": undefined,
              "name": "Processed",
              "value": "Processed",
            },
            {
              "docs": undefined,
              "name": "ProcessFailed",
              "value": "ProcessFailed",
            },
          ],
        },
        "AzureProductPackageConfiguration": {
          "docs": undefined,
          "properties": {
            "azureActiveDirectoryApplicationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "azureActiveDirectoryTenantID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "connectionWebhook": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "landingPageUri": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<literal<"AzureSoftwareAsAServicePackageConfiguration">>",
            },
          },
        },
        "AzureProductProperty": {
          "docs": undefined,
          "properties": {
            "additionalCategories": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "appVersion": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "applicableProducts": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "categories": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "customAmendments": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "extendedProperties": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "globalAmendmentTerms": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "hideKeys": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "industries": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "leveledCategories": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "leveledIndustries": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "marketingOnlyChange": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "productTags": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "submissionVersion": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "termsOfUse": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "useEnterpriseContract": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
          },
        },
        "AzureProductSetup": {
          "docs": undefined,
          "properties": {
            "callToAction": {
              "docs": undefined,
              "type": "optional<AzureProductSetupCallToAction>",
            },
            "channelStates": {
              "docs": undefined,
              "type": "optional<list<AzureTypeValue>>",
            },
            "enableTestDrive": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<literal<"AzureProductSetup">>",
            },
            "sellingOption": {
              "docs": undefined,
              "type": "optional<AzureProductSetupSellingOption>",
            },
            "testDriveType": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "trialUri": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureProductSetupCallToAction": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "free",
              "value": "free",
            },
            {
              "docs": undefined,
              "name": "FreeTrial",
              "value": "free-trial",
            },
            {
              "docs": undefined,
              "name": "ContactMe",
              "value": "contact-me",
            },
          ],
        },
        "AzureProductSetupSellingOption": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "ListingOnly",
              "value": "ListingOnly",
            },
            {
              "docs": undefined,
              "name": "ListAndSell",
              "value": "ListAndSell",
            },
          ],
        },
        "AzureProductSubmission": {
          "docs": undefined,
          "properties": {
            "areResourcesReady": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "friendlyName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "pendingUpdateInfo": {
              "docs": undefined,
              "type": "optional<AzurePendingUpdateInfo>",
            },
            "publishedTimeInUtc": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "releaseNumber": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<literal<"Submission">>",
            },
            "resources": {
              "docs": undefined,
              "type": "optional<list<AzureTypeValue>>",
            },
            "state": {
              "docs": undefined,
              "type": "optional<AzureProductSubmissionState>",
            },
            "subState": {
              "docs": undefined,
              "type": "optional<AzureProductSubmissionSubState>",
            },
            "targets": {
              "docs": undefined,
              "type": "optional<list<AzureTypeValue>>",
            },
            "variantResources": {
              "docs": undefined,
              "type": "optional<list<AzureVariantResource>>",
            },
          },
        },
        "AzureProductSubmissionState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Inprogress",
              "value": "Inprogress",
            },
            {
              "docs": undefined,
              "name": "Published",
              "value": "Published",
            },
          ],
        },
        "AzureProductSubmissionSubState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "InDraft",
              "value": "InDraft",
            },
            {
              "docs": undefined,
              "name": "Submitted",
              "value": "Submitted",
            },
            {
              "docs": undefined,
              "name": "Failed",
              "value": "Failed",
            },
            {
              "docs": undefined,
              "name": "FailedInCertification",
              "value": "FailedInCertification",
            },
            {
              "docs": undefined,
              "name": "ReadyToPublish",
              "value": "ReadyToPublish",
            },
            {
              "docs": undefined,
              "name": "Publishing",
              "value": "Publishing",
            },
            {
              "docs": undefined,
              "name": "Published",
              "value": "Published",
            },
            {
              "docs": undefined,
              "name": "InStore",
              "value": "InStore",
            },
          ],
        },
        "AzureProductVariant": {
          "docs": undefined,
          "properties": {
            "azureGovernmentCertifications": {
              "docs": undefined,
              "type": "optional<list<AzureGovernmentCertification>>",
            },
            "cloudAvailabilities": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "conversionPaths": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "extendedProperties": {
              "docs": undefined,
              "type": "optional<list<AzureTypeValue>>",
            },
            "externalID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "featureAvailabilities": {
              "docs": "Not original fields. They are populated by other API calls",
              "type": "optional<list<AzureProductFeatureAvailability>>",
            },
            "friendlyName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "leadGenID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "referenceVariantID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "resourceType": {
              "docs": undefined,
              "type": "optional<AzureProductVariantResourceType>",
            },
            "state": {
              "docs": undefined,
              "type": "optional<AzureProductVariantState>",
            },
          },
        },
        "AzureProductVariantCustomMeter": {
          "docs": undefined,
          "properties": {
            "displayName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "includedBaseQuantities": {
              "docs": undefined,
              "type": "optional<list<AzureIncludedBaseQuantity>>",
            },
            "isEnabled": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "priceInUsd": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "uniqueID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "unitOfMeasure": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureProductVariantPriceSchedule": {
          "docs": undefined,
          "properties": {
            "dateTimeRange": {
              "docs": undefined,
              "type": "optional<AzureLocalizedTimeRange>",
            },
            "friendlyName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "isBaseSchedule": {
              "docs": "There is only one base schedule.",
              "type": "optional<boolean>",
            },
            "marketCodes": {
              "docs": "ISO country code",
              "type": "optional<list<string>>",
            },
            "schedules": {
              "docs": undefined,
              "type": "optional<list<AzurePriceSchedule>>",
            },
          },
        },
        "AzureProductVariantResourceType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AzureSkuVariant",
              "value": "AzureSkuVariant",
            },
            {
              "docs": undefined,
              "name": "AzureTestDriveVariant",
              "value": "AzureTestDriveVariant",
            },
          ],
        },
        "AzureProductVariantState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "InActive",
              "value": "InActive",
            },
            {
              "docs": undefined,
              "name": "Active",
              "value": "Active",
            },
          ],
        },
        "AzureProductVariantTrial": {
          "docs": undefined,
          "properties": {
            "dateTimeRange": {
              "docs": undefined,
              "type": "optional<AzureLocalizedTimeRange>",
            },
            "duration": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "durationType": {
              "docs": undefined,
              "type": "optional<AzureProductVariantTrialDurationType>",
            },
            "type": {
              "docs": undefined,
              "type": "optional<AzureProductVariantTrialType>",
            },
          },
        },
        "AzureProductVariantTrialDurationType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Minute",
              "value": "Minute",
            },
            {
              "docs": undefined,
              "name": "Days",
              "value": "Days",
            },
            {
              "docs": undefined,
              "name": "Months",
              "value": "Months",
            },
          ],
        },
        "AzureProductVariantTrialType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "NoTrial",
              "value": "NoTrial",
            },
            {
              "docs": undefined,
              "name": "TimedAccess",
              "value": "TimedAccess",
            },
            {
              "docs": undefined,
              "name": "TimedUsage",
              "value": "TimedUsage",
            },
            {
              "docs": undefined,
              "name": "Unlimited",
              "value": "Unlimited",
            },
          ],
        },
        "AzureTypeValue": {
          "docs": undefined,
          "properties": {
            "type": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "value": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AzureValidationResult": {
          "docs": undefined,
          "properties": {
            "errorMessage": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "memberNames": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
          },
        },
        "AzureVariantResource": {
          "docs": undefined,
          "properties": {
            "resources": {
              "docs": undefined,
              "type": "optional<list<AzureTypeValue>>",
            },
            "variantID": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "DeleteIntegrationRequestPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "DeleteIntegrationRequestService": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "MARKETPLACE",
              "value": "MARKETPLACE",
            },
            {
              "docs": undefined,
              "name": "CRM",
              "value": "CRM",
            },
          ],
        },
        "GetIntegrationRequestPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "GetIntegrationRequestService": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "MARKETPLACE",
              "value": "MARKETPLACE",
            },
            {
              "docs": undefined,
              "name": "CRM",
              "value": "CRM",
            },
          ],
        },
        "GithubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTag": {
          "docs": undefined,
          "properties": {
            "key": {
              "docs": "One part of a key-value pair that makes up a tag. A key is a label that acts
like a category for the specific tag values.

This member is required.",
              "type": "optional<string>",
            },
            "value": {
              "docs": "One part of a key-value pair that makes up a tag. A value acts as a descriptor
within a tag category (key). The value can be empty or null.

This member is required.",
              "type": "optional<string>",
            },
          },
        },
        "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse": {
          "docs": undefined,
          "properties": {
            "count": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "result": {
              "docs": undefined,
              "type": "optional<list<GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessage>>",
            },
          },
        },
        "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessage": {
          "docs": undefined,
          "properties": {
            "dimension": {
              "docs": "Dimension identifier",
              "type": "optional<string>",
            },
            "effectiveStartTime": {
              "docs": "Time in UTC when the usage event occurred",
              "type": "optional<string>",
            },
            "error": {
              "docs": undefined,
              "type": "optional<GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponse>",
            },
            "messageTime": {
              "docs": "Time this message was created in UTC",
              "type": "optional<string>",
            },
            "planId": {
              "docs": "Plan associated with the purchased offer",
              "type": "optional<string>",
            },
            "quantity": {
              "docs": "Number of units consumed",
              "type": "optional<double>",
            },
            "resourceId": {
              "docs": "Identifier of the resource against which usage is emitted",
              "type": "optional<string>",
            },
            "resourceUri": {
              "docs": "Identifier of the managed app resource against which usage is emitted",
              "type": "optional<string>",
            },
            "status": {
              "docs": "Status of the operation.",
              "type": "optional<GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum>",
            },
            "usageEventId": {
              "docs": "Unique identifier associated with the usage event",
              "type": "optional<string>",
            },
          },
        },
        "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponse": {
          "docs": undefined,
          "properties": {
            "additionalInfo": {
              "docs": undefined,
              "type": "optional<GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo>",
            },
            "code": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "message": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo": {
          "docs": undefined,
          "properties": {
            "acceptedMessage": {
              "docs": undefined,
              "type": "optional<GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponse>",
            },
          },
        },
        "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponse": {
          "docs": undefined,
          "properties": {
            "dimension": {
              "docs": "Dimension identifier",
              "type": "optional<string>",
            },
            "effectiveStartTime": {
              "docs": "Time in UTC when the usage event occurred",
              "type": "optional<string>",
            },
            "messageTime": {
              "docs": "Time this message was created in UTC",
              "type": "optional<string>",
            },
            "planId": {
              "docs": "Plan associated with the purchased offer",
              "type": "optional<string>",
            },
            "quantity": {
              "docs": "Number of units consumed",
              "type": "optional<double>",
            },
            "resourceId": {
              "docs": "Identifier of the resource against which usage is emitted",
              "type": "optional<string>",
            },
            "resourceUri": {
              "docs": "Identifier of the managed app resource against which usage is emitted",
              "type": "optional<string>",
            },
            "status": {
              "docs": "Status of the operation.",
              "type": "optional<GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum>",
            },
            "usageEventId": {
              "docs": "Unique identifier associated with the usage event",
              "type": "optional<string>",
            },
          },
        },
        "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Accepted",
              "value": "Accepted",
            },
            {
              "docs": undefined,
              "name": "Expired",
              "value": "Expired",
            },
            {
              "docs": undefined,
              "name": "Duplicate",
              "value": "Duplicate",
            },
            {
              "docs": undefined,
              "name": "Error",
              "value": "Error",
            },
            {
              "docs": undefined,
              "name": "ResourceNotFound",
              "value": "ResourceNotFound",
            },
            {
              "docs": undefined,
              "name": "ResourceNotAuthorized",
              "value": "ResourceNotAuthorized",
            },
            {
              "docs": undefined,
              "name": "InvalidDimension",
              "value": "InvalidDimension",
            },
            {
              "docs": undefined,
              "name": "InvalidQuantity",
              "value": "InvalidQuantity",
            },
            {
              "docs": undefined,
              "name": "BadArgument",
              "value": "BadArgument",
            },
          ],
        },
        "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent": {
          "docs": undefined,
          "properties": {
            "action": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "agreementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "amount": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "balanceImpacting": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "bankTraceID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "billingAddressID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "brokerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "buyerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "currency": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "dataFeedProductID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "disbursementBillingEventID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "endUserAccountID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "fromAccountID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "insertDate": {
              "docs": undefined,
              "type": "optional<SqlNullTime>",
            },
            "invoiceDate": {
              "docs": undefined,
              "type": "optional<SqlNullTime>",
            },
            "invoiceID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "offerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "parentBillingEventID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "paymentDueDate": {
              "docs": undefined,
              "type": "optional<SqlNullTime>",
            },
            "productID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "toAccountID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "transactionReferenceID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "transactionType": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "usagePeriodEndDate": {
              "docs": undefined,
              "type": "optional<SqlNullTime>",
            },
            "usagePeriodStartDate": {
              "docs": undefined,
              "type": "optional<SqlNullTime>",
            },
          },
        },
        "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenue": {
          "docs": undefined,
          "properties": {
            "azureAssetID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "azureBillingAccountID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "azureCustomerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "azureOfferID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "azurePlanID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "billingModel": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "buyerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "earningUsd": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "offerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "payoutStatus": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "productID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "purchaseRecordID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "revenueUsd": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "termEndDate": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "termStartDate": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsage": {
          "docs": undefined,
          "properties": {
            "abandoned": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "accountID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "buyerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "charges": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "currency": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "dueVendor": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "googleEntity": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "insightAccountID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "offerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "paymentSchedule": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "paymentType": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "prepayCredits": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "productID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "refundBalanceDeductedThisMonth": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "refundBalanceOutstanding": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "refundReason": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "released": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "reportDate": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "resource": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "sku": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "trialUse": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "unit": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "usage": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "usedBy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "withheld": {
              "docs": undefined,
              "type": "optional<double>",
            },
          },
        },
        "ListEntitlementsByPartnerRequestPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "ListOffersByPartnerRequestPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "ListProductsByPartnerRequestPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "ListRevenueRecordDetailsRequestPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "ListRevenueRecordsRequestPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "MarketplacemeteringBatchMeterUsageOutput": {
          "docs": undefined,
          "properties": {
            "resultMetadata": {
              "docs": "Metadata pertaining to the operation's result.",
              "type": "optional<middleware.Metadata>",
            },
            "results": {
              "docs": "Contains all UsageRecords processed by BatchMeterUsage. These records were
either honored by AWS Marketplace Metering Service or were invalid. Invalid
records should be fixed before being resubmitted.",
              "type": "optional<list<TypesUsageRecordResult>>",
            },
            "unprocessedRecords": {
              "docs": "Contains all UsageRecords that were not processed by BatchMeterUsage. This is a
list of UsageRecords. You can retry the failed request by making another
BatchMeterUsage call with this list as input in the BatchMeterUsageRequest.",
              "type": "optional<list<TypesUsageRecord>>",
            },
          },
        },
        "ServicecontrolReportError": {
          "docs": undefined,
          "properties": {
            "operationId": {
              "docs": "OperationId: The Operation.operation_id value from the request.",
              "type": "optional<string>",
            },
            "status": {
              "docs": "Status: Details of the error when processing the Operation.",
              "type": "optional<ServicecontrolStatus>",
            },
          },
        },
        "ServicecontrolReportResponse": {
          "docs": undefined,
          "properties": {
            "reportErrors": {
              "docs": "ReportErrors: Partial failures, one for each \`Operation\` in the
request that failed processing. There are three possible combinations
of the RPC status: 1. The combination of a successful RPC status and
an empty \`report_errors\` list indicates a complete success where all
\`Operations\` in the request are processed successfully. 2. The
combination of a successful RPC status and a non-empty
\`report_errors\` list indicates a partial success where some
\`Operations\` in the request succeeded. Each \`Operation\` that failed
processing has a corresponding item in this list. 3. A failed RPC
status indicates a general non-deterministic failure. When this
happens, it's impossible to know which of the 'Operations' in the
request succeeded or failed.",
              "type": "optional<list<ServicecontrolReportError>>",
            },
            "serviceConfigId": {
              "docs": "ServiceConfigId: The actual config id used to process the request.",
              "type": "optional<string>",
            },
            "serviceRolloutId": {
              "docs": "ServiceRolloutId: The current service rollout id used to process the
request.",
              "type": "optional<string>",
            },
          },
        },
        "ServicecontrolStatus": {
          "docs": undefined,
          "properties": {
            "code": {
              "docs": "Code: The status code, which should be an enum value of
google.rpc.Code.",
              "type": "optional<integer>",
            },
            "details": {
              "docs": "Details: A list of messages that carry the error details. There is a
common set of message types for APIs to use.",
              "type": "optional<list<list<integer>>>",
            },
            "message": {
              "docs": "Message: A developer-facing error message, which should be in
English. Any user-facing error message should be localized and sent
in the google.rpc.Status.details field, or localized by the client.",
              "type": "optional<string>",
            },
          },
        },
        "SharedAddEntitlementCreditResponse": {
          "docs": undefined,
          "properties": {
            "creditAmountIncrement": {
              "docs": "The amount to be added to the credit amount.",
              "type": "optional<double>",
            },
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "entitlementTermID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "newCreditAmount": {
              "docs": "The new credit amount after the increment.",
              "type": "optional<double>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedApiClientAccessToken": {
          "docs": undefined,
          "properties": {
            "access_token": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "expires_in": {
              "docs": "The token expires in 1 hour",
              "type": "optional<integer>",
            },
            "token_type": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsAccountIdentifier": {
          "docs": undefined,
          "properties": {
            "awsAccountID": {
              "docs": "The AWS Account ID of the buyer in AWS Marketplace",
              "type": "optional<string>",
            },
            "awsCustomerID": {
              "docs": "The AWS Customer ID of the buyer in AWS Marketplace",
              "type": "optional<string>",
            },
            "companyInfo": {
              "docs": undefined,
              "type": "optional<SharedCompanyInfo>",
            },
            "dataFeedAccountID": {
              "docs": "The Account ID in AWS Marketplace Data Feed service",
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsAceIntegration": {
          "docs": undefined,
          "properties": {
            "credential": {
              "docs": undefined,
              "type": "optional<SharedAwsIntegrationCredential>",
            },
            "partnerId": {
              "docs": "The partner ID of the ISV/Seller in AWS Partner Network.",
              "type": "optional<string>",
            },
            "s3BucketName": {
              "docs": "The Name of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
              "type": "optional<string>",
            },
            "s3BucketRegion": {
              "docs": "The region of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
              "type": "optional<string>",
            },
            "secretKey": {
              "docs": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsIntegrationCredential": {
          "docs": undefined,
          "properties": {
            "accessKeyId": {
              "docs": "The access key ID of the IAM user for Suger service to access the client's AWS services.",
              "type": "optional<string>",
            },
            "iamUserArn": {
              "docs": "The ARN of the IAM user for Suger service to access the client's AWS services.",
              "type": "optional<string>",
            },
            "secretAccessKey": {
              "docs": "The secret access key of the IAM user for Suger service to access the client's AWS services.",
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsMarketplaceIntegration": {
          "docs": "The data struct to store integration info for Suger service to access the client's AWS services.",
          "properties": {
            "externalID": {
              "docs": "The external ID for assuming IAM role. If empty, means no external ID set or needed. Otherwise, it should be auth_id in table identity.organization.",
              "type": "optional<string>",
            },
            "iamRoleArn": {
              "docs": "The AWS IAM role for Suger service to assume to access the client's AWS services.",
              "type": "optional<string>",
            },
            "marketplaceStartDate": {
              "docs": "AWS Marketplace start date which comes from MDFS Full-Sync.",
              "type": "optional<datetime>",
            },
            "mcasFullSyncDone": {
              "docs": "Is AWS Marketplace Commerce Analytics Service (MCAS) full-sync done.",
              "type": "optional<boolean>",
            },
            "mcasIamRoleArn": {
              "docs": "IAM role ARN to allow AWS Marketplace to write to the S3 bucket and publish notifications to the SNS topic.",
              "type": "optional<string>",
            },
            "mcasS3Bucket": {
              "docs": "S3 bucket for AWS Marketplace Commerce Analytics Service (MCAS)",
              "type": "optional<string>",
            },
            "mcasSnsTopic": {
              "docs": "SNS topic ARN for AWS Marketplace Commerce Analytics Service (MCAS)",
              "type": "optional<string>",
            },
            "mdfsFullSyncDone": {
              "docs": "Is AWS Marketplace Data Feeds Service (MDFS) full-sync done.",
              "type": "optional<boolean>",
            },
            "mdfsKmsKeyArn": {
              "docs": "KMS Key ARN for the S3 bucket of AWS Marketplace Data Feeds Service (MDFS)",
              "type": "optional<string>",
            },
            "mdfsS3BucketArn": {
              "docs": "S3 bucket ARN for AWS Marketplace Data Feeds Service (MDFS)",
              "type": "optional<string>",
            },
            "policyArns": {
              "docs": "The policy ARNs in the IAM role.",
              "type": "optional<list<string>>",
            },
            "revenueRecordFullSyncDone": {
              "docs": "Is AWS Marketplace Revenue Record full-sync done.",
              "type": "optional<boolean>",
            },
          },
        },
        "SharedAwsSaasProduct": {
          "docs": undefined,
          "properties": {
            "Description": {
              "docs": undefined,
              "type": "optional<SharedAwsSaasProductDescription>",
            },
            "Dimensions": {
              "docs": undefined,
              "type": "optional<list<SharedAwsSaasProductDimension>>",
            },
            "PromotionalResources": {
              "docs": undefined,
              "type": "optional<SharedAwsSaasProductPromotionalResources>",
            },
            "SupportInformation": {
              "docs": undefined,
              "type": "optional<SharedAwsSaasProductSupportInformation>",
            },
            "Versions": {
              "docs": undefined,
              "type": "optional<list<SharedAwsSaasProductVersion>>",
            },
            "dataFeedProductId": {
              "docs": "The product Id in AWS Marketplace Data Feed Service.",
              "type": "optional<string>",
            },
            "productId": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsSaasProductAdditionalResource": {
          "docs": undefined,
          "properties": {
            "Text": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Type": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Url": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsSaasProductDeliveryOption": {
          "docs": undefined,
          "properties": {
            "FulfillmentUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Type": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsSaasProductDescription": {
          "docs": undefined,
          "properties": {
            "AssociatedProducts": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Categories": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "EuW8Submitted": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "Highlights": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "LongDescription": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Manufacturer": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "ProductCode": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "ProductTitle": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Registered": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "SearchKeywords": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "ShortDescription": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Sku": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "UsW9Submitted": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "Visibility": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsSaasProductDimension": {
          "docs": undefined,
          "properties": {
            "Description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Key": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Types": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "Unit": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsSaasProductPromotionalResources": {
          "docs": undefined,
          "properties": {
            "AdditionalResources": {
              "docs": undefined,
              "type": "optional<list<SharedAwsSaasProductAdditionalResource>>",
            },
            "LogoUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsSaasProductSupportInformation": {
          "docs": undefined,
          "properties": {
            "Description": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsSaasProductVersion": {
          "docs": undefined,
          "properties": {
            "DeliveryOptions": {
              "docs": undefined,
              "type": "optional<list<SharedAwsSaasProductDeliveryOption>>",
            },
            "Id": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsSnsSubscription": {
          "docs": undefined,
          "properties": {
            "Endpoint": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Protocol": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "Status": {
              "docs": undefined,
              "type": "optional<SharedAwsSnsSubscriptionStatus>",
            },
            "SubscriptionArn": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "TopicArn": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAwsSnsSubscriptionStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "UNKNOWN",
              "value": "UNKNOWN",
            },
            {
              "docs": undefined,
              "name": "CONFIRMED",
              "value": "CONFIRMED",
            },
            {
              "docs": undefined,
              "name": "PENDING_CONFIRMATION",
              "value": "PENDING_CONFIRMATION",
            },
          ],
        },
        "SharedAzureAdIdentifier": {
          "docs": undefined,
          "properties": {
            "buyerInfo": {
              "docs": undefined,
              "type": "optional<SharedAzureBuyerInfo>",
            },
            "companyInfo": {
              "docs": undefined,
              "type": "optional<SharedCompanyInfo>",
            },
            "emailId": {
              "docs": "Email address",
              "type": "optional<string>",
            },
            "objectId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "puid": {
              "docs": "ID of the user, used as External ID of suger IdentityBuyer.",
              "type": "optional<string>",
            },
            "tenantId": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAzureBuyerInfo": {
          "docs": undefined,
          "properties": {
            "billingAccountId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "customerId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "firstName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "lastName": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAzureIntegration": {
          "docs": undefined,
          "properties": {
            "cmaFullSyncDone": {
              "docs": "Is Azure Commercial Marketplace Analytics (CMA) full-sync done.",
              "type": "optional<boolean>",
            },
            "credential": {
              "docs": undefined,
              "type": "optional<SharedAzureIntegrationCredential>",
            },
            "secretKey": {
              "docs": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
              "type": "optional<string>",
            },
          },
        },
        "SharedAzureIntegrationCredential": {
          "docs": undefined,
          "properties": {
            "accessToken": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "clientID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "clientSecret": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "expiresOn": {
              "docs": "The time when the access token expires.",
              "type": "optional<string>",
            },
            "refreshToken": {
              "docs": "The refresh token used to refresh the access token.",
              "type": "optional<string>",
            },
            "tenantID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "tokenScope": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "tokenType": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedAzureMarketplaceSubscription": {
          "docs": undefined,
          "properties": {
            "allowedCustomerOperations": {
              "docs": undefined,
              "type": "optional<list<SharedAzureMarketplaceSubscriptionAllowedCustomerOperationsItem>>",
            },
            "autoRenew": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "beneficiary": {
              "docs": undefined,
              "type": "optional<SharedAzureAdIdentifier>",
            },
            "created": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "fulfillmentId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "isFreeTrial": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "isTest": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "lastModified": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "offerId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "planId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "publisherId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "purchaser": {
              "docs": undefined,
              "type": "optional<SharedAzureAdIdentifier>",
            },
            "quantity": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "saasSubscriptionStatus": {
              "docs": undefined,
              "type": "optional<SharedAzureMarketplaceSubscriptionStatus>",
            },
            "sandboxType": {
              "docs": undefined,
              "type": "optional<SharedAzureMarketplaceSubscriptionSandboxType>",
            },
            "sessionId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "sessionMode": {
              "docs": undefined,
              "type": "optional<SharedAzureMarketplaceSubscriptionSessionMode>",
            },
            "storeFront": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "term": {
              "docs": undefined,
              "type": "optional<SharedAzureTerm>",
            },
          },
        },
        "SharedAzureMarketplaceSubscriptionAllowedCustomerOperationsItem": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Read",
              "value": "Read",
            },
            {
              "docs": undefined,
              "name": "Update",
              "value": "Update",
            },
            {
              "docs": undefined,
              "name": "Delete",
              "value": "Delete",
            },
          ],
        },
        "SharedAzureMarketplaceSubscriptionSandboxType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "None",
              "value": "None",
            },
            {
              "docs": undefined,
              "name": "Csp",
              "value": "Csp",
            },
          ],
        },
        "SharedAzureMarketplaceSubscriptionSessionMode": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "None",
              "value": "None",
            },
            {
              "docs": undefined,
              "name": "DryRun",
              "value": "DryRun",
            },
          ],
        },
        "SharedAzureMarketplaceSubscriptionStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "NotStarted",
              "value": "NotStarted",
            },
            {
              "docs": undefined,
              "name": "PendingFulfillmentStart",
              "value": "PendingFulfillmentStart",
            },
            {
              "docs": undefined,
              "name": "Subscribed",
              "value": "Subscribed",
            },
            {
              "docs": undefined,
              "name": "Suspended",
              "value": "Suspended",
            },
            {
              "docs": undefined,
              "name": "Unsubscribed",
              "value": "Unsubscribed",
            },
          ],
        },
        "SharedAzureTerm": {
          "docs": undefined,
          "properties": {
            "chargeDuration": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "endDate": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "startDate": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "termUnit": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedBuyerInfo": {
          "docs": undefined,
          "properties": {
            "awsBuyer": {
              "docs": "Buyer from AWS Marketplace",
              "type": "optional<SharedAwsAccountIdentifier>",
            },
            "azureBuyer": {
              "docs": "Buyer from Azure Marketplace",
              "type": "optional<SharedAzureAdIdentifier>",
            },
            "collectableAmount": {
              "docs": "The amount that the seller can collect. It excludes the marketplace commision fee.",
              "type": "optional<double>",
            },
            "disbursedAmount": {
              "docs": "The amount that has been disbursed to the seller account.",
              "type": "optional<double>",
            },
            "gcpBuyer": {
              "docs": "Buyer from GCP Marketplace",
              "type": "optional<SharedGcpMarketplaceUserAccount>",
            },
            "invoicedAmount": {
              "docs": "The amount that the buyer has got invoiced.",
              "type": "optional<double>",
            },
          },
        },
        "SharedCommitDimension": {
          "docs": "The commit dimension. There may be one or more commit dimensions defined in single product, offer or entitlement.",
          "properties": {
            "category": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "isUserCreated": {
              "docs": "Whether this commit dimension is newly created by user when creating AWS Marketplace Contract private offer.",
              "type": "optional<boolean>",
            },
            "key": {
              "docs": "API name of the dimension",
              "type": "optional<string>",
            },
            "length": {
              "docs": "The term length for the commit amount, such as 6 months, or 1 year. length is used together with timeUnit",
              "type": "optional<integer>",
            },
            "maximumUsers": {
              "docs": "The maximum number of users for PER_USER commit",
              "type": "optional<integer>",
            },
            "minimumUsers": {
              "docs": "The minimum number of users for PER_USER commit",
              "type": "optional<integer>",
            },
            "name": {
              "docs": "Display name of the dimension",
              "type": "optional<string>",
            },
            "quantity": {
              "docs": "The quantity of this commit.",
              "type": "optional<integer>",
            },
            "rate": {
              "docs": "The commit amount.",
              "type": "optional<double>",
            },
            "timeUnit": {
              "docs": "The term unit for the commit amount.",
              "type": "optional<SharedCommitDimensionTimeUnit>",
            },
            "type": {
              "docs": undefined,
              "type": "optional<SharedCommitDimensionType>",
            },
            "types": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
          },
        },
        "SharedCommitDimensionTimeUnit": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "DAY",
              "value": "DAY",
            },
            {
              "docs": undefined,
              "name": "MONTH",
              "value": "MONTH",
            },
            {
              "docs": undefined,
              "name": "YEAR",
              "value": "YEAR",
            },
          ],
        },
        "SharedCommitDimensionType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "FLAT_RATE",
              "value": "FLAT_RATE",
            },
            {
              "docs": undefined,
              "name": "PER_USER",
              "value": "PER_USER",
            },
          ],
        },
        "SharedCompanyInfo": {
          "docs": undefined,
          "properties": {
            "addressLine1": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "addressLine2": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "city": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "country": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "emailDomain": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "postalCode": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "state": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedContact": {
          "docs": undefined,
          "properties": {
            "company": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "email": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedCreateIntegrationParamsPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "SharedEntitlementInfo": {
          "docs": undefined,
          "properties": {
            "autoRenew": {
              "docs": "Is this Entitlement Auto Renew enabled.",
              "type": "optional<boolean>",
            },
            "awsEntitlements": {
              "docs": "Nullable. AWS Entitlements from AWS Marketplace.",
              "type": "optional<list<TypesEntitlement>>",
            },
            "azureSubscriptions": {
              "docs": "Nullable. Azure Subscriptions from Azure Marketplace.",
              "type": "optional<list<SharedAzureMarketplaceSubscription>>",
            },
            "collectableAmount": {
              "docs": "The amount that the seller can collect. It excludes the marketplace commision fee.",
              "type": "optional<double>",
            },
            "commitAmount": {
              "docs": "The amount that the buyer has committed to pay. It can be the sum of payment installments if applicable.",
              "type": "optional<double>",
            },
            "commits": {
              "docs": "The dimensions for commit.",
              "type": "optional<list<SharedCommitDimension>>",
            },
            "currency": {
              "docs": "The default Currency is USD.",
              "type": "optional<string>",
            },
            "dimensions": {
              "docs": "The dimensions for usage-based metering.",
              "type": "optional<list<SharedMeteringDimension>>",
            },
            "disbursedAmount": {
              "docs": "The amount that has been disbursed to the seller account.",
              "type": "optional<double>",
            },
            "discount": {
              "docs": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
              "type": "optional<double>",
            },
            "eulaType": {
              "docs": undefined,
              "type": "optional<SharedEulaType>",
            },
            "eulaUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "gcpEntitlements": {
              "docs": "Nullable. GCP Entitlements from GCP Marketplace.",
              "type": "optional<list<SharedGcpMarketplaceEntitlement>>",
            },
            "gcpPlans": {
              "docs": "Only applicable for GCP Marketplace Entitlements.",
              "type": "optional<list<SharedGcpPurchasePlan>>",
            },
            "invoicedAmount": {
              "docs": "The amount that the buyer has got invoiced.",
              "type": "optional<double>",
            },
            "paymentInstallments": {
              "docs": "For flexible payment schedules",
              "type": "optional<list<SharedPaymentInstallment>>",
            },
            "refundCancelationPolicy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "sellerNotes": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedEntitlementTermInfo": {
          "docs": undefined,
          "properties": {
            "type": {
              "docs": undefined,
              "type": "optional<SharedEntitlementTermType>",
            },
          },
        },
        "SharedEntitlementTermType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Unknown",
              "value": "",
            },
            {
              "docs": undefined,
              "name": "AutoRenew",
              "value": "AutoRenew",
            },
            {
              "docs": undefined,
              "name": "ManualRenew",
              "value": "ManualRenew",
            },
            {
              "docs": undefined,
              "name": "PlanChange",
              "value": "PlanChange",
            },
            {
              "docs": undefined,
              "name": "QuantityChange",
              "value": "QuantityChange",
            },
            {
              "docs": undefined,
              "name": "Signup",
              "value": "Signup",
            },
          ],
        },
        "SharedEntitlementUsageRecord": {
          "docs": undefined,
          "properties": {
            "amounts": {
              "docs": undefined,
              "type": "optional<list<double>>",
            },
            "date": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "keys": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "quantities": {
              "docs": undefined,
              "type": "optional<list<double>>",
            },
          },
        },
        "SharedEntityType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "ORGANIZATION",
              "value": "ORGANIZATION",
            },
            {
              "docs": undefined,
              "name": "PRODUCT",
              "value": "PRODUCT",
            },
            {
              "docs": undefined,
              "name": "OFFER",
              "value": "OFFER",
            },
            {
              "docs": undefined,
              "name": "ENTITLEMENT",
              "value": "ENTITLEMENT",
            },
            {
              "docs": undefined,
              "name": "ENTITLEMENT_TERM",
              "value": "ENTITLEMENT_TERM",
            },
            {
              "docs": undefined,
              "name": "INTEGRATION",
              "value": "INTEGRATION",
            },
          ],
        },
        "SharedEulaType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "UNKNOWN",
              "value": "",
            },
            {
              "docs": undefined,
              "name": "SCMP",
              "value": "SCMP",
            },
            {
              "docs": undefined,
              "name": "ECMP",
              "value": "ECMP",
            },
            {
              "docs": undefined,
              "name": "CUSTOM",
              "value": "CUSTOM",
            },
            {
              "docs": undefined,
              "name": "ISV",
              "value": "ISV",
            },
            {
              "docs": undefined,
              "name": "CURRENT",
              "value": "CURRENT",
            },
          ],
        },
        "SharedGcpCommerceProducerExternalAccountSpec": {
          "docs": undefined,
          "properties": {
            "loginUri": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "signupUri": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "singleSignOnUri": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedGcpCommerceProducerListingSpec": {
          "docs": undefined,
          "properties": {
            "externalAccountSpec": {
              "docs": undefined,
              "type": "optional<SharedGcpCommerceProducerExternalAccountSpec>",
            },
            "listingType": {
              "docs": undefined,
              "type": "optional<literal<"BillingIntegratedManagedService">>",
            },
            "marketingSpec": {
              "docs": undefined,
              "type": "optional<SharedGcpCommerceProducerMarketingSpec>",
            },
            "purchaseSpec": {
              "docs": undefined,
              "type": "optional<SharedGcpCommerceProducerPurchaseSpec>",
            },
          },
        },
        "SharedGcpCommerceProducerMarketingSpec": {
          "docs": undefined,
          "properties": {
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "displayNames": {
              "docs": "In format of "{provider-id}/{product-name}"",
              "type": "optional<list<string>>",
            },
            "eulaUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "externalMarketingUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "icon": {
              "docs": "In format of "base64://..."",
              "type": "optional<string>",
            },
            "searchCategories": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "searchDescription": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "searchKeywords": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "shortTitle": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "supportSpec": {
              "docs": undefined,
              "type": "optional<SharedGcpCommerceProducerSupportSpec>",
            },
            "title": {
              "docs": "The product title.",
              "type": "optional<string>",
            },
          },
        },
        "SharedGcpCommerceProducerPrice": {
          "docs": undefined,
          "properties": {
            "currencyCode": {
              "docs": "ISO currency code, Three UPPER_CASE characters",
              "type": "optional<string>",
            },
            "nanos": {
              "docs": "Decimal part of the price. For example, 2000000 = 0.002, 200000000 = 0.2",
              "type": "optional<integer>",
            },
            "units": {
              "docs": "Integer part of the price.",
              "type": "optional<integer>",
            },
          },
        },
        "SharedGcpCommerceProducerPriceInfo": {
          "docs": undefined,
          "properties": {
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "priceModel": {
              "docs": undefined,
              "type": "optional<SharedGcpCommerceProducerPriceModel>",
            },
            "subscriptionPlans": {
              "docs": "Commit price plan, when priceModel = SUBSCRIPTION or SUBSCRIPTION_PLUS_USAGE.",
              "type": "optional<list<SharedGcpCommerceProducerPriceSubscription>>",
            },
            "usageFees": {
              "docs": "Usage based metering plan, when priceModel =  USAGE or SUBSCRIPTION_PLUS_USAGE",
              "type": "optional<list<SharedGcpCommerceProducerPriceUsage>>",
            },
          },
        },
        "SharedGcpCommerceProducerPriceModel": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "FREE",
              "value": "FREE",
            },
            {
              "docs": undefined,
              "name": "SUBSCRIPTION",
              "value": "SUBSCRIPTION",
            },
            {
              "docs": undefined,
              "name": "USAGE",
              "value": "USAGE",
            },
            {
              "docs": undefined,
              "name": "SUBSCRIPTION_PLUS_USAGE",
              "value": "SUBSCRIPTION_PLUS_USAGE",
            },
          ],
        },
        "SharedGcpCommerceProducerPriceSubscription": {
          "docs": undefined,
          "properties": {
            "period": {
              "docs": undefined,
              "type": "optional<literal<"ONE_YEAR">>",
            },
            "price": {
              "docs": "the Monthly subscription fee as commit.",
              "type": "optional<SharedGcpCommerceProducerPrice>",
            },
            "taxCategoryOverride": {
              "docs": undefined,
              "type": "optional<literal<"TAX_CATEGORY_UNSPECIFIED">>",
            },
          },
        },
        "SharedGcpCommerceProducerPriceTier": {
          "docs": undefined,
          "properties": {
            "endUsageAmount": {
              "docs": "The usage amount below which this tier is effective.",
              "type": "optional<double>",
            },
            "price": {
              "docs": "The price of this tier",
              "type": "optional<SharedGcpCommerceProducerPrice>",
            },
            "startUsageAmount": {
              "docs": "The usage amount beyond which this tier is effective.",
              "type": "optional<double>",
            },
          },
        },
        "SharedGcpCommerceProducerPriceUsage": {
          "docs": undefined,
          "properties": {
            "displayQuantity": {
              "docs": "Default value is 1.",
              "type": "optional<integer>",
            },
            "metricId": {
              "docs": "the usage metering dimension key",
              "type": "optional<string>",
            },
            "priceTiers": {
              "docs": undefined,
              "type": "optional<list<SharedGcpCommerceProducerPriceTier>>",
            },
            "taxCategoryOverride": {
              "docs": undefined,
              "type": "optional<literal<"TAX_CATEGORY_UNSPECIFIED">>",
            },
          },
        },
        "SharedGcpCommerceProducerPurchaseMetric": {
          "docs": undefined,
          "properties": {
            "description": {
              "docs": "Description: A detailed description of the metric, which can be used in documentation.",
              "type": "optional<string>",
            },
            "displayName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "displayUnit": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "displayUnitDescription": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": "The usage metering dimension key, in format of "{plan_key}_{usage_dimension_key}"",
              "type": "optional<string>",
            },
            "metricKind": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": "Name: The resource name of the metric descriptor, in format of "{service_name}/{plan_key}_{usage_dimension_key}"",
              "type": "optional<string>",
            },
            "reportingUnit": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "unit": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "valueType": {
              "docs": undefined,
              "type": "optional<SharedValueType>",
            },
          },
        },
        "SharedGcpCommerceProducerPurchaseSpec": {
          "docs": undefined,
          "properties": {
            "metrics": {
              "docs": undefined,
              "type": "optional<list<SharedGcpCommerceProducerPurchaseMetric>>",
            },
            "purchaseOptionSpecs": {
              "docs": undefined,
              "type": "optional<list<SharedGcpPurchasePlan>>",
            },
          },
        },
        "SharedGcpCommerceProducerServiceBilling": {
          "docs": undefined,
          "properties": {
            "metrics": {
              "docs": "in format of ["{product-name}.endpoints.{provider-id}.cloud.goog/{plan_key}_{usage_dimension_key}"]",
              "type": "optional<list<string>>",
            },
          },
        },
        "SharedGcpCommerceProducerServiceConfig": {
          "docs": undefined,
          "properties": {
            "billing": {
              "docs": undefined,
              "type": "optional<SharedGcpCommerceProducerServiceBilling>",
            },
            "metrics": {
              "docs": "Metrics: Defines the metrics used by this service.",
              "type": "optional<list<SharedGcpCommerceProducerPurchaseMetric>>",
            },
            "name": {
              "docs": "In format of "{product-name}.endpoints.{provider-id}.cloud.goog"",
              "type": "optional<string>",
            },
            "producerProjectId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "title": {
              "docs": "The Product title",
              "type": "optional<string>",
            },
          },
        },
        "SharedGcpCommerceProducerSupportSpec": {
          "docs": undefined,
          "properties": {
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "email": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "uri": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedGcpIntegration": {
          "docs": undefined,
          "properties": {
            "gcpProjectId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "gcpProjectNumber": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "identityProviderId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "partnerId": {
              "docs": "The GCP Marketplace Partner ID, it is also called as Provider ID somewhere.",
              "type": "optional<string>",
            },
            "pubsubTopic": {
              "docs": "The resource name of the Pub/Sub topic to receive notifications from Google when a user signs up for your service, purchases a plan, or changes an existing plan.",
              "type": "optional<string>",
            },
            "reportBucket": {
              "docs": "The GCP storage bucket name to store the GCP Marketplace reports.",
              "type": "optional<string>",
            },
            "reportFullSyncDone": {
              "docs": "Is GCP Marketplace Report full-sync done.",
              "type": "optional<boolean>",
            },
            "reportStartDate": {
              "docs": "The UTC date when GCP Marketplace reprots start to generate.",
              "type": "optional<datetime>",
            },
            "serviceAccountEmail": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "serviceNames": {
              "docs": "The array of service resource names of the listings in GCP Marketplace.",
              "type": "optional<list<string>>",
            },
            "workloadIdentityPoolId": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedGcpMarketplaceConsumer": {
          "docs": undefined,
          "properties": {
            "project": {
              "docs": "The project name with format \`projects/\`.",
              "type": "optional<string>",
            },
          },
        },
        "SharedGcpMarketplaceEntitlement": {
          "docs": undefined,
          "properties": {
            "account": {
              "docs": "The resource name of the account that this entitlement is based on, if any, in format ""providers/{provider_id}/accounts/{account_id}"",
              "type": "optional<string>",
            },
            "consumers": {
              "docs": "The resources using this entitlement, if applicable.",
              "type": "optional<list<SharedGcpMarketplaceConsumer>>",
            },
            "createTime": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": "Entitlement Id generated by GCP Marketplace. For Marketplace pub/sub event.",
              "type": "optional<string>",
            },
            "inputProperties": {
              "docs": "The custom properties that were collected from the user to create this entitlement.",
              "type": "optional<list<integer>>",
            },
            "messageToUser": {
              "docs": "Provider-supplied message that is displayed to the end user. Currently this is used to communicate progress and ETA for
provisioning. This field can be updated only when a user is waiting for an action from the provider, i.e. entitlement state is
EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically when the entitlement state changes.",
              "type": "optional<string>",
            },
            "name": {
              "docs": "The resource name of the entitlement. Entitlement names have the form \`providers/{provider_id}/entitlements/{entitlement_id}\`.",
              "type": "optional<string>",
            },
            "newOfferDuration": {
              "docs": "in ISO 8601 duration format, such as "P2Y3M". For Marketplace pub/sub event.",
              "type": "optional<string>",
            },
            "newOfferEndTime": {
              "docs": "Output only. The end time of the new offer. Field is empty if the pending plan change is not moving to an offer.
If the offer was created with a term instead of a specified end date, this field is empty.",
              "type": "optional<string>",
            },
            "newOfferStartTime": {
              "docs": "Output only. The start time of the new offer. Field is empty if the pending plan change is not moving to an offer.",
              "type": "optional<string>",
            },
            "newPendingOffer": {
              "docs": "The name of the offer the entitlement is switching to upon a pending plan change. Only exists if the
pending plan change is moving to an offer. Format:
'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
'projects/{project}/services/{service}/standardOffers/{offer-id}',
depending on whether the offer is private or public.",
              "type": "optional<string>",
            },
            "newPendingOfferDuration": {
              "docs": "The offer duration of the new offer in ISO 8601 duration format. Field is empty if the pending plan
change is not moving to an offer since the entitlement is not pending, only the plan change is pending.",
              "type": "optional<string>",
            },
            "newPendingPlan": {
              "docs": "The identifier of the pending new plan. Required if the product has plans and the entitlement has a pending plan change.",
              "type": "optional<string>",
            },
            "newPlan": {
              "docs": "When the buyer changes plan, For Marketplace pub/sub event.",
              "type": "optional<string>",
            },
            "offer": {
              "docs": "The name of the offer that was procured. Field is empty if order was not made using an offer. Format:
'projects/{project}/services/{service}/privateOffers/{offer-id}' OR 'projects/{project}/services/{service}/standardOffers/{offer-id}',
depending on whether the offer is private or public.",
              "type": "optional<string>",
            },
            "offerDuration": {
              "docs": "The offer duration of the current offer in ISO 8601 duration format. Field is empty if entitlement was not made using an offer, such as "P1Y", "P2M"",
              "type": "optional<string>",
            },
            "offerEndTime": {
              "docs": "Output only. End time for the Offer association corresponding to this entitlement. The field is only populated if the entitlement is currently associated with an Offer.",
              "type": "optional<string>",
            },
            "plan": {
              "docs": "The identifier of the plan that was procured. Required if the product has plans.",
              "type": "optional<string>",
            },
            "product": {
              "docs": "The identifier of the entity that was purchased. This may actually represent a product, quote, or offer.
For Private offer, "projects/project-id/services/product-id.endpoints.partner-id.cloud.goog/privateOffers/private-offer-id"",
              "type": "optional<string>",
            },
            "productExternalName": {
              "docs": "The identifier of the product that was procured.",
              "type": "optional<string>",
            },
            "provider": {
              "docs": "The ID of the service provider under Cloud Commerce platform that this entitlement was created against.",
              "type": "optional<string>",
            },
            "quoteExternalName": {
              "docs": "The identifier of the quote that was used to procure, such as the private offer Id. Empty if the order is not purchased using a quote.",
              "type": "optional<string>",
            },
            "state": {
              "docs": "Enums of the Entitlement State. https://cloud.google.com/marketplace/docs/partners/commerce-procurement-api/reference/rest/v1/providers.entitlements#EntitlementState",
              "type": "optional<SharedGcpMarketplaceEntitlementState>",
            },
            "subscriptionEndTime": {
              "docs": "The End time for the subscription corresponding to this entitlement.",
              "type": "optional<string>",
            },
            "updateTime": {
              "docs": "The last update timestamp. It is the endTime for the cancelled entitlement.",
              "type": "optional<datetime>",
            },
            "usageReportingId": {
              "docs": "The consumerId to use when reporting usage through the Service Control API. See the consumerId field at
Reporting Metrics (https://cloud.google.com/service-control/reporting-metrics) for more details.
This field is present only if the product has usage-based billing configured.",
              "type": "optional<string>",
            },
          },
        },
        "SharedGcpMarketplaceEntitlementState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "STATE_UNSPECIFIED",
              "value": "ENTITLEMENT_STATE_UNSPECIFIED",
            },
            {
              "docs": undefined,
              "name": "ACTIVATION_REQUESTED",
              "value": "ENTITLEMENT_ACTIVATION_REQUESTED",
            },
            {
              "docs": undefined,
              "name": "ACTIVE",
              "value": "ENTITLEMENT_ACTIVE",
            },
            {
              "docs": undefined,
              "name": "PENDING_CANCELLATION",
              "value": "ENTITLEMENT_PENDING_CANCELLATION",
            },
            {
              "docs": undefined,
              "name": "CANCELLED",
              "value": "ENTITLEMENT_CANCELLED",
            },
            {
              "docs": undefined,
              "name": "PENDING_PLAN_CHANGE",
              "value": "ENTITLEMENT_PENDING_PLAN_CHANGE",
            },
            {
              "docs": undefined,
              "name": "PENDING_PLAN_CHANGE_APPROVAL",
              "value": "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL",
            },
            {
              "docs": undefined,
              "name": "SUSPENDED",
              "value": "ENTITLEMENT_SUSPENDED",
            },
          ],
        },
        "SharedGcpMarketplaceUserAccount": {
          "docs": undefined,
          "properties": {
            "approvals": {
              "docs": "The approvals for this account, that are permitted or have been completed.",
              "type": "optional<list<SharedGcpMarketplaceUserAccountApproval>>",
            },
            "createTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "id": {
              "docs": "GCP Marketplace User Account ID.",
              "type": "optional<string>",
            },
            "inputProperties": {
              "docs": "RFC3339 UTC timestamp",
              "type": "optional<list<integer>>",
            },
            "name": {
              "docs": "The resource name of the account. Account names have the form providers/{provider_id}/accounts/{account_id}.",
              "type": "optional<string>",
            },
            "provider": {
              "docs": "The identifier of the service provider (SaaS Seller) that this account was created against.",
              "type": "optional<string>",
            },
            "state": {
              "docs": "The state of the account. An account might not be able to make a purchase if the billing account is suspended, for example.",
              "type": "optional<SharedGcpMarketplaceUserAccountState>",
            },
            "updateTime": {
              "docs": "RFC3339 UTC timestamp",
              "type": "optional<datetime>",
            },
            "userInfo": {
              "docs": undefined,
              "type": "optional<SharedGcpUserInfo>",
            },
          },
        },
        "SharedGcpMarketplaceUserAccountApproval": {
          "docs": undefined,
          "properties": {
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "reason": {
              "docs": "An explanation for the state of the approval.",
              "type": "optional<string>",
            },
            "state": {
              "docs": undefined,
              "type": "optional<SharedGcpMarketplaceUserAccountApprovalState>",
            },
            "updateTime": {
              "docs": "RFC3339 UTC timestamp",
              "type": "optional<string>",
            },
          },
        },
        "SharedGcpMarketplaceUserAccountApprovalState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "STATE_UNSPECIFIED",
              "value": "STATE_UNSPECIFIED",
            },
            {
              "docs": undefined,
              "name": "PENDING",
              "value": "PENDING",
            },
            {
              "docs": undefined,
              "name": "APPROVED",
              "value": "APPROVED",
            },
            {
              "docs": undefined,
              "name": "REJECTED",
              "value": "REJECTED",
            },
          ],
        },
        "SharedGcpMarketplaceUserAccountState": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "UNSPECIFIED",
              "value": "ACCOUNT_STATE_UNSPECIFIED",
            },
            {
              "docs": undefined,
              "name": "ACTIVE",
              "value": "ACCOUNT_ACTIVE",
            },
          ],
        },
        "SharedGcpProduct": {
          "docs": undefined,
          "properties": {
            "createTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "id": {
              "docs": "Nullable, GCP Marketplace Product UUID",
              "type": "optional<string>",
            },
            "listingSpec": {
              "docs": undefined,
              "type": "optional<SharedGcpCommerceProducerListingSpec>",
            },
            "marketplace": {
              "docs": undefined,
              "type": "optional<literal<"marketplaces/google-cloud">>",
            },
            "name": {
              "docs": "In format of "projects/{project-number}/listings/{product-name}.endpoints.{provider-id}.cloud.goog"",
              "type": "optional<string>",
            },
            "service": {
              "docs": "In format of "services/{product-name}.endpoints.{provider-id}.cloud.goog"",
              "type": "optional<string>",
            },
            "serviceConfig": {
              "docs": undefined,
              "type": "optional<SharedGcpCommerceProducerServiceConfig>",
            },
          },
        },
        "SharedGcpPurchasePlan": {
          "docs": undefined,
          "properties": {
            "name": {
              "docs": "The Plan key.",
              "type": "optional<string>",
            },
            "priceInfo": {
              "docs": undefined,
              "type": "optional<SharedGcpCommerceProducerPriceInfo>",
            },
            "purchaseMode": {
              "docs": undefined,
              "type": "optional<literal<"PURCHASE_MODE_PUBLIC">>",
            },
            "title": {
              "docs": "The Plan title",
              "type": "optional<string>",
            },
          },
        },
        "SharedGcpUserInfo": {
          "docs": undefined,
          "properties": {
            "roles": {
              "docs": "An array of strings representing the user's roles. Right now, it can be either: ** account_admin, which indicates that the user is a Billing Account Administrator of the billing account that purchased the product, or ** project_editor, which indicates that the user is a Project Editor, but not a Billing Administrator, of the project under that billing account.",
              "type": "optional<list<string>>",
            },
            "user_identity": {
              "docs": "The user's obfuscated GAIA ID, which can be used to initiate Open ID Connect.",
              "type": "optional<string>",
            },
          },
        },
        "SharedGetRevenueReportParamsPartner": {
          "docs": "Required.",
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "SharedHubspotCrmCredential": {
          "docs": undefined,
          "properties": {
            "accessToken": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "acquiredOn": {
              "docs": "UTC timestamp on receiving the auth response",
              "type": "optional<integer>",
            },
            "expiresIn": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "refreshToken": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedHubspotCrmIntegration": {
          "docs": undefined,
          "properties": {
            "credential": {
              "docs": undefined,
              "type": "optional<SharedHubspotCrmCredential>",
            },
            "portalId": {
              "docs": "Hubspot Account Id",
              "type": "optional<integer>",
            },
            "secretKey": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedIdentityBuyer": {
          "docs": undefined,
          "properties": {
            "creationTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "externalID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "info": {
              "docs": undefined,
              "type": "optional<SharedBuyerInfo>",
            },
            "lastUpdateTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "partner": {
              "docs": undefined,
              "type": "optional<SharedIdentityBuyerPartner>",
            },
          },
        },
        "SharedIdentityBuyerPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "SharedIdentityIntegration": {
          "docs": undefined,
          "properties": {
            "createdBy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "creationTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "info": {
              "docs": undefined,
              "type": "optional<SharedIntegrationInfo>",
            },
            "lastUpdateTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "lastUpdatedBy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "partner": {
              "docs": undefined,
              "type": "optional<SharedIdentityIntegrationPartner>",
            },
            "service": {
              "docs": undefined,
              "type": "optional<literal<"MARKETPLACE">>",
            },
            "status": {
              "docs": undefined,
              "type": "optional<SharedIdentityIntegrationStatus>",
            },
          },
        },
        "SharedIdentityIntegrationPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "SharedIdentityIntegrationStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "CREATED",
              "value": "CREATED",
            },
            {
              "docs": undefined,
              "name": "VERIFIED",
              "value": "VERIFIED",
            },
            {
              "docs": undefined,
              "name": "NOT_VERIFIED",
              "value": "NOT_VERIFIED",
            },
          ],
        },
        "SharedIntegrationInfo": {
          "docs": undefined,
          "properties": {
            "awsAceIntegration": {
              "docs": "AWS ACE Integration",
              "type": "optional<SharedAwsAceIntegration>",
            },
            "awsIntegration": {
              "docs": "AWS Marketplace Integration",
              "type": "optional<SharedAwsMarketplaceIntegration>",
            },
            "azureIntegration": {
              "docs": "Azure Marketplace Integration",
              "type": "optional<SharedAzureIntegration>",
            },
            "gcpIntegration": {
              "docs": "GCP Marketplace Integration",
              "type": "optional<SharedGcpIntegration>",
            },
            "hubspotCrmIntegration": {
              "docs": "Integration for HubSpot CRM",
              "type": "optional<SharedHubspotCrmIntegration>",
            },
            "salesforceCrmIntegration": {
              "docs": "Integration for Salesforce CRM",
              "type": "optional<SharedSalesforceCrmIntegration>",
            },
            "slackIntegration": {
              "docs": undefined,
              "type": "optional<SharedSlackIntegration>",
            },
          },
        },
        "SharedListRevenueRecordDetailsResponse": {
          "docs": undefined,
          "properties": {
            "nextOffset": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "revenueRecordDetails": {
              "docs": undefined,
              "type": "optional<list<SharedRevenueRecordDetail>>",
            },
          },
        },
        "SharedListRevenueRecordsResponse": {
          "docs": undefined,
          "properties": {
            "nextOffset": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "revenueRecords": {
              "docs": undefined,
              "type": "optional<list<SharedRevenueRecord>>",
            },
          },
        },
        "SharedListUsageRecordGroupsResponse": {
          "docs": undefined,
          "properties": {
            "nextOffset": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "usageRecordGroups": {
              "docs": undefined,
              "type": "optional<list<SharedMeteringUsageRecordGroup>>",
            },
          },
        },
        "SharedListUsageRecordReportsResponse": {
          "docs": undefined,
          "properties": {
            "nextOffset": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "usageRecordReports": {
              "docs": undefined,
              "type": "optional<list<SharedMeteringUsageRecordReport>>",
            },
          },
        },
        "SharedMeteringDimension": {
          "docs": "The dimension to meter usage in entitlement.",
          "properties": {
            "category": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "description": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "includedBaseQuantities": {
              "docs": "how many quantities of this dimension are included in the commit.",
              "type": "optional<list<AzureIncludedBaseQuantity>>",
            },
            "key": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": "Display name of the dimension",
              "type": "optional<string>",
            },
            "rate": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "types": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "usageCount": {
              "docs": "The current Dimension Usage Count. Available when call GetEntitlement API.",
              "type": "optional<SharedUsageCount>",
            },
            "valueType": {
              "docs": undefined,
              "type": "optional<SharedValueType>",
            },
          },
        },
        "SharedMeteringUsageRecordGroup": {
          "docs": undefined,
          "properties": {
            "creationTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "lastUpdateTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "metaInfo": {
              "docs": undefined,
              "type": "optional<SharedMeteringUsageRecordGroupMetaInfo>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "records": {
              "docs": undefined,
              "type": "optional<map<string, double>>",
            },
            "serialID": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "status": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "usageRecordReportID": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedMeteringUsageRecordGroupMetaInfo": {
          "docs": undefined,
          "properties": {
            "originRecords": {
              "docs": "The original records reported by the customer before convertion. If no dimension mapping is applied, this field is the same as the records field.",
              "type": "optional<map<string, double>>",
            },
          },
        },
        "SharedMeteringUsageRecordReport": {
          "docs": undefined,
          "properties": {
            "creationTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "entitlementTermID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "info": {
              "docs": undefined,
              "type": "optional<SharedMeteringUsageRecordReportInfo>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "productID": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedMeteringUsageRecordReportInfo": {
          "docs": undefined,
          "properties": {
            "awsMeteringResponse": {
              "docs": "The raw response from AWS metering service.",
              "type": "optional<MarketplacemeteringBatchMeterUsageOutput>",
            },
            "azureMeteringResponse": {
              "docs": "The raw response from Azure metering service.",
              "type": "optional<GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse>",
            },
            "commitAmount": {
              "docs": "The amount of the commit if applicable.",
              "type": "optional<double>",
            },
            "creditAmount": {
              "docs": "The amount of the credit if applicable.",
              "type": "optional<double>",
            },
            "creditRecords": {
              "docs": "The credit usage records in the map of <DimensionKey, Count>",
              "type": "optional<map<string, double>>",
            },
            "dimensionUnitPrice": {
              "docs": "The unit price of each dimension in the map of <DimensionKey, UnitPrice>",
              "type": "optional<map<string, double>>",
            },
            "endTime": {
              "docs": "time in UTC when the UsageRecordReport ends",
              "type": "optional<datetime>",
            },
            "gcpMeteringResponse": {
              "docs": "The raw response from GCP metering service.",
              "type": "optional<ServicecontrolReportResponse>",
            },
            "includedRecords": {
              "docs": "The included usage records in the map of <DimensionKey, Count>",
              "type": "optional<map<string, double>>",
            },
            "reportedRecords": {
              "docs": "The reported usage records in the map of <DimensionKey, Count>",
              "type": "optional<map<string, double>>",
            },
            "startTime": {
              "docs": "time in UTC when the UsageRecordReport starts",
              "type": "optional<datetime>",
            },
            "usageRecordGroupIds": {
              "docs": "The IDs of UsageRecordGroups aggregated in this UsageRecordReport.",
              "type": "optional<list<string>>",
            },
            "usedCommitAmount": {
              "docs": "The amount of the used commit before the this usage record report if applicable.",
              "type": "optional<double>",
            },
            "usedCommitAmountIncrement": {
              "docs": "The amount of the used commit increment in this usage record report if applicable.",
              "type": "optional<double>",
            },
            "usedCreditAmount": {
              "docs": "The amount of the used credit before the this usage record report if applicable.",
              "type": "optional<double>",
            },
            "usedCreditAmountIncrement": {
              "docs": "The amount of the used credit increment in this usage record report if applicable.",
              "type": "optional<double>",
            },
          },
        },
        "SharedNotificationEvent": {
          "docs": undefined,
          "properties": {
            "action": {
              "docs": undefined,
              "type": "optional<SharedNotificationEventAction>",
            },
            "entityID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "entityStatus": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "entityType": {
              "docs": undefined,
              "type": "optional<SharedEntityType>",
            },
            "eventID": {
              "docs": "notification event id.",
              "type": "optional<string>",
            },
            "eventStatus": {
              "docs": "notification event status.",
              "type": "optional<SharedNotificationEventStatus>",
            },
            "lastUpdateTime": {
              "docs": "timestamp of the event when it is updated.",
              "type": "optional<datetime>",
            },
            "message": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": "suger organization id.",
              "type": "optional<string>",
            },
            "timestamp": {
              "docs": "timestamp of the event when it is scheduled or created.",
              "type": "optional<datetime>",
            },
          },
        },
        "SharedNotificationEventAction": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "ACCEPT",
              "value": "ACCEPT",
            },
            {
              "docs": undefined,
              "name": "CREATE",
              "value": "CREATE",
            },
            {
              "docs": undefined,
              "name": "DELETE",
              "value": "DELETE",
            },
            {
              "docs": undefined,
              "name": "CANCEL",
              "value": "CANCEL",
            },
            {
              "docs": undefined,
              "name": "PENDING_CANCEL",
              "value": "PENDING_CANCEL",
            },
            {
              "docs": undefined,
              "name": "EXPIRE",
              "value": "EXPIRE",
            },
            {
              "docs": undefined,
              "name": "REINSTATE",
              "value": "REINSTATE",
            },
            {
              "docs": undefined,
              "name": "SUSPEND",
              "value": "SUSPEND",
            },
            {
              "docs": undefined,
              "name": "UPDATE",
              "value": "UPDATE",
            },
            {
              "docs": undefined,
              "name": "NOTIFY_CONTACTS",
              "value": "NOTIFY_CONTACTS",
            },
            {
              "docs": undefined,
              "name": "TEST",
              "value": "TEST",
            },
          ],
        },
        "SharedNotificationEventStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "UNKNOWN",
              "value": "",
            },
            {
              "docs": undefined,
              "name": "SCHEDULED",
              "value": "SCHEDULED",
            },
            {
              "docs": undefined,
              "name": "PENDING",
              "value": "PENDING",
            },
            {
              "docs": undefined,
              "name": "DONE",
              "value": "DONE",
            },
            {
              "docs": undefined,
              "name": "FAILED",
              "value": "FAILED",
            },
          ],
        },
        "SharedOfferInfo": {
          "docs": undefined,
          "properties": {
            "azureOriginalPlan": {
              "docs": "The origin pricing of Azure plan. Only applicable for Azure Marketplace plans.",
              "type": "optional<AzurePriceAndAvailabilityPrivateOfferPlan>",
            },
            "azurePrivateOffer": {
              "docs": "The private offer for Azure Marketplace. Only applicable for Azure Marketplace private offers.",
              "type": "optional<AzureMarketplacePrivateOffer>",
            },
            "azureProductVariant": {
              "docs": undefined,
              "type": "optional<AzureProductVariant>",
            },
            "buyerAwsAccountIds": {
              "docs": "The buyers' AWS Account IDs of this offer.",
              "type": "optional<list<string>>",
            },
            "buyerAzureTenants": {
              "docs": "The buyers' Azure tenants of this offer.",
              "type": "optional<list<AzureAudience>>",
            },
            "commits": {
              "docs": undefined,
              "type": "optional<list<SharedCommitDimension>>",
            },
            "currency": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "dimensions": {
              "docs": undefined,
              "type": "optional<list<SharedMeteringDimension>>",
            },
            "discount": {
              "docs": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
              "type": "optional<double>",
            },
            "eulaType": {
              "docs": undefined,
              "type": "optional<SharedEulaType>",
            },
            "eulaUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "gcpMetrics": {
              "docs": "Only applicable for GCP Marketplace Offers (the default or private offer)",
              "type": "optional<list<SharedGcpCommerceProducerPurchaseMetric>>",
            },
            "gcpPlans": {
              "docs": "Only applicable for GCP Marketplace Offers (the default or private offer).",
              "type": "optional<list<SharedGcpPurchasePlan>>",
            },
            "paymentInstallments": {
              "docs": "For flexible payment schedule. Not empty if it is enabled.",
              "type": "optional<list<SharedPaymentInstallment>>",
            },
            "privateOfferUrl": {
              "docs": "The URL of the private offer sent to buyers to accept. Only applicable for private offer.",
              "type": "optional<string>",
            },
            "refundCancelationPolicy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "sellerNotes": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "visibility": {
              "docs": "The default visibility of offer is PRIVATE.",
              "type": "optional<SharedOfferInfoVisibility>",
            },
          },
        },
        "SharedOfferInfoVisibility": {
          "docs": "The default visibility of offer is PRIVATE.",
          "enum": [
            {
              "docs": undefined,
              "name": "PRIVATE",
              "value": "PRIVATE",
            },
            {
              "docs": undefined,
              "name": "PUBLIC",
              "value": "PUBLIC",
            },
          ],
        },
        "SharedOfferMetaInfo": {
          "docs": undefined,
          "properties": {
            "baseAgreementId": {
              "docs": "Applicable for AWS Marketplace only, when the IsAgreementBasedOffer is true.",
              "type": "optional<string>",
            },
            "contacts": {
              "docs": "The contacts of the offer to notify if any updates.",
              "type": "optional<list<SharedContact>>",
            },
            "isAgreementBasedOffer": {
              "docs": "Applicable for AWS Marketplace only, If this offer is agreement based offer.",
              "type": "optional<boolean>",
            },
            "isRenewalOffer": {
              "docs": "Applicable for AWS Marketplace only, If this offer is renewal offer.",
              "type": "optional<boolean>",
            },
            "notifications": {
              "docs": "The notifications of the offer if any updates. In most cases, it is to notify contacts/buyers when the offer is pending acceptance.",
              "type": "optional<list<SharedNotificationEvent>>",
            },
          },
        },
        "SharedOperation": {
          "docs": undefined,
          "properties": {
            "endTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "id": {
              "docs": "Operation ID.",
              "type": "optional<string>",
            },
            "message": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "startTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "status": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "type": {
              "docs": undefined,
              "type": "optional<shared.OperationType>",
            },
          },
        },
        "SharedPaymentInstallment": {
          "docs": undefined,
          "properties": {
            "amount": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "chargeOn": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
          },
        },
        "SharedProductInfo": {
          "docs": undefined,
          "properties": {
            "attributes": {
              "docs": undefined,
              "type": "optional<map<string, string>>",
            },
            "awsSaasProduct": {
              "docs": undefined,
              "type": "optional<SharedAwsSaasProduct>",
            },
            "awsSnsSubscriptions": {
              "docs": undefined,
              "type": "optional<list<SharedAwsSnsSubscription>>",
            },
            "azureProduct": {
              "docs": undefined,
              "type": "optional<AzureProduct>",
            },
            "commits": {
              "docs": undefined,
              "type": "optional<list<SharedCommitDimension>>",
            },
            "currency": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "dimensions": {
              "docs": undefined,
              "type": "optional<list<SharedMeteringDimension>>",
            },
            "eulaUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "gcpProduct": {
              "docs": undefined,
              "type": "optional<SharedGcpProduct>",
            },
            "refundCancelationPolicy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "sellerNotes": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedRevenueRecord": {
          "docs": undefined,
          "properties": {
            "amount": {
              "docs": "The revenue amount for the revenue report",
              "type": "optional<double>",
            },
            "buyerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "collectableAmount": {
              "docs": "The revenue amount that the seller/ISV can collect.",
              "type": "optional<double>",
            },
            "currency": {
              "docs": "The currency of the revenue in ISO 4217 format, such as "USD".",
              "type": "optional<string>",
            },
            "date": {
              "docs": "The date for the revenue report",
              "type": "optional<datetime>",
            },
            "disburseAmount": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "disburseDate": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "info": {
              "docs": undefined,
              "type": "optional<SharedRevenueRecordInfo>",
            },
            "invoiceAmount": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "invoiceDate": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "partner": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "paymentDueDate": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "productID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "refundDisburseAmount": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "refundDisburseDate": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "refundInvoiceAmount": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "refundInvoiceDate": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "taxAmount": {
              "docs": undefined,
              "type": "optional<double>",
            },
          },
        },
        "SharedRevenueRecordDetail": {
          "docs": undefined,
          "properties": {
            "awsRevenueRecordDetail": {
              "docs": "For AWS Marketplace",
              "type": "optional<GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent>",
            },
            "azureRevenueRecordDetail": {
              "docs": "For Azure Marketplace",
              "type": "optional<GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenue>",
            },
            "gcpRevenueRecordDetail": {
              "docs": "For GCP Marketplace",
              "type": "optional<GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsage>",
            },
          },
        },
        "SharedRevenueRecordInfo": {
          "docs": undefined,
          "properties": {
            "awsRevenueRecords": {
              "docs": "For raw revenue records in AWS Marketplace",
              "type": "optional<list<GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent>>",
            },
            "azureRevenueRecords": {
              "docs": "For raw revenue records in Azure Marketplace",
              "type": "optional<list<GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenue>>",
            },
            "gcpRevenueRecords": {
              "docs": "For raw revenue records in GCP Marketplace",
              "type": "optional<list<GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsage>>",
            },
          },
        },
        "SharedRevenueReport": {
          "docs": undefined,
          "properties": {
            "buyerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "partner": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "productID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "reportDate": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "reportType": {
              "docs": undefined,
              "type": "optional<SharedRevenueReportType>",
            },
            "revenueRecords": {
              "docs": undefined,
              "type": "optional<list<SharedRevenueRecord>>",
            },
            "service": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedRevenueReportType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "InvoicedAmount",
              "value": "InvoicedAmount",
            },
            {
              "docs": undefined,
              "name": "CollectableAmount",
              "value": "CollectableAmount",
            },
            {
              "docs": undefined,
              "name": "DisbursedAmount",
              "value": "DisbursedAmount",
            },
          ],
        },
        "SharedSalesforceCrmCredential": {
          "docs": undefined,
          "properties": {
            "access_token": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "exp": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "instance_url": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "refresh_token": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedSalesforceCrmIntegration": {
          "docs": undefined,
          "properties": {
            "credential": {
              "docs": "System created",
              "type": "optional<SharedSalesforceCrmCredential>",
            },
            "filters": {
              "docs": undefined,
              "type": "optional<list<SharedSalesforceSyncFilter>>",
            },
            "instanceUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "isSandbox": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "secretKey": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "subdomain": {
              "docs": "User defined when setting up the integration",
              "type": "optional<string>",
            },
          },
        },
        "SharedSalesforceSyncFilter": {
          "docs": undefined,
          "properties": {
            "fieldName": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "operator": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "value": {
              "docs": undefined,
              "type": "optional<unknown>",
            },
          },
        },
        "SharedSlackIntegration": {
          "docs": undefined,
          "properties": {
            "accessToken": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "appId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "authedUser": {
              "docs": undefined,
              "type": "optional<SlackOAuthV2ResponseAuthedUser>",
            },
            "botUserId": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "enterprise": {
              "docs": undefined,
              "type": "optional<SlackOAuthV2ResponseEnterprise>",
            },
            "expiresIn": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "incomingWebhook": {
              "docs": undefined,
              "type": "optional<SlackOAuthResponseIncomingWebhook>",
            },
            "redirectUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "refreshToken": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "scope": {
              "docs": "The scope of the access token. multiple scopes are separated by comma.",
              "type": "optional<string>",
            },
            "team": {
              "docs": undefined,
              "type": "optional<SlackOAuthV2ResponseTeam>",
            },
            "tokenType": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedUpdateIntegrationParamsPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "SharedUsageCount": {
          "docs": undefined,
          "properties": {
            "creditCount": {
              "docs": "The count of this dimension usage records that are handled as credit.",
              "type": "optional<double>",
            },
            "includedCount": {
              "docs": "The count of this dimension usage records that are handled as included in IncludedBaseQuantity",
              "type": "optional<double>",
            },
            "reportedCount": {
              "docs": "The count of this dimension usage records that are reported to cloud vendors.",
              "type": "optional<double>",
            },
          },
        },
        "SharedUsageReport": {
          "docs": undefined,
          "properties": {
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "reportDate": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "usageRecords": {
              "docs": undefined,
              "type": "optional<list<SharedEntitlementUsageRecord>>",
            },
          },
        },
        "SharedValueType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "UNSPECIFIED",
              "value": "VALUE_TYPE_UNSPECIFIED",
            },
            {
              "docs": undefined,
              "name": "BOOL",
              "value": "BOOL",
            },
            {
              "docs": undefined,
              "name": "INT64",
              "value": "INT64",
            },
            {
              "docs": undefined,
              "name": "DOUBLE",
              "value": "DOUBLE",
            },
            {
              "docs": undefined,
              "name": "STRING",
              "value": "STRING",
            },
            {
              "docs": undefined,
              "name": "DISTRIBUTION",
              "value": "DISTRIBUTION",
            },
            {
              "docs": undefined,
              "name": "MONEY",
              "value": "MONEY",
            },
          ],
        },
        "SharedWorkloadEntitlement": {
          "docs": undefined,
          "properties": {
            "buyerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "creationTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "endTime": {
              "docs": "nullable",
              "type": "optional<datetime>",
            },
            "entitlementTermID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "externalBuyerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "externalID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "externalProductID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "info": {
              "docs": undefined,
              "type": "optional<SharedEntitlementInfo>",
            },
            "lastUpdateTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "offerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "partner": {
              "docs": undefined,
              "type": "optional<SharedWorkloadEntitlementPartner>",
            },
            "productID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "service": {
              "docs": undefined,
              "type": "optional<literal<"MARKETPLACE">>",
            },
            "startTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "status": {
              "docs": undefined,
              "type": "optional<SharedWorkloadEntitlementStatus>",
            },
            "type": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedWorkloadEntitlementPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "SharedWorkloadEntitlementStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "ACTIVE",
              "value": "ACTIVE",
            },
            {
              "docs": undefined,
              "name": "CANCELLED",
              "value": "CANCELLED",
            },
            {
              "docs": undefined,
              "name": "SUSPENDED",
              "value": "SUSPENDED",
            },
            {
              "docs": undefined,
              "name": "PENDING_START",
              "value": "PENDING_START",
            },
            {
              "docs": undefined,
              "name": "UNKNOWN",
              "value": "UNKNOWN",
            },
          ],
        },
        "SharedWorkloadEntitlementTerm": {
          "docs": undefined,
          "properties": {
            "buyerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "commitAmount": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "creditAmount": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "endTime": {
              "docs": "nullable",
              "type": "optional<datetime>",
            },
            "entitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "entitlementInfo": {
              "docs": undefined,
              "type": "optional<SharedEntitlementInfo>",
            },
            "externalEntitlementID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "info": {
              "docs": undefined,
              "type": "optional<SharedEntitlementTermInfo>",
            },
            "offerID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "partner": {
              "docs": undefined,
              "type": "optional<SharedWorkloadEntitlementTermPartner>",
            },
            "productID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "service": {
              "docs": undefined,
              "type": "optional<literal<"MARKETPLACE">>",
            },
            "startTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "usedCommitAmount": {
              "docs": undefined,
              "type": "optional<double>",
            },
            "usedCreditAmount": {
              "docs": undefined,
              "type": "optional<double>",
            },
          },
        },
        "SharedWorkloadEntitlementTermPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "SharedWorkloadOffer": {
          "docs": undefined,
          "properties": {
            "createdBy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "creationTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "endTime": {
              "docs": "nullable",
              "type": "optional<datetime>",
            },
            "expireTime": {
              "docs": "nullable",
              "type": "optional<datetime>",
            },
            "externalID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "info": {
              "docs": undefined,
              "type": "optional<SharedOfferInfo>",
            },
            "lastUpdateTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "lastUpdatedBy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "metaInfo": {
              "docs": undefined,
              "type": "optional<SharedOfferMetaInfo>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "offerType": {
              "docs": undefined,
              "type": "optional<SharedWorkloadOfferOfferType>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "partner": {
              "docs": undefined,
              "type": "optional<SharedWorkloadOfferPartner>",
            },
            "productID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "service": {
              "docs": undefined,
              "type": "optional<literal<"MARKETPLACE">>",
            },
            "status": {
              "docs": undefined,
              "type": "optional<SharedWorkloadOfferStatus>",
            },
          },
        },
        "SharedWorkloadOfferOfferType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "DEFAULT",
              "value": "DEFAULT",
            },
            {
              "docs": undefined,
              "name": "CONTRACT",
              "value": "CONTRACT",
            },
            {
              "docs": undefined,
              "name": "SUBSCRIPTION",
              "value": "SUBSCRIPTION",
            },
            {
              "docs": undefined,
              "name": "FREE_TRIAL",
              "value": "FREE_TRIAL",
            },
            {
              "docs": undefined,
              "name": "FLAT_RATE",
              "value": "FLAT_RATE",
            },
            {
              "docs": undefined,
              "name": "PER_USER",
              "value": "PER_USER",
            },
            {
              "docs": undefined,
              "name": "PRIVATE",
              "value": "PRIVATE",
            },
            {
              "docs": undefined,
              "name": "UNKNOWN",
              "value": "UNKNOWN",
            },
          ],
        },
        "SharedWorkloadOfferPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "SharedWorkloadOfferStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "ACCEPTED",
              "value": "ACCEPTED",
            },
            {
              "docs": undefined,
              "name": "PENDING_CREATE",
              "value": "PENDING_CREATE",
            },
            {
              "docs": undefined,
              "name": "CREATE_FAILED",
              "value": "CREATE_FAILED",
            },
            {
              "docs": undefined,
              "name": "CREATE_SUCCESS",
              "value": "CREATE_SUCCESS",
            },
            {
              "docs": undefined,
              "name": "DRAFT",
              "value": "DRAFT",
            },
            {
              "docs": undefined,
              "name": "EXPIRED",
              "value": "EXPIRED",
            },
            {
              "docs": undefined,
              "name": "PENDING_ACCEPTANCE",
              "value": "PENDING_ACCEPTANCE",
            },
            {
              "docs": undefined,
              "name": "PENDING_CANCEL",
              "value": "PENDING_CANCEL",
            },
            {
              "docs": undefined,
              "name": "CANCEL_FAILED",
              "value": "CANCEL_FAILED",
            },
            {
              "docs": undefined,
              "name": "CANCEL_SUCCESS",
              "value": "CANCEL_SUCCESS",
            },
          ],
        },
        "SharedWorkloadProduct": {
          "docs": undefined,
          "properties": {
            "createdBy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "creationTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "externalID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "fulfillmentUrl": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "info": {
              "docs": undefined,
              "type": "optional<SharedProductInfo>",
            },
            "lastUpdateTime": {
              "docs": undefined,
              "type": "optional<datetime>",
            },
            "lastUpdatedBy": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "organizationID": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "partner": {
              "docs": undefined,
              "type": "optional<SharedWorkloadProductPartner>",
            },
            "productType": {
              "docs": undefined,
              "type": "optional<SharedWorkloadProductProductType>",
            },
            "service": {
              "docs": undefined,
              "type": "optional<literal<"MARKETPLACE">>",
            },
            "status": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SharedWorkloadProductPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "SharedWorkloadProductProductType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "UNKNOWN",
              "value": "UNKNOWN",
            },
            {
              "docs": undefined,
              "name": "SUBSCRIPTION",
              "value": "SUBSCRIPTION",
            },
            {
              "docs": undefined,
              "name": "CONTRACT",
              "value": "CONTRACT",
            },
            {
              "docs": undefined,
              "name": "FLAT_RATE",
              "value": "FLAT_RATE",
            },
            {
              "docs": undefined,
              "name": "PER_USER",
              "value": "PER_USER",
            },
            {
              "docs": undefined,
              "name": "USAGE_BASED",
              "value": "USAGE_BASED",
            },
          ],
        },
        "SlackOAuthResponseIncomingWebhook": {
          "docs": undefined,
          "properties": {
            "channel": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "channel_id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "configuration_url": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "url": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SlackOAuthV2ResponseAuthedUser": {
          "docs": undefined,
          "properties": {
            "access_token": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "expires_in": {
              "docs": undefined,
              "type": "optional<integer>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "refresh_token": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "scope": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "token_type": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SlackOAuthV2ResponseEnterprise": {
          "docs": undefined,
          "properties": {
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SlackOAuthV2ResponseTeam": {
          "docs": undefined,
          "properties": {
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "SqlNullTime": {
          "docs": undefined,
          "properties": {
            "time": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "valid": {
              "docs": "Valid is true if Time is not NULL",
              "type": "optional<boolean>",
            },
          },
        },
        "TypesEntitlement": {
          "docs": undefined,
          "properties": {
            "customerIdentifier": {
              "docs": "The customer identifier is a handle to each unique customer in an application.
Customer identifiers are obtained through the ResolveCustomer operation in AWS
Marketplace Metering Service.",
              "type": "optional<string>",
            },
            "dimension": {
              "docs": "The dimension for which the given entitlement applies. Dimensions represent
categories of capacity in a product and are specified when the product is listed
in AWS Marketplace.",
              "type": "optional<string>",
            },
            "expirationDate": {
              "docs": "The expiration date represents the minimum date through which this entitlement
is expected to remain valid. For contractual products listed on AWS Marketplace,
the expiration date is the date at which the customer will renew or cancel their
contract. Customers who are opting to renew their contract will still have
entitlements with an expiration date.",
              "type": "optional<string>",
            },
            "productCode": {
              "docs": "The product code for which the given entitlement applies. Product codes are
provided by AWS Marketplace when the product listing is created.",
              "type": "optional<string>",
            },
            "value": {
              "docs": undefined,
              "type": "optional<unknown>",
            },
          },
        },
        "TypesUsageAllocation": {
          "docs": undefined,
          "properties": {
            "allocatedUsageQuantity": {
              "docs": "The total quantity allocated to this bucket of usage.

This member is required.",
              "type": "optional<integer>",
            },
            "tags": {
              "docs": "The set of tags that define the bucket of usage. For the bucket of items with no
tags, this parameter can be left out.",
              "type": "optional<list<GithubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTag>>",
            },
          },
        },
        "TypesUsageRecord": {
          "docs": undefined,
          "properties": {
            "customerIdentifier": {
              "docs": "The CustomerIdentifier is obtained through the ResolveCustomer operation and
represents an individual buyer in your application.

This member is required.",
              "type": "optional<string>",
            },
            "dimension": {
              "docs": "During the process of registering a product on AWS Marketplace, dimensions are
specified. These represent different units of value in your application.

This member is required.",
              "type": "optional<string>",
            },
            "quantity": {
              "docs": "The quantity of usage consumed by the customer for the given dimension and time.
Defaults to 0 if not specified.",
              "type": "optional<integer>",
            },
            "timestamp": {
              "docs": "Timestamp, in UTC, for which the usage is being reported. Your application can
meter usage for up to one hour in the past. Make sure the timestamp value is not
before the start of the software usage.

This member is required.",
              "type": "optional<string>",
            },
            "usageAllocations": {
              "docs": "The set of UsageAllocations to submit. The sum of all UsageAllocation quantities
must equal the Quantity of the UsageRecord.",
              "type": "optional<list<TypesUsageAllocation>>",
            },
          },
        },
        "TypesUsageRecordResult": {
          "docs": undefined,
          "properties": {
            "meteringRecordId": {
              "docs": "The MeteringRecordId is a unique identifier for this metering event.",
              "type": "optional<string>",
            },
            "status": {
              "docs": "The UsageRecordResultStatus indicates the status of an individual UsageRecord
processed by BatchMeterUsage.

* Success- The UsageRecord was accepted and
honored by BatchMeterUsage.

* CustomerNotSubscribed- The CustomerIdentifier
specified is not able to use your product. The UsageRecord was not honored.
There are three causes for this result:

* The customer identifier is
invalid.

* The customer identifier provided in the metering record does not
have an active agreement or subscription with this product. Future UsageRecords
for this customer will fail until the customer subscribes to your product.

*
The customer's AWS account was suspended.

* DuplicateRecord- Indicates that the
UsageRecord was invalid and not honored. A previously metered UsageRecord had
the same customer, dimension, and time, but a different quantity.",
              "type": "optional<TypesUsageRecordResultStatus>",
            },
            "usageRecord": {
              "docs": "The UsageRecord that was part of the BatchMeterUsage request.",
              "type": "optional<TypesUsageRecord>",
            },
          },
        },
        "TypesUsageRecordResultStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "Success",
              "value": "Success",
            },
            {
              "docs": undefined,
              "name": "CustomerNotSubscribed",
              "value": "CustomerNotSubscribed",
            },
            {
              "docs": undefined,
              "name": "DuplicateRecord",
              "value": "DuplicateRecord",
            },
          ],
        },
        "UpdateIntegrationRequestPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "UpdateIntegrationRequestService": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "MARKETPLACE",
              "value": "MARKETPLACE",
            },
            {
              "docs": undefined,
              "name": "CRM",
              "value": "CRM",
            },
          ],
        },
        "VerifyIntegrationRequestPartner": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "AWS",
              "value": "AWS",
            },
            {
              "docs": undefined,
              "name": "AZURE",
              "value": "AZURE",
            },
            {
              "docs": undefined,
              "name": "GCP",
              "value": "GCP",
            },
          ],
        },
        "VerifyIntegrationRequestService": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "MARKETPLACE",
              "value": "MARKETPLACE",
            },
            {
              "docs": undefined,
              "name": "CRM",
              "value": "CRM",
            },
          ],
        },
        "middleware.Metadata": {
          "docs": undefined,
          "type": "map<string, unknown>",
        },
        "shared.OperationType": "literal<"TemporalWorkflow">",
      },
    },
    "api.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "GetApiClientAccessToken": {
            "auth": false,
            "display-name": "get api access token",
            "docs": "Get the Bearer Access Token by giving the Suger API Client ID & Client Secret.",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": undefined,
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {},
                },
              },
            ],
            "method": "POST",
            "path": "/public/apiClient/accessToken",
            "request": {
              "body": {
                "properties": {
                  "id": {
                    "docs": "The ID of the API Client.",
                    "type": "string",
                  },
                  "organizationID": "string",
                  "secret": {
                    "docs": "The secret of the API Client.",
                    "type": "string",
                  },
                },
              },
              "headers": undefined,
              "name": "SharedGetApiClientAccessTokenParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedApiClientAccessToken",
            },
          },
        },
      },
    },
    "buyer.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "GetBuyer": {
            "auth": true,
            "display-name": "get buyer",
            "docs": "get buyer by the given organization and buyer id",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "buyerId": "buyer-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "info": {
                      "awsBuyer": {
                        "companyInfo": {},
                      },
                      "azureBuyer": {
                        "buyerInfo": {},
                        "companyInfo": {},
                      },
                      "gcpBuyer": {
                        "approvals": [
                          {
                            "state": "STATE_UNSPECIFIED",
                          },
                        ],
                        "state": "ACCOUNT_STATE_UNSPECIFIED",
                        "userInfo": {},
                      },
                    },
                    "partner": "AWS",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/buyer/{buyerId}",
            "path-parameters": {
              "buyerId": {
                "docs": "Buyer ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedIdentityBuyer",
            },
          },
          "ListBuyersByOrganization": {
            "auth": true,
            "display-name": "list buyers by organization",
            "docs": "list all buyers by the given organization",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/buyer",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedIdentityBuyer>",
            },
          },
          "UpdateBuyerNameDescription": {
            "auth": true,
            "display-name": "update buyer name and description",
            "docs": "update buyer name and description by the given organization and buyer id",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "buyerId": "buyer-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": {},
                "response": {
                  "body": {
                    "info": {
                      "awsBuyer": {
                        "companyInfo": {},
                      },
                      "azureBuyer": {
                        "buyerInfo": {},
                        "companyInfo": {},
                      },
                      "gcpBuyer": {
                        "approvals": [
                          {
                            "state": "STATE_UNSPECIFIED",
                          },
                        ],
                        "state": "ACCOUNT_STATE_UNSPECIFIED",
                        "userInfo": {},
                      },
                    },
                    "partner": "AWS",
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/org/{orgId}/buyer/{buyerId}",
            "path-parameters": {
              "buyerId": {
                "docs": "Buyer ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "description": {
                    "docs": undefined,
                    "type": "optional<string>",
                  },
                  "id": {
                    "docs": undefined,
                    "type": "optional<string>",
                  },
                  "name": {
                    "docs": undefined,
                    "type": "optional<string>",
                  },
                  "organizationID": {
                    "docs": undefined,
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedIdentityBuyer",
            },
          },
        },
      },
    },
    "entitlement.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "AddEntitlementCredit": {
            "auth": true,
            "display-name": "add entitlement credit",
            "docs": "Add the credit amount to the given Entitlement. The credit amount is accumulated & saved in the current Entitlement Term of the gvien Entitlement.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "entitlementId": "entitlement-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {},
                },
              },
            ],
            "method": "POST",
            "path": "/org/{orgId}/entitlement/{entitlementId}/addCredit",
            "path-parameters": {
              "entitlementId": {
                "docs": "Entitlement ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "creditAmountIncrement": {
                    "docs": "The amount to be added to the credit amount.",
                    "type": "double",
                  },
                  "entitlementID": "string",
                  "organizationID": "string",
                },
              },
              "headers": undefined,
              "name": "SharedAddEntitlementCreditParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedAddEntitlementCreditResponse",
            },
          },
          "GetEntitlement": {
            "auth": true,
            "display-name": "get entitlement",
            "docs": "Get the entitlement by ID",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "entitlementId": "entitlement-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "info": {
                      "awsEntitlements": [
                        {},
                      ],
                      "azureSubscriptions": [
                        {
                          "allowedCustomerOperations": [
                            "Read",
                          ],
                          "beneficiary": {
                            "buyerInfo": {},
                            "companyInfo": {},
                          },
                          "purchaser": {
                            "buyerInfo": {},
                            "companyInfo": {},
                          },
                          "saasSubscriptionStatus": "NotStarted",
                          "sandboxType": "None",
                          "sessionMode": "None",
                          "term": {},
                        },
                      ],
                      "commits": [
                        {
                          "timeUnit": "DAY",
                          "type": "FLAT_RATE",
                        },
                      ],
                      "dimensions": [
                        {
                          "includedBaseQuantities": [
                            {
                              "recurringUnit": "Monthly",
                            },
                          ],
                          "usageCount": {},
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "eulaType": "",
                      "gcpEntitlements": [
                        {
                          "consumers": [
                            {},
                          ],
                          "state": "ENTITLEMENT_STATE_UNSPECIFIED",
                        },
                      ],
                      "gcpPlans": [
                        {
                          "priceInfo": {
                            "priceModel": "FREE",
                            "subscriptionPlans": [
                              {
                                "period": "ONE_YEAR",
                                "price": {},
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                            "usageFees": [
                              {
                                "priceTiers": [
                                  {
                                    "price": {},
                                  },
                                ],
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                          },
                          "purchaseMode": "PURCHASE_MODE_PUBLIC",
                        },
                      ],
                      "paymentInstallments": [
                        {},
                      ],
                    },
                    "partner": "AWS",
                    "service": "MARKETPLACE",
                    "status": "ACTIVE",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/entitlement/{entitlementId}",
            "path-parameters": {
              "entitlementId": {
                "docs": "Entitlement ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedWorkloadEntitlement",
            },
          },
          "ListEntitlements": {
            "auth": true,
            "display-name": "list entitlements",
            "docs": "List all entitlements under the organization",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/entitlement",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadEntitlement>",
            },
          },
          "ListEntitlementsByBuyer": {
            "auth": true,
            "display-name": "list entitlements by buyer",
            "docs": "List all entitlements of the given buyer",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/buyer/{buyerId}/entitlement",
            "path-parameters": {
              "buyerId": {
                "docs": "Buyer ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadEntitlement>",
            },
          },
          "ListEntitlementsByOffer": {
            "auth": true,
            "display-name": "list entitlements by offer",
            "docs": "List all entitlements under the given offer",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/offer/{offerId}/entitlement",
            "path-parameters": {
              "offerId": {
                "docs": "Offer ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadEntitlement>",
            },
          },
          "ListEntitlementsByPartner": {
            "auth": true,
            "display-name": "list entitlements by partner",
            "docs": "List all entitlements under the given partner",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/partner/{partner}/entitlement",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "partner": {
                "docs": "Cloud Partner",
                "type": "root.ListEntitlementsByPartnerRequestPartner",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadEntitlement>",
            },
          },
          "ListEntitlementsByProduct": {
            "auth": true,
            "display-name": "list entitlements by product",
            "docs": "List all entitlements under the given product",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/product/{productId}/entitlement",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "productId": {
                "docs": "Product ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadEntitlement>",
            },
          },
          "UpdateEntitlementName": {
            "auth": true,
            "display-name": "update entitlement name",
            "docs": "Update the name of the given Entitlement",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "entitlementId": "entitlement-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": {},
                "response": {
                  "body": {
                    "info": {
                      "awsEntitlements": [
                        {},
                      ],
                      "azureSubscriptions": [
                        {
                          "allowedCustomerOperations": [
                            "Read",
                          ],
                          "beneficiary": {
                            "buyerInfo": {},
                            "companyInfo": {},
                          },
                          "purchaser": {
                            "buyerInfo": {},
                            "companyInfo": {},
                          },
                          "saasSubscriptionStatus": "NotStarted",
                          "sandboxType": "None",
                          "sessionMode": "None",
                          "term": {},
                        },
                      ],
                      "commits": [
                        {
                          "timeUnit": "DAY",
                          "type": "FLAT_RATE",
                        },
                      ],
                      "dimensions": [
                        {
                          "includedBaseQuantities": [
                            {
                              "recurringUnit": "Monthly",
                            },
                          ],
                          "usageCount": {},
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "eulaType": "",
                      "gcpEntitlements": [
                        {
                          "consumers": [
                            {},
                          ],
                          "state": "ENTITLEMENT_STATE_UNSPECIFIED",
                        },
                      ],
                      "gcpPlans": [
                        {
                          "priceInfo": {
                            "priceModel": "FREE",
                            "subscriptionPlans": [
                              {
                                "period": "ONE_YEAR",
                                "price": {},
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                            "usageFees": [
                              {
                                "priceTiers": [
                                  {
                                    "price": {},
                                  },
                                ],
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                          },
                          "purchaseMode": "PURCHASE_MODE_PUBLIC",
                        },
                      ],
                      "paymentInstallments": [
                        {},
                      ],
                    },
                    "partner": "AWS",
                    "service": "MARKETPLACE",
                    "status": "ACTIVE",
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementName",
            "path-parameters": {
              "entitlementId": {
                "docs": "Entitlement ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "id": {
                    "docs": undefined,
                    "type": "optional<string>",
                  },
                  "name": {
                    "docs": undefined,
                    "type": "optional<string>",
                  },
                  "organizationID": {
                    "docs": undefined,
                    "type": "optional<string>",
                  },
                },
              },
              "headers": undefined,
              "name": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedWorkloadEntitlement",
            },
          },
        },
      },
    },
    "entitlementTerm.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "GetEntitlementTerm": {
            "auth": true,
            "display-name": "get entitlement term",
            "docs": "Get the entitlement term by ID",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "entitlementId": "entitlement-id",
                  "entitlementTermId": "entitlement-term-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "entitlementInfo": {
                      "awsEntitlements": [
                        {},
                      ],
                      "azureSubscriptions": [
                        {
                          "allowedCustomerOperations": [
                            "Read",
                          ],
                          "beneficiary": {
                            "buyerInfo": {},
                            "companyInfo": {},
                          },
                          "purchaser": {
                            "buyerInfo": {},
                            "companyInfo": {},
                          },
                          "saasSubscriptionStatus": "NotStarted",
                          "sandboxType": "None",
                          "sessionMode": "None",
                          "term": {},
                        },
                      ],
                      "commits": [
                        {
                          "timeUnit": "DAY",
                          "type": "FLAT_RATE",
                        },
                      ],
                      "dimensions": [
                        {
                          "includedBaseQuantities": [
                            {
                              "recurringUnit": "Monthly",
                            },
                          ],
                          "usageCount": {},
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "eulaType": "",
                      "gcpEntitlements": [
                        {
                          "consumers": [
                            {},
                          ],
                          "state": "ENTITLEMENT_STATE_UNSPECIFIED",
                        },
                      ],
                      "gcpPlans": [
                        {
                          "priceInfo": {
                            "priceModel": "FREE",
                            "subscriptionPlans": [
                              {
                                "period": "ONE_YEAR",
                                "price": {},
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                            "usageFees": [
                              {
                                "priceTiers": [
                                  {
                                    "price": {},
                                  },
                                ],
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                          },
                          "purchaseMode": "PURCHASE_MODE_PUBLIC",
                        },
                      ],
                      "paymentInstallments": [
                        {},
                      ],
                    },
                    "info": {
                      "type": "",
                    },
                    "partner": "AWS",
                    "service": "MARKETPLACE",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm/{entitlementTermId}",
            "path-parameters": {
              "entitlementId": {
                "docs": "Entitlement ID",
                "type": "string",
              },
              "entitlementTermId": {
                "docs": "Entitlement Term ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedWorkloadEntitlementTerm",
            },
          },
          "ListEntitlementTerms": {
            "auth": true,
            "display-name": "list entitlement terms",
            "docs": "List all Entitlement Terms of the given Entitlement",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm",
            "path-parameters": {
              "entitlementId": {
                "docs": "Entitlement ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadEntitlementTerm>",
            },
          },
        },
      },
    },
    "integration.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "CreateIntegration": {
            "auth": true,
            "display-name": "create integration",
            "docs": "For each organization, partner & service, there should be at most one integration.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "info": {
                      "awsAceIntegration": {
                        "credential": {},
                      },
                      "awsIntegration": {},
                      "azureIntegration": {
                        "credential": {},
                      },
                      "gcpIntegration": {},
                      "hubspotCrmIntegration": {
                        "credential": {},
                      },
                      "salesforceCrmIntegration": {
                        "credential": {},
                        "filters": [
                          {},
                        ],
                      },
                      "slackIntegration": {
                        "authedUser": {},
                        "enterprise": {},
                        "incomingWebhook": {},
                        "team": {},
                      },
                    },
                    "partner": "AWS",
                    "service": "MARKETPLACE",
                    "status": "CREATED",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/org/{orgId}/integration",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "createdBy": {
                    "docs": undefined,
                    "type": "optional<string>",
                  },
                  "info": {
                    "docs": undefined,
                    "type": "root.SharedIntegrationInfo",
                  },
                  "organizationID": "string",
                  "partner": {
                    "docs": undefined,
                    "type": "root.SharedCreateIntegrationParamsPartner",
                  },
                  "service": "literal<"MARKETPLACE">",
                },
              },
              "headers": undefined,
              "name": "SharedCreateIntegrationParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedIdentityIntegration",
            },
          },
          "DeleteIntegration": {
            "auth": true,
            "display-name": "delete integration",
            "docs": "delete the integration for the given orgId, partner and service.",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "DELETE",
            "path": "/org/{orgId}/integration/{partner}/{service}",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "partner": {
                "docs": "Cloud Partner",
                "type": "root.DeleteIntegrationRequestPartner",
              },
              "service": {
                "docs": "Partner Service",
                "type": "root.DeleteIntegrationRequestService",
              },
            },
            "response": {
              "docs": "Empty string if deletion is successful",
              "type": "string",
            },
          },
          "GetIntegration": {
            "auth": true,
            "display-name": "get integration",
            "docs": "Get the integration for the given organization, partner & service.",
            "errors": [
              "root.NotFoundError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "partner": "AWS",
                  "service": "MARKETPLACE",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "info": {
                      "awsAceIntegration": {
                        "credential": {},
                      },
                      "awsIntegration": {},
                      "azureIntegration": {
                        "credential": {},
                      },
                      "gcpIntegration": {},
                      "hubspotCrmIntegration": {
                        "credential": {},
                      },
                      "salesforceCrmIntegration": {
                        "credential": {},
                        "filters": [
                          {},
                        ],
                      },
                      "slackIntegration": {
                        "authedUser": {},
                        "enterprise": {},
                        "incomingWebhook": {},
                        "team": {},
                      },
                    },
                    "partner": "AWS",
                    "service": "MARKETPLACE",
                    "status": "CREATED",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/integration/{partner}/{service}",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "partner": {
                "docs": "Cloud Partner",
                "type": "root.GetIntegrationRequestPartner",
              },
              "service": {
                "docs": "Partner Service",
                "type": "root.GetIntegrationRequestService",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedIdentityIntegration",
            },
          },
          "ListIntegrationsByOrganization": {
            "auth": true,
            "display-name": "list integrations by organization",
            "docs": "List all integrations for the given organization.",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/integration",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedIdentityIntegration>",
            },
          },
          "UpdateIntegration": {
            "auth": true,
            "display-name": "update integration",
            "docs": "Update the given integration.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "partner": "AWS",
                  "service": "MARKETPLACE",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "info": {
                      "awsAceIntegration": {
                        "credential": {},
                      },
                      "awsIntegration": {},
                      "azureIntegration": {
                        "credential": {},
                      },
                      "gcpIntegration": {},
                      "hubspotCrmIntegration": {
                        "credential": {},
                      },
                      "salesforceCrmIntegration": {
                        "credential": {},
                        "filters": [
                          {},
                        ],
                      },
                      "slackIntegration": {
                        "authedUser": {},
                        "enterprise": {},
                        "incomingWebhook": {},
                        "team": {},
                      },
                    },
                    "partner": "AWS",
                    "service": "MARKETPLACE",
                    "status": "CREATED",
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/org/{orgId}/integration/{partner}/{service}",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "partner": {
                "docs": "Cloud Partner",
                "type": "root.UpdateIntegrationRequestPartner",
              },
              "service": {
                "docs": "Partner Service",
                "type": "root.UpdateIntegrationRequestService",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "info": {
                    "docs": undefined,
                    "type": "root.SharedIntegrationInfo",
                  },
                  "organizationID": "string",
                  "partner": {
                    "docs": undefined,
                    "name": "sharedUpdateIntegrationParamsPartner",
                    "type": "root.SharedUpdateIntegrationParamsPartner",
                  },
                  "service": {
                    "docs": undefined,
                    "name": "sharedUpdateIntegrationParamsService",
                    "type": "literal<"MARKETPLACE">",
                  },
                },
              },
              "headers": undefined,
              "name": "SharedUpdateIntegrationParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedIdentityIntegration",
            },
          },
          "VerifyIntegration": {
            "auth": true,
            "display-name": "verify integration",
            "docs": "Verify the given integration, check whether it works correctly.",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "POST",
            "path": "/org/{orgId}/integration/{partner}/{service}/verify",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "partner": {
                "docs": "Cloud Partner",
                "type": "root.VerifyIntegrationRequestPartner",
              },
              "service": {
                "docs": "Partner Service",
                "type": "root.VerifyIntegrationRequestService",
              },
            },
            "response": {
              "docs": "whether it is verified or not",
              "type": "boolean",
            },
          },
        },
      },
    },
    "metering.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "GetUsageRecordGroup": {
            "auth": true,
            "display-name": "get usageRecordGroup",
            "docs": "get UsageRecordGroup for the given organization and usageRecordGroup ID",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "usageRecordGroupId": "usage-record-group-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "metaInfo": {},
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/usageRecordGroup/{usageRecordGroupId}",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "usageRecordGroupId": {
                "docs": "UsageRecordGroup ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedMeteringUsageRecordGroup",
            },
          },
          "GetUsageRecordReport": {
            "auth": true,
            "display-name": "get usageRecordReport",
            "docs": "get the usageRecordReport for a given organization and usageRecordReport ID.",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "usageRecordReportId": "usage-record-report-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "info": {
                      "awsMeteringResponse": {
                        "results": [
                          {
                            "status": "Success",
                            "usageRecord": {
                              "usageAllocations": [
                                {
                                  "tags": [
                                    {},
                                  ],
                                },
                              ],
                            },
                          },
                        ],
                        "unprocessedRecords": [
                          {
                            "usageAllocations": [
                              {
                                "tags": [
                                  {},
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      "azureMeteringResponse": {
                        "result": [
                          {
                            "error": {
                              "additionalInfo": {
                                "acceptedMessage": {
                                  "status": "Accepted",
                                },
                              },
                            },
                            "status": "Accepted",
                          },
                        ],
                      },
                      "gcpMeteringResponse": {
                        "reportErrors": [
                          {
                            "status": {},
                          },
                        ],
                      },
                    },
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/usageRecordReport/{usageRecordReportId}",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "usageRecordReportId": {
                "docs": "UsageRecordReport ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedMeteringUsageRecordReport",
            },
          },
          "ListUsageRecordGroupsByEntitlement": {
            "auth": true,
            "display-name": "list usageRecordGroups by entitlement",
            "docs": "list UsageRecordGroups for the given organization and entitlement",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "entitlementId": "entitlement-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "usageRecordGroups": [
                      {
                        "metaInfo": {},
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
            "path-parameters": {
              "entitlementId": {
                "docs": "Entitlement ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "name": "ListUsageRecordGroupsByEntitlementRequest",
              "query-parameters": {
                "endDate": {
                  "allow-multiple": undefined,
                  "docs": "end date (UTC) in YYYY-MM-DD format, default is today",
                  "type": "optional<string>",
                },
                "limit": {
                  "allow-multiple": undefined,
                  "docs": "List pagination size, default 20, max value is 1000",
                  "type": "optional<integer>",
                },
                "offset": {
                  "allow-multiple": undefined,
                  "docs": "List pagination offset, default 0",
                  "type": "optional<integer>",
                },
                "startDate": {
                  "allow-multiple": undefined,
                  "docs": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedListUsageRecordGroupsResponse",
            },
          },
          "ListUsageRecordGroupsByOrganization": {
            "auth": true,
            "display-name": "list usageRecordGroups by organization",
            "docs": "list UsageRecordGroups under the given organization.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "usageRecordGroups": [
                      {
                        "metaInfo": {},
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/usageRecordGroup",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "name": "ListUsageRecordGroupsByOrganizationRequest",
              "query-parameters": {
                "endDate": {
                  "allow-multiple": undefined,
                  "docs": "end date (UTC) in YYYY-MM-DD format, default is today",
                  "type": "optional<string>",
                },
                "limit": {
                  "allow-multiple": undefined,
                  "docs": "List pagination size, default 20, max value is 1000",
                  "type": "optional<integer>",
                },
                "offset": {
                  "allow-multiple": undefined,
                  "docs": "List pagination offset, default 0",
                  "type": "optional<integer>",
                },
                "startDate": {
                  "allow-multiple": undefined,
                  "docs": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedListUsageRecordGroupsResponse",
            },
          },
          "ListUsageRecordGroupsByProduct": {
            "auth": true,
            "display-name": "list usageRecordGroups by product",
            "docs": "list UsageRecordGroups for the given organization and product",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "productId": "product-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "usageRecordGroups": [
                      {
                        "metaInfo": {},
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/product/{productId}/usageRecordGroup",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "productId": {
                "docs": "Product ID",
                "type": "string",
              },
            },
            "request": {
              "name": "ListUsageRecordGroupsByProductRequest",
              "query-parameters": {
                "endDate": {
                  "allow-multiple": undefined,
                  "docs": "end date (UTC) in YYYY-MM-DD format, default is today",
                  "type": "optional<string>",
                },
                "limit": {
                  "allow-multiple": undefined,
                  "docs": "List pagination size, default 20, max value is 1000",
                  "type": "optional<integer>",
                },
                "offset": {
                  "allow-multiple": undefined,
                  "docs": "List pagination offset, default 0",
                  "type": "optional<integer>",
                },
                "startDate": {
                  "allow-multiple": undefined,
                  "docs": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedListUsageRecordGroupsResponse",
            },
          },
          "ListUsageRecordReportsByEntitlement": {
            "auth": true,
            "display-name": "list usageRecordReports by entitlement",
            "docs": "List usageRecordReports for the given organization and entitlement. Filter by entitlementTermId if it is given.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "entitlementId": "entitlement-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "usageRecordReports": [
                      {
                        "info": {
                          "awsMeteringResponse": {
                            "results": [
                              {
                                "status": "Success",
                                "usageRecord": {
                                  "usageAllocations": [
                                    {
                                      "tags": [
                                        {},
                                      ],
                                    },
                                  ],
                                },
                              },
                            ],
                            "unprocessedRecords": [
                              {
                                "usageAllocations": [
                                  {
                                    "tags": [
                                      {},
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          "azureMeteringResponse": {
                            "result": [
                              {
                                "error": {
                                  "additionalInfo": {
                                    "acceptedMessage": {
                                      "status": "Accepted",
                                    },
                                  },
                                },
                                "status": "Accepted",
                              },
                            ],
                          },
                          "gcpMeteringResponse": {
                            "reportErrors": [
                              {
                                "status": {},
                              },
                            ],
                          },
                        },
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordReport",
            "path-parameters": {
              "entitlementId": {
                "docs": "Entitlement ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "name": "ListUsageRecordReportsByEntitlementRequest",
              "query-parameters": {
                "endDate": {
                  "allow-multiple": undefined,
                  "docs": "end date (UTC) in YYYY-MM-DD format, default is today",
                  "type": "optional<string>",
                },
                "entitlementTermId": {
                  "allow-multiple": undefined,
                  "docs": "The Entitlement Term ID, if not given, return the UsageRecordReports under the Entitlement",
                  "type": "optional<string>",
                },
                "limit": {
                  "allow-multiple": undefined,
                  "docs": "List pagination size, default 20, max value is 1000",
                  "type": "optional<integer>",
                },
                "offset": {
                  "allow-multiple": undefined,
                  "docs": "List pagination offset, default 0",
                  "type": "optional<integer>",
                },
                "startDate": {
                  "allow-multiple": undefined,
                  "docs": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedListUsageRecordReportsResponse",
            },
          },
          "ListUsageRecordReportsByOrganization": {
            "auth": true,
            "display-name": "list usageRecordReports by organization",
            "docs": "List usageRecordReports under the given organization",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "usageRecordReports": [
                      {
                        "info": {
                          "awsMeteringResponse": {
                            "results": [
                              {
                                "status": "Success",
                                "usageRecord": {
                                  "usageAllocations": [
                                    {
                                      "tags": [
                                        {},
                                      ],
                                    },
                                  ],
                                },
                              },
                            ],
                            "unprocessedRecords": [
                              {
                                "usageAllocations": [
                                  {
                                    "tags": [
                                      {},
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          "azureMeteringResponse": {
                            "result": [
                              {
                                "error": {
                                  "additionalInfo": {
                                    "acceptedMessage": {
                                      "status": "Accepted",
                                    },
                                  },
                                },
                                "status": "Accepted",
                              },
                            ],
                          },
                          "gcpMeteringResponse": {
                            "reportErrors": [
                              {
                                "status": {},
                              },
                            ],
                          },
                        },
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/usageRecordReport",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "name": "ListUsageRecordReportsByOrganizationRequest",
              "query-parameters": {
                "endDate": {
                  "allow-multiple": undefined,
                  "docs": "end date (UTC) in YYYY-MM-DD format, default is today",
                  "type": "optional<string>",
                },
                "limit": {
                  "allow-multiple": undefined,
                  "docs": "List pagination size, default 20, max value is 1000",
                  "type": "optional<integer>",
                },
                "offset": {
                  "allow-multiple": undefined,
                  "docs": "List pagination offset, default 0",
                  "type": "optional<integer>",
                },
                "startDate": {
                  "allow-multiple": undefined,
                  "docs": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedListUsageRecordReportsResponse",
            },
          },
          "ListUsageRecordReportsByProduct": {
            "auth": true,
            "display-name": "list usageRecordReports by product",
            "docs": "List usageRecordReports for the given organization and product",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "productId": "product-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "usageRecordReports": [
                      {
                        "info": {
                          "awsMeteringResponse": {
                            "results": [
                              {
                                "status": "Success",
                                "usageRecord": {
                                  "usageAllocations": [
                                    {
                                      "tags": [
                                        {},
                                      ],
                                    },
                                  ],
                                },
                              },
                            ],
                            "unprocessedRecords": [
                              {
                                "usageAllocations": [
                                  {
                                    "tags": [
                                      {},
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                          "azureMeteringResponse": {
                            "result": [
                              {
                                "error": {
                                  "additionalInfo": {
                                    "acceptedMessage": {
                                      "status": "Accepted",
                                    },
                                  },
                                },
                                "status": "Accepted",
                              },
                            ],
                          },
                          "gcpMeteringResponse": {
                            "reportErrors": [
                              {
                                "status": {},
                              },
                            ],
                          },
                        },
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/product/{productId}/usageRecordReport",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "productId": {
                "docs": "Product ID",
                "type": "string",
              },
            },
            "request": {
              "name": "ListUsageRecordReportsByProductRequest",
              "query-parameters": {
                "endDate": {
                  "allow-multiple": undefined,
                  "docs": "end date (UTC) in YYYY-MM-DD format, default is today",
                  "type": "optional<string>",
                },
                "limit": {
                  "allow-multiple": undefined,
                  "docs": "List pagination size, default 20, max value is 1000",
                  "type": "optional<integer>",
                },
                "offset": {
                  "allow-multiple": undefined,
                  "docs": "List pagination offset, default 0",
                  "type": "optional<integer>",
                },
                "startDate": {
                  "allow-multiple": undefined,
                  "docs": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedListUsageRecordReportsResponse",
            },
          },
          "ReportUsageRecordGroup": {
            "auth": true,
            "display-name": "report usageRecordGroup",
            "docs": "It is recommended to provide the ID in the request body CreateUsageRecordGroupParams, so the report can be deduplicated. All duplicate report will return error code 409.",
            "errors": [
              "root.BadRequestError",
              "root.ConflictError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "entitlementId": "entitlement-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "metaInfo": {},
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
            "path-parameters": {
              "entitlementId": {
                "docs": "Entitlement ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "entitlementID": "string",
                  "id": {
                    "docs": "uuid of the UsageRecordGroup (the size is up to 36 characters), if not provided, suger will generate one.",
                    "type": "optional<string>",
                  },
                  "metaInfo": {
                    "docs": "read-only, don't set it when reporting the usage record group.",
                    "type": "optional<root.SharedMeteringUsageRecordGroupMetaInfo>",
                  },
                  "organizationID": "string",
                  "records": {
                    "docs": undefined,
                    "type": "map<string, double>",
                  },
                },
              },
              "headers": undefined,
              "name": "SharedCreateUsageRecordGroupParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedMeteringUsageRecordGroup",
            },
          },
        },
      },
    },
    "offer.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "CancelOffer": {
            "auth": true,
            "display-name": "cancel offer",
            "docs": "Only the offer with status = "PENDING_ACCEPTANCE" or "PENDING_CANCEL" is allowed to cancel.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "method": "POST",
            "path": "/org/{orgId}/offer/{offerId}/cancel",
            "path-parameters": {
              "offerId": {
                "docs": "Offer ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "Empty string if cancellation is successful",
              "type": "string",
            },
          },
          "CreateOffer": {
            "auth": true,
            "display-name": "create offer",
            "docs": "Create a private offer under the given organization.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": {
                  "info": {
                    "azureOriginalPlan": {
                      "pricing": {
                        "customMeters": {
                          "priceInputOption": "perMarket",
                        },
                        "recurrentPrice": {
                          "priceInputOption": "perMarket",
                          "prices": [
                            {
                              "billingTerm": {
                                "type": "day",
                              },
                              "paymentOption": {
                                "type": "day",
                              },
                              "prices": [
                                {},
                              ],
                            },
                          ],
                        },
                      },
                      "validations": [
                        {
                          "code": "businessValidationError",
                          "level": "informational",
                        },
                      ],
                    },
                    "azurePrivateOffer": {
                      "acceptanceLinks": [
                        {},
                      ],
                      "beneficiaries": [
                        {
                          "beneficiaryRecipients": [
                            {
                              "recipientType": "cspCustomer",
                            },
                          ],
                        },
                      ],
                      "pricing": [
                        {
                          "discountType": "percentage",
                          "originalPlan": {
                            "pricing": {
                              "customMeters": {
                                "priceInputOption": "perMarket",
                              },
                              "recurrentPrice": {
                                "priceInputOption": "perMarket",
                                "prices": [
                                  {
                                    "billingTerm": {
                                      "type": "day",
                                    },
                                    "paymentOption": {
                                      "type": "day",
                                    },
                                    "prices": [
                                      {},
                                    ],
                                  },
                                ],
                              },
                            },
                            "validations": [
                              {
                                "code": "businessValidationError",
                                "level": "informational",
                              },
                            ],
                          },
                          "planType": "FLAT_RATE",
                          "privateOfferPlan": {
                            "pricing": {
                              "customMeters": {
                                "priceInputOption": "perMarket",
                              },
                              "recurrentPrice": {
                                "priceInputOption": "perMarket",
                                "prices": [
                                  {
                                    "billingTerm": {
                                      "type": "day",
                                    },
                                    "paymentOption": {
                                      "type": "day",
                                    },
                                    "prices": [
                                      {},
                                    ],
                                  },
                                ],
                              },
                            },
                            "validations": [
                              {
                                "code": "businessValidationError",
                                "level": "informational",
                              },
                            ],
                          },
                        },
                      ],
                      "privateOfferType": "customerPromotion",
                      "state": "draft",
                      "subState": "pendingAcceptance",
                      "upgradedFrom": {},
                      "validations": [
                        {
                          "code": "businessValidationError",
                          "level": "informational",
                        },
                      ],
                    },
                    "azureProductVariant": {
                      "azureGovernmentCertifications": [
                        {
                          "validationResults": [
                            {},
                          ],
                        },
                      ],
                      "extendedProperties": [
                        {},
                      ],
                      "featureAvailabilities": [
                        {
                          "customMeters": [
                            {
                              "includedBaseQuantities": [
                                {
                                  "recurringUnit": "Monthly",
                                },
                              ],
                            },
                          ],
                          "marketStates": [
                            {
                              "state": "Disabled",
                            },
                          ],
                          "markets": [
                            {},
                          ],
                          "priceSchedules": [
                            {
                              "dateTimeRange": {
                                "endAt": {},
                                "startAt": {},
                              },
                              "schedules": [
                                {
                                  "priceCadence": {
                                    "type": "Month",
                                  },
                                  "pricingModel": "Flat",
                                  "pricingUnits": [
                                    {
                                      "name": "sharedcore",
                                    },
                                  ],
                                  "retailPrice": {},
                                },
                              ],
                            },
                          ],
                          "properties": [
                            {},
                          ],
                          "subscriptionAudiences": [
                            {},
                          ],
                          "tenantAudiences": [
                            {},
                          ],
                          "trial": {
                            "dateTimeRange": {
                              "endAt": {},
                              "startAt": {},
                            },
                            "durationType": "Minute",
                            "type": "NoTrial",
                          },
                          "visibility": "Public",
                        },
                      ],
                      "resourceType": "AzureSkuVariant",
                      "state": "InActive",
                    },
                    "buyerAzureTenants": [
                      {},
                    ],
                    "commits": [
                      {
                        "timeUnit": "DAY",
                        "type": "FLAT_RATE",
                      },
                    ],
                    "dimensions": [
                      {
                        "includedBaseQuantities": [
                          {
                            "recurringUnit": "Monthly",
                          },
                        ],
                        "usageCount": {},
                        "valueType": "VALUE_TYPE_UNSPECIFIED",
                      },
                    ],
                    "eulaType": "",
                    "gcpMetrics": [
                      {
                        "valueType": "VALUE_TYPE_UNSPECIFIED",
                      },
                    ],
                    "gcpPlans": [
                      {
                        "priceInfo": {
                          "priceModel": "FREE",
                          "subscriptionPlans": [
                            {
                              "period": "ONE_YEAR",
                              "price": {},
                              "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                            },
                          ],
                          "usageFees": [
                            {
                              "priceTiers": [
                                {
                                  "price": {},
                                },
                              ],
                              "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                            },
                          ],
                        },
                        "purchaseMode": "PURCHASE_MODE_PUBLIC",
                      },
                    ],
                    "paymentInstallments": [
                      {},
                    ],
                    "visibility": "PRIVATE",
                  },
                  "metaInfo": {
                    "contacts": [
                      {},
                    ],
                    "notifications": [
                      {
                        "action": "ACCEPT",
                        "entityType": "ORGANIZATION",
                        "eventStatus": "",
                      },
                    ],
                  },
                  "offerType": "DEFAULT",
                  "partner": "AWS",
                  "service": "MARKETPLACE",
                  "status": "ACCEPTED",
                },
                "response": {
                  "body": {
                    "info": {
                      "azureOriginalPlan": {
                        "pricing": {
                          "customMeters": {
                            "priceInputOption": "perMarket",
                          },
                          "recurrentPrice": {
                            "priceInputOption": "perMarket",
                            "prices": [
                              {
                                "billingTerm": {
                                  "type": "day",
                                },
                                "paymentOption": {
                                  "type": "day",
                                },
                                "prices": [
                                  {},
                                ],
                              },
                            ],
                          },
                        },
                        "validations": [
                          {
                            "code": "businessValidationError",
                            "level": "informational",
                          },
                        ],
                      },
                      "azurePrivateOffer": {
                        "acceptanceLinks": [
                          {},
                        ],
                        "beneficiaries": [
                          {
                            "beneficiaryRecipients": [
                              {
                                "recipientType": "cspCustomer",
                              },
                            ],
                          },
                        ],
                        "pricing": [
                          {
                            "discountType": "percentage",
                            "originalPlan": {
                              "pricing": {
                                "customMeters": {
                                  "priceInputOption": "perMarket",
                                },
                                "recurrentPrice": {
                                  "priceInputOption": "perMarket",
                                  "prices": [
                                    {
                                      "billingTerm": {
                                        "type": "day",
                                      },
                                      "paymentOption": {
                                        "type": "day",
                                      },
                                      "prices": [
                                        {},
                                      ],
                                    },
                                  ],
                                },
                              },
                              "validations": [
                                {
                                  "code": "businessValidationError",
                                  "level": "informational",
                                },
                              ],
                            },
                            "planType": "FLAT_RATE",
                            "privateOfferPlan": {
                              "pricing": {
                                "customMeters": {
                                  "priceInputOption": "perMarket",
                                },
                                "recurrentPrice": {
                                  "priceInputOption": "perMarket",
                                  "prices": [
                                    {
                                      "billingTerm": {
                                        "type": "day",
                                      },
                                      "paymentOption": {
                                        "type": "day",
                                      },
                                      "prices": [
                                        {},
                                      ],
                                    },
                                  ],
                                },
                              },
                              "validations": [
                                {
                                  "code": "businessValidationError",
                                  "level": "informational",
                                },
                              ],
                            },
                          },
                        ],
                        "privateOfferType": "customerPromotion",
                        "state": "draft",
                        "subState": "pendingAcceptance",
                        "upgradedFrom": {},
                        "validations": [
                          {
                            "code": "businessValidationError",
                            "level": "informational",
                          },
                        ],
                      },
                      "azureProductVariant": {
                        "azureGovernmentCertifications": [
                          {
                            "validationResults": [
                              {},
                            ],
                          },
                        ],
                        "extendedProperties": [
                          {},
                        ],
                        "featureAvailabilities": [
                          {
                            "customMeters": [
                              {
                                "includedBaseQuantities": [
                                  {
                                    "recurringUnit": "Monthly",
                                  },
                                ],
                              },
                            ],
                            "marketStates": [
                              {
                                "state": "Disabled",
                              },
                            ],
                            "markets": [
                              {},
                            ],
                            "priceSchedules": [
                              {
                                "dateTimeRange": {
                                  "endAt": {},
                                  "startAt": {},
                                },
                                "schedules": [
                                  {
                                    "priceCadence": {
                                      "type": "Month",
                                    },
                                    "pricingModel": "Flat",
                                    "pricingUnits": [
                                      {
                                        "name": "sharedcore",
                                      },
                                    ],
                                    "retailPrice": {},
                                  },
                                ],
                              },
                            ],
                            "properties": [
                              {},
                            ],
                            "subscriptionAudiences": [
                              {},
                            ],
                            "tenantAudiences": [
                              {},
                            ],
                            "trial": {
                              "dateTimeRange": {
                                "endAt": {},
                                "startAt": {},
                              },
                              "durationType": "Minute",
                              "type": "NoTrial",
                            },
                            "visibility": "Public",
                          },
                        ],
                        "resourceType": "AzureSkuVariant",
                        "state": "InActive",
                      },
                      "buyerAzureTenants": [
                        {},
                      ],
                      "commits": [
                        {
                          "timeUnit": "DAY",
                          "type": "FLAT_RATE",
                        },
                      ],
                      "dimensions": [
                        {
                          "includedBaseQuantities": [
                            {
                              "recurringUnit": "Monthly",
                            },
                          ],
                          "usageCount": {},
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "eulaType": "",
                      "gcpMetrics": [
                        {
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "gcpPlans": [
                        {
                          "priceInfo": {
                            "priceModel": "FREE",
                            "subscriptionPlans": [
                              {
                                "period": "ONE_YEAR",
                                "price": {},
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                            "usageFees": [
                              {
                                "priceTiers": [
                                  {
                                    "price": {},
                                  },
                                ],
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                          },
                          "purchaseMode": "PURCHASE_MODE_PUBLIC",
                        },
                      ],
                      "paymentInstallments": [
                        {},
                      ],
                      "visibility": "PRIVATE",
                    },
                    "metaInfo": {
                      "contacts": [
                        {},
                      ],
                      "notifications": [
                        {
                          "action": "ACCEPT",
                          "entityType": "ORGANIZATION",
                          "eventStatus": "",
                        },
                      ],
                    },
                    "offerType": "DEFAULT",
                    "partner": "AWS",
                    "service": "MARKETPLACE",
                    "status": "ACCEPTED",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/org/{orgId}/offer",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "docs": undefined,
                "type": "root.SharedWorkloadOffer",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedWorkloadOffer",
            },
          },
          "CreateOrUpdateDraftOffer": {
            "auth": true,
            "display-name": "create or update draft offer",
            "docs": "Create a new draft offer or update the existing draft offer. When updating draft offer, the offer.ID is required.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": {
                  "info": {
                    "azureOriginalPlan": {
                      "pricing": {
                        "customMeters": {
                          "priceInputOption": "perMarket",
                        },
                        "recurrentPrice": {
                          "priceInputOption": "perMarket",
                          "prices": [
                            {
                              "billingTerm": {
                                "type": "day",
                              },
                              "paymentOption": {
                                "type": "day",
                              },
                              "prices": [
                                {},
                              ],
                            },
                          ],
                        },
                      },
                      "validations": [
                        {
                          "code": "businessValidationError",
                          "level": "informational",
                        },
                      ],
                    },
                    "azurePrivateOffer": {
                      "acceptanceLinks": [
                        {},
                      ],
                      "beneficiaries": [
                        {
                          "beneficiaryRecipients": [
                            {
                              "recipientType": "cspCustomer",
                            },
                          ],
                        },
                      ],
                      "pricing": [
                        {
                          "discountType": "percentage",
                          "originalPlan": {
                            "pricing": {
                              "customMeters": {
                                "priceInputOption": "perMarket",
                              },
                              "recurrentPrice": {
                                "priceInputOption": "perMarket",
                                "prices": [
                                  {
                                    "billingTerm": {
                                      "type": "day",
                                    },
                                    "paymentOption": {
                                      "type": "day",
                                    },
                                    "prices": [
                                      {},
                                    ],
                                  },
                                ],
                              },
                            },
                            "validations": [
                              {
                                "code": "businessValidationError",
                                "level": "informational",
                              },
                            ],
                          },
                          "planType": "FLAT_RATE",
                          "privateOfferPlan": {
                            "pricing": {
                              "customMeters": {
                                "priceInputOption": "perMarket",
                              },
                              "recurrentPrice": {
                                "priceInputOption": "perMarket",
                                "prices": [
                                  {
                                    "billingTerm": {
                                      "type": "day",
                                    },
                                    "paymentOption": {
                                      "type": "day",
                                    },
                                    "prices": [
                                      {},
                                    ],
                                  },
                                ],
                              },
                            },
                            "validations": [
                              {
                                "code": "businessValidationError",
                                "level": "informational",
                              },
                            ],
                          },
                        },
                      ],
                      "privateOfferType": "customerPromotion",
                      "state": "draft",
                      "subState": "pendingAcceptance",
                      "upgradedFrom": {},
                      "validations": [
                        {
                          "code": "businessValidationError",
                          "level": "informational",
                        },
                      ],
                    },
                    "azureProductVariant": {
                      "azureGovernmentCertifications": [
                        {
                          "validationResults": [
                            {},
                          ],
                        },
                      ],
                      "extendedProperties": [
                        {},
                      ],
                      "featureAvailabilities": [
                        {
                          "customMeters": [
                            {
                              "includedBaseQuantities": [
                                {
                                  "recurringUnit": "Monthly",
                                },
                              ],
                            },
                          ],
                          "marketStates": [
                            {
                              "state": "Disabled",
                            },
                          ],
                          "markets": [
                            {},
                          ],
                          "priceSchedules": [
                            {
                              "dateTimeRange": {
                                "endAt": {},
                                "startAt": {},
                              },
                              "schedules": [
                                {
                                  "priceCadence": {
                                    "type": "Month",
                                  },
                                  "pricingModel": "Flat",
                                  "pricingUnits": [
                                    {
                                      "name": "sharedcore",
                                    },
                                  ],
                                  "retailPrice": {},
                                },
                              ],
                            },
                          ],
                          "properties": [
                            {},
                          ],
                          "subscriptionAudiences": [
                            {},
                          ],
                          "tenantAudiences": [
                            {},
                          ],
                          "trial": {
                            "dateTimeRange": {
                              "endAt": {},
                              "startAt": {},
                            },
                            "durationType": "Minute",
                            "type": "NoTrial",
                          },
                          "visibility": "Public",
                        },
                      ],
                      "resourceType": "AzureSkuVariant",
                      "state": "InActive",
                    },
                    "buyerAzureTenants": [
                      {},
                    ],
                    "commits": [
                      {
                        "timeUnit": "DAY",
                        "type": "FLAT_RATE",
                      },
                    ],
                    "dimensions": [
                      {
                        "includedBaseQuantities": [
                          {
                            "recurringUnit": "Monthly",
                          },
                        ],
                        "usageCount": {},
                        "valueType": "VALUE_TYPE_UNSPECIFIED",
                      },
                    ],
                    "eulaType": "",
                    "gcpMetrics": [
                      {
                        "valueType": "VALUE_TYPE_UNSPECIFIED",
                      },
                    ],
                    "gcpPlans": [
                      {
                        "priceInfo": {
                          "priceModel": "FREE",
                          "subscriptionPlans": [
                            {
                              "period": "ONE_YEAR",
                              "price": {},
                              "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                            },
                          ],
                          "usageFees": [
                            {
                              "priceTiers": [
                                {
                                  "price": {},
                                },
                              ],
                              "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                            },
                          ],
                        },
                        "purchaseMode": "PURCHASE_MODE_PUBLIC",
                      },
                    ],
                    "paymentInstallments": [
                      {},
                    ],
                    "visibility": "PRIVATE",
                  },
                  "metaInfo": {
                    "contacts": [
                      {},
                    ],
                    "notifications": [
                      {
                        "action": "ACCEPT",
                        "entityType": "ORGANIZATION",
                        "eventStatus": "",
                      },
                    ],
                  },
                  "offerType": "DEFAULT",
                  "partner": "AWS",
                  "service": "MARKETPLACE",
                  "status": "ACCEPTED",
                },
                "response": {
                  "body": {
                    "info": {
                      "azureOriginalPlan": {
                        "pricing": {
                          "customMeters": {
                            "priceInputOption": "perMarket",
                          },
                          "recurrentPrice": {
                            "priceInputOption": "perMarket",
                            "prices": [
                              {
                                "billingTerm": {
                                  "type": "day",
                                },
                                "paymentOption": {
                                  "type": "day",
                                },
                                "prices": [
                                  {},
                                ],
                              },
                            ],
                          },
                        },
                        "validations": [
                          {
                            "code": "businessValidationError",
                            "level": "informational",
                          },
                        ],
                      },
                      "azurePrivateOffer": {
                        "acceptanceLinks": [
                          {},
                        ],
                        "beneficiaries": [
                          {
                            "beneficiaryRecipients": [
                              {
                                "recipientType": "cspCustomer",
                              },
                            ],
                          },
                        ],
                        "pricing": [
                          {
                            "discountType": "percentage",
                            "originalPlan": {
                              "pricing": {
                                "customMeters": {
                                  "priceInputOption": "perMarket",
                                },
                                "recurrentPrice": {
                                  "priceInputOption": "perMarket",
                                  "prices": [
                                    {
                                      "billingTerm": {
                                        "type": "day",
                                      },
                                      "paymentOption": {
                                        "type": "day",
                                      },
                                      "prices": [
                                        {},
                                      ],
                                    },
                                  ],
                                },
                              },
                              "validations": [
                                {
                                  "code": "businessValidationError",
                                  "level": "informational",
                                },
                              ],
                            },
                            "planType": "FLAT_RATE",
                            "privateOfferPlan": {
                              "pricing": {
                                "customMeters": {
                                  "priceInputOption": "perMarket",
                                },
                                "recurrentPrice": {
                                  "priceInputOption": "perMarket",
                                  "prices": [
                                    {
                                      "billingTerm": {
                                        "type": "day",
                                      },
                                      "paymentOption": {
                                        "type": "day",
                                      },
                                      "prices": [
                                        {},
                                      ],
                                    },
                                  ],
                                },
                              },
                              "validations": [
                                {
                                  "code": "businessValidationError",
                                  "level": "informational",
                                },
                              ],
                            },
                          },
                        ],
                        "privateOfferType": "customerPromotion",
                        "state": "draft",
                        "subState": "pendingAcceptance",
                        "upgradedFrom": {},
                        "validations": [
                          {
                            "code": "businessValidationError",
                            "level": "informational",
                          },
                        ],
                      },
                      "azureProductVariant": {
                        "azureGovernmentCertifications": [
                          {
                            "validationResults": [
                              {},
                            ],
                          },
                        ],
                        "extendedProperties": [
                          {},
                        ],
                        "featureAvailabilities": [
                          {
                            "customMeters": [
                              {
                                "includedBaseQuantities": [
                                  {
                                    "recurringUnit": "Monthly",
                                  },
                                ],
                              },
                            ],
                            "marketStates": [
                              {
                                "state": "Disabled",
                              },
                            ],
                            "markets": [
                              {},
                            ],
                            "priceSchedules": [
                              {
                                "dateTimeRange": {
                                  "endAt": {},
                                  "startAt": {},
                                },
                                "schedules": [
                                  {
                                    "priceCadence": {
                                      "type": "Month",
                                    },
                                    "pricingModel": "Flat",
                                    "pricingUnits": [
                                      {
                                        "name": "sharedcore",
                                      },
                                    ],
                                    "retailPrice": {},
                                  },
                                ],
                              },
                            ],
                            "properties": [
                              {},
                            ],
                            "subscriptionAudiences": [
                              {},
                            ],
                            "tenantAudiences": [
                              {},
                            ],
                            "trial": {
                              "dateTimeRange": {
                                "endAt": {},
                                "startAt": {},
                              },
                              "durationType": "Minute",
                              "type": "NoTrial",
                            },
                            "visibility": "Public",
                          },
                        ],
                        "resourceType": "AzureSkuVariant",
                        "state": "InActive",
                      },
                      "buyerAzureTenants": [
                        {},
                      ],
                      "commits": [
                        {
                          "timeUnit": "DAY",
                          "type": "FLAT_RATE",
                        },
                      ],
                      "dimensions": [
                        {
                          "includedBaseQuantities": [
                            {
                              "recurringUnit": "Monthly",
                            },
                          ],
                          "usageCount": {},
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "eulaType": "",
                      "gcpMetrics": [
                        {
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "gcpPlans": [
                        {
                          "priceInfo": {
                            "priceModel": "FREE",
                            "subscriptionPlans": [
                              {
                                "period": "ONE_YEAR",
                                "price": {},
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                            "usageFees": [
                              {
                                "priceTiers": [
                                  {
                                    "price": {},
                                  },
                                ],
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                          },
                          "purchaseMode": "PURCHASE_MODE_PUBLIC",
                        },
                      ],
                      "paymentInstallments": [
                        {},
                      ],
                      "visibility": "PRIVATE",
                    },
                    "metaInfo": {
                      "contacts": [
                        {},
                      ],
                      "notifications": [
                        {
                          "action": "ACCEPT",
                          "entityType": "ORGANIZATION",
                          "eventStatus": "",
                        },
                      ],
                    },
                    "offerType": "DEFAULT",
                    "partner": "AWS",
                    "service": "MARKETPLACE",
                    "status": "ACCEPTED",
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/org/{orgId}/draftOffer",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "docs": undefined,
                "type": "root.SharedWorkloadOffer",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedWorkloadOffer",
            },
          },
          "DeleteOffer": {
            "auth": true,
            "display-name": "delete offer",
            "docs": "Only the offer with status = "DRAFT" or "CREATE_FAILED" is allowed to be deleted.",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "DELETE",
            "path": "/org/{orgId}/offer/{offerId}",
            "path-parameters": {
              "offerId": {
                "docs": "Offer ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "Empty string if deletion is successful",
              "type": "string",
            },
          },
          "GetOffer": {
            "auth": true,
            "display-name": "get offer",
            "docs": "Get the offer by the given offer ID.",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "offerId": "offer-id",
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "info": {
                      "azureOriginalPlan": {
                        "pricing": {
                          "customMeters": {
                            "priceInputOption": "perMarket",
                          },
                          "recurrentPrice": {
                            "priceInputOption": "perMarket",
                            "prices": [
                              {
                                "billingTerm": {
                                  "type": "day",
                                },
                                "paymentOption": {
                                  "type": "day",
                                },
                                "prices": [
                                  {},
                                ],
                              },
                            ],
                          },
                        },
                        "validations": [
                          {
                            "code": "businessValidationError",
                            "level": "informational",
                          },
                        ],
                      },
                      "azurePrivateOffer": {
                        "acceptanceLinks": [
                          {},
                        ],
                        "beneficiaries": [
                          {
                            "beneficiaryRecipients": [
                              {
                                "recipientType": "cspCustomer",
                              },
                            ],
                          },
                        ],
                        "pricing": [
                          {
                            "discountType": "percentage",
                            "originalPlan": {
                              "pricing": {
                                "customMeters": {
                                  "priceInputOption": "perMarket",
                                },
                                "recurrentPrice": {
                                  "priceInputOption": "perMarket",
                                  "prices": [
                                    {
                                      "billingTerm": {
                                        "type": "day",
                                      },
                                      "paymentOption": {
                                        "type": "day",
                                      },
                                      "prices": [
                                        {},
                                      ],
                                    },
                                  ],
                                },
                              },
                              "validations": [
                                {
                                  "code": "businessValidationError",
                                  "level": "informational",
                                },
                              ],
                            },
                            "planType": "FLAT_RATE",
                            "privateOfferPlan": {
                              "pricing": {
                                "customMeters": {
                                  "priceInputOption": "perMarket",
                                },
                                "recurrentPrice": {
                                  "priceInputOption": "perMarket",
                                  "prices": [
                                    {
                                      "billingTerm": {
                                        "type": "day",
                                      },
                                      "paymentOption": {
                                        "type": "day",
                                      },
                                      "prices": [
                                        {},
                                      ],
                                    },
                                  ],
                                },
                              },
                              "validations": [
                                {
                                  "code": "businessValidationError",
                                  "level": "informational",
                                },
                              ],
                            },
                          },
                        ],
                        "privateOfferType": "customerPromotion",
                        "state": "draft",
                        "subState": "pendingAcceptance",
                        "upgradedFrom": {},
                        "validations": [
                          {
                            "code": "businessValidationError",
                            "level": "informational",
                          },
                        ],
                      },
                      "azureProductVariant": {
                        "azureGovernmentCertifications": [
                          {
                            "validationResults": [
                              {},
                            ],
                          },
                        ],
                        "extendedProperties": [
                          {},
                        ],
                        "featureAvailabilities": [
                          {
                            "customMeters": [
                              {
                                "includedBaseQuantities": [
                                  {
                                    "recurringUnit": "Monthly",
                                  },
                                ],
                              },
                            ],
                            "marketStates": [
                              {
                                "state": "Disabled",
                              },
                            ],
                            "markets": [
                              {},
                            ],
                            "priceSchedules": [
                              {
                                "dateTimeRange": {
                                  "endAt": {},
                                  "startAt": {},
                                },
                                "schedules": [
                                  {
                                    "priceCadence": {
                                      "type": "Month",
                                    },
                                    "pricingModel": "Flat",
                                    "pricingUnits": [
                                      {
                                        "name": "sharedcore",
                                      },
                                    ],
                                    "retailPrice": {},
                                  },
                                ],
                              },
                            ],
                            "properties": [
                              {},
                            ],
                            "subscriptionAudiences": [
                              {},
                            ],
                            "tenantAudiences": [
                              {},
                            ],
                            "trial": {
                              "dateTimeRange": {
                                "endAt": {},
                                "startAt": {},
                              },
                              "durationType": "Minute",
                              "type": "NoTrial",
                            },
                            "visibility": "Public",
                          },
                        ],
                        "resourceType": "AzureSkuVariant",
                        "state": "InActive",
                      },
                      "buyerAzureTenants": [
                        {},
                      ],
                      "commits": [
                        {
                          "timeUnit": "DAY",
                          "type": "FLAT_RATE",
                        },
                      ],
                      "dimensions": [
                        {
                          "includedBaseQuantities": [
                            {
                              "recurringUnit": "Monthly",
                            },
                          ],
                          "usageCount": {},
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "eulaType": "",
                      "gcpMetrics": [
                        {
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "gcpPlans": [
                        {
                          "priceInfo": {
                            "priceModel": "FREE",
                            "subscriptionPlans": [
                              {
                                "period": "ONE_YEAR",
                                "price": {},
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                            "usageFees": [
                              {
                                "priceTiers": [
                                  {
                                    "price": {},
                                  },
                                ],
                                "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                              },
                            ],
                          },
                          "purchaseMode": "PURCHASE_MODE_PUBLIC",
                        },
                      ],
                      "paymentInstallments": [
                        {},
                      ],
                      "visibility": "PRIVATE",
                    },
                    "metaInfo": {
                      "contacts": [
                        {},
                      ],
                      "notifications": [
                        {
                          "action": "ACCEPT",
                          "entityType": "ORGANIZATION",
                          "eventStatus": "",
                        },
                      ],
                    },
                    "offerType": "DEFAULT",
                    "partner": "AWS",
                    "service": "MARKETPLACE",
                    "status": "ACCEPTED",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/offer/{offerId}",
            "path-parameters": {
              "offerId": {
                "docs": "Offer ID",
                "type": "string",
              },
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedWorkloadOffer",
            },
          },
          "ListOffersByOrganization": {
            "auth": true,
            "display-name": "list offers by organization",
            "docs": "List all offers under the given organization.",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/offer",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadOffer>",
            },
          },
          "ListOffersByPartner": {
            "auth": false,
            "display-name": "list offers by partner",
            "docs": "List all offers under the given organization & cloud partner.",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/partner/{partner}/offer",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "partner": {
                "docs": "Cloud Partner",
                "type": "root.ListOffersByPartnerRequestPartner",
              },
            },
            "request": {
              "headers": {
                "Authorization": {
                  "docs": "Bearer Access Token",
                  "name": "authorization",
                  "type": "string",
                },
              },
              "name": "ListOffersByPartnerRequest",
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadOffer>",
            },
          },
          "ListOffersByProduct": {
            "auth": true,
            "display-name": "list offers by product",
            "docs": "List all offers under the given organization & product.",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/product/{productId}/offer",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "productId": {
                "docs": "Product ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadOffer>",
            },
          },
        },
      },
    },
    "operation.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "ListOperations": {
            "auth": true,
            "display-name": "list operations",
            "docs": "List all long running operations under the given organization, offer, entitlement, crmOpportunity or partnerOpportunity. Only provide one filter on a request.",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/operation",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "name": "ListOperationsRequest",
              "query-parameters": {
                "crmOpportunityId": {
                  "allow-multiple": undefined,
                  "docs": "filter by crmOpportunityId",
                  "type": "optional<string>",
                },
                "entitlementId": {
                  "allow-multiple": undefined,
                  "docs": "filter by entitlementId",
                  "type": "optional<string>",
                },
                "offerId": {
                  "allow-multiple": undefined,
                  "docs": "filter by offerId",
                  "type": "optional<string>",
                },
                "partnerOpportunityId": {
                  "allow-multiple": undefined,
                  "docs": "filter by partnerOpportunityId",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedOperation>",
            },
          },
        },
      },
    },
    "product.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "DeleteProduct": {
            "auth": true,
            "display-name": "delete product",
            "docs": "only the product with status = "CREATE_FAILED" is allowed to be deleted.",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "DELETE",
            "path": "/org/{orgId}/product/{productId}",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "productId": {
                "docs": "Product ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "Empty string if deletion is successful",
              "type": "string",
            },
          },
          "GetProduct": {
            "auth": true,
            "display-name": "get product",
            "docs": "get product by product id",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "productId": "product-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "info": {
                      "awsSaasProduct": {
                        "Description": {},
                        "Dimensions": [
                          {},
                        ],
                        "PromotionalResources": {
                          "AdditionalResources": [
                            {},
                          ],
                        },
                        "SupportInformation": {},
                        "Versions": [
                          {
                            "DeliveryOptions": [
                              {},
                            ],
                          },
                        ],
                      },
                      "awsSnsSubscriptions": [
                        {
                          "Status": "UNKNOWN",
                        },
                      ],
                      "azureProduct": {
                        "availabilities": [
                          {
                            "emailAudiences": [
                              {},
                            ],
                            "subscriptionAudiences": [
                              {},
                            ],
                          },
                        ],
                        "branches": [
                          {},
                        ],
                        "externalIDs": [
                          {},
                        ],
                        "listings": [
                          {
                            "assets": [
                              {
                                "resourceType": "ListingAsset",
                                "state": "PendingUpload",
                              },
                            ],
                            "listingContacts": [
                              {
                                "type": "CustomerSupport",
                              },
                            ],
                            "listingUris": [
                              {},
                            ],
                            "resourceType": "AzureListing",
                          },
                        ],
                        "packageConfigurations": [
                          {
                            "resourceType": "AzureSoftwareAsAServicePackageConfiguration",
                          },
                        ],
                        "properties": [
                          {},
                        ],
                        "setup": {
                          "callToAction": "free",
                          "channelStates": [
                            {},
                          ],
                          "resourceType": "AzureProductSetup",
                          "sellingOption": "ListingOnly",
                        },
                        "submissions": [
                          {
                            "pendingUpdateInfo": {},
                            "resourceType": "Submission",
                            "resources": [
                              {},
                            ],
                            "state": "Inprogress",
                            "subState": "InDraft",
                            "targets": [
                              {},
                            ],
                            "variantResources": [
                              {
                                "resources": [
                                  {},
                                ],
                              },
                            ],
                          },
                        ],
                        "variants": [
                          {
                            "azureGovernmentCertifications": [
                              {
                                "validationResults": [
                                  {},
                                ],
                              },
                            ],
                            "extendedProperties": [
                              {},
                            ],
                            "featureAvailabilities": [
                              {
                                "customMeters": [
                                  {
                                    "includedBaseQuantities": [
                                      {
                                        "recurringUnit": "Monthly",
                                      },
                                    ],
                                  },
                                ],
                                "marketStates": [
                                  {
                                    "state": "Disabled",
                                  },
                                ],
                                "markets": [
                                  {},
                                ],
                                "priceSchedules": [
                                  {
                                    "dateTimeRange": {
                                      "endAt": {},
                                      "startAt": {},
                                    },
                                    "schedules": [
                                      {
                                        "priceCadence": {
                                          "type": "Month",
                                        },
                                        "pricingModel": "Flat",
                                        "pricingUnits": [
                                          {
                                            "name": "sharedcore",
                                          },
                                        ],
                                        "retailPrice": {},
                                      },
                                    ],
                                  },
                                ],
                                "properties": [
                                  {},
                                ],
                                "subscriptionAudiences": [
                                  {},
                                ],
                                "tenantAudiences": [
                                  {},
                                ],
                                "trial": {
                                  "dateTimeRange": {
                                    "endAt": {},
                                    "startAt": {},
                                  },
                                  "durationType": "Minute",
                                  "type": "NoTrial",
                                },
                                "visibility": "Public",
                              },
                            ],
                            "resourceType": "AzureSkuVariant",
                            "state": "InActive",
                          },
                        ],
                      },
                      "commits": [
                        {
                          "timeUnit": "DAY",
                          "type": "FLAT_RATE",
                        },
                      ],
                      "dimensions": [
                        {
                          "includedBaseQuantities": [
                            {
                              "recurringUnit": "Monthly",
                            },
                          ],
                          "usageCount": {},
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "gcpProduct": {
                        "listingSpec": {
                          "externalAccountSpec": {},
                          "listingType": "BillingIntegratedManagedService",
                          "marketingSpec": {
                            "supportSpec": {},
                          },
                          "purchaseSpec": {
                            "metrics": [
                              {
                                "valueType": "VALUE_TYPE_UNSPECIFIED",
                              },
                            ],
                            "purchaseOptionSpecs": [
                              {
                                "priceInfo": {
                                  "priceModel": "FREE",
                                  "subscriptionPlans": [
                                    {
                                      "period": "ONE_YEAR",
                                      "price": {},
                                      "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                                    },
                                  ],
                                  "usageFees": [
                                    {
                                      "priceTiers": [
                                        {
                                          "price": {},
                                        },
                                      ],
                                      "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                                    },
                                  ],
                                },
                                "purchaseMode": "PURCHASE_MODE_PUBLIC",
                              },
                            ],
                          },
                        },
                        "marketplace": "marketplaces/google-cloud",
                        "serviceConfig": {
                          "billing": {},
                          "metrics": [
                            {
                              "valueType": "VALUE_TYPE_UNSPECIFIED",
                            },
                          ],
                        },
                      },
                    },
                    "partner": "AWS",
                    "productType": "UNKNOWN",
                    "service": "MARKETPLACE",
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/product/{productId}",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "productId": {
                "docs": "Product ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedWorkloadProduct",
            },
          },
          "ListProductMeteringDimensions": {
            "auth": true,
            "display-name": "list metering dimensions of product",
            "docs": "list all metering dimensions of the given product",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/product/{productId}/dimension",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "productId": {
                "docs": "Product ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedAwsSaasProductDimension>",
            },
          },
          "ListProductsByOrganization": {
            "auth": true,
            "display-name": "list products by organization",
            "docs": "list all products under the given organization",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/product",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadProduct>",
            },
          },
          "ListProductsByPartner": {
            "auth": true,
            "display-name": "list products by partner",
            "docs": "list all products under the given organization and cloud partner",
            "errors": [
              "root.InternalServerError",
            ],
            "method": "GET",
            "path": "/org/{orgId}/partner/{partner}/product",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "partner": {
                "docs": "Cloud Partner",
                "type": "root.ListProductsByPartnerRequestPartner",
              },
            },
            "response": {
              "docs": "OK",
              "type": "list<root.SharedWorkloadProduct>",
            },
          },
          "UpdateProduct": {
            "auth": true,
            "display-name": "update product",
            "docs": "currently only the Fulfillment URL is allowed to update via this API.",
            "errors": [
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "productId": "product-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "info": {
                      "awsSaasProduct": {
                        "Description": {},
                        "Dimensions": [
                          {},
                        ],
                        "PromotionalResources": {
                          "AdditionalResources": [
                            {},
                          ],
                        },
                        "SupportInformation": {},
                        "Versions": [
                          {
                            "DeliveryOptions": [
                              {},
                            ],
                          },
                        ],
                      },
                      "awsSnsSubscriptions": [
                        {
                          "Status": "UNKNOWN",
                        },
                      ],
                      "azureProduct": {
                        "availabilities": [
                          {
                            "emailAudiences": [
                              {},
                            ],
                            "subscriptionAudiences": [
                              {},
                            ],
                          },
                        ],
                        "branches": [
                          {},
                        ],
                        "externalIDs": [
                          {},
                        ],
                        "listings": [
                          {
                            "assets": [
                              {
                                "resourceType": "ListingAsset",
                                "state": "PendingUpload",
                              },
                            ],
                            "listingContacts": [
                              {
                                "type": "CustomerSupport",
                              },
                            ],
                            "listingUris": [
                              {},
                            ],
                            "resourceType": "AzureListing",
                          },
                        ],
                        "packageConfigurations": [
                          {
                            "resourceType": "AzureSoftwareAsAServicePackageConfiguration",
                          },
                        ],
                        "properties": [
                          {},
                        ],
                        "setup": {
                          "callToAction": "free",
                          "channelStates": [
                            {},
                          ],
                          "resourceType": "AzureProductSetup",
                          "sellingOption": "ListingOnly",
                        },
                        "submissions": [
                          {
                            "pendingUpdateInfo": {},
                            "resourceType": "Submission",
                            "resources": [
                              {},
                            ],
                            "state": "Inprogress",
                            "subState": "InDraft",
                            "targets": [
                              {},
                            ],
                            "variantResources": [
                              {
                                "resources": [
                                  {},
                                ],
                              },
                            ],
                          },
                        ],
                        "variants": [
                          {
                            "azureGovernmentCertifications": [
                              {
                                "validationResults": [
                                  {},
                                ],
                              },
                            ],
                            "extendedProperties": [
                              {},
                            ],
                            "featureAvailabilities": [
                              {
                                "customMeters": [
                                  {
                                    "includedBaseQuantities": [
                                      {
                                        "recurringUnit": "Monthly",
                                      },
                                    ],
                                  },
                                ],
                                "marketStates": [
                                  {
                                    "state": "Disabled",
                                  },
                                ],
                                "markets": [
                                  {},
                                ],
                                "priceSchedules": [
                                  {
                                    "dateTimeRange": {
                                      "endAt": {},
                                      "startAt": {},
                                    },
                                    "schedules": [
                                      {
                                        "priceCadence": {
                                          "type": "Month",
                                        },
                                        "pricingModel": "Flat",
                                        "pricingUnits": [
                                          {
                                            "name": "sharedcore",
                                          },
                                        ],
                                        "retailPrice": {},
                                      },
                                    ],
                                  },
                                ],
                                "properties": [
                                  {},
                                ],
                                "subscriptionAudiences": [
                                  {},
                                ],
                                "tenantAudiences": [
                                  {},
                                ],
                                "trial": {
                                  "dateTimeRange": {
                                    "endAt": {},
                                    "startAt": {},
                                  },
                                  "durationType": "Minute",
                                  "type": "NoTrial",
                                },
                                "visibility": "Public",
                              },
                            ],
                            "resourceType": "AzureSkuVariant",
                            "state": "InActive",
                          },
                        ],
                      },
                      "commits": [
                        {
                          "timeUnit": "DAY",
                          "type": "FLAT_RATE",
                        },
                      ],
                      "dimensions": [
                        {
                          "includedBaseQuantities": [
                            {
                              "recurringUnit": "Monthly",
                            },
                          ],
                          "usageCount": {},
                          "valueType": "VALUE_TYPE_UNSPECIFIED",
                        },
                      ],
                      "gcpProduct": {
                        "listingSpec": {
                          "externalAccountSpec": {},
                          "listingType": "BillingIntegratedManagedService",
                          "marketingSpec": {
                            "supportSpec": {},
                          },
                          "purchaseSpec": {
                            "metrics": [
                              {
                                "valueType": "VALUE_TYPE_UNSPECIFIED",
                              },
                            ],
                            "purchaseOptionSpecs": [
                              {
                                "priceInfo": {
                                  "priceModel": "FREE",
                                  "subscriptionPlans": [
                                    {
                                      "period": "ONE_YEAR",
                                      "price": {},
                                      "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                                    },
                                  ],
                                  "usageFees": [
                                    {
                                      "priceTiers": [
                                        {
                                          "price": {},
                                        },
                                      ],
                                      "taxCategoryOverride": "TAX_CATEGORY_UNSPECIFIED",
                                    },
                                  ],
                                },
                                "purchaseMode": "PURCHASE_MODE_PUBLIC",
                              },
                            ],
                          },
                        },
                        "marketplace": "marketplaces/google-cloud",
                        "serviceConfig": {
                          "billing": {},
                          "metrics": [
                            {
                              "valueType": "VALUE_TYPE_UNSPECIFIED",
                            },
                          ],
                        },
                      },
                    },
                    "partner": "AWS",
                    "productType": "UNKNOWN",
                    "service": "MARKETPLACE",
                  },
                },
              },
            ],
            "method": "PATCH",
            "path": "/org/{orgId}/product/{productId}",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "productId": {
                "docs": "Product ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "fulfillmentUrl": "string",
                  "id": "string",
                  "organizationID": "string",
                },
              },
              "headers": undefined,
              "name": "SharedUpdateProductParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedWorkloadProduct",
            },
          },
        },
      },
    },
    "report.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "GetRevenueReport": {
            "auth": true,
            "display-name": "get revenue report",
            "docs": "Get the revenue report of the given organization, product, entitlement, or buyer.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "reportType": "InvoicedAmount",
                    "revenueRecords": [
                      {
                        "info": {
                          "awsRevenueRecords": [
                            {
                              "insertDate": {},
                              "invoiceDate": {},
                              "paymentDueDate": {},
                              "usagePeriodEndDate": {},
                              "usagePeriodStartDate": {},
                            },
                          ],
                          "azureRevenueRecords": [
                            {},
                          ],
                          "gcpRevenueRecords": [
                            {},
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/org/{orgId}/revenueReport",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "buyerID": {
                    "docs": "Optional, if available, return the report for the Buyer.",
                    "type": "optional<string>",
                  },
                  "entitlementID": {
                    "docs": "Optional, if available, return the report for the Entitlement.",
                    "type": "optional<string>",
                  },
                  "organizationID": {
                    "docs": "Required. If the productID & entitlementID are emtpy, return the report for the entire Organization.",
                    "type": "string",
                  },
                  "partner": {
                    "docs": "Required.",
                    "type": "root.SharedGetRevenueReportParamsPartner",
                  },
                  "productID": {
                    "docs": "Optional, if available, return the report for the Product.",
                    "type": "optional<string>",
                  },
                  "reportType": {
                    "docs": undefined,
                    "type": "root.SharedRevenueReportType",
                  },
                  "service": "literal<"MARKETPLACE">",
                },
              },
              "headers": undefined,
              "name": "SharedGetRevenueReportParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedRevenueReport",
            },
          },
          "GetUsageReport": {
            "auth": true,
            "display-name": "get usage report",
            "docs": "get the daily usage report of the given entitlement, the default timespan is lifetime.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "usageRecords": [
                      {},
                    ],
                  },
                },
              },
            ],
            "method": "POST",
            "path": "/org/{orgId}/usageReport",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "entitlementID": "string",
                  "organizationID": "string",
                },
              },
              "headers": undefined,
              "name": "SharedGetUsageReportParams",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedUsageReport",
            },
          },
          "ListRevenueRecordDetails": {
            "auth": true,
            "display-name": "list revenue record details",
            "docs": "list the raw revenue record details for the given organization, product, entitlement, or buyer.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "partner": "AWS",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "revenueRecordDetails": [
                      {
                        "awsRevenueRecordDetail": {
                          "insertDate": {},
                          "invoiceDate": {},
                          "paymentDueDate": {},
                          "usagePeriodEndDate": {},
                          "usagePeriodStartDate": {},
                        },
                        "azureRevenueRecordDetail": {},
                        "gcpRevenueRecordDetail": {},
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/partner/{partner}/revenueRecordDetail",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "partner": {
                "docs": "Cloud Partner",
                "type": "root.ListRevenueRecordDetailsRequestPartner",
              },
            },
            "request": {
              "name": "ListRevenueRecordDetailsRequest",
              "query-parameters": {
                "buyerId": {
                  "allow-multiple": undefined,
                  "docs": "Filter revenue record details by the given buyer ID",
                  "type": "optional<string>",
                },
                "endDate": {
                  "allow-multiple": undefined,
                  "docs": "end date (UTC) in YYYY-MM-DD format, default is today",
                  "type": "optional<string>",
                },
                "entitlementId": {
                  "allow-multiple": undefined,
                  "docs": "Filter revenue record details by the given entitlement ID",
                  "type": "optional<string>",
                },
                "limit": {
                  "allow-multiple": undefined,
                  "docs": "List pagination size, default 20, max value is 1000",
                  "type": "optional<integer>",
                },
                "offset": {
                  "allow-multiple": undefined,
                  "docs": "List pagination offset, default 0",
                  "type": "optional<integer>",
                },
                "productId": {
                  "allow-multiple": undefined,
                  "docs": "Filter revenue record details by the given product ID",
                  "type": "optional<string>",
                },
                "startDate": {
                  "allow-multiple": undefined,
                  "docs": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedListRevenueRecordDetailsResponse",
            },
          },
          "ListRevenueRecords": {
            "auth": true,
            "display-name": "list revenue records",
            "docs": "list the revenue records for the given organization, product, entitlement, or buyer.",
            "errors": [
              "root.BadRequestError",
              "root.InternalServerError",
            ],
            "examples": [
              {
                "headers": undefined,
                "path-parameters": {
                  "orgId": "org-id",
                  "partner": "AWS",
                },
                "query-parameters": undefined,
                "request": undefined,
                "response": {
                  "body": {
                    "revenueRecords": [
                      {
                        "info": {
                          "awsRevenueRecords": [
                            {
                              "insertDate": {},
                              "invoiceDate": {},
                              "paymentDueDate": {},
                              "usagePeriodEndDate": {},
                              "usagePeriodStartDate": {},
                            },
                          ],
                          "azureRevenueRecords": [
                            {},
                          ],
                          "gcpRevenueRecords": [
                            {},
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            ],
            "method": "GET",
            "path": "/org/{orgId}/partner/{partner}/revenueRecord",
            "path-parameters": {
              "orgId": {
                "docs": "Organization ID",
                "type": "string",
              },
              "partner": {
                "docs": "Cloud Partner",
                "type": "root.ListRevenueRecordsRequestPartner",
              },
            },
            "request": {
              "name": "ListRevenueRecordsRequest",
              "query-parameters": {
                "buyerId": {
                  "allow-multiple": undefined,
                  "docs": "Filter revenue record details by the given buyer ID",
                  "type": "optional<string>",
                },
                "endDate": {
                  "allow-multiple": undefined,
                  "docs": "end date (UTC) in YYYY-MM-DD format, default is today",
                  "type": "optional<string>",
                },
                "entitlementId": {
                  "allow-multiple": undefined,
                  "docs": "Filter revenue record details by the given entitlement ID",
                  "type": "optional<string>",
                },
                "limit": {
                  "allow-multiple": undefined,
                  "docs": "List pagination size, default 20, max value is 1000",
                  "type": "optional<integer>",
                },
                "offset": {
                  "allow-multiple": undefined,
                  "docs": "List pagination offset, default 0",
                  "type": "optional<integer>",
                },
                "productId": {
                  "allow-multiple": undefined,
                  "docs": "Filter revenue record details by the given product ID",
                  "type": "optional<string>",
                },
                "startDate": {
                  "allow-multiple": undefined,
                  "docs": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "OK",
              "type": "root.SharedListRevenueRecordsResponse",
            },
          },
        },
      },
    },
  },
  "rootApiFile": {
    "auth": "BearerTokenAuth",
    "auth-schemes": {
      "BearerTokenAuth": {
        "header": "Authorization",
        "name": "apiKey",
        "prefix": undefined,
        "type": "string",
      },
    },
    "default-environment": "default",
    "display-name": "Suger API",
    "environments": {
      "default": "https://api.suger.cloud",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "imports": {
      "root": "__package__.yml",
    },
    "name": "api",
  },
}
`;

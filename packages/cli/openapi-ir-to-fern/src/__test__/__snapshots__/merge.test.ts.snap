// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser merge simple 1`] = `
{
  "definitionFiles": {
    "__package__.yml": {
      "errors": {},
      "service": undefined,
      "types": {
        "AccountDetails": {
          "docs": undefined,
          "properties": {
            "category": {
              "docs": undefined,
              "type": "optional<CategoryEnum>",
            },
            "end_user_email_address": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "end_user_organization_name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "end_user_origin_id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "integration": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "integration_slug": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "is_duplicate": {
              "docs": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is \`null\` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
              "type": "optional<boolean>",
            },
            "status": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "webhook_listener_url": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AccountDetailsAndActions": {
          "docs": "# The LinkedAccount Object
### Description
The \`LinkedAccount\` object is used to represent an end user's link with a specific integration.

### Usage Example
View a list of your organization's \`LinkedAccount\` objects.",
          "properties": {
            "category": {
              "docs": undefined,
              "type": "optional<CategoryEnum>",
            },
            "end_user_email_address": {
              "docs": undefined,
              "type": "string",
            },
            "end_user_organization_name": {
              "docs": undefined,
              "type": "string",
            },
            "end_user_origin_id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "string",
            },
            "integration": {
              "docs": undefined,
              "type": "optional<AccountDetailsAndActionsIntegration>",
            },
            "is_duplicate": {
              "docs": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is \`null\` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
              "type": "optional<boolean>",
            },
            "status": {
              "docs": undefined,
              "type": "AccountDetailsAndActionsStatusEnum",
            },
            "status_detail": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "webhook_listener_url": {
              "docs": undefined,
              "type": "string",
            },
          },
        },
        "AccountDetailsAndActionsIntegration": {
          "docs": undefined,
          "properties": {
            "available_model_operations": {
              "docs": undefined,
              "type": "optional<list<ModelOperation>>",
            },
            "categories": {
              "docs": undefined,
              "type": "list<CategoriesEnum>",
            },
            "color": {
              "docs": undefined,
              "type": "string",
            },
            "image": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "name": {
              "docs": undefined,
              "type": "string",
            },
            "passthrough_available": {
              "docs": undefined,
              "type": "boolean",
            },
            "slug": {
              "docs": undefined,
              "type": "string",
            },
            "square_image": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "AccountDetailsAndActionsStatusEnum": {
          "docs": "* \`COMPLETE\` - COMPLETE
* \`INCOMPLETE\` - INCOMPLETE
* \`RELINK_NEEDED\` - RELINK_NEEDED",
          "enum": [
            {
              "docs": undefined,
              "name": "COMPLETE",
              "value": "COMPLETE",
            },
            {
              "docs": undefined,
              "name": "INCOMPLETE",
              "value": "INCOMPLETE",
            },
            {
              "docs": undefined,
              "name": "RELINK_NEEDED",
              "value": "RELINK_NEEDED",
            },
          ],
        },
        "AccountIntegration": {
          "docs": undefined,
          "properties": {
            "api_endpoints_to_documentation_urls": {
              "docs": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}",
              "type": "optional<map<string, unknown>>",
            },
            "categories": {
              "docs": "Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris].",
              "type": "optional<list<CategoriesEnum>>",
            },
            "color": {
              "docs": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b> <span style="white-space: nowrap">\`<= 18 characters\`</span> ",
              "type": "optional<string>",
            },
            "image": {
              "docs": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>",
              "type": "optional<string>",
            },
            "is_in_beta": {
              "docs": "If checked, this integration will not appear in the linking flow, and will appear elsewhere with a Beta tag.",
              "type": "optional<boolean>",
            },
            "name": {
              "docs": "Company name.",
              "type": "string",
            },
            "slug": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "square_image": {
              "docs": "Company logo in square shape. <b>Upload an image with a white background.</b>",
              "type": "optional<string>",
            },
          },
        },
        "AccountToken": {
          "docs": undefined,
          "properties": {
            "account_token": {
              "docs": undefined,
              "type": "string",
            },
            "integration": {
              "docs": undefined,
              "type": "AccountIntegration",
            },
          },
        },
        "AccountTypeEnum": {
          "docs": "* \`SAVINGS\` - SAVINGS
* \`CHECKING\` - CHECKING",
          "enum": [
            {
              "docs": undefined,
              "name": "SAVINGS",
              "value": "SAVINGS",
            },
            {
              "docs": undefined,
              "name": "CHECKING",
              "value": "CHECKING",
            },
          ],
        },
        "AvailableActions": {
          "docs": "# The AvailableActions Object
### Description
The \`Activity\` object is used to see all available model/operation combinations for an integration.

### Usage Example
Fetch all the actions available for the \`Zenefits\` integration.",
          "properties": {
            "available_model_operations": {
              "docs": undefined,
              "type": "optional<list<ModelOperation>>",
            },
            "integration": {
              "docs": undefined,
              "type": "AccountIntegration",
            },
            "passthrough_available": {
              "docs": undefined,
              "type": "boolean",
            },
          },
        },
        "BankInfo": {
          "docs": "# The BankInfo Object
### Description
The \`BankInfo\` object is used to represent the Bank Account information for an Employee.

### Usage Example
Fetch from the \`LIST BankInfo\` endpoint and filter by \`ID\` to show all bank information.",
          "properties": {
            "account_number": {
              "docs": "The account number.",
              "type": "optional<string>",
            },
            "account_type": {
              "docs": "The bank account type

* \`SAVINGS\` - SAVINGS
* \`CHECKING\` - CHECKING",
              "type": "optional<AccountTypeEnum>",
            },
            "bank_name": {
              "docs": "The bank name.",
              "type": "optional<string>",
            },
            "employee": {
              "docs": "The employee with this bank account.",
              "type": "optional<string>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "remote_created_at": {
              "docs": "When the matching bank object was created in the third party system.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
            "routing_number": {
              "docs": "The routing number.",
              "type": "optional<string>",
            },
          },
        },
        "BankInfoListRequestAccountType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "CHECKING",
              "value": "CHECKING",
            },
            {
              "docs": undefined,
              "name": "SAVINGS",
              "value": "SAVINGS",
            },
          ],
        },
        "BankInfoListRequestOrderBy": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "RemoteCreatedAtDescending",
              "value": "-remote_created_at",
            },
            {
              "docs": undefined,
              "name": "RemoteCreatedAtAscending",
              "value": "remote_created_at",
            },
          ],
        },
        "Benefit": {
          "docs": "# The Benefit Object
### Description
The \`Benefit\` object is used to represent a benefit that an employee has enrolled in.

### Usage Example
Fetch from the \`LIST Benefits\` endpoint and filter by \`ID\` to show all benefits.",
          "properties": {
            "benefit_plan_type": {
              "docs": "The type of benefit plan",
              "type": "optional<string>",
            },
            "company_contribution": {
              "docs": "The company's contribution.",
              "type": "optional<double>",
            },
            "employee": {
              "docs": "The employee on the plan.",
              "type": "optional<string>",
            },
            "employee_contribution": {
              "docs": "The employee's contribution.",
              "type": "optional<double>",
            },
            "end_date": {
              "docs": "The day and time the benefit ended.",
              "type": "optional<string>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "provider_name": {
              "docs": "The name of the benefit provider.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
            "start_date": {
              "docs": "The day and time the benefit started.",
              "type": "optional<string>",
            },
          },
        },
        "CategoriesEnum": {
          "docs": "* \`hris\` - hris
* \`ats\` - ats
* \`accounting\` - accounting
* \`ticketing\` - ticketing
* \`crm\` - crm
* \`mktg\` - mktg
* \`filestorage\` - filestorage",
          "enum": [
            {
              "docs": undefined,
              "name": "hris",
              "value": "hris",
            },
            {
              "docs": undefined,
              "name": "ats",
              "value": "ats",
            },
            {
              "docs": undefined,
              "name": "accounting",
              "value": "accounting",
            },
            {
              "docs": undefined,
              "name": "ticketing",
              "value": "ticketing",
            },
            {
              "docs": undefined,
              "name": "crm",
              "value": "crm",
            },
            {
              "docs": undefined,
              "name": "mktg",
              "value": "mktg",
            },
            {
              "docs": undefined,
              "name": "filestorage",
              "value": "filestorage",
            },
          ],
        },
        "CategoryEnum": {
          "docs": "* \`hris\` - hris
* \`ats\` - ats
* \`accounting\` - accounting
* \`ticketing\` - ticketing
* \`crm\` - crm
* \`mktg\` - mktg
* \`filestorage\` - filestorage",
          "enum": [
            {
              "docs": undefined,
              "name": "hris",
              "value": "hris",
            },
            {
              "docs": undefined,
              "name": "ats",
              "value": "ats",
            },
            {
              "docs": undefined,
              "name": "accounting",
              "value": "accounting",
            },
            {
              "docs": undefined,
              "name": "ticketing",
              "value": "ticketing",
            },
            {
              "docs": undefined,
              "name": "crm",
              "value": "crm",
            },
            {
              "docs": undefined,
              "name": "mktg",
              "value": "mktg",
            },
            {
              "docs": undefined,
              "name": "filestorage",
              "value": "filestorage",
            },
          ],
        },
        "CommonModelScopesBodyRequest": {
          "docs": undefined,
          "properties": {
            "disabled_fields": {
              "docs": undefined,
              "type": "list<string>",
            },
            "enabled_actions": {
              "docs": undefined,
              "type": "list<EnabledActionsEnum>",
            },
            "model_id": {
              "docs": "<span style="white-space: nowrap">\`non-empty\`</span>",
              "type": "string",
            },
          },
        },
        "Company": {
          "docs": "# The Company Object
### Description
The \`Company\` object is used to represent a company within the HRIS / Payroll system.

### Usage Example
Fetch from the \`LIST Companies\` endpoint and filter by \`ID\` to show all companies.",
          "properties": {
            "display_name": {
              "docs": "The company's display name.",
              "type": "optional<string>",
            },
            "eins": {
              "docs": "The company's Employer Identification Numbers.",
              "type": "optional<list<optional<string>>>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "legal_name": {
              "docs": "The company's legal name.",
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
          },
        },
        "ConditionSchema": {
          "docs": undefined,
          "properties": {
            "common_model": {
              "docs": "The common model for which a condition schema is defined.",
              "type": "optional<string>",
            },
            "condition_type": {
              "docs": "The type of value(s) that can be set for this condition.

* \`BOOLEAN\` - BOOLEAN
* \`DATE\` - DATE
* \`DATE_TIME\` - DATE_TIME
* \`INTEGER\` - INTEGER
* \`FLOAT\` - FLOAT
* \`STRING\` - STRING
* \`LIST_OF_STRINGS\` - LIST_OF_STRINGS",
              "type": "ConditionTypeEnum",
            },
            "field_name": {
              "docs": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. "location_type".",
              "type": "optional<string>",
            },
            "id": {
              "docs": "The ID of the condition schema. This ID is used when updating selective syncs for a linked account.",
              "type": "string",
            },
            "is_unique": {
              "docs": "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times.",
              "type": "optional<boolean>",
            },
            "native_name": {
              "docs": "User-facing *native condition* name. e.g. "Skip Manager".",
              "type": "optional<string>",
            },
            "operators": {
              "docs": "The schemas for the operators that can be used on a condition.",
              "type": "list<OperatorSchema>",
            },
          },
        },
        "ConditionTypeEnum": {
          "docs": "* \`BOOLEAN\` - BOOLEAN
* \`DATE\` - DATE
* \`DATE_TIME\` - DATE_TIME
* \`INTEGER\` - INTEGER
* \`FLOAT\` - FLOAT
* \`STRING\` - STRING
* \`LIST_OF_STRINGS\` - LIST_OF_STRINGS",
          "enum": [
            {
              "docs": undefined,
              "name": "BOOLEAN",
              "value": "BOOLEAN",
            },
            {
              "docs": undefined,
              "name": "DATE",
              "value": "DATE",
            },
            {
              "docs": undefined,
              "name": "DATE_TIME",
              "value": "DATE_TIME",
            },
            {
              "docs": undefined,
              "name": "INTEGER",
              "value": "INTEGER",
            },
            {
              "docs": undefined,
              "name": "FLOAT",
              "value": "FLOAT",
            },
            {
              "docs": undefined,
              "name": "STRING",
              "value": "STRING",
            },
            {
              "docs": undefined,
              "name": "LIST_OF_STRINGS",
              "value": "LIST_OF_STRINGS",
            },
          ],
        },
        "CountryEnum": {
          "docs": "* \`AF\` - Afghanistan
* \`AX\` - Åland Islands
* \`AL\` - Albania
* \`DZ\` - Algeria
* \`AS\` - American Samoa
* \`AD\` - Andorra
* \`AO\` - Angola
* \`AI\` - Anguilla
* \`AQ\` - Antarctica
* \`AG\` - Antigua and Barbuda
* \`AR\` - Argentina
* \`AM\` - Armenia
* \`AW\` - Aruba
* \`AU\` - Australia
* \`AT\` - Austria
* \`AZ\` - Azerbaijan
* \`BS\` - Bahamas
* \`BH\` - Bahrain
* \`BD\` - Bangladesh
* \`BB\` - Barbados
* \`BY\` - Belarus
* \`BE\` - Belgium
* \`BZ\` - Belize
* \`BJ\` - Benin
* \`BM\` - Bermuda
* \`BT\` - Bhutan
* \`BO\` - Bolivia
* \`BQ\` - Bonaire, Sint Eustatius and Saba
* \`BA\` - Bosnia and Herzegovina
* \`BW\` - Botswana
* \`BV\` - Bouvet Island
* \`BR\` - Brazil
* \`IO\` - British Indian Ocean Territory
* \`BN\` - Brunei
* \`BG\` - Bulgaria
* \`BF\` - Burkina Faso
* \`BI\` - Burundi
* \`CV\` - Cabo Verde
* \`KH\` - Cambodia
* \`CM\` - Cameroon
* \`CA\` - Canada
* \`KY\` - Cayman Islands
* \`CF\` - Central African Republic
* \`TD\` - Chad
* \`CL\` - Chile
* \`CN\` - China
* \`CX\` - Christmas Island
* \`CC\` - Cocos (Keeling) Islands
* \`CO\` - Colombia
* \`KM\` - Comoros
* \`CG\` - Congo
* \`CD\` - Congo (the Democratic Republic of the)
* \`CK\` - Cook Islands
* \`CR\` - Costa Rica
* \`CI\` - Côte d'Ivoire
* \`HR\` - Croatia
* \`CU\` - Cuba
* \`CW\` - Curaçao
* \`CY\` - Cyprus
* \`CZ\` - Czechia
* \`DK\` - Denmark
* \`DJ\` - Djibouti
* \`DM\` - Dominica
* \`DO\` - Dominican Republic
* \`EC\` - Ecuador
* \`EG\` - Egypt
* \`SV\` - El Salvador
* \`GQ\` - Equatorial Guinea
* \`ER\` - Eritrea
* \`EE\` - Estonia
* \`SZ\` - Eswatini
* \`ET\` - Ethiopia
* \`FK\` - Falkland Islands (Malvinas)
* \`FO\` - Faroe Islands
* \`FJ\` - Fiji
* \`FI\` - Finland
* \`FR\` - France
* \`GF\` - French Guiana
* \`PF\` - French Polynesia
* \`TF\` - French Southern Territories
* \`GA\` - Gabon
* \`GM\` - Gambia
* \`GE\` - Georgia
* \`DE\` - Germany
* \`GH\` - Ghana
* \`GI\` - Gibraltar
* \`GR\` - Greece
* \`GL\` - Greenland
* \`GD\` - Grenada
* \`GP\` - Guadeloupe
* \`GU\` - Guam
* \`GT\` - Guatemala
* \`GG\` - Guernsey
* \`GN\` - Guinea
* \`GW\` - Guinea-Bissau
* \`GY\` - Guyana
* \`HT\` - Haiti
* \`HM\` - Heard Island and McDonald Islands
* \`VA\` - Holy See
* \`HN\` - Honduras
* \`HK\` - Hong Kong
* \`HU\` - Hungary
* \`IS\` - Iceland
* \`IN\` - India
* \`ID\` - Indonesia
* \`IR\` - Iran
* \`IQ\` - Iraq
* \`IE\` - Ireland
* \`IM\` - Isle of Man
* \`IL\` - Israel
* \`IT\` - Italy
* \`JM\` - Jamaica
* \`JP\` - Japan
* \`JE\` - Jersey
* \`JO\` - Jordan
* \`KZ\` - Kazakhstan
* \`KE\` - Kenya
* \`KI\` - Kiribati
* \`KW\` - Kuwait
* \`KG\` - Kyrgyzstan
* \`LA\` - Laos
* \`LV\` - Latvia
* \`LB\` - Lebanon
* \`LS\` - Lesotho
* \`LR\` - Liberia
* \`LY\` - Libya
* \`LI\` - Liechtenstein
* \`LT\` - Lithuania
* \`LU\` - Luxembourg
* \`MO\` - Macao
* \`MG\` - Madagascar
* \`MW\` - Malawi
* \`MY\` - Malaysia
* \`MV\` - Maldives
* \`ML\` - Mali
* \`MT\` - Malta
* \`MH\` - Marshall Islands
* \`MQ\` - Martinique
* \`MR\` - Mauritania
* \`MU\` - Mauritius
* \`YT\` - Mayotte
* \`MX\` - Mexico
* \`FM\` - Micronesia (Federated States of)
* \`MD\` - Moldova
* \`MC\` - Monaco
* \`MN\` - Mongolia
* \`ME\` - Montenegro
* \`MS\` - Montserrat
* \`MA\` - Morocco
* \`MZ\` - Mozambique
* \`MM\` - Myanmar
* \`NA\` - Namibia
* \`NR\` - Nauru
* \`NP\` - Nepal
* \`NL\` - Netherlands
* \`NC\` - New Caledonia
* \`NZ\` - New Zealand
* \`NI\` - Nicaragua
* \`NE\` - Niger
* \`NG\` - Nigeria
* \`NU\` - Niue
* \`NF\` - Norfolk Island
* \`KP\` - North Korea
* \`MK\` - North Macedonia
* \`MP\` - Northern Mariana Islands
* \`NO\` - Norway
* \`OM\` - Oman
* \`PK\` - Pakistan
* \`PW\` - Palau
* \`PS\` - Palestine, State of
* \`PA\` - Panama
* \`PG\` - Papua New Guinea
* \`PY\` - Paraguay
* \`PE\` - Peru
* \`PH\` - Philippines
* \`PN\` - Pitcairn
* \`PL\` - Poland
* \`PT\` - Portugal
* \`PR\` - Puerto Rico
* \`QA\` - Qatar
* \`RE\` - Réunion
* \`RO\` - Romania
* \`RU\` - Russia
* \`RW\` - Rwanda
* \`BL\` - Saint Barthélemy
* \`SH\` - Saint Helena, Ascension and Tristan da Cunha
* \`KN\` - Saint Kitts and Nevis
* \`LC\` - Saint Lucia
* \`MF\` - Saint Martin (French part)
* \`PM\` - Saint Pierre and Miquelon
* \`VC\` - Saint Vincent and the Grenadines
* \`WS\` - Samoa
* \`SM\` - San Marino
* \`ST\` - Sao Tome and Principe
* \`SA\` - Saudi Arabia
* \`SN\` - Senegal
* \`RS\` - Serbia
* \`SC\` - Seychelles
* \`SL\` - Sierra Leone
* \`SG\` - Singapore
* \`SX\` - Sint Maarten (Dutch part)
* \`SK\` - Slovakia
* \`SI\` - Slovenia
* \`SB\` - Solomon Islands
* \`SO\` - Somalia
* \`ZA\` - South Africa
* \`GS\` - South Georgia and the South Sandwich Islands
* \`KR\` - South Korea
* \`SS\` - South Sudan
* \`ES\` - Spain
* \`LK\` - Sri Lanka
* \`SD\` - Sudan
* \`SR\` - Suriname
* \`SJ\` - Svalbard and Jan Mayen
* \`SE\` - Sweden
* \`CH\` - Switzerland
* \`SY\` - Syria
* \`TW\` - Taiwan
* \`TJ\` - Tajikistan
* \`TZ\` - Tanzania
* \`TH\` - Thailand
* \`TL\` - Timor-Leste
* \`TG\` - Togo
* \`TK\` - Tokelau
* \`TO\` - Tonga
* \`TT\` - Trinidad and Tobago
* \`TN\` - Tunisia
* \`TR\` - Turkey
* \`TM\` - Turkmenistan
* \`TC\` - Turks and Caicos Islands
* \`TV\` - Tuvalu
* \`UG\` - Uganda
* \`UA\` - Ukraine
* \`AE\` - United Arab Emirates
* \`GB\` - United Kingdom
* \`UM\` - United States Minor Outlying Islands
* \`US\` - United States of America
* \`UY\` - Uruguay
* \`UZ\` - Uzbekistan
* \`VU\` - Vanuatu
* \`VE\` - Venezuela
* \`VN\` - Vietnam
* \`VG\` - Virgin Islands (British)
* \`VI\` - Virgin Islands (U.S.)
* \`WF\` - Wallis and Futuna
* \`EH\` - Western Sahara
* \`YE\` - Yemen
* \`ZM\` - Zambia
* \`ZW\` - Zimbabwe",
          "enum": [
            {
              "docs": undefined,
              "name": "AF",
              "value": "AF",
            },
            {
              "docs": undefined,
              "name": "AX",
              "value": "AX",
            },
            {
              "docs": undefined,
              "name": "AL",
              "value": "AL",
            },
            {
              "docs": undefined,
              "name": "DZ",
              "value": "DZ",
            },
            {
              "docs": undefined,
              "name": "AS",
              "value": "AS",
            },
            {
              "docs": undefined,
              "name": "AD",
              "value": "AD",
            },
            {
              "docs": undefined,
              "name": "AO",
              "value": "AO",
            },
            {
              "docs": undefined,
              "name": "AI",
              "value": "AI",
            },
            {
              "docs": undefined,
              "name": "AQ",
              "value": "AQ",
            },
            {
              "docs": undefined,
              "name": "AG",
              "value": "AG",
            },
            {
              "docs": undefined,
              "name": "AR",
              "value": "AR",
            },
            {
              "docs": undefined,
              "name": "AM",
              "value": "AM",
            },
            {
              "docs": undefined,
              "name": "AW",
              "value": "AW",
            },
            {
              "docs": undefined,
              "name": "AU",
              "value": "AU",
            },
            {
              "docs": undefined,
              "name": "AT",
              "value": "AT",
            },
            {
              "docs": undefined,
              "name": "AZ",
              "value": "AZ",
            },
            {
              "docs": undefined,
              "name": "BS",
              "value": "BS",
            },
            {
              "docs": undefined,
              "name": "BH",
              "value": "BH",
            },
            {
              "docs": undefined,
              "name": "BD",
              "value": "BD",
            },
            {
              "docs": undefined,
              "name": "BB",
              "value": "BB",
            },
            {
              "docs": undefined,
              "name": "BY",
              "value": "BY",
            },
            {
              "docs": undefined,
              "name": "BE",
              "value": "BE",
            },
            {
              "docs": undefined,
              "name": "BZ",
              "value": "BZ",
            },
            {
              "docs": undefined,
              "name": "BJ",
              "value": "BJ",
            },
            {
              "docs": undefined,
              "name": "BM",
              "value": "BM",
            },
            {
              "docs": undefined,
              "name": "BT",
              "value": "BT",
            },
            {
              "docs": undefined,
              "name": "BO",
              "value": "BO",
            },
            {
              "docs": undefined,
              "name": "BQ",
              "value": "BQ",
            },
            {
              "docs": undefined,
              "name": "BA",
              "value": "BA",
            },
            {
              "docs": undefined,
              "name": "BW",
              "value": "BW",
            },
            {
              "docs": undefined,
              "name": "BV",
              "value": "BV",
            },
            {
              "docs": undefined,
              "name": "BR",
              "value": "BR",
            },
            {
              "docs": undefined,
              "name": "IO",
              "value": "IO",
            },
            {
              "docs": undefined,
              "name": "BN",
              "value": "BN",
            },
            {
              "docs": undefined,
              "name": "BG",
              "value": "BG",
            },
            {
              "docs": undefined,
              "name": "BF",
              "value": "BF",
            },
            {
              "docs": undefined,
              "name": "BI",
              "value": "BI",
            },
            {
              "docs": undefined,
              "name": "CV",
              "value": "CV",
            },
            {
              "docs": undefined,
              "name": "KH",
              "value": "KH",
            },
            {
              "docs": undefined,
              "name": "CM",
              "value": "CM",
            },
            {
              "docs": undefined,
              "name": "CA",
              "value": "CA",
            },
            {
              "docs": undefined,
              "name": "KY",
              "value": "KY",
            },
            {
              "docs": undefined,
              "name": "CF",
              "value": "CF",
            },
            {
              "docs": undefined,
              "name": "TD",
              "value": "TD",
            },
            {
              "docs": undefined,
              "name": "CL",
              "value": "CL",
            },
            {
              "docs": undefined,
              "name": "CN",
              "value": "CN",
            },
            {
              "docs": undefined,
              "name": "CX",
              "value": "CX",
            },
            {
              "docs": undefined,
              "name": "CC",
              "value": "CC",
            },
            {
              "docs": undefined,
              "name": "CO",
              "value": "CO",
            },
            {
              "docs": undefined,
              "name": "KM",
              "value": "KM",
            },
            {
              "docs": undefined,
              "name": "CG",
              "value": "CG",
            },
            {
              "docs": undefined,
              "name": "CD",
              "value": "CD",
            },
            {
              "docs": undefined,
              "name": "CK",
              "value": "CK",
            },
            {
              "docs": undefined,
              "name": "CR",
              "value": "CR",
            },
            {
              "docs": undefined,
              "name": "CI",
              "value": "CI",
            },
            {
              "docs": undefined,
              "name": "HR",
              "value": "HR",
            },
            {
              "docs": undefined,
              "name": "CU",
              "value": "CU",
            },
            {
              "docs": undefined,
              "name": "CW",
              "value": "CW",
            },
            {
              "docs": undefined,
              "name": "CY",
              "value": "CY",
            },
            {
              "docs": undefined,
              "name": "CZ",
              "value": "CZ",
            },
            {
              "docs": undefined,
              "name": "DK",
              "value": "DK",
            },
            {
              "docs": undefined,
              "name": "DJ",
              "value": "DJ",
            },
            {
              "docs": undefined,
              "name": "DM",
              "value": "DM",
            },
            {
              "docs": undefined,
              "name": "DO",
              "value": "DO",
            },
            {
              "docs": undefined,
              "name": "EC",
              "value": "EC",
            },
            {
              "docs": undefined,
              "name": "EG",
              "value": "EG",
            },
            {
              "docs": undefined,
              "name": "SV",
              "value": "SV",
            },
            {
              "docs": undefined,
              "name": "GQ",
              "value": "GQ",
            },
            {
              "docs": undefined,
              "name": "ER",
              "value": "ER",
            },
            {
              "docs": undefined,
              "name": "EE",
              "value": "EE",
            },
            {
              "docs": undefined,
              "name": "SZ",
              "value": "SZ",
            },
            {
              "docs": undefined,
              "name": "ET",
              "value": "ET",
            },
            {
              "docs": undefined,
              "name": "FK",
              "value": "FK",
            },
            {
              "docs": undefined,
              "name": "FO",
              "value": "FO",
            },
            {
              "docs": undefined,
              "name": "FJ",
              "value": "FJ",
            },
            {
              "docs": undefined,
              "name": "FI",
              "value": "FI",
            },
            {
              "docs": undefined,
              "name": "FR",
              "value": "FR",
            },
            {
              "docs": undefined,
              "name": "GF",
              "value": "GF",
            },
            {
              "docs": undefined,
              "name": "PF",
              "value": "PF",
            },
            {
              "docs": undefined,
              "name": "TF",
              "value": "TF",
            },
            {
              "docs": undefined,
              "name": "GA",
              "value": "GA",
            },
            {
              "docs": undefined,
              "name": "GM",
              "value": "GM",
            },
            {
              "docs": undefined,
              "name": "GE",
              "value": "GE",
            },
            {
              "docs": undefined,
              "name": "DE",
              "value": "DE",
            },
            {
              "docs": undefined,
              "name": "GH",
              "value": "GH",
            },
            {
              "docs": undefined,
              "name": "GI",
              "value": "GI",
            },
            {
              "docs": undefined,
              "name": "GR",
              "value": "GR",
            },
            {
              "docs": undefined,
              "name": "GL",
              "value": "GL",
            },
            {
              "docs": undefined,
              "name": "GD",
              "value": "GD",
            },
            {
              "docs": undefined,
              "name": "GP",
              "value": "GP",
            },
            {
              "docs": undefined,
              "name": "GU",
              "value": "GU",
            },
            {
              "docs": undefined,
              "name": "GT",
              "value": "GT",
            },
            {
              "docs": undefined,
              "name": "GG",
              "value": "GG",
            },
            {
              "docs": undefined,
              "name": "GN",
              "value": "GN",
            },
            {
              "docs": undefined,
              "name": "GW",
              "value": "GW",
            },
            {
              "docs": undefined,
              "name": "GY",
              "value": "GY",
            },
            {
              "docs": undefined,
              "name": "HT",
              "value": "HT",
            },
            {
              "docs": undefined,
              "name": "HM",
              "value": "HM",
            },
            {
              "docs": undefined,
              "name": "VA",
              "value": "VA",
            },
            {
              "docs": undefined,
              "name": "HN",
              "value": "HN",
            },
            {
              "docs": undefined,
              "name": "HK",
              "value": "HK",
            },
            {
              "docs": undefined,
              "name": "HU",
              "value": "HU",
            },
            {
              "docs": undefined,
              "name": "IS",
              "value": "IS",
            },
            {
              "docs": undefined,
              "name": "IN",
              "value": "IN",
            },
            {
              "docs": undefined,
              "name": "ID",
              "value": "ID",
            },
            {
              "docs": undefined,
              "name": "IR",
              "value": "IR",
            },
            {
              "docs": undefined,
              "name": "IQ",
              "value": "IQ",
            },
            {
              "docs": undefined,
              "name": "IE",
              "value": "IE",
            },
            {
              "docs": undefined,
              "name": "IM",
              "value": "IM",
            },
            {
              "docs": undefined,
              "name": "IL",
              "value": "IL",
            },
            {
              "docs": undefined,
              "name": "IT",
              "value": "IT",
            },
            {
              "docs": undefined,
              "name": "JM",
              "value": "JM",
            },
            {
              "docs": undefined,
              "name": "JP",
              "value": "JP",
            },
            {
              "docs": undefined,
              "name": "JE",
              "value": "JE",
            },
            {
              "docs": undefined,
              "name": "JO",
              "value": "JO",
            },
            {
              "docs": undefined,
              "name": "KZ",
              "value": "KZ",
            },
            {
              "docs": undefined,
              "name": "KE",
              "value": "KE",
            },
            {
              "docs": undefined,
              "name": "KI",
              "value": "KI",
            },
            {
              "docs": undefined,
              "name": "KW",
              "value": "KW",
            },
            {
              "docs": undefined,
              "name": "KG",
              "value": "KG",
            },
            {
              "docs": undefined,
              "name": "LA",
              "value": "LA",
            },
            {
              "docs": undefined,
              "name": "LV",
              "value": "LV",
            },
            {
              "docs": undefined,
              "name": "LB",
              "value": "LB",
            },
            {
              "docs": undefined,
              "name": "LS",
              "value": "LS",
            },
            {
              "docs": undefined,
              "name": "LR",
              "value": "LR",
            },
            {
              "docs": undefined,
              "name": "LY",
              "value": "LY",
            },
            {
              "docs": undefined,
              "name": "LI",
              "value": "LI",
            },
            {
              "docs": undefined,
              "name": "LT",
              "value": "LT",
            },
            {
              "docs": undefined,
              "name": "LU",
              "value": "LU",
            },
            {
              "docs": undefined,
              "name": "MO",
              "value": "MO",
            },
            {
              "docs": undefined,
              "name": "MG",
              "value": "MG",
            },
            {
              "docs": undefined,
              "name": "MW",
              "value": "MW",
            },
            {
              "docs": undefined,
              "name": "MY",
              "value": "MY",
            },
            {
              "docs": undefined,
              "name": "MV",
              "value": "MV",
            },
            {
              "docs": undefined,
              "name": "ML",
              "value": "ML",
            },
            {
              "docs": undefined,
              "name": "MT",
              "value": "MT",
            },
            {
              "docs": undefined,
              "name": "MH",
              "value": "MH",
            },
            {
              "docs": undefined,
              "name": "MQ",
              "value": "MQ",
            },
            {
              "docs": undefined,
              "name": "MR",
              "value": "MR",
            },
            {
              "docs": undefined,
              "name": "MU",
              "value": "MU",
            },
            {
              "docs": undefined,
              "name": "YT",
              "value": "YT",
            },
            {
              "docs": undefined,
              "name": "MX",
              "value": "MX",
            },
            {
              "docs": undefined,
              "name": "FM",
              "value": "FM",
            },
            {
              "docs": undefined,
              "name": "MD",
              "value": "MD",
            },
            {
              "docs": undefined,
              "name": "MC",
              "value": "MC",
            },
            {
              "docs": undefined,
              "name": "MN",
              "value": "MN",
            },
            {
              "docs": undefined,
              "name": "ME",
              "value": "ME",
            },
            {
              "docs": undefined,
              "name": "MS",
              "value": "MS",
            },
            {
              "docs": undefined,
              "name": "MA",
              "value": "MA",
            },
            {
              "docs": undefined,
              "name": "MZ",
              "value": "MZ",
            },
            {
              "docs": undefined,
              "name": "MM",
              "value": "MM",
            },
            {
              "docs": undefined,
              "name": "NA",
              "value": "NA",
            },
            {
              "docs": undefined,
              "name": "NR",
              "value": "NR",
            },
            {
              "docs": undefined,
              "name": "NP",
              "value": "NP",
            },
            {
              "docs": undefined,
              "name": "NL",
              "value": "NL",
            },
            {
              "docs": undefined,
              "name": "NC",
              "value": "NC",
            },
            {
              "docs": undefined,
              "name": "NZ",
              "value": "NZ",
            },
            {
              "docs": undefined,
              "name": "NI",
              "value": "NI",
            },
            {
              "docs": undefined,
              "name": "NE",
              "value": "NE",
            },
            {
              "docs": undefined,
              "name": "NG",
              "value": "NG",
            },
            {
              "docs": undefined,
              "name": "NU",
              "value": "NU",
            },
            {
              "docs": undefined,
              "name": "NF",
              "value": "NF",
            },
            {
              "docs": undefined,
              "name": "KP",
              "value": "KP",
            },
            {
              "docs": undefined,
              "name": "MK",
              "value": "MK",
            },
            {
              "docs": undefined,
              "name": "MP",
              "value": "MP",
            },
            {
              "docs": undefined,
              "name": "NO",
              "value": "NO",
            },
            {
              "docs": undefined,
              "name": "OM",
              "value": "OM",
            },
            {
              "docs": undefined,
              "name": "PK",
              "value": "PK",
            },
            {
              "docs": undefined,
              "name": "PW",
              "value": "PW",
            },
            {
              "docs": undefined,
              "name": "PS",
              "value": "PS",
            },
            {
              "docs": undefined,
              "name": "PA",
              "value": "PA",
            },
            {
              "docs": undefined,
              "name": "PG",
              "value": "PG",
            },
            {
              "docs": undefined,
              "name": "PY",
              "value": "PY",
            },
            {
              "docs": undefined,
              "name": "PE",
              "value": "PE",
            },
            {
              "docs": undefined,
              "name": "PH",
              "value": "PH",
            },
            {
              "docs": undefined,
              "name": "PN",
              "value": "PN",
            },
            {
              "docs": undefined,
              "name": "PL",
              "value": "PL",
            },
            {
              "docs": undefined,
              "name": "PT",
              "value": "PT",
            },
            {
              "docs": undefined,
              "name": "PR",
              "value": "PR",
            },
            {
              "docs": undefined,
              "name": "QA",
              "value": "QA",
            },
            {
              "docs": undefined,
              "name": "RE",
              "value": "RE",
            },
            {
              "docs": undefined,
              "name": "RO",
              "value": "RO",
            },
            {
              "docs": undefined,
              "name": "RU",
              "value": "RU",
            },
            {
              "docs": undefined,
              "name": "RW",
              "value": "RW",
            },
            {
              "docs": undefined,
              "name": "BL",
              "value": "BL",
            },
            {
              "docs": undefined,
              "name": "SH",
              "value": "SH",
            },
            {
              "docs": undefined,
              "name": "KN",
              "value": "KN",
            },
            {
              "docs": undefined,
              "name": "LC",
              "value": "LC",
            },
            {
              "docs": undefined,
              "name": "MF",
              "value": "MF",
            },
            {
              "docs": undefined,
              "name": "PM",
              "value": "PM",
            },
            {
              "docs": undefined,
              "name": "VC",
              "value": "VC",
            },
            {
              "docs": undefined,
              "name": "WS",
              "value": "WS",
            },
            {
              "docs": undefined,
              "name": "SM",
              "value": "SM",
            },
            {
              "docs": undefined,
              "name": "ST",
              "value": "ST",
            },
            {
              "docs": undefined,
              "name": "SA",
              "value": "SA",
            },
            {
              "docs": undefined,
              "name": "SN",
              "value": "SN",
            },
            {
              "docs": undefined,
              "name": "RS",
              "value": "RS",
            },
            {
              "docs": undefined,
              "name": "SC",
              "value": "SC",
            },
            {
              "docs": undefined,
              "name": "SL",
              "value": "SL",
            },
            {
              "docs": undefined,
              "name": "SG",
              "value": "SG",
            },
            {
              "docs": undefined,
              "name": "SX",
              "value": "SX",
            },
            {
              "docs": undefined,
              "name": "SK",
              "value": "SK",
            },
            {
              "docs": undefined,
              "name": "SI",
              "value": "SI",
            },
            {
              "docs": undefined,
              "name": "SB",
              "value": "SB",
            },
            {
              "docs": undefined,
              "name": "SO",
              "value": "SO",
            },
            {
              "docs": undefined,
              "name": "ZA",
              "value": "ZA",
            },
            {
              "docs": undefined,
              "name": "GS",
              "value": "GS",
            },
            {
              "docs": undefined,
              "name": "KR",
              "value": "KR",
            },
            {
              "docs": undefined,
              "name": "SS",
              "value": "SS",
            },
            {
              "docs": undefined,
              "name": "ES",
              "value": "ES",
            },
            {
              "docs": undefined,
              "name": "LK",
              "value": "LK",
            },
            {
              "docs": undefined,
              "name": "SD",
              "value": "SD",
            },
            {
              "docs": undefined,
              "name": "SR",
              "value": "SR",
            },
            {
              "docs": undefined,
              "name": "SJ",
              "value": "SJ",
            },
            {
              "docs": undefined,
              "name": "SE",
              "value": "SE",
            },
            {
              "docs": undefined,
              "name": "CH",
              "value": "CH",
            },
            {
              "docs": undefined,
              "name": "SY",
              "value": "SY",
            },
            {
              "docs": undefined,
              "name": "TW",
              "value": "TW",
            },
            {
              "docs": undefined,
              "name": "TJ",
              "value": "TJ",
            },
            {
              "docs": undefined,
              "name": "TZ",
              "value": "TZ",
            },
            {
              "docs": undefined,
              "name": "TH",
              "value": "TH",
            },
            {
              "docs": undefined,
              "name": "TL",
              "value": "TL",
            },
            {
              "docs": undefined,
              "name": "TG",
              "value": "TG",
            },
            {
              "docs": undefined,
              "name": "TK",
              "value": "TK",
            },
            {
              "docs": undefined,
              "name": "TO",
              "value": "TO",
            },
            {
              "docs": undefined,
              "name": "TT",
              "value": "TT",
            },
            {
              "docs": undefined,
              "name": "TN",
              "value": "TN",
            },
            {
              "docs": undefined,
              "name": "TR",
              "value": "TR",
            },
            {
              "docs": undefined,
              "name": "TM",
              "value": "TM",
            },
            {
              "docs": undefined,
              "name": "TC",
              "value": "TC",
            },
            {
              "docs": undefined,
              "name": "TV",
              "value": "TV",
            },
            {
              "docs": undefined,
              "name": "UG",
              "value": "UG",
            },
            {
              "docs": undefined,
              "name": "UA",
              "value": "UA",
            },
            {
              "docs": undefined,
              "name": "AE",
              "value": "AE",
            },
            {
              "docs": undefined,
              "name": "GB",
              "value": "GB",
            },
            {
              "docs": undefined,
              "name": "UM",
              "value": "UM",
            },
            {
              "docs": undefined,
              "name": "US",
              "value": "US",
            },
            {
              "docs": undefined,
              "name": "UY",
              "value": "UY",
            },
            {
              "docs": undefined,
              "name": "UZ",
              "value": "UZ",
            },
            {
              "docs": undefined,
              "name": "VU",
              "value": "VU",
            },
            {
              "docs": undefined,
              "name": "VE",
              "value": "VE",
            },
            {
              "docs": undefined,
              "name": "VN",
              "value": "VN",
            },
            {
              "docs": undefined,
              "name": "VG",
              "value": "VG",
            },
            {
              "docs": undefined,
              "name": "VI",
              "value": "VI",
            },
            {
              "docs": undefined,
              "name": "WF",
              "value": "WF",
            },
            {
              "docs": undefined,
              "name": "EH",
              "value": "EH",
            },
            {
              "docs": undefined,
              "name": "YE",
              "value": "YE",
            },
            {
              "docs": undefined,
              "name": "ZM",
              "value": "ZM",
            },
            {
              "docs": undefined,
              "name": "ZW",
              "value": "ZW",
            },
          ],
        },
        "DebugModeLog": {
          "docs": undefined,
          "properties": {
            "dashboard_view": {
              "docs": undefined,
              "type": "string",
            },
            "log_id": {
              "docs": undefined,
              "type": "string",
            },
            "log_summary": {
              "docs": undefined,
              "type": "DebugModelLogSummary",
            },
          },
        },
        "DebugModelLogSummary": {
          "docs": undefined,
          "properties": {
            "method": {
              "docs": undefined,
              "type": "string",
            },
            "status_code": {
              "docs": undefined,
              "type": "integer",
            },
            "url": {
              "docs": undefined,
              "type": "string",
            },
          },
        },
        "Deduction": {
          "docs": "# The Deduction Object
### Description
The \`Deduction\` object is used to represent an array of the wages withheld from total earnings for the purpose of paying taxes.

### Usage Example
Fetch from the \`LIST Deductions\` endpoint and filter by \`ID\` to show all deductions.",
          "properties": {
            "company_deduction": {
              "docs": "The amount of money that is withheld on behalf of an employee by the company.",
              "type": "optional<double>",
            },
            "employee_deduction": {
              "docs": "The amount of money that is withheld from an employee's gross pay by the employee.",
              "type": "optional<double>",
            },
            "employee_payroll_run": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "name": {
              "docs": "The deduction's name.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
          },
        },
        "Earning": {
          "docs": "# The Earning Object
### Description
The \`Earning\` object is used to represent an array of different compensations that an employee receives within specific wage categories.

### Usage Example
Fetch from the \`LIST Earnings\` endpoint and filter by \`ID\` to show all earnings.",
          "properties": {
            "amount": {
              "docs": "The amount earned.",
              "type": "optional<double>",
            },
            "employee_payroll_run": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
            "type": {
              "docs": "The type of earning.

* \`SALARY\` - SALARY
* \`REIMBURSEMENT\` - REIMBURSEMENT
* \`OVERTIME\` - OVERTIME
* \`BONUS\` - BONUS",
              "type": "optional<EarningTypeEnum>",
            },
          },
        },
        "EarningTypeEnum": {
          "docs": "* \`SALARY\` - SALARY
* \`REIMBURSEMENT\` - REIMBURSEMENT
* \`OVERTIME\` - OVERTIME
* \`BONUS\` - BONUS",
          "enum": [
            {
              "docs": undefined,
              "name": "SALARY",
              "value": "SALARY",
            },
            {
              "docs": undefined,
              "name": "REIMBURSEMENT",
              "value": "REIMBURSEMENT",
            },
            {
              "docs": undefined,
              "name": "OVERTIME",
              "value": "OVERTIME",
            },
            {
              "docs": undefined,
              "name": "BONUS",
              "value": "BONUS",
            },
          ],
        },
        "Employee": {
          "docs": "# The Employee Object
### Description
The \`Employee\` object is used to represent any person who has been employed by a company.

### Usage Example
Fetch from the \`LIST Employee\` endpoint and filter by \`ID\` to show all employees.",
          "properties": {
            "avatar": {
              "docs": "The URL of the employee's avatar image.",
              "type": "optional<string>",
            },
            "company": {
              "docs": "The ID of the employee's company.",
              "type": "optional<string>",
            },
            "custom_fields": {
              "docs": "Custom fields configured for a given model.",
              "type": "optional<map<string, unknown>>",
            },
            "date_of_birth": {
              "docs": "The employee's date of birth.",
              "type": "optional<string>",
            },
            "display_full_name": {
              "docs": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
              "type": "optional<string>",
            },
            "employee_number": {
              "docs": "The employee's number that appears in the third-party integration's UI.",
              "type": "optional<string>",
            },
            "employment_status": {
              "docs": "The employment status of the employee.

* \`ACTIVE\` - ACTIVE
* \`PENDING\` - PENDING
* \`INACTIVE\` - INACTIVE",
              "type": "optional<EmploymentStatusEnum>",
            },
            "employments": {
              "docs": "Array of \`Employment\` IDs for this Employee.",
              "type": "optional<list<optional<string>>>",
            },
            "ethnicity": {
              "docs": "The employee's ethnicity.

* \`AMERICAN_INDIAN_OR_ALASKA_NATIVE\` - AMERICAN_INDIAN_OR_ALASKA_NATIVE
* \`ASIAN_OR_INDIAN_SUBCONTINENT\` - ASIAN_OR_INDIAN_SUBCONTINENT
* \`BLACK_OR_AFRICAN_AMERICAN\` - BLACK_OR_AFRICAN_AMERICAN
* \`HISPANIC_OR_LATINO\` - HISPANIC_OR_LATINO
* \`NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
* \`TWO_OR_MORE_RACES\` - TWO_OR_MORE_RACES
* \`WHITE\` - WHITE
* \`PREFER_NOT_TO_DISCLOSE\` - PREFER_NOT_TO_DISCLOSE",
              "type": "optional<EthnicityEnum>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "first_name": {
              "docs": "The employee's first name.",
              "type": "optional<string>",
            },
            "gender": {
              "docs": "The employee's gender.

* \`MALE\` - MALE
* \`FEMALE\` - FEMALE
* \`NON-BINARY\` - NON-BINARY
* \`OTHER\` - OTHER
* \`PREFER_NOT_TO_DISCLOSE\` - PREFER_NOT_TO_DISCLOSE",
              "type": "optional<GenderEnum>",
            },
            "groups": {
              "docs": undefined,
              "type": "optional<list<optional<string>>>",
            },
            "hire_date": {
              "docs": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
              "type": "optional<string>",
            },
            "home_location": {
              "docs": "The employee's home address.",
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "last_name": {
              "docs": "The employee's last name.",
              "type": "optional<string>",
            },
            "manager": {
              "docs": "The employee ID of the employee's manager.",
              "type": "optional<string>",
            },
            "marital_status": {
              "docs": "The employee's filing status as related to marital status.

* \`SINGLE\` - SINGLE
* \`MARRIED_FILING_JOINTLY\` - MARRIED_FILING_JOINTLY
* \`MARRIED_FILING_SEPARATELY\` - MARRIED_FILING_SEPARATELY
* \`HEAD_OF_HOUSEHOLD\` - HEAD_OF_HOUSEHOLD
* \`QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD\` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
              "type": "optional<MaritalStatusEnum>",
            },
            "mobile_phone_number": {
              "docs": "The employee's mobile phone number.",
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "pay_group": {
              "docs": "The employee's pay group",
              "type": "optional<string>",
            },
            "personal_email": {
              "docs": "The employee's personal email.",
              "type": "optional<string>",
            },
            "remote_created_at": {
              "docs": "When the third party's employee was created.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "ssn": {
              "docs": "The employee's social security number.",
              "type": "optional<string>",
            },
            "start_date": {
              "docs": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
              "type": "optional<string>",
            },
            "team": {
              "docs": "The employee's team.",
              "type": "optional<string>",
            },
            "termination_date": {
              "docs": "The employee's termination date.",
              "type": "optional<string>",
            },
            "username": {
              "docs": "The employee's username that appears in the remote UI.",
              "type": "optional<string>",
            },
            "work_email": {
              "docs": "The employee's work email.",
              "type": "optional<string>",
            },
            "work_location": {
              "docs": "The employee's work address.",
              "type": "optional<string>",
            },
          },
        },
        "EmployeePayrollRun": {
          "docs": "# The EmployeePayrollRun Object
### Description
The \`EmployeePayrollRun\` object is used to represent an employee's pay statement for a specific payroll run.

### Usage Example
Fetch from the \`LIST EmployeePayrollRun\` endpoint and filter by \`ID\` to show all employee payroll runs.",
          "properties": {
            "check_date": {
              "docs": "The day and time the payroll run was checked.",
              "type": "optional<string>",
            },
            "deductions": {
              "docs": undefined,
              "type": "optional<list<Deduction>>",
            },
            "earnings": {
              "docs": undefined,
              "type": "optional<list<Earning>>",
            },
            "employee": {
              "docs": "The employee whose payroll is being run.",
              "type": "optional<string>",
            },
            "end_date": {
              "docs": "The day and time the payroll run ended.",
              "type": "optional<string>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "gross_pay": {
              "docs": "The total earnings throughout a given period for an employee before any deductions are made.",
              "type": "optional<double>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "net_pay": {
              "docs": "The take-home pay throughout a given period for an employee after deductions are made.",
              "type": "optional<double>",
            },
            "payroll_run": {
              "docs": "The payroll being run.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
            "start_date": {
              "docs": "The day and time the payroll run started.",
              "type": "optional<string>",
            },
            "taxes": {
              "docs": undefined,
              "type": "optional<list<Tax>>",
            },
          },
        },
        "EmployeePayrollRunsListRequestExpand": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employee",
              "value": "employee",
            },
            {
              "docs": undefined,
              "name": "EmployeePayrollRun",
              "value": "employee,payroll_run",
            },
            {
              "docs": undefined,
              "name": "payroll_run",
              "value": "payroll_run",
            },
          ],
        },
        "EmployeePayrollRunsRetrieveRequestExpand": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employee",
              "value": "employee",
            },
            {
              "docs": undefined,
              "name": "EmployeePayrollRun",
              "value": "employee,payroll_run",
            },
            {
              "docs": undefined,
              "name": "payroll_run",
              "value": "payroll_run",
            },
          ],
        },
        "EmployeeRequest": {
          "docs": "# The Employee Object
### Description
The \`Employee\` object is used to represent any person who has been employed by a company.

### Usage Example
Fetch from the \`LIST Employee\` endpoint and filter by \`ID\` to show all employees.",
          "properties": {
            "avatar": {
              "docs": "The URL of the employee's avatar image.",
              "type": "optional<string>",
            },
            "company": {
              "docs": "The ID of the employee's company.",
              "type": "optional<string>",
            },
            "date_of_birth": {
              "docs": "The employee's date of birth.",
              "type": "optional<string>",
            },
            "display_full_name": {
              "docs": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
              "type": "optional<string>",
            },
            "employee_number": {
              "docs": "The employee's number that appears in the third-party integration's UI.",
              "type": "optional<string>",
            },
            "employment_status": {
              "docs": "The employment status of the employee.

* \`ACTIVE\` - ACTIVE
* \`PENDING\` - PENDING
* \`INACTIVE\` - INACTIVE",
              "type": "optional<EmploymentStatusEnum>",
            },
            "employments": {
              "docs": "Array of \`Employment\` IDs for this Employee.",
              "type": "optional<list<optional<string>>>",
            },
            "ethnicity": {
              "docs": "The employee's ethnicity.

* \`AMERICAN_INDIAN_OR_ALASKA_NATIVE\` - AMERICAN_INDIAN_OR_ALASKA_NATIVE
* \`ASIAN_OR_INDIAN_SUBCONTINENT\` - ASIAN_OR_INDIAN_SUBCONTINENT
* \`BLACK_OR_AFRICAN_AMERICAN\` - BLACK_OR_AFRICAN_AMERICAN
* \`HISPANIC_OR_LATINO\` - HISPANIC_OR_LATINO
* \`NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
* \`TWO_OR_MORE_RACES\` - TWO_OR_MORE_RACES
* \`WHITE\` - WHITE
* \`PREFER_NOT_TO_DISCLOSE\` - PREFER_NOT_TO_DISCLOSE",
              "type": "optional<EthnicityEnum>",
            },
            "first_name": {
              "docs": "The employee's first name.",
              "type": "optional<string>",
            },
            "gender": {
              "docs": "The employee's gender.

* \`MALE\` - MALE
* \`FEMALE\` - FEMALE
* \`NON-BINARY\` - NON-BINARY
* \`OTHER\` - OTHER
* \`PREFER_NOT_TO_DISCLOSE\` - PREFER_NOT_TO_DISCLOSE",
              "type": "optional<GenderEnum>",
            },
            "groups": {
              "docs": undefined,
              "type": "optional<list<optional<string>>>",
            },
            "hire_date": {
              "docs": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
              "type": "optional<string>",
            },
            "home_location": {
              "docs": "The employee's home address.",
              "type": "optional<string>",
            },
            "integration_params": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "last_name": {
              "docs": "The employee's last name.",
              "type": "optional<string>",
            },
            "linked_account_params": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "manager": {
              "docs": "The employee ID of the employee's manager.",
              "type": "optional<string>",
            },
            "marital_status": {
              "docs": "The employee's filing status as related to marital status.

* \`SINGLE\` - SINGLE
* \`MARRIED_FILING_JOINTLY\` - MARRIED_FILING_JOINTLY
* \`MARRIED_FILING_SEPARATELY\` - MARRIED_FILING_SEPARATELY
* \`HEAD_OF_HOUSEHOLD\` - HEAD_OF_HOUSEHOLD
* \`QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD\` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
              "type": "optional<MaritalStatusEnum>",
            },
            "mobile_phone_number": {
              "docs": "The employee's mobile phone number.",
              "type": "optional<string>",
            },
            "pay_group": {
              "docs": "The employee's pay group",
              "type": "optional<string>",
            },
            "personal_email": {
              "docs": "The employee's personal email.",
              "type": "optional<string>",
            },
            "ssn": {
              "docs": "The employee's social security number.",
              "type": "optional<string>",
            },
            "start_date": {
              "docs": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
              "type": "optional<string>",
            },
            "team": {
              "docs": "The employee's team.",
              "type": "optional<string>",
            },
            "termination_date": {
              "docs": "The employee's termination date.",
              "type": "optional<string>",
            },
            "username": {
              "docs": "The employee's username that appears in the remote UI.",
              "type": "optional<string>",
            },
            "work_email": {
              "docs": "The employee's work email.",
              "type": "optional<string>",
            },
            "work_location": {
              "docs": "The employee's work address.",
              "type": "optional<string>",
            },
          },
        },
        "EmployeeResponse": {
          "docs": undefined,
          "properties": {
            "errors": {
              "docs": undefined,
              "type": "list<ErrorValidationProblem>",
            },
            "logs": {
              "docs": undefined,
              "type": "optional<list<DebugModeLog>>",
            },
            "model": {
              "docs": undefined,
              "type": "Employee",
            },
            "warnings": {
              "docs": undefined,
              "type": "list<WarningValidationProblem>",
            },
          },
        },
        "EmployeesListRequestEmploymentStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "ACTIVE",
              "value": "ACTIVE",
            },
            {
              "docs": undefined,
              "name": "INACTIVE",
              "value": "INACTIVE",
            },
            {
              "docs": undefined,
              "name": "PENDING",
              "value": "PENDING",
            },
          ],
        },
        "EmployeesListRequestExpand": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "company",
              "value": "company",
            },
            {
              "docs": undefined,
              "name": "CompanyPayGroup",
              "value": "company,pay_group",
            },
            {
              "docs": undefined,
              "name": "employments",
              "value": "employments",
            },
            {
              "docs": undefined,
              "name": "EmploymentsCompany",
              "value": "employments,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsCompanyPayGroup",
              "value": "employments,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroups",
              "value": "employments,groups",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsCompany",
              "value": "employments,groups,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsCompanyPayGroup",
              "value": "employments,groups,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocation",
              "value": "employments,groups,home_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationCompany",
              "value": "employments,groups,home_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationCompanyPayGroup",
              "value": "employments,groups,home_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManager",
              "value": "employments,groups,home_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerCompany",
              "value": "employments,groups,home_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerCompanyPayGroup",
              "value": "employments,groups,home_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerPayGroup",
              "value": "employments,groups,home_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerTeam",
              "value": "employments,groups,home_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerTeamCompany",
              "value": "employments,groups,home_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerTeamCompanyPayGroup",
              "value": "employments,groups,home_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerTeamPayGroup",
              "value": "employments,groups,home_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationPayGroup",
              "value": "employments,groups,home_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationTeam",
              "value": "employments,groups,home_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationTeamCompany",
              "value": "employments,groups,home_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationTeamCompanyPayGroup",
              "value": "employments,groups,home_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationTeamPayGroup",
              "value": "employments,groups,home_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocation",
              "value": "employments,groups,home_location,work_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationCompany",
              "value": "employments,groups,home_location,work_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationCompanyPayGroup",
              "value": "employments,groups,home_location,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManager",
              "value": "employments,groups,home_location,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerCompany",
              "value": "employments,groups,home_location,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerCompanyPayGroup",
              "value": "employments,groups,home_location,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerPayGroup",
              "value": "employments,groups,home_location,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeam",
              "value": "employments,groups,home_location,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompany",
              "value": "employments,groups,home_location,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
              "value": "employments,groups,home_location,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamPayGroup",
              "value": "employments,groups,home_location,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationPayGroup",
              "value": "employments,groups,home_location,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationTeam",
              "value": "employments,groups,home_location,work_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationTeamCompany",
              "value": "employments,groups,home_location,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationTeamCompanyPayGroup",
              "value": "employments,groups,home_location,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationTeamPayGroup",
              "value": "employments,groups,home_location,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManager",
              "value": "employments,groups,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerCompany",
              "value": "employments,groups,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerCompanyPayGroup",
              "value": "employments,groups,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerPayGroup",
              "value": "employments,groups,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerTeam",
              "value": "employments,groups,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerTeamCompany",
              "value": "employments,groups,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerTeamCompanyPayGroup",
              "value": "employments,groups,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerTeamPayGroup",
              "value": "employments,groups,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsPayGroup",
              "value": "employments,groups,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsTeam",
              "value": "employments,groups,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsTeamCompany",
              "value": "employments,groups,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsTeamCompanyPayGroup",
              "value": "employments,groups,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsTeamPayGroup",
              "value": "employments,groups,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocation",
              "value": "employments,groups,work_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationCompany",
              "value": "employments,groups,work_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationCompanyPayGroup",
              "value": "employments,groups,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManager",
              "value": "employments,groups,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerCompany",
              "value": "employments,groups,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerCompanyPayGroup",
              "value": "employments,groups,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerPayGroup",
              "value": "employments,groups,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerTeam",
              "value": "employments,groups,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerTeamCompany",
              "value": "employments,groups,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerTeamCompanyPayGroup",
              "value": "employments,groups,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerTeamPayGroup",
              "value": "employments,groups,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationPayGroup",
              "value": "employments,groups,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationTeam",
              "value": "employments,groups,work_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationTeamCompany",
              "value": "employments,groups,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationTeamCompanyPayGroup",
              "value": "employments,groups,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationTeamPayGroup",
              "value": "employments,groups,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocation",
              "value": "employments,home_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationCompany",
              "value": "employments,home_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationCompanyPayGroup",
              "value": "employments,home_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManager",
              "value": "employments,home_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerCompany",
              "value": "employments,home_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerCompanyPayGroup",
              "value": "employments,home_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerPayGroup",
              "value": "employments,home_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerTeam",
              "value": "employments,home_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerTeamCompany",
              "value": "employments,home_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerTeamCompanyPayGroup",
              "value": "employments,home_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerTeamPayGroup",
              "value": "employments,home_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationPayGroup",
              "value": "employments,home_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationTeam",
              "value": "employments,home_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationTeamCompany",
              "value": "employments,home_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationTeamCompanyPayGroup",
              "value": "employments,home_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationTeamPayGroup",
              "value": "employments,home_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocation",
              "value": "employments,home_location,work_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationCompany",
              "value": "employments,home_location,work_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationCompanyPayGroup",
              "value": "employments,home_location,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManager",
              "value": "employments,home_location,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerCompany",
              "value": "employments,home_location,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerCompanyPayGroup",
              "value": "employments,home_location,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerPayGroup",
              "value": "employments,home_location,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerTeam",
              "value": "employments,home_location,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerTeamCompany",
              "value": "employments,home_location,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
              "value": "employments,home_location,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerTeamPayGroup",
              "value": "employments,home_location,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationPayGroup",
              "value": "employments,home_location,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationTeam",
              "value": "employments,home_location,work_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationTeamCompany",
              "value": "employments,home_location,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationTeamCompanyPayGroup",
              "value": "employments,home_location,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationTeamPayGroup",
              "value": "employments,home_location,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManager",
              "value": "employments,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerCompany",
              "value": "employments,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerCompanyPayGroup",
              "value": "employments,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerPayGroup",
              "value": "employments,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerTeam",
              "value": "employments,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerTeamCompany",
              "value": "employments,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerTeamCompanyPayGroup",
              "value": "employments,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerTeamPayGroup",
              "value": "employments,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsPayGroup",
              "value": "employments,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsTeam",
              "value": "employments,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsTeamCompany",
              "value": "employments,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsTeamCompanyPayGroup",
              "value": "employments,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsTeamPayGroup",
              "value": "employments,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocation",
              "value": "employments,work_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationCompany",
              "value": "employments,work_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationCompanyPayGroup",
              "value": "employments,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManager",
              "value": "employments,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerCompany",
              "value": "employments,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerCompanyPayGroup",
              "value": "employments,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerPayGroup",
              "value": "employments,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerTeam",
              "value": "employments,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerTeamCompany",
              "value": "employments,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerTeamCompanyPayGroup",
              "value": "employments,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerTeamPayGroup",
              "value": "employments,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationPayGroup",
              "value": "employments,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationTeam",
              "value": "employments,work_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationTeamCompany",
              "value": "employments,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationTeamCompanyPayGroup",
              "value": "employments,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationTeamPayGroup",
              "value": "employments,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "groups",
              "value": "groups",
            },
            {
              "docs": undefined,
              "name": "GroupsCompany",
              "value": "groups,company",
            },
            {
              "docs": undefined,
              "name": "GroupsCompanyPayGroup",
              "value": "groups,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocation",
              "value": "groups,home_location",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationCompany",
              "value": "groups,home_location,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationCompanyPayGroup",
              "value": "groups,home_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManager",
              "value": "groups,home_location,manager",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerCompany",
              "value": "groups,home_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerCompanyPayGroup",
              "value": "groups,home_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerPayGroup",
              "value": "groups,home_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerTeam",
              "value": "groups,home_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerTeamCompany",
              "value": "groups,home_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerTeamCompanyPayGroup",
              "value": "groups,home_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerTeamPayGroup",
              "value": "groups,home_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationPayGroup",
              "value": "groups,home_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationTeam",
              "value": "groups,home_location,team",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationTeamCompany",
              "value": "groups,home_location,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationTeamCompanyPayGroup",
              "value": "groups,home_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationTeamPayGroup",
              "value": "groups,home_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocation",
              "value": "groups,home_location,work_location",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationCompany",
              "value": "groups,home_location,work_location,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationCompanyPayGroup",
              "value": "groups,home_location,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManager",
              "value": "groups,home_location,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerCompany",
              "value": "groups,home_location,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerCompanyPayGroup",
              "value": "groups,home_location,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerPayGroup",
              "value": "groups,home_location,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerTeam",
              "value": "groups,home_location,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerTeamCompany",
              "value": "groups,home_location,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
              "value": "groups,home_location,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerTeamPayGroup",
              "value": "groups,home_location,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationPayGroup",
              "value": "groups,home_location,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationTeam",
              "value": "groups,home_location,work_location,team",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationTeamCompany",
              "value": "groups,home_location,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationTeamCompanyPayGroup",
              "value": "groups,home_location,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationTeamPayGroup",
              "value": "groups,home_location,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsManager",
              "value": "groups,manager",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerCompany",
              "value": "groups,manager,company",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerCompanyPayGroup",
              "value": "groups,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerPayGroup",
              "value": "groups,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerTeam",
              "value": "groups,manager,team",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerTeamCompany",
              "value": "groups,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerTeamCompanyPayGroup",
              "value": "groups,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerTeamPayGroup",
              "value": "groups,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsPayGroup",
              "value": "groups,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsTeam",
              "value": "groups,team",
            },
            {
              "docs": undefined,
              "name": "GroupsTeamCompany",
              "value": "groups,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsTeamCompanyPayGroup",
              "value": "groups,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsTeamPayGroup",
              "value": "groups,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocation",
              "value": "groups,work_location",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationCompany",
              "value": "groups,work_location,company",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationCompanyPayGroup",
              "value": "groups,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManager",
              "value": "groups,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerCompany",
              "value": "groups,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerCompanyPayGroup",
              "value": "groups,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerPayGroup",
              "value": "groups,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerTeam",
              "value": "groups,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerTeamCompany",
              "value": "groups,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerTeamCompanyPayGroup",
              "value": "groups,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerTeamPayGroup",
              "value": "groups,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationPayGroup",
              "value": "groups,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationTeam",
              "value": "groups,work_location,team",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationTeamCompany",
              "value": "groups,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationTeamCompanyPayGroup",
              "value": "groups,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationTeamPayGroup",
              "value": "groups,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "home_location",
              "value": "home_location",
            },
            {
              "docs": undefined,
              "name": "HomeLocationCompany",
              "value": "home_location,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationCompanyPayGroup",
              "value": "home_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManager",
              "value": "home_location,manager",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerCompany",
              "value": "home_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerCompanyPayGroup",
              "value": "home_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerPayGroup",
              "value": "home_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerTeam",
              "value": "home_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerTeamCompany",
              "value": "home_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerTeamCompanyPayGroup",
              "value": "home_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerTeamPayGroup",
              "value": "home_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationPayGroup",
              "value": "home_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationTeam",
              "value": "home_location,team",
            },
            {
              "docs": undefined,
              "name": "HomeLocationTeamCompany",
              "value": "home_location,team,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationTeamCompanyPayGroup",
              "value": "home_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationTeamPayGroup",
              "value": "home_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocation",
              "value": "home_location,work_location",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationCompany",
              "value": "home_location,work_location,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationCompanyPayGroup",
              "value": "home_location,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManager",
              "value": "home_location,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerCompany",
              "value": "home_location,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerCompanyPayGroup",
              "value": "home_location,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerPayGroup",
              "value": "home_location,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerTeam",
              "value": "home_location,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerTeamCompany",
              "value": "home_location,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerTeamCompanyPayGroup",
              "value": "home_location,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerTeamPayGroup",
              "value": "home_location,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationPayGroup",
              "value": "home_location,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationTeam",
              "value": "home_location,work_location,team",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationTeamCompany",
              "value": "home_location,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationTeamCompanyPayGroup",
              "value": "home_location,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationTeamPayGroup",
              "value": "home_location,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "manager",
              "value": "manager",
            },
            {
              "docs": undefined,
              "name": "ManagerCompany",
              "value": "manager,company",
            },
            {
              "docs": undefined,
              "name": "ManagerCompanyPayGroup",
              "value": "manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "ManagerPayGroup",
              "value": "manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "ManagerTeam",
              "value": "manager,team",
            },
            {
              "docs": undefined,
              "name": "ManagerTeamCompany",
              "value": "manager,team,company",
            },
            {
              "docs": undefined,
              "name": "ManagerTeamCompanyPayGroup",
              "value": "manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "ManagerTeamPayGroup",
              "value": "manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "pay_group",
              "value": "pay_group",
            },
            {
              "docs": undefined,
              "name": "team",
              "value": "team",
            },
            {
              "docs": undefined,
              "name": "TeamCompany",
              "value": "team,company",
            },
            {
              "docs": undefined,
              "name": "TeamCompanyPayGroup",
              "value": "team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "TeamPayGroup",
              "value": "team,pay_group",
            },
            {
              "docs": undefined,
              "name": "work_location",
              "value": "work_location",
            },
            {
              "docs": undefined,
              "name": "WorkLocationCompany",
              "value": "work_location,company",
            },
            {
              "docs": undefined,
              "name": "WorkLocationCompanyPayGroup",
              "value": "work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManager",
              "value": "work_location,manager",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerCompany",
              "value": "work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerCompanyPayGroup",
              "value": "work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerPayGroup",
              "value": "work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerTeam",
              "value": "work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerTeamCompany",
              "value": "work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerTeamCompanyPayGroup",
              "value": "work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerTeamPayGroup",
              "value": "work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationPayGroup",
              "value": "work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationTeam",
              "value": "work_location,team",
            },
            {
              "docs": undefined,
              "name": "WorkLocationTeamCompany",
              "value": "work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "WorkLocationTeamCompanyPayGroup",
              "value": "work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationTeamPayGroup",
              "value": "work_location,team,pay_group",
            },
          ],
        },
        "EmployeesListRequestRemoteFields": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employment_status",
              "value": "employment_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicity",
              "value": "employment_status,ethnicity",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityGender",
              "value": "employment_status,ethnicity,gender",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityGenderMaritalStatus",
              "value": "employment_status,ethnicity,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityMaritalStatus",
              "value": "employment_status,ethnicity,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusGender",
              "value": "employment_status,gender",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusGenderMaritalStatus",
              "value": "employment_status,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusMaritalStatus",
              "value": "employment_status,marital_status",
            },
            {
              "docs": undefined,
              "name": "ethnicity",
              "value": "ethnicity",
            },
            {
              "docs": undefined,
              "name": "EthnicityGender",
              "value": "ethnicity,gender",
            },
            {
              "docs": undefined,
              "name": "EthnicityGenderMaritalStatus",
              "value": "ethnicity,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EthnicityMaritalStatus",
              "value": "ethnicity,marital_status",
            },
            {
              "docs": undefined,
              "name": "gender",
              "value": "gender",
            },
            {
              "docs": undefined,
              "name": "GenderMaritalStatus",
              "value": "gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "marital_status",
              "value": "marital_status",
            },
          ],
        },
        "EmployeesListRequestShowEnumOrigins": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employment_status",
              "value": "employment_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicity",
              "value": "employment_status,ethnicity",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityGender",
              "value": "employment_status,ethnicity,gender",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityGenderMaritalStatus",
              "value": "employment_status,ethnicity,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityMaritalStatus",
              "value": "employment_status,ethnicity,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusGender",
              "value": "employment_status,gender",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusGenderMaritalStatus",
              "value": "employment_status,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusMaritalStatus",
              "value": "employment_status,marital_status",
            },
            {
              "docs": undefined,
              "name": "ethnicity",
              "value": "ethnicity",
            },
            {
              "docs": undefined,
              "name": "EthnicityGender",
              "value": "ethnicity,gender",
            },
            {
              "docs": undefined,
              "name": "EthnicityGenderMaritalStatus",
              "value": "ethnicity,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EthnicityMaritalStatus",
              "value": "ethnicity,marital_status",
            },
            {
              "docs": undefined,
              "name": "gender",
              "value": "gender",
            },
            {
              "docs": undefined,
              "name": "GenderMaritalStatus",
              "value": "gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "marital_status",
              "value": "marital_status",
            },
          ],
        },
        "EmployeesRetrieveRequestExpand": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "company",
              "value": "company",
            },
            {
              "docs": undefined,
              "name": "CompanyPayGroup",
              "value": "company,pay_group",
            },
            {
              "docs": undefined,
              "name": "employments",
              "value": "employments",
            },
            {
              "docs": undefined,
              "name": "EmploymentsCompany",
              "value": "employments,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsCompanyPayGroup",
              "value": "employments,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroups",
              "value": "employments,groups",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsCompany",
              "value": "employments,groups,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsCompanyPayGroup",
              "value": "employments,groups,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocation",
              "value": "employments,groups,home_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationCompany",
              "value": "employments,groups,home_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationCompanyPayGroup",
              "value": "employments,groups,home_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManager",
              "value": "employments,groups,home_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerCompany",
              "value": "employments,groups,home_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerCompanyPayGroup",
              "value": "employments,groups,home_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerPayGroup",
              "value": "employments,groups,home_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerTeam",
              "value": "employments,groups,home_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerTeamCompany",
              "value": "employments,groups,home_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerTeamCompanyPayGroup",
              "value": "employments,groups,home_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationManagerTeamPayGroup",
              "value": "employments,groups,home_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationPayGroup",
              "value": "employments,groups,home_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationTeam",
              "value": "employments,groups,home_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationTeamCompany",
              "value": "employments,groups,home_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationTeamCompanyPayGroup",
              "value": "employments,groups,home_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationTeamPayGroup",
              "value": "employments,groups,home_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocation",
              "value": "employments,groups,home_location,work_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationCompany",
              "value": "employments,groups,home_location,work_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationCompanyPayGroup",
              "value": "employments,groups,home_location,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManager",
              "value": "employments,groups,home_location,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerCompany",
              "value": "employments,groups,home_location,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerCompanyPayGroup",
              "value": "employments,groups,home_location,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerPayGroup",
              "value": "employments,groups,home_location,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeam",
              "value": "employments,groups,home_location,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompany",
              "value": "employments,groups,home_location,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
              "value": "employments,groups,home_location,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationManagerTeamPayGroup",
              "value": "employments,groups,home_location,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationPayGroup",
              "value": "employments,groups,home_location,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationTeam",
              "value": "employments,groups,home_location,work_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationTeamCompany",
              "value": "employments,groups,home_location,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationTeamCompanyPayGroup",
              "value": "employments,groups,home_location,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsHomeLocationWorkLocationTeamPayGroup",
              "value": "employments,groups,home_location,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManager",
              "value": "employments,groups,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerCompany",
              "value": "employments,groups,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerCompanyPayGroup",
              "value": "employments,groups,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerPayGroup",
              "value": "employments,groups,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerTeam",
              "value": "employments,groups,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerTeamCompany",
              "value": "employments,groups,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerTeamCompanyPayGroup",
              "value": "employments,groups,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsManagerTeamPayGroup",
              "value": "employments,groups,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsPayGroup",
              "value": "employments,groups,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsTeam",
              "value": "employments,groups,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsTeamCompany",
              "value": "employments,groups,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsTeamCompanyPayGroup",
              "value": "employments,groups,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsTeamPayGroup",
              "value": "employments,groups,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocation",
              "value": "employments,groups,work_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationCompany",
              "value": "employments,groups,work_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationCompanyPayGroup",
              "value": "employments,groups,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManager",
              "value": "employments,groups,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerCompany",
              "value": "employments,groups,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerCompanyPayGroup",
              "value": "employments,groups,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerPayGroup",
              "value": "employments,groups,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerTeam",
              "value": "employments,groups,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerTeamCompany",
              "value": "employments,groups,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerTeamCompanyPayGroup",
              "value": "employments,groups,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationManagerTeamPayGroup",
              "value": "employments,groups,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationPayGroup",
              "value": "employments,groups,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationTeam",
              "value": "employments,groups,work_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationTeamCompany",
              "value": "employments,groups,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationTeamCompanyPayGroup",
              "value": "employments,groups,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsGroupsWorkLocationTeamPayGroup",
              "value": "employments,groups,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocation",
              "value": "employments,home_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationCompany",
              "value": "employments,home_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationCompanyPayGroup",
              "value": "employments,home_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManager",
              "value": "employments,home_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerCompany",
              "value": "employments,home_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerCompanyPayGroup",
              "value": "employments,home_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerPayGroup",
              "value": "employments,home_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerTeam",
              "value": "employments,home_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerTeamCompany",
              "value": "employments,home_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerTeamCompanyPayGroup",
              "value": "employments,home_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationManagerTeamPayGroup",
              "value": "employments,home_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationPayGroup",
              "value": "employments,home_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationTeam",
              "value": "employments,home_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationTeamCompany",
              "value": "employments,home_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationTeamCompanyPayGroup",
              "value": "employments,home_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationTeamPayGroup",
              "value": "employments,home_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocation",
              "value": "employments,home_location,work_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationCompany",
              "value": "employments,home_location,work_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationCompanyPayGroup",
              "value": "employments,home_location,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManager",
              "value": "employments,home_location,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerCompany",
              "value": "employments,home_location,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerCompanyPayGroup",
              "value": "employments,home_location,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerPayGroup",
              "value": "employments,home_location,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerTeam",
              "value": "employments,home_location,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerTeamCompany",
              "value": "employments,home_location,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
              "value": "employments,home_location,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationManagerTeamPayGroup",
              "value": "employments,home_location,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationPayGroup",
              "value": "employments,home_location,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationTeam",
              "value": "employments,home_location,work_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationTeamCompany",
              "value": "employments,home_location,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationTeamCompanyPayGroup",
              "value": "employments,home_location,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsHomeLocationWorkLocationTeamPayGroup",
              "value": "employments,home_location,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManager",
              "value": "employments,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerCompany",
              "value": "employments,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerCompanyPayGroup",
              "value": "employments,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerPayGroup",
              "value": "employments,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerTeam",
              "value": "employments,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerTeamCompany",
              "value": "employments,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerTeamCompanyPayGroup",
              "value": "employments,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsManagerTeamPayGroup",
              "value": "employments,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsPayGroup",
              "value": "employments,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsTeam",
              "value": "employments,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsTeamCompany",
              "value": "employments,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsTeamCompanyPayGroup",
              "value": "employments,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsTeamPayGroup",
              "value": "employments,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocation",
              "value": "employments,work_location",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationCompany",
              "value": "employments,work_location,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationCompanyPayGroup",
              "value": "employments,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManager",
              "value": "employments,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerCompany",
              "value": "employments,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerCompanyPayGroup",
              "value": "employments,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerPayGroup",
              "value": "employments,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerTeam",
              "value": "employments,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerTeamCompany",
              "value": "employments,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerTeamCompanyPayGroup",
              "value": "employments,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationManagerTeamPayGroup",
              "value": "employments,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationPayGroup",
              "value": "employments,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationTeam",
              "value": "employments,work_location,team",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationTeamCompany",
              "value": "employments,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationTeamCompanyPayGroup",
              "value": "employments,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "EmploymentsWorkLocationTeamPayGroup",
              "value": "employments,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "groups",
              "value": "groups",
            },
            {
              "docs": undefined,
              "name": "GroupsCompany",
              "value": "groups,company",
            },
            {
              "docs": undefined,
              "name": "GroupsCompanyPayGroup",
              "value": "groups,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocation",
              "value": "groups,home_location",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationCompany",
              "value": "groups,home_location,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationCompanyPayGroup",
              "value": "groups,home_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManager",
              "value": "groups,home_location,manager",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerCompany",
              "value": "groups,home_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerCompanyPayGroup",
              "value": "groups,home_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerPayGroup",
              "value": "groups,home_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerTeam",
              "value": "groups,home_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerTeamCompany",
              "value": "groups,home_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerTeamCompanyPayGroup",
              "value": "groups,home_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationManagerTeamPayGroup",
              "value": "groups,home_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationPayGroup",
              "value": "groups,home_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationTeam",
              "value": "groups,home_location,team",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationTeamCompany",
              "value": "groups,home_location,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationTeamCompanyPayGroup",
              "value": "groups,home_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationTeamPayGroup",
              "value": "groups,home_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocation",
              "value": "groups,home_location,work_location",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationCompany",
              "value": "groups,home_location,work_location,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationCompanyPayGroup",
              "value": "groups,home_location,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManager",
              "value": "groups,home_location,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerCompany",
              "value": "groups,home_location,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerCompanyPayGroup",
              "value": "groups,home_location,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerPayGroup",
              "value": "groups,home_location,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerTeam",
              "value": "groups,home_location,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerTeamCompany",
              "value": "groups,home_location,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerTeamCompanyPayGroup",
              "value": "groups,home_location,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationManagerTeamPayGroup",
              "value": "groups,home_location,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationPayGroup",
              "value": "groups,home_location,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationTeam",
              "value": "groups,home_location,work_location,team",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationTeamCompany",
              "value": "groups,home_location,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationTeamCompanyPayGroup",
              "value": "groups,home_location,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsHomeLocationWorkLocationTeamPayGroup",
              "value": "groups,home_location,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsManager",
              "value": "groups,manager",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerCompany",
              "value": "groups,manager,company",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerCompanyPayGroup",
              "value": "groups,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerPayGroup",
              "value": "groups,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerTeam",
              "value": "groups,manager,team",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerTeamCompany",
              "value": "groups,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerTeamCompanyPayGroup",
              "value": "groups,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsManagerTeamPayGroup",
              "value": "groups,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsPayGroup",
              "value": "groups,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsTeam",
              "value": "groups,team",
            },
            {
              "docs": undefined,
              "name": "GroupsTeamCompany",
              "value": "groups,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsTeamCompanyPayGroup",
              "value": "groups,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsTeamPayGroup",
              "value": "groups,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocation",
              "value": "groups,work_location",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationCompany",
              "value": "groups,work_location,company",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationCompanyPayGroup",
              "value": "groups,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManager",
              "value": "groups,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerCompany",
              "value": "groups,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerCompanyPayGroup",
              "value": "groups,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerPayGroup",
              "value": "groups,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerTeam",
              "value": "groups,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerTeamCompany",
              "value": "groups,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerTeamCompanyPayGroup",
              "value": "groups,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationManagerTeamPayGroup",
              "value": "groups,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationPayGroup",
              "value": "groups,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationTeam",
              "value": "groups,work_location,team",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationTeamCompany",
              "value": "groups,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationTeamCompanyPayGroup",
              "value": "groups,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "GroupsWorkLocationTeamPayGroup",
              "value": "groups,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "home_location",
              "value": "home_location",
            },
            {
              "docs": undefined,
              "name": "HomeLocationCompany",
              "value": "home_location,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationCompanyPayGroup",
              "value": "home_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManager",
              "value": "home_location,manager",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerCompany",
              "value": "home_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerCompanyPayGroup",
              "value": "home_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerPayGroup",
              "value": "home_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerTeam",
              "value": "home_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerTeamCompany",
              "value": "home_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerTeamCompanyPayGroup",
              "value": "home_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationManagerTeamPayGroup",
              "value": "home_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationPayGroup",
              "value": "home_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationTeam",
              "value": "home_location,team",
            },
            {
              "docs": undefined,
              "name": "HomeLocationTeamCompany",
              "value": "home_location,team,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationTeamCompanyPayGroup",
              "value": "home_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationTeamPayGroup",
              "value": "home_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocation",
              "value": "home_location,work_location",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationCompany",
              "value": "home_location,work_location,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationCompanyPayGroup",
              "value": "home_location,work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManager",
              "value": "home_location,work_location,manager",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerCompany",
              "value": "home_location,work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerCompanyPayGroup",
              "value": "home_location,work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerPayGroup",
              "value": "home_location,work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerTeam",
              "value": "home_location,work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerTeamCompany",
              "value": "home_location,work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerTeamCompanyPayGroup",
              "value": "home_location,work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationManagerTeamPayGroup",
              "value": "home_location,work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationPayGroup",
              "value": "home_location,work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationTeam",
              "value": "home_location,work_location,team",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationTeamCompany",
              "value": "home_location,work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationTeamCompanyPayGroup",
              "value": "home_location,work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "HomeLocationWorkLocationTeamPayGroup",
              "value": "home_location,work_location,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "manager",
              "value": "manager",
            },
            {
              "docs": undefined,
              "name": "ManagerCompany",
              "value": "manager,company",
            },
            {
              "docs": undefined,
              "name": "ManagerCompanyPayGroup",
              "value": "manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "ManagerPayGroup",
              "value": "manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "ManagerTeam",
              "value": "manager,team",
            },
            {
              "docs": undefined,
              "name": "ManagerTeamCompany",
              "value": "manager,team,company",
            },
            {
              "docs": undefined,
              "name": "ManagerTeamCompanyPayGroup",
              "value": "manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "ManagerTeamPayGroup",
              "value": "manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "pay_group",
              "value": "pay_group",
            },
            {
              "docs": undefined,
              "name": "team",
              "value": "team",
            },
            {
              "docs": undefined,
              "name": "TeamCompany",
              "value": "team,company",
            },
            {
              "docs": undefined,
              "name": "TeamCompanyPayGroup",
              "value": "team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "TeamPayGroup",
              "value": "team,pay_group",
            },
            {
              "docs": undefined,
              "name": "work_location",
              "value": "work_location",
            },
            {
              "docs": undefined,
              "name": "WorkLocationCompany",
              "value": "work_location,company",
            },
            {
              "docs": undefined,
              "name": "WorkLocationCompanyPayGroup",
              "value": "work_location,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManager",
              "value": "work_location,manager",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerCompany",
              "value": "work_location,manager,company",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerCompanyPayGroup",
              "value": "work_location,manager,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerPayGroup",
              "value": "work_location,manager,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerTeam",
              "value": "work_location,manager,team",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerTeamCompany",
              "value": "work_location,manager,team,company",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerTeamCompanyPayGroup",
              "value": "work_location,manager,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationManagerTeamPayGroup",
              "value": "work_location,manager,team,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationPayGroup",
              "value": "work_location,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationTeam",
              "value": "work_location,team",
            },
            {
              "docs": undefined,
              "name": "WorkLocationTeamCompany",
              "value": "work_location,team,company",
            },
            {
              "docs": undefined,
              "name": "WorkLocationTeamCompanyPayGroup",
              "value": "work_location,team,company,pay_group",
            },
            {
              "docs": undefined,
              "name": "WorkLocationTeamPayGroup",
              "value": "work_location,team,pay_group",
            },
          ],
        },
        "EmployeesRetrieveRequestRemoteFields": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employment_status",
              "value": "employment_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicity",
              "value": "employment_status,ethnicity",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityGender",
              "value": "employment_status,ethnicity,gender",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityGenderMaritalStatus",
              "value": "employment_status,ethnicity,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityMaritalStatus",
              "value": "employment_status,ethnicity,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusGender",
              "value": "employment_status,gender",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusGenderMaritalStatus",
              "value": "employment_status,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusMaritalStatus",
              "value": "employment_status,marital_status",
            },
            {
              "docs": undefined,
              "name": "ethnicity",
              "value": "ethnicity",
            },
            {
              "docs": undefined,
              "name": "EthnicityGender",
              "value": "ethnicity,gender",
            },
            {
              "docs": undefined,
              "name": "EthnicityGenderMaritalStatus",
              "value": "ethnicity,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EthnicityMaritalStatus",
              "value": "ethnicity,marital_status",
            },
            {
              "docs": undefined,
              "name": "gender",
              "value": "gender",
            },
            {
              "docs": undefined,
              "name": "GenderMaritalStatus",
              "value": "gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "marital_status",
              "value": "marital_status",
            },
          ],
        },
        "EmployeesRetrieveRequestShowEnumOrigins": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employment_status",
              "value": "employment_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicity",
              "value": "employment_status,ethnicity",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityGender",
              "value": "employment_status,ethnicity,gender",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityGenderMaritalStatus",
              "value": "employment_status,ethnicity,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusEthnicityMaritalStatus",
              "value": "employment_status,ethnicity,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusGender",
              "value": "employment_status,gender",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusGenderMaritalStatus",
              "value": "employment_status,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentStatusMaritalStatus",
              "value": "employment_status,marital_status",
            },
            {
              "docs": undefined,
              "name": "ethnicity",
              "value": "ethnicity",
            },
            {
              "docs": undefined,
              "name": "EthnicityGender",
              "value": "ethnicity,gender",
            },
            {
              "docs": undefined,
              "name": "EthnicityGenderMaritalStatus",
              "value": "ethnicity,gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "EthnicityMaritalStatus",
              "value": "ethnicity,marital_status",
            },
            {
              "docs": undefined,
              "name": "gender",
              "value": "gender",
            },
            {
              "docs": undefined,
              "name": "GenderMaritalStatus",
              "value": "gender,marital_status",
            },
            {
              "docs": undefined,
              "name": "marital_status",
              "value": "marital_status",
            },
          ],
        },
        "Employment": {
          "docs": "# The Employment Object
### Description
The \`Employment\` object is used to represent a job position at a company.

Please note: When there is a change in pay or title, integrations with historical data will create new Employment objects while integrations without historical data will update existing ones.

### Usage Example
Fetch from the \`LIST Employments\` endpoint and filter by \`ID\` to show all employees.",
          "properties": {
            "effective_date": {
              "docs": "The position's effective date.",
              "type": "optional<string>",
            },
            "employee": {
              "docs": "The employee holding this position.",
              "type": "optional<string>",
            },
            "employment_type": {
              "docs": "The position's type of employment.

* \`FULL_TIME\` - FULL_TIME
* \`PART_TIME\` - PART_TIME
* \`INTERN\` - INTERN
* \`CONTRACTOR\` - CONTRACTOR
* \`FREELANCE\` - FREELANCE",
              "type": "optional<EmploymentTypeEnum>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "flsa_status": {
              "docs": "The position's FLSA status.

* \`EXEMPT\` - EXEMPT
* \`SALARIED_NONEXEMPT\` - SALARIED_NONEXEMPT
* \`NONEXEMPT\` - NONEXEMPT
* \`OWNER\` - OWNER",
              "type": "optional<FlsaStatusEnum>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "job_title": {
              "docs": "The position's title.",
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "pay_currency": {
              "docs": "The position's currency code.

* \`XUA\` - ADB Unit of Account
* \`AFN\` - Afghan Afghani
* \`AFA\` - Afghan Afghani (1927–2002)
* \`ALL\` - Albanian Lek
* \`ALK\` - Albanian Lek (1946–1965)
* \`DZD\` - Algerian Dinar
* \`ADP\` - Andorran Peseta
* \`AOA\` - Angolan Kwanza
* \`AOK\` - Angolan Kwanza (1977–1991)
* \`AON\` - Angolan New Kwanza (1990–2000)
* \`AOR\` - Angolan Readjusted Kwanza (1995–1999)
* \`ARA\` - Argentine Austral
* \`ARS\` - Argentine Peso
* \`ARM\` - Argentine Peso (1881–1970)
* \`ARP\` - Argentine Peso (1983–1985)
* \`ARL\` - Argentine Peso Ley (1970–1983)
* \`AMD\` - Armenian Dram
* \`AWG\` - Aruban Florin
* \`AUD\` - Australian Dollar
* \`ATS\` - Austrian Schilling
* \`AZN\` - Azerbaijani Manat
* \`AZM\` - Azerbaijani Manat (1993–2006)
* \`BSD\` - Bahamian Dollar
* \`BHD\` - Bahraini Dinar
* \`BDT\` - Bangladeshi Taka
* \`BBD\` - Barbadian Dollar
* \`BYN\` - Belarusian Ruble
* \`BYB\` - Belarusian Ruble (1994–1999)
* \`BYR\` - Belarusian Ruble (2000–2016)
* \`BEF\` - Belgian Franc
* \`BEC\` - Belgian Franc (convertible)
* \`BEL\` - Belgian Franc (financial)
* \`BZD\` - Belize Dollar
* \`BMD\` - Bermudan Dollar
* \`BTN\` - Bhutanese Ngultrum
* \`BOB\` - Bolivian Boliviano
* \`BOL\` - Bolivian Boliviano (1863–1963)
* \`BOV\` - Bolivian Mvdol
* \`BOP\` - Bolivian Peso
* \`BAM\` - Bosnia-Herzegovina Convertible Mark
* \`BAD\` - Bosnia-Herzegovina Dinar (1992–1994)
* \`BAN\` - Bosnia-Herzegovina New Dinar (1994–1997)
* \`BWP\` - Botswanan Pula
* \`BRC\` - Brazilian Cruzado (1986–1989)
* \`BRZ\` - Brazilian Cruzeiro (1942–1967)
* \`BRE\` - Brazilian Cruzeiro (1990–1993)
* \`BRR\` - Brazilian Cruzeiro (1993–1994)
* \`BRN\` - Brazilian New Cruzado (1989–1990)
* \`BRB\` - Brazilian New Cruzeiro (1967–1986)
* \`BRL\` - Brazilian Real
* \`GBP\` - British Pound
* \`BND\` - Brunei Dollar
* \`BGL\` - Bulgarian Hard Lev
* \`BGN\` - Bulgarian Lev
* \`BGO\` - Bulgarian Lev (1879–1952)
* \`BGM\` - Bulgarian Socialist Lev
* \`BUK\` - Burmese Kyat
* \`BIF\` - Burundian Franc
* \`XPF\` - CFP Franc
* \`KHR\` - Cambodian Riel
* \`CAD\` - Canadian Dollar
* \`CVE\` - Cape Verdean Escudo
* \`KYD\` - Cayman Islands Dollar
* \`XAF\` - Central African CFA Franc
* \`CLE\` - Chilean Escudo
* \`CLP\` - Chilean Peso
* \`CLF\` - Chilean Unit of Account (UF)
* \`CNX\` - Chinese People’s Bank Dollar
* \`CNY\` - Chinese Yuan
* \`CNH\` - Chinese Yuan (offshore)
* \`COP\` - Colombian Peso
* \`COU\` - Colombian Real Value Unit
* \`KMF\` - Comorian Franc
* \`CDF\` - Congolese Franc
* \`CRC\` - Costa Rican Colón
* \`HRD\` - Croatian Dinar
* \`HRK\` - Croatian Kuna
* \`CUC\` - Cuban Convertible Peso
* \`CUP\` - Cuban Peso
* \`CYP\` - Cypriot Pound
* \`CZK\` - Czech Koruna
* \`CSK\` - Czechoslovak Hard Koruna
* \`DKK\` - Danish Krone
* \`DJF\` - Djiboutian Franc
* \`DOP\` - Dominican Peso
* \`NLG\` - Dutch Guilder
* \`XCD\` - East Caribbean Dollar
* \`DDM\` - East German Mark
* \`ECS\` - Ecuadorian Sucre
* \`ECV\` - Ecuadorian Unit of Constant Value
* \`EGP\` - Egyptian Pound
* \`GQE\` - Equatorial Guinean Ekwele
* \`ERN\` - Eritrean Nakfa
* \`EEK\` - Estonian Kroon
* \`ETB\` - Ethiopian Birr
* \`EUR\` - Euro
* \`XBA\` - European Composite Unit
* \`XEU\` - European Currency Unit
* \`XBB\` - European Monetary Unit
* \`XBC\` - European Unit of Account (XBC)
* \`XBD\` - European Unit of Account (XBD)
* \`FKP\` - Falkland Islands Pound
* \`FJD\` - Fijian Dollar
* \`FIM\` - Finnish Markka
* \`FRF\` - French Franc
* \`XFO\` - French Gold Franc
* \`XFU\` - French UIC-Franc
* \`GMD\` - Gambian Dalasi
* \`GEK\` - Georgian Kupon Larit
* \`GEL\` - Georgian Lari
* \`DEM\` - German Mark
* \`GHS\` - Ghanaian Cedi
* \`GHC\` - Ghanaian Cedi (1979–2007)
* \`GIP\` - Gibraltar Pound
* \`XAU\` - Gold
* \`GRD\` - Greek Drachma
* \`GTQ\` - Guatemalan Quetzal
* \`GWP\` - Guinea-Bissau Peso
* \`GNF\` - Guinean Franc
* \`GNS\` - Guinean Syli
* \`GYD\` - Guyanaese Dollar
* \`HTG\` - Haitian Gourde
* \`HNL\` - Honduran Lempira
* \`HKD\` - Hong Kong Dollar
* \`HUF\` - Hungarian Forint
* \`IMP\` - IMP
* \`ISK\` - Icelandic Króna
* \`ISJ\` - Icelandic Króna (1918–1981)
* \`INR\` - Indian Rupee
* \`IDR\` - Indonesian Rupiah
* \`IRR\` - Iranian Rial
* \`IQD\` - Iraqi Dinar
* \`IEP\` - Irish Pound
* \`ILS\` - Israeli New Shekel
* \`ILP\` - Israeli Pound
* \`ILR\` - Israeli Shekel (1980–1985)
* \`ITL\` - Italian Lira
* \`JMD\` - Jamaican Dollar
* \`JPY\` - Japanese Yen
* \`JOD\` - Jordanian Dinar
* \`KZT\` - Kazakhstani Tenge
* \`KES\` - Kenyan Shilling
* \`KWD\` - Kuwaiti Dinar
* \`KGS\` - Kyrgystani Som
* \`LAK\` - Laotian Kip
* \`LVL\` - Latvian Lats
* \`LVR\` - Latvian Ruble
* \`LBP\` - Lebanese Pound
* \`LSL\` - Lesotho Loti
* \`LRD\` - Liberian Dollar
* \`LYD\` - Libyan Dinar
* \`LTL\` - Lithuanian Litas
* \`LTT\` - Lithuanian Talonas
* \`LUL\` - Luxembourg Financial Franc
* \`LUC\` - Luxembourgian Convertible Franc
* \`LUF\` - Luxembourgian Franc
* \`MOP\` - Macanese Pataca
* \`MKD\` - Macedonian Denar
* \`MKN\` - Macedonian Denar (1992–1993)
* \`MGA\` - Malagasy Ariary
* \`MGF\` - Malagasy Franc
* \`MWK\` - Malawian Kwacha
* \`MYR\` - Malaysian Ringgit
* \`MVR\` - Maldivian Rufiyaa
* \`MVP\` - Maldivian Rupee (1947–1981)
* \`MLF\` - Malian Franc
* \`MTL\` - Maltese Lira
* \`MTP\` - Maltese Pound
* \`MRU\` - Mauritanian Ouguiya
* \`MRO\` - Mauritanian Ouguiya (1973–2017)
* \`MUR\` - Mauritian Rupee
* \`MXV\` - Mexican Investment Unit
* \`MXN\` - Mexican Peso
* \`MXP\` - Mexican Silver Peso (1861–1992)
* \`MDC\` - Moldovan Cupon
* \`MDL\` - Moldovan Leu
* \`MCF\` - Monegasque Franc
* \`MNT\` - Mongolian Tugrik
* \`MAD\` - Moroccan Dirham
* \`MAF\` - Moroccan Franc
* \`MZE\` - Mozambican Escudo
* \`MZN\` - Mozambican Metical
* \`MZM\` - Mozambican Metical (1980–2006)
* \`MMK\` - Myanmar Kyat
* \`NAD\` - Namibian Dollar
* \`NPR\` - Nepalese Rupee
* \`ANG\` - Netherlands Antillean Guilder
* \`TWD\` - New Taiwan Dollar
* \`NZD\` - New Zealand Dollar
* \`NIO\` - Nicaraguan Córdoba
* \`NIC\` - Nicaraguan Córdoba (1988–1991)
* \`NGN\` - Nigerian Naira
* \`KPW\` - North Korean Won
* \`NOK\` - Norwegian Krone
* \`OMR\` - Omani Rial
* \`PKR\` - Pakistani Rupee
* \`XPD\` - Palladium
* \`PAB\` - Panamanian Balboa
* \`PGK\` - Papua New Guinean Kina
* \`PYG\` - Paraguayan Guarani
* \`PEI\` - Peruvian Inti
* \`PEN\` - Peruvian Sol
* \`PES\` - Peruvian Sol (1863–1965)
* \`PHP\` - Philippine Peso
* \`XPT\` - Platinum
* \`PLN\` - Polish Zloty
* \`PLZ\` - Polish Zloty (1950–1995)
* \`PTE\` - Portuguese Escudo
* \`GWE\` - Portuguese Guinea Escudo
* \`QAR\` - Qatari Rial
* \`XRE\` - RINET Funds
* \`RHD\` - Rhodesian Dollar
* \`RON\` - Romanian Leu
* \`ROL\` - Romanian Leu (1952–2006)
* \`RUB\` - Russian Ruble
* \`RUR\` - Russian Ruble (1991–1998)
* \`RWF\` - Rwandan Franc
* \`SVC\` - Salvadoran Colón
* \`WST\` - Samoan Tala
* \`SAR\` - Saudi Riyal
* \`RSD\` - Serbian Dinar
* \`CSD\` - Serbian Dinar (2002–2006)
* \`SCR\` - Seychellois Rupee
* \`SLL\` - Sierra Leonean Leone
* \`XAG\` - Silver
* \`SGD\` - Singapore Dollar
* \`SKK\` - Slovak Koruna
* \`SIT\` - Slovenian Tolar
* \`SBD\` - Solomon Islands Dollar
* \`SOS\` - Somali Shilling
* \`ZAR\` - South African Rand
* \`ZAL\` - South African Rand (financial)
* \`KRH\` - South Korean Hwan (1953–1962)
* \`KRW\` - South Korean Won
* \`KRO\` - South Korean Won (1945–1953)
* \`SSP\` - South Sudanese Pound
* \`SUR\` - Soviet Rouble
* \`ESP\` - Spanish Peseta
* \`ESA\` - Spanish Peseta (A account)
* \`ESB\` - Spanish Peseta (convertible account)
* \`XDR\` - Special Drawing Rights
* \`LKR\` - Sri Lankan Rupee
* \`SHP\` - St. Helena Pound
* \`XSU\` - Sucre
* \`SDD\` - Sudanese Dinar (1992–2007)
* \`SDG\` - Sudanese Pound
* \`SDP\` - Sudanese Pound (1957–1998)
* \`SRD\` - Surinamese Dollar
* \`SRG\` - Surinamese Guilder
* \`SZL\` - Swazi Lilangeni
* \`SEK\` - Swedish Krona
* \`CHF\` - Swiss Franc
* \`SYP\` - Syrian Pound
* \`STN\` - São Tomé & Príncipe Dobra
* \`STD\` - São Tomé & Príncipe Dobra (1977–2017)
* \`TVD\` - TVD
* \`TJR\` - Tajikistani Ruble
* \`TJS\` - Tajikistani Somoni
* \`TZS\` - Tanzanian Shilling
* \`XTS\` - Testing Currency Code
* \`THB\` - Thai Baht
* \`XXX\` - The codes assigned for transactions where no currency is involved
* \`TPE\` - Timorese Escudo
* \`TOP\` - Tongan Paʻanga
* \`TTD\` - Trinidad & Tobago Dollar
* \`TND\` - Tunisian Dinar
* \`TRY\` - Turkish Lira
* \`TRL\` - Turkish Lira (1922–2005)
* \`TMT\` - Turkmenistani Manat
* \`TMM\` - Turkmenistani Manat (1993–2009)
* \`USD\` - US Dollar
* \`USN\` - US Dollar (Next day)
* \`USS\` - US Dollar (Same day)
* \`UGX\` - Ugandan Shilling
* \`UGS\` - Ugandan Shilling (1966–1987)
* \`UAH\` - Ukrainian Hryvnia
* \`UAK\` - Ukrainian Karbovanets
* \`AED\` - United Arab Emirates Dirham
* \`UYW\` - Uruguayan Nominal Wage Index Unit
* \`UYU\` - Uruguayan Peso
* \`UYP\` - Uruguayan Peso (1975–1993)
* \`UYI\` - Uruguayan Peso (Indexed Units)
* \`UZS\` - Uzbekistani Som
* \`VUV\` - Vanuatu Vatu
* \`VES\` - Venezuelan Bolívar
* \`VEB\` - Venezuelan Bolívar (1871–2008)
* \`VEF\` - Venezuelan Bolívar (2008–2018)
* \`VND\` - Vietnamese Dong
* \`VNN\` - Vietnamese Dong (1978–1985)
* \`CHE\` - WIR Euro
* \`CHW\` - WIR Franc
* \`XOF\` - West African CFA Franc
* \`YDD\` - Yemeni Dinar
* \`YER\` - Yemeni Rial
* \`YUN\` - Yugoslavian Convertible Dinar (1990–1992)
* \`YUD\` - Yugoslavian Hard Dinar (1966–1990)
* \`YUM\` - Yugoslavian New Dinar (1994–2002)
* \`YUR\` - Yugoslavian Reformed Dinar (1992–1993)
* \`ZWN\` - ZWN
* \`ZRN\` - Zairean New Zaire (1993–1998)
* \`ZRZ\` - Zairean Zaire (1971–1993)
* \`ZMW\` - Zambian Kwacha
* \`ZMK\` - Zambian Kwacha (1968–2012)
* \`ZWD\` - Zimbabwean Dollar (1980–2008)
* \`ZWR\` - Zimbabwean Dollar (2008)
* \`ZWL\` - Zimbabwean Dollar (2009)",
              "type": "optional<PayCurrencyEnum>",
            },
            "pay_frequency": {
              "docs": "The position's pay frequency.

* \`WEEKLY\` - WEEKLY
* \`BIWEEKLY\` - BIWEEKLY
* \`MONTHLY\` - MONTHLY
* \`QUARTERLY\` - QUARTERLY
* \`SEMIANNUALLY\` - SEMIANNUALLY
* \`ANNUALLY\` - ANNUALLY
* \`THIRTEEN-MONTHLY\` - THIRTEEN-MONTHLY
* \`PRO_RATA\` - PRO_RATA
* \`SEMIMONTHLY\` - SEMIMONTHLY",
              "type": "optional<PayFrequencyEnum>",
            },
            "pay_group": {
              "docs": "The employment's pay group",
              "type": "optional<string>",
            },
            "pay_period": {
              "docs": "The time period this pay rate encompasses.

* \`HOUR\` - HOUR
* \`DAY\` - DAY
* \`WEEK\` - WEEK
* \`EVERY_TWO_WEEKS\` - EVERY_TWO_WEEKS
* \`SEMIMONTHLY\` - SEMIMONTHLY
* \`MONTH\` - MONTH
* \`QUARTER\` - QUARTER
* \`EVERY_SIX_MONTHS\` - EVERY_SIX_MONTHS
* \`YEAR\` - YEAR",
              "type": "optional<PayPeriodEnum>",
            },
            "pay_rate": {
              "docs": "The position's pay rate in dollars.",
              "type": "optional<double>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
          },
        },
        "EmploymentStatusEnum": {
          "docs": "* \`ACTIVE\` - ACTIVE
* \`PENDING\` - PENDING
* \`INACTIVE\` - INACTIVE",
          "enum": [
            {
              "docs": undefined,
              "name": "ACTIVE",
              "value": "ACTIVE",
            },
            {
              "docs": undefined,
              "name": "PENDING",
              "value": "PENDING",
            },
            {
              "docs": undefined,
              "name": "INACTIVE",
              "value": "INACTIVE",
            },
          ],
        },
        "EmploymentTypeEnum": {
          "docs": "* \`FULL_TIME\` - FULL_TIME
* \`PART_TIME\` - PART_TIME
* \`INTERN\` - INTERN
* \`CONTRACTOR\` - CONTRACTOR
* \`FREELANCE\` - FREELANCE",
          "enum": [
            {
              "docs": undefined,
              "name": "FULL_TIME",
              "value": "FULL_TIME",
            },
            {
              "docs": undefined,
              "name": "PART_TIME",
              "value": "PART_TIME",
            },
            {
              "docs": undefined,
              "name": "INTERN",
              "value": "INTERN",
            },
            {
              "docs": undefined,
              "name": "CONTRACTOR",
              "value": "CONTRACTOR",
            },
            {
              "docs": undefined,
              "name": "FREELANCE",
              "value": "FREELANCE",
            },
          ],
        },
        "EmploymentsListRequestExpand": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employee",
              "value": "employee",
            },
            {
              "docs": undefined,
              "name": "EmployeePayGroup",
              "value": "employee,pay_group",
            },
            {
              "docs": undefined,
              "name": "pay_group",
              "value": "pay_group",
            },
          ],
        },
        "EmploymentsListRequestOrderBy": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "EffectiveDateDescending",
              "value": "-effective_date",
            },
            {
              "docs": undefined,
              "name": "EffectiveDateAscending",
              "value": "effective_date",
            },
          ],
        },
        "EmploymentsListRequestRemoteFields": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employment_type",
              "value": "employment_type",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatus",
              "value": "employment_type,flsa_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayFrequency",
              "value": "employment_type,flsa_status,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
              "value": "employment_type,flsa_status,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayPeriod",
              "value": "employment_type,flsa_status,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayFrequency",
              "value": "employment_type,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayFrequencyPayPeriod",
              "value": "employment_type,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayPeriod",
              "value": "employment_type,pay_period",
            },
            {
              "docs": undefined,
              "name": "flsa_status",
              "value": "flsa_status",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayFrequency",
              "value": "flsa_status,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayFrequencyPayPeriod",
              "value": "flsa_status,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayPeriod",
              "value": "flsa_status,pay_period",
            },
            {
              "docs": undefined,
              "name": "pay_frequency",
              "value": "pay_frequency",
            },
            {
              "docs": undefined,
              "name": "PayFrequencyPayPeriod",
              "value": "pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "pay_period",
              "value": "pay_period",
            },
          ],
        },
        "EmploymentsListRequestShowEnumOrigins": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employment_type",
              "value": "employment_type",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatus",
              "value": "employment_type,flsa_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayFrequency",
              "value": "employment_type,flsa_status,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
              "value": "employment_type,flsa_status,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayPeriod",
              "value": "employment_type,flsa_status,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayFrequency",
              "value": "employment_type,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayFrequencyPayPeriod",
              "value": "employment_type,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayPeriod",
              "value": "employment_type,pay_period",
            },
            {
              "docs": undefined,
              "name": "flsa_status",
              "value": "flsa_status",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayFrequency",
              "value": "flsa_status,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayFrequencyPayPeriod",
              "value": "flsa_status,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayPeriod",
              "value": "flsa_status,pay_period",
            },
            {
              "docs": undefined,
              "name": "pay_frequency",
              "value": "pay_frequency",
            },
            {
              "docs": undefined,
              "name": "PayFrequencyPayPeriod",
              "value": "pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "pay_period",
              "value": "pay_period",
            },
          ],
        },
        "EmploymentsRetrieveRequestExpand": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employee",
              "value": "employee",
            },
            {
              "docs": undefined,
              "name": "EmployeePayGroup",
              "value": "employee,pay_group",
            },
            {
              "docs": undefined,
              "name": "pay_group",
              "value": "pay_group",
            },
          ],
        },
        "EmploymentsRetrieveRequestRemoteFields": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employment_type",
              "value": "employment_type",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatus",
              "value": "employment_type,flsa_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayFrequency",
              "value": "employment_type,flsa_status,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
              "value": "employment_type,flsa_status,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayPeriod",
              "value": "employment_type,flsa_status,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayFrequency",
              "value": "employment_type,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayFrequencyPayPeriod",
              "value": "employment_type,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayPeriod",
              "value": "employment_type,pay_period",
            },
            {
              "docs": undefined,
              "name": "flsa_status",
              "value": "flsa_status",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayFrequency",
              "value": "flsa_status,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayFrequencyPayPeriod",
              "value": "flsa_status,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayPeriod",
              "value": "flsa_status,pay_period",
            },
            {
              "docs": undefined,
              "name": "pay_frequency",
              "value": "pay_frequency",
            },
            {
              "docs": undefined,
              "name": "PayFrequencyPayPeriod",
              "value": "pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "pay_period",
              "value": "pay_period",
            },
          ],
        },
        "EmploymentsRetrieveRequestShowEnumOrigins": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "employment_type",
              "value": "employment_type",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatus",
              "value": "employment_type,flsa_status",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayFrequency",
              "value": "employment_type,flsa_status,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayFrequencyPayPeriod",
              "value": "employment_type,flsa_status,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypeFlsaStatusPayPeriod",
              "value": "employment_type,flsa_status,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayFrequency",
              "value": "employment_type,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayFrequencyPayPeriod",
              "value": "employment_type,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "EmploymentTypePayPeriod",
              "value": "employment_type,pay_period",
            },
            {
              "docs": undefined,
              "name": "flsa_status",
              "value": "flsa_status",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayFrequency",
              "value": "flsa_status,pay_frequency",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayFrequencyPayPeriod",
              "value": "flsa_status,pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "FlsaStatusPayPeriod",
              "value": "flsa_status,pay_period",
            },
            {
              "docs": undefined,
              "name": "pay_frequency",
              "value": "pay_frequency",
            },
            {
              "docs": undefined,
              "name": "PayFrequencyPayPeriod",
              "value": "pay_frequency,pay_period",
            },
            {
              "docs": undefined,
              "name": "pay_period",
              "value": "pay_period",
            },
          ],
        },
        "EnabledActionsEnum": {
          "docs": "* \`READ\` - READ
* \`WRITE\` - WRITE",
          "enum": [
            {
              "docs": undefined,
              "name": "READ",
              "value": "READ",
            },
            {
              "docs": undefined,
              "name": "WRITE",
              "value": "WRITE",
            },
          ],
        },
        "EncodingEnum": {
          "docs": "* \`RAW\` - RAW
* \`BASE64\` - BASE64
* \`GZIP_BASE64\` - GZIP_BASE64",
          "enum": [
            {
              "docs": undefined,
              "name": "RAW",
              "value": "RAW",
            },
            {
              "docs": undefined,
              "name": "BASE64",
              "value": "BASE64",
            },
            {
              "docs": undefined,
              "name": "GZIP_BASE64",
              "value": "GZIP_BASE64",
            },
          ],
        },
        "ErrorValidationProblem": {
          "docs": undefined,
          "properties": {
            "detail": {
              "docs": undefined,
              "type": "string",
            },
            "problem_type": {
              "docs": undefined,
              "type": "string",
            },
            "source": {
              "docs": undefined,
              "type": "optional<ValidationProblemSource>",
            },
            "title": {
              "docs": undefined,
              "type": "string",
            },
          },
        },
        "EthnicityEnum": {
          "docs": "* \`AMERICAN_INDIAN_OR_ALASKA_NATIVE\` - AMERICAN_INDIAN_OR_ALASKA_NATIVE
* \`ASIAN_OR_INDIAN_SUBCONTINENT\` - ASIAN_OR_INDIAN_SUBCONTINENT
* \`BLACK_OR_AFRICAN_AMERICAN\` - BLACK_OR_AFRICAN_AMERICAN
* \`HISPANIC_OR_LATINO\` - HISPANIC_OR_LATINO
* \`NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER
* \`TWO_OR_MORE_RACES\` - TWO_OR_MORE_RACES
* \`WHITE\` - WHITE
* \`PREFER_NOT_TO_DISCLOSE\` - PREFER_NOT_TO_DISCLOSE",
          "enum": [
            {
              "docs": undefined,
              "name": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
              "value": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
            },
            {
              "docs": undefined,
              "name": "ASIAN_OR_INDIAN_SUBCONTINENT",
              "value": "ASIAN_OR_INDIAN_SUBCONTINENT",
            },
            {
              "docs": undefined,
              "name": "BLACK_OR_AFRICAN_AMERICAN",
              "value": "BLACK_OR_AFRICAN_AMERICAN",
            },
            {
              "docs": undefined,
              "name": "HISPANIC_OR_LATINO",
              "value": "HISPANIC_OR_LATINO",
            },
            {
              "docs": undefined,
              "name": "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
              "value": "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
            },
            {
              "docs": undefined,
              "name": "TWO_OR_MORE_RACES",
              "value": "TWO_OR_MORE_RACES",
            },
            {
              "docs": undefined,
              "name": "WHITE",
              "value": "WHITE",
            },
            {
              "docs": undefined,
              "name": "PREFER_NOT_TO_DISCLOSE",
              "value": "PREFER_NOT_TO_DISCLOSE",
            },
          ],
        },
        "FlsaStatusEnum": {
          "docs": "* \`EXEMPT\` - EXEMPT
* \`SALARIED_NONEXEMPT\` - SALARIED_NONEXEMPT
* \`NONEXEMPT\` - NONEXEMPT
* \`OWNER\` - OWNER",
          "enum": [
            {
              "docs": undefined,
              "name": "EXEMPT",
              "value": "EXEMPT",
            },
            {
              "docs": undefined,
              "name": "SALARIED_NONEXEMPT",
              "value": "SALARIED_NONEXEMPT",
            },
            {
              "docs": undefined,
              "name": "NONEXEMPT",
              "value": "NONEXEMPT",
            },
            {
              "docs": undefined,
              "name": "OWNER",
              "value": "OWNER",
            },
          ],
        },
        "GenderEnum": {
          "docs": "* \`MALE\` - MALE
* \`FEMALE\` - FEMALE
* \`NON-BINARY\` - NON-BINARY
* \`OTHER\` - OTHER
* \`PREFER_NOT_TO_DISCLOSE\` - PREFER_NOT_TO_DISCLOSE",
          "enum": [
            {
              "docs": undefined,
              "name": "MALE",
              "value": "MALE",
            },
            {
              "docs": undefined,
              "name": "FEMALE",
              "value": "FEMALE",
            },
            {
              "docs": undefined,
              "name": "NonBinary",
              "value": "NON-BINARY",
            },
            {
              "docs": undefined,
              "name": "OTHER",
              "value": "OTHER",
            },
            {
              "docs": undefined,
              "name": "PREFER_NOT_TO_DISCLOSE",
              "value": "PREFER_NOT_TO_DISCLOSE",
            },
          ],
        },
        "Group": {
          "docs": "# The Group Object
### Description
The \`Group\` object is used to represent any subset of employees, such as \`PayGroup\` or \`Team\`. Employees can be in multiple Groups.

### Usage Example
Fetch from the \`LIST Employee\` endpoint and expand groups to view an employee's groups.",
          "properties": {
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "name": {
              "docs": "The group name.",
              "type": "optional<string>",
            },
            "parent_group": {
              "docs": "The parent group for this group.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
            "type": {
              "docs": "The group type

* \`TEAM\` - TEAM
* \`DEPARTMENT\` - DEPARTMENT
* \`COST_CENTER\` - COST_CENTER
* \`BUSINESS_UNIT\` - BUSINESS_UNIT
* \`GROUP\` - GROUP",
              "type": "optional<GroupTypeEnum>",
            },
          },
        },
        "GroupTypeEnum": {
          "docs": "* \`TEAM\` - TEAM
* \`DEPARTMENT\` - DEPARTMENT
* \`COST_CENTER\` - COST_CENTER
* \`BUSINESS_UNIT\` - BUSINESS_UNIT
* \`GROUP\` - GROUP",
          "enum": [
            {
              "docs": undefined,
              "name": "TEAM",
              "value": "TEAM",
            },
            {
              "docs": undefined,
              "name": "DEPARTMENT",
              "value": "DEPARTMENT",
            },
            {
              "docs": undefined,
              "name": "COST_CENTER",
              "value": "COST_CENTER",
            },
            {
              "docs": undefined,
              "name": "BUSINESS_UNIT",
              "value": "BUSINESS_UNIT",
            },
            {
              "docs": undefined,
              "name": "GROUP",
              "value": "GROUP",
            },
          ],
        },
        "Issue": {
          "docs": undefined,
          "properties": {
            "end_user": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "error_description": {
              "docs": undefined,
              "type": "string",
            },
            "error_details": {
              "docs": undefined,
              "type": "optional<list<string>>",
            },
            "first_incident_time": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "is_muted": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "last_incident_time": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "status": {
              "docs": "Status of the issue. Options: ('ONGOING', 'RESOLVED')

* \`ONGOING\` - ONGOING
* \`RESOLVED\` - RESOLVED",
              "type": "optional<IssueStatusEnum>",
            },
          },
        },
        "IssueStatusEnum": {
          "docs": "* \`ONGOING\` - ONGOING
* \`RESOLVED\` - RESOLVED",
          "enum": [
            {
              "docs": undefined,
              "name": "ONGOING",
              "value": "ONGOING",
            },
            {
              "docs": undefined,
              "name": "RESOLVED",
              "value": "RESOLVED",
            },
          ],
        },
        "IssuesListRequestStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "ONGOING",
              "value": "ONGOING",
            },
            {
              "docs": undefined,
              "name": "RESOLVED",
              "value": "RESOLVED",
            },
          ],
        },
        "LinkToken": {
          "docs": undefined,
          "properties": {
            "integration_name": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "link_token": {
              "docs": undefined,
              "type": "string",
            },
            "magic_link_url": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
        "LinkedAccountCondition": {
          "docs": undefined,
          "properties": {
            "common_model": {
              "docs": "The common model for a specific condition.",
              "type": "optional<string>",
            },
            "condition_schema_id": {
              "docs": "The ID indicating which condition schema to use for a specific condition.",
              "type": "string",
            },
            "field_name": {
              "docs": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. "location_type".",
              "type": "optional<string>",
            },
            "native_name": {
              "docs": "User-facing *native condition* name. e.g. "Skip Manager".",
              "type": "optional<string>",
            },
            "operator": {
              "docs": "The operator for a specific condition.",
              "type": "string",
            },
            "value": {
              "docs": undefined,
              "type": "optional<unknown>",
            },
          },
        },
        "LinkedAccountConditionRequest": {
          "docs": undefined,
          "properties": {
            "condition_schema_id": {
              "docs": "The ID indicating which condition schema to use for a specific condition.",
              "type": "string",
            },
            "operator": {
              "docs": "The operator for a specific condition. <span style="white-space: nowrap">\`non-empty\`</span> ",
              "type": "string",
            },
            "value": "unknown",
          },
        },
        "LinkedAccountSelectiveSyncConfiguration": {
          "docs": undefined,
          "properties": {
            "linked_account_conditions": {
              "docs": "The conditions belonging to a selective sync.",
              "type": "optional<list<LinkedAccountCondition>>",
            },
          },
        },
        "LinkedAccountSelectiveSyncConfigurationRequest": {
          "docs": undefined,
          "properties": {
            "linked_account_conditions": {
              "docs": "The conditions belonging to a selective sync.",
              "type": "list<LinkedAccountConditionRequest>",
            },
          },
        },
        "LinkedAccountStatus": {
          "docs": undefined,
          "properties": {
            "can_make_request": {
              "docs": undefined,
              "type": "boolean",
            },
            "linked_account_status": {
              "docs": undefined,
              "type": "string",
            },
          },
        },
        "LinkedAccountsListRequestCategory": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "accounting",
              "value": "accounting",
            },
            {
              "docs": undefined,
              "name": "ats",
              "value": "ats",
            },
            {
              "docs": undefined,
              "name": "crm",
              "value": "crm",
            },
            {
              "docs": undefined,
              "name": "filestorage",
              "value": "filestorage",
            },
            {
              "docs": undefined,
              "name": "hris",
              "value": "hris",
            },
            {
              "docs": undefined,
              "name": "mktg",
              "value": "mktg",
            },
            {
              "docs": undefined,
              "name": "ticketing",
              "value": "ticketing",
            },
          ],
        },
        "Location": {
          "docs": "# The Location Object
### Description
The \`Location\` object is used to represent an address that can be associated with an employee.

### Usage Example
Fetch from the \`LIST Locations\` endpoint and filter by \`ID\` to show all office locations.",
          "properties": {
            "city": {
              "docs": "The location's city.",
              "type": "optional<string>",
            },
            "country": {
              "docs": "The location's country.

* \`AF\` - Afghanistan
* \`AX\` - Åland Islands
* \`AL\` - Albania
* \`DZ\` - Algeria
* \`AS\` - American Samoa
* \`AD\` - Andorra
* \`AO\` - Angola
* \`AI\` - Anguilla
* \`AQ\` - Antarctica
* \`AG\` - Antigua and Barbuda
* \`AR\` - Argentina
* \`AM\` - Armenia
* \`AW\` - Aruba
* \`AU\` - Australia
* \`AT\` - Austria
* \`AZ\` - Azerbaijan
* \`BS\` - Bahamas
* \`BH\` - Bahrain
* \`BD\` - Bangladesh
* \`BB\` - Barbados
* \`BY\` - Belarus
* \`BE\` - Belgium
* \`BZ\` - Belize
* \`BJ\` - Benin
* \`BM\` - Bermuda
* \`BT\` - Bhutan
* \`BO\` - Bolivia
* \`BQ\` - Bonaire, Sint Eustatius and Saba
* \`BA\` - Bosnia and Herzegovina
* \`BW\` - Botswana
* \`BV\` - Bouvet Island
* \`BR\` - Brazil
* \`IO\` - British Indian Ocean Territory
* \`BN\` - Brunei
* \`BG\` - Bulgaria
* \`BF\` - Burkina Faso
* \`BI\` - Burundi
* \`CV\` - Cabo Verde
* \`KH\` - Cambodia
* \`CM\` - Cameroon
* \`CA\` - Canada
* \`KY\` - Cayman Islands
* \`CF\` - Central African Republic
* \`TD\` - Chad
* \`CL\` - Chile
* \`CN\` - China
* \`CX\` - Christmas Island
* \`CC\` - Cocos (Keeling) Islands
* \`CO\` - Colombia
* \`KM\` - Comoros
* \`CG\` - Congo
* \`CD\` - Congo (the Democratic Republic of the)
* \`CK\` - Cook Islands
* \`CR\` - Costa Rica
* \`CI\` - Côte d'Ivoire
* \`HR\` - Croatia
* \`CU\` - Cuba
* \`CW\` - Curaçao
* \`CY\` - Cyprus
* \`CZ\` - Czechia
* \`DK\` - Denmark
* \`DJ\` - Djibouti
* \`DM\` - Dominica
* \`DO\` - Dominican Republic
* \`EC\` - Ecuador
* \`EG\` - Egypt
* \`SV\` - El Salvador
* \`GQ\` - Equatorial Guinea
* \`ER\` - Eritrea
* \`EE\` - Estonia
* \`SZ\` - Eswatini
* \`ET\` - Ethiopia
* \`FK\` - Falkland Islands (Malvinas)
* \`FO\` - Faroe Islands
* \`FJ\` - Fiji
* \`FI\` - Finland
* \`FR\` - France
* \`GF\` - French Guiana
* \`PF\` - French Polynesia
* \`TF\` - French Southern Territories
* \`GA\` - Gabon
* \`GM\` - Gambia
* \`GE\` - Georgia
* \`DE\` - Germany
* \`GH\` - Ghana
* \`GI\` - Gibraltar
* \`GR\` - Greece
* \`GL\` - Greenland
* \`GD\` - Grenada
* \`GP\` - Guadeloupe
* \`GU\` - Guam
* \`GT\` - Guatemala
* \`GG\` - Guernsey
* \`GN\` - Guinea
* \`GW\` - Guinea-Bissau
* \`GY\` - Guyana
* \`HT\` - Haiti
* \`HM\` - Heard Island and McDonald Islands
* \`VA\` - Holy See
* \`HN\` - Honduras
* \`HK\` - Hong Kong
* \`HU\` - Hungary
* \`IS\` - Iceland
* \`IN\` - India
* \`ID\` - Indonesia
* \`IR\` - Iran
* \`IQ\` - Iraq
* \`IE\` - Ireland
* \`IM\` - Isle of Man
* \`IL\` - Israel
* \`IT\` - Italy
* \`JM\` - Jamaica
* \`JP\` - Japan
* \`JE\` - Jersey
* \`JO\` - Jordan
* \`KZ\` - Kazakhstan
* \`KE\` - Kenya
* \`KI\` - Kiribati
* \`KW\` - Kuwait
* \`KG\` - Kyrgyzstan
* \`LA\` - Laos
* \`LV\` - Latvia
* \`LB\` - Lebanon
* \`LS\` - Lesotho
* \`LR\` - Liberia
* \`LY\` - Libya
* \`LI\` - Liechtenstein
* \`LT\` - Lithuania
* \`LU\` - Luxembourg
* \`MO\` - Macao
* \`MG\` - Madagascar
* \`MW\` - Malawi
* \`MY\` - Malaysia
* \`MV\` - Maldives
* \`ML\` - Mali
* \`MT\` - Malta
* \`MH\` - Marshall Islands
* \`MQ\` - Martinique
* \`MR\` - Mauritania
* \`MU\` - Mauritius
* \`YT\` - Mayotte
* \`MX\` - Mexico
* \`FM\` - Micronesia (Federated States of)
* \`MD\` - Moldova
* \`MC\` - Monaco
* \`MN\` - Mongolia
* \`ME\` - Montenegro
* \`MS\` - Montserrat
* \`MA\` - Morocco
* \`MZ\` - Mozambique
* \`MM\` - Myanmar
* \`NA\` - Namibia
* \`NR\` - Nauru
* \`NP\` - Nepal
* \`NL\` - Netherlands
* \`NC\` - New Caledonia
* \`NZ\` - New Zealand
* \`NI\` - Nicaragua
* \`NE\` - Niger
* \`NG\` - Nigeria
* \`NU\` - Niue
* \`NF\` - Norfolk Island
* \`KP\` - North Korea
* \`MK\` - North Macedonia
* \`MP\` - Northern Mariana Islands
* \`NO\` - Norway
* \`OM\` - Oman
* \`PK\` - Pakistan
* \`PW\` - Palau
* \`PS\` - Palestine, State of
* \`PA\` - Panama
* \`PG\` - Papua New Guinea
* \`PY\` - Paraguay
* \`PE\` - Peru
* \`PH\` - Philippines
* \`PN\` - Pitcairn
* \`PL\` - Poland
* \`PT\` - Portugal
* \`PR\` - Puerto Rico
* \`QA\` - Qatar
* \`RE\` - Réunion
* \`RO\` - Romania
* \`RU\` - Russia
* \`RW\` - Rwanda
* \`BL\` - Saint Barthélemy
* \`SH\` - Saint Helena, Ascension and Tristan da Cunha
* \`KN\` - Saint Kitts and Nevis
* \`LC\` - Saint Lucia
* \`MF\` - Saint Martin (French part)
* \`PM\` - Saint Pierre and Miquelon
* \`VC\` - Saint Vincent and the Grenadines
* \`WS\` - Samoa
* \`SM\` - San Marino
* \`ST\` - Sao Tome and Principe
* \`SA\` - Saudi Arabia
* \`SN\` - Senegal
* \`RS\` - Serbia
* \`SC\` - Seychelles
* \`SL\` - Sierra Leone
* \`SG\` - Singapore
* \`SX\` - Sint Maarten (Dutch part)
* \`SK\` - Slovakia
* \`SI\` - Slovenia
* \`SB\` - Solomon Islands
* \`SO\` - Somalia
* \`ZA\` - South Africa
* \`GS\` - South Georgia and the South Sandwich Islands
* \`KR\` - South Korea
* \`SS\` - South Sudan
* \`ES\` - Spain
* \`LK\` - Sri Lanka
* \`SD\` - Sudan
* \`SR\` - Suriname
* \`SJ\` - Svalbard and Jan Mayen
* \`SE\` - Sweden
* \`CH\` - Switzerland
* \`SY\` - Syria
* \`TW\` - Taiwan
* \`TJ\` - Tajikistan
* \`TZ\` - Tanzania
* \`TH\` - Thailand
* \`TL\` - Timor-Leste
* \`TG\` - Togo
* \`TK\` - Tokelau
* \`TO\` - Tonga
* \`TT\` - Trinidad and Tobago
* \`TN\` - Tunisia
* \`TR\` - Turkey
* \`TM\` - Turkmenistan
* \`TC\` - Turks and Caicos Islands
* \`TV\` - Tuvalu
* \`UG\` - Uganda
* \`UA\` - Ukraine
* \`AE\` - United Arab Emirates
* \`GB\` - United Kingdom
* \`UM\` - United States Minor Outlying Islands
* \`US\` - United States of America
* \`UY\` - Uruguay
* \`UZ\` - Uzbekistan
* \`VU\` - Vanuatu
* \`VE\` - Venezuela
* \`VN\` - Vietnam
* \`VG\` - Virgin Islands (British)
* \`VI\` - Virgin Islands (U.S.)
* \`WF\` - Wallis and Futuna
* \`EH\` - Western Sahara
* \`YE\` - Yemen
* \`ZM\` - Zambia
* \`ZW\` - Zimbabwe",
              "type": "optional<CountryEnum>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "location_type": {
              "docs": "The location's type. Can be either WORK or HOME

* \`HOME\` - HOME
* \`WORK\` - WORK",
              "type": "optional<LocationTypeEnum>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "name": {
              "docs": "The location's name.",
              "type": "optional<string>",
            },
            "phone_number": {
              "docs": "The location's phone number.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
            "state": {
              "docs": "The location's state. Represents a region if outside of the US.",
              "type": "optional<string>",
            },
            "street_1": {
              "docs": "Line 1 of the location's street address.",
              "type": "optional<string>",
            },
            "street_2": {
              "docs": "Line 2 of the location's street address.",
              "type": "optional<string>",
            },
            "zip_code": {
              "docs": "The location's zip code or postal code.",
              "type": "optional<string>",
            },
          },
        },
        "LocationTypeEnum": {
          "docs": "* \`HOME\` - HOME
* \`WORK\` - WORK",
          "enum": [
            {
              "docs": undefined,
              "name": "HOME",
              "value": "HOME",
            },
            {
              "docs": undefined,
              "name": "WORK",
              "value": "WORK",
            },
          ],
        },
        "MaritalStatusEnum": {
          "docs": "* \`SINGLE\` - SINGLE
* \`MARRIED_FILING_JOINTLY\` - MARRIED_FILING_JOINTLY
* \`MARRIED_FILING_SEPARATELY\` - MARRIED_FILING_SEPARATELY
* \`HEAD_OF_HOUSEHOLD\` - HEAD_OF_HOUSEHOLD
* \`QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD\` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
          "enum": [
            {
              "docs": undefined,
              "name": "SINGLE",
              "value": "SINGLE",
            },
            {
              "docs": undefined,
              "name": "MARRIED_FILING_JOINTLY",
              "value": "MARRIED_FILING_JOINTLY",
            },
            {
              "docs": undefined,
              "name": "MARRIED_FILING_SEPARATELY",
              "value": "MARRIED_FILING_SEPARATELY",
            },
            {
              "docs": undefined,
              "name": "HEAD_OF_HOUSEHOLD",
              "value": "HEAD_OF_HOUSEHOLD",
            },
            {
              "docs": undefined,
              "name": "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
              "value": "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
            },
          ],
        },
        "MetaResponse": {
          "docs": undefined,
          "properties": {
            "has_conditional_params": {
              "docs": undefined,
              "type": "boolean",
            },
            "has_required_linked_account_params": {
              "docs": undefined,
              "type": "boolean",
            },
            "remote_field_classes": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "request_schema": {
              "docs": undefined,
              "type": "map<string, unknown>",
            },
            "status": {
              "docs": undefined,
              "type": "optional<LinkedAccountStatus>",
            },
          },
        },
        "MethodEnum": {
          "docs": "* \`GET\` - GET
* \`OPTIONS\` - OPTIONS
* \`HEAD\` - HEAD
* \`POST\` - POST
* \`PUT\` - PUT
* \`PATCH\` - PATCH
* \`DELETE\` - DELETE",
          "enum": [
            {
              "docs": undefined,
              "name": "GET",
              "value": "GET",
            },
            {
              "docs": undefined,
              "name": "OPTIONS",
              "value": "OPTIONS",
            },
            {
              "docs": undefined,
              "name": "HEAD",
              "value": "HEAD",
            },
            {
              "docs": undefined,
              "name": "POST",
              "value": "POST",
            },
            {
              "docs": undefined,
              "name": "PUT",
              "value": "PUT",
            },
            {
              "docs": undefined,
              "name": "PATCH",
              "value": "PATCH",
            },
            {
              "docs": undefined,
              "name": "DELETE",
              "value": "DELETE",
            },
          ],
        },
        "ModelOperation": {
          "docs": "# The ModelOperation Object
### Description
The \`ModelOperation\` object is used to represent the operations that are currently supported for a given model.

### Usage Example
View what operations are supported for the \`Candidate\` endpoint.",
          "properties": {
            "available_operations": {
              "docs": undefined,
              "type": "list<string>",
            },
            "model_name": {
              "docs": undefined,
              "type": "string",
            },
            "required_post_parameters": {
              "docs": undefined,
              "type": "list<string>",
            },
            "supported_fields": {
              "docs": undefined,
              "type": "list<string>",
            },
          },
        },
        "MultipartFormFieldRequest": {
          "docs": "# The MultipartFormField Object
### Description
The \`MultipartFormField\` object is used to represent fields in an HTTP request using \`multipart/form-data\`.

### Usage Example
Create a \`MultipartFormField\` to define a multipart form entry.",
          "properties": {
            "content_type": {
              "docs": "The MIME type of the file, if the field is for a file.",
              "type": "optional<string>",
            },
            "data": {
              "docs": "The data for the form field. <span style="white-space: nowrap">\`non-empty\`</span> ",
              "type": "string",
            },
            "encoding": {
              "docs": "The encoding of the value of \`data\`. Defaults to \`RAW\` if not defined.

* \`RAW\` - RAW
* \`BASE64\` - BASE64
* \`GZIP_BASE64\` - GZIP_BASE64",
              "type": "optional<EncodingEnum>",
            },
            "file_name": {
              "docs": "The file name of the form field, if the field is for a file.",
              "type": "optional<string>",
            },
            "name": {
              "docs": "The name of the form field <span style="white-space: nowrap">\`non-empty\`</span> ",
              "type": "string",
            },
          },
        },
        "OperatorSchema": {
          "docs": undefined,
          "properties": {
            "is_unique": {
              "docs": "Whether the operator can be repeated multiple times.",
              "type": "optional<boolean>",
            },
            "operator": {
              "docs": "The operator for which an operator schema is defined.",
              "type": "optional<string>",
            },
          },
        },
        "PaginatedAccountDetailsAndActionsList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<AccountDetailsAndActions>>",
            },
          },
        },
        "PaginatedBankInfoList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<BankInfo>>",
            },
          },
        },
        "PaginatedBenefitList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<Benefit>>",
            },
          },
        },
        "PaginatedCompanyList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<Company>>",
            },
          },
        },
        "PaginatedConditionSchemaList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<ConditionSchema>>",
            },
          },
        },
        "PaginatedEmployeeList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<Employee>>",
            },
          },
        },
        "PaginatedEmployeePayrollRunList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<EmployeePayrollRun>>",
            },
          },
        },
        "PaginatedEmploymentList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<Employment>>",
            },
          },
        },
        "PaginatedGroupList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<Group>>",
            },
          },
        },
        "PaginatedIssueList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<Issue>>",
            },
          },
        },
        "PaginatedLocationList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<Location>>",
            },
          },
        },
        "PaginatedPayGroupList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<PayGroup>>",
            },
          },
        },
        "PaginatedPayrollRunList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<PayrollRun>>",
            },
          },
        },
        "PaginatedSyncStatusList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<SyncStatus>>",
            },
          },
        },
        "PaginatedTeamList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<Team>>",
            },
          },
        },
        "PaginatedTimeOffBalanceList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<TimeOffBalance>>",
            },
          },
        },
        "PaginatedTimeOffList": {
          "docs": undefined,
          "properties": {
            "next": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "previous": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "results": {
              "docs": undefined,
              "type": "optional<list<TimeOff>>",
            },
          },
        },
        "PayCurrencyEnum": {
          "docs": "* \`XUA\` - ADB Unit of Account
* \`AFN\` - Afghan Afghani
* \`AFA\` - Afghan Afghani (1927–2002)
* \`ALL\` - Albanian Lek
* \`ALK\` - Albanian Lek (1946–1965)
* \`DZD\` - Algerian Dinar
* \`ADP\` - Andorran Peseta
* \`AOA\` - Angolan Kwanza
* \`AOK\` - Angolan Kwanza (1977–1991)
* \`AON\` - Angolan New Kwanza (1990–2000)
* \`AOR\` - Angolan Readjusted Kwanza (1995–1999)
* \`ARA\` - Argentine Austral
* \`ARS\` - Argentine Peso
* \`ARM\` - Argentine Peso (1881–1970)
* \`ARP\` - Argentine Peso (1983–1985)
* \`ARL\` - Argentine Peso Ley (1970–1983)
* \`AMD\` - Armenian Dram
* \`AWG\` - Aruban Florin
* \`AUD\` - Australian Dollar
* \`ATS\` - Austrian Schilling
* \`AZN\` - Azerbaijani Manat
* \`AZM\` - Azerbaijani Manat (1993–2006)
* \`BSD\` - Bahamian Dollar
* \`BHD\` - Bahraini Dinar
* \`BDT\` - Bangladeshi Taka
* \`BBD\` - Barbadian Dollar
* \`BYN\` - Belarusian Ruble
* \`BYB\` - Belarusian Ruble (1994–1999)
* \`BYR\` - Belarusian Ruble (2000–2016)
* \`BEF\` - Belgian Franc
* \`BEC\` - Belgian Franc (convertible)
* \`BEL\` - Belgian Franc (financial)
* \`BZD\` - Belize Dollar
* \`BMD\` - Bermudan Dollar
* \`BTN\` - Bhutanese Ngultrum
* \`BOB\` - Bolivian Boliviano
* \`BOL\` - Bolivian Boliviano (1863–1963)
* \`BOV\` - Bolivian Mvdol
* \`BOP\` - Bolivian Peso
* \`BAM\` - Bosnia-Herzegovina Convertible Mark
* \`BAD\` - Bosnia-Herzegovina Dinar (1992–1994)
* \`BAN\` - Bosnia-Herzegovina New Dinar (1994–1997)
* \`BWP\` - Botswanan Pula
* \`BRC\` - Brazilian Cruzado (1986–1989)
* \`BRZ\` - Brazilian Cruzeiro (1942–1967)
* \`BRE\` - Brazilian Cruzeiro (1990–1993)
* \`BRR\` - Brazilian Cruzeiro (1993–1994)
* \`BRN\` - Brazilian New Cruzado (1989–1990)
* \`BRB\` - Brazilian New Cruzeiro (1967–1986)
* \`BRL\` - Brazilian Real
* \`GBP\` - British Pound
* \`BND\` - Brunei Dollar
* \`BGL\` - Bulgarian Hard Lev
* \`BGN\` - Bulgarian Lev
* \`BGO\` - Bulgarian Lev (1879–1952)
* \`BGM\` - Bulgarian Socialist Lev
* \`BUK\` - Burmese Kyat
* \`BIF\` - Burundian Franc
* \`XPF\` - CFP Franc
* \`KHR\` - Cambodian Riel
* \`CAD\` - Canadian Dollar
* \`CVE\` - Cape Verdean Escudo
* \`KYD\` - Cayman Islands Dollar
* \`XAF\` - Central African CFA Franc
* \`CLE\` - Chilean Escudo
* \`CLP\` - Chilean Peso
* \`CLF\` - Chilean Unit of Account (UF)
* \`CNX\` - Chinese People’s Bank Dollar
* \`CNY\` - Chinese Yuan
* \`CNH\` - Chinese Yuan (offshore)
* \`COP\` - Colombian Peso
* \`COU\` - Colombian Real Value Unit
* \`KMF\` - Comorian Franc
* \`CDF\` - Congolese Franc
* \`CRC\` - Costa Rican Colón
* \`HRD\` - Croatian Dinar
* \`HRK\` - Croatian Kuna
* \`CUC\` - Cuban Convertible Peso
* \`CUP\` - Cuban Peso
* \`CYP\` - Cypriot Pound
* \`CZK\` - Czech Koruna
* \`CSK\` - Czechoslovak Hard Koruna
* \`DKK\` - Danish Krone
* \`DJF\` - Djiboutian Franc
* \`DOP\` - Dominican Peso
* \`NLG\` - Dutch Guilder
* \`XCD\` - East Caribbean Dollar
* \`DDM\` - East German Mark
* \`ECS\` - Ecuadorian Sucre
* \`ECV\` - Ecuadorian Unit of Constant Value
* \`EGP\` - Egyptian Pound
* \`GQE\` - Equatorial Guinean Ekwele
* \`ERN\` - Eritrean Nakfa
* \`EEK\` - Estonian Kroon
* \`ETB\` - Ethiopian Birr
* \`EUR\` - Euro
* \`XBA\` - European Composite Unit
* \`XEU\` - European Currency Unit
* \`XBB\` - European Monetary Unit
* \`XBC\` - European Unit of Account (XBC)
* \`XBD\` - European Unit of Account (XBD)
* \`FKP\` - Falkland Islands Pound
* \`FJD\` - Fijian Dollar
* \`FIM\` - Finnish Markka
* \`FRF\` - French Franc
* \`XFO\` - French Gold Franc
* \`XFU\` - French UIC-Franc
* \`GMD\` - Gambian Dalasi
* \`GEK\` - Georgian Kupon Larit
* \`GEL\` - Georgian Lari
* \`DEM\` - German Mark
* \`GHS\` - Ghanaian Cedi
* \`GHC\` - Ghanaian Cedi (1979–2007)
* \`GIP\` - Gibraltar Pound
* \`XAU\` - Gold
* \`GRD\` - Greek Drachma
* \`GTQ\` - Guatemalan Quetzal
* \`GWP\` - Guinea-Bissau Peso
* \`GNF\` - Guinean Franc
* \`GNS\` - Guinean Syli
* \`GYD\` - Guyanaese Dollar
* \`HTG\` - Haitian Gourde
* \`HNL\` - Honduran Lempira
* \`HKD\` - Hong Kong Dollar
* \`HUF\` - Hungarian Forint
* \`IMP\` - IMP
* \`ISK\` - Icelandic Króna
* \`ISJ\` - Icelandic Króna (1918–1981)
* \`INR\` - Indian Rupee
* \`IDR\` - Indonesian Rupiah
* \`IRR\` - Iranian Rial
* \`IQD\` - Iraqi Dinar
* \`IEP\` - Irish Pound
* \`ILS\` - Israeli New Shekel
* \`ILP\` - Israeli Pound
* \`ILR\` - Israeli Shekel (1980–1985)
* \`ITL\` - Italian Lira
* \`JMD\` - Jamaican Dollar
* \`JPY\` - Japanese Yen
* \`JOD\` - Jordanian Dinar
* \`KZT\` - Kazakhstani Tenge
* \`KES\` - Kenyan Shilling
* \`KWD\` - Kuwaiti Dinar
* \`KGS\` - Kyrgystani Som
* \`LAK\` - Laotian Kip
* \`LVL\` - Latvian Lats
* \`LVR\` - Latvian Ruble
* \`LBP\` - Lebanese Pound
* \`LSL\` - Lesotho Loti
* \`LRD\` - Liberian Dollar
* \`LYD\` - Libyan Dinar
* \`LTL\` - Lithuanian Litas
* \`LTT\` - Lithuanian Talonas
* \`LUL\` - Luxembourg Financial Franc
* \`LUC\` - Luxembourgian Convertible Franc
* \`LUF\` - Luxembourgian Franc
* \`MOP\` - Macanese Pataca
* \`MKD\` - Macedonian Denar
* \`MKN\` - Macedonian Denar (1992–1993)
* \`MGA\` - Malagasy Ariary
* \`MGF\` - Malagasy Franc
* \`MWK\` - Malawian Kwacha
* \`MYR\` - Malaysian Ringgit
* \`MVR\` - Maldivian Rufiyaa
* \`MVP\` - Maldivian Rupee (1947–1981)
* \`MLF\` - Malian Franc
* \`MTL\` - Maltese Lira
* \`MTP\` - Maltese Pound
* \`MRU\` - Mauritanian Ouguiya
* \`MRO\` - Mauritanian Ouguiya (1973–2017)
* \`MUR\` - Mauritian Rupee
* \`MXV\` - Mexican Investment Unit
* \`MXN\` - Mexican Peso
* \`MXP\` - Mexican Silver Peso (1861–1992)
* \`MDC\` - Moldovan Cupon
* \`MDL\` - Moldovan Leu
* \`MCF\` - Monegasque Franc
* \`MNT\` - Mongolian Tugrik
* \`MAD\` - Moroccan Dirham
* \`MAF\` - Moroccan Franc
* \`MZE\` - Mozambican Escudo
* \`MZN\` - Mozambican Metical
* \`MZM\` - Mozambican Metical (1980–2006)
* \`MMK\` - Myanmar Kyat
* \`NAD\` - Namibian Dollar
* \`NPR\` - Nepalese Rupee
* \`ANG\` - Netherlands Antillean Guilder
* \`TWD\` - New Taiwan Dollar
* \`NZD\` - New Zealand Dollar
* \`NIO\` - Nicaraguan Córdoba
* \`NIC\` - Nicaraguan Córdoba (1988–1991)
* \`NGN\` - Nigerian Naira
* \`KPW\` - North Korean Won
* \`NOK\` - Norwegian Krone
* \`OMR\` - Omani Rial
* \`PKR\` - Pakistani Rupee
* \`XPD\` - Palladium
* \`PAB\` - Panamanian Balboa
* \`PGK\` - Papua New Guinean Kina
* \`PYG\` - Paraguayan Guarani
* \`PEI\` - Peruvian Inti
* \`PEN\` - Peruvian Sol
* \`PES\` - Peruvian Sol (1863–1965)
* \`PHP\` - Philippine Peso
* \`XPT\` - Platinum
* \`PLN\` - Polish Zloty
* \`PLZ\` - Polish Zloty (1950–1995)
* \`PTE\` - Portuguese Escudo
* \`GWE\` - Portuguese Guinea Escudo
* \`QAR\` - Qatari Rial
* \`XRE\` - RINET Funds
* \`RHD\` - Rhodesian Dollar
* \`RON\` - Romanian Leu
* \`ROL\` - Romanian Leu (1952–2006)
* \`RUB\` - Russian Ruble
* \`RUR\` - Russian Ruble (1991–1998)
* \`RWF\` - Rwandan Franc
* \`SVC\` - Salvadoran Colón
* \`WST\` - Samoan Tala
* \`SAR\` - Saudi Riyal
* \`RSD\` - Serbian Dinar
* \`CSD\` - Serbian Dinar (2002–2006)
* \`SCR\` - Seychellois Rupee
* \`SLL\` - Sierra Leonean Leone
* \`XAG\` - Silver
* \`SGD\` - Singapore Dollar
* \`SKK\` - Slovak Koruna
* \`SIT\` - Slovenian Tolar
* \`SBD\` - Solomon Islands Dollar
* \`SOS\` - Somali Shilling
* \`ZAR\` - South African Rand
* \`ZAL\` - South African Rand (financial)
* \`KRH\` - South Korean Hwan (1953–1962)
* \`KRW\` - South Korean Won
* \`KRO\` - South Korean Won (1945–1953)
* \`SSP\` - South Sudanese Pound
* \`SUR\` - Soviet Rouble
* \`ESP\` - Spanish Peseta
* \`ESA\` - Spanish Peseta (A account)
* \`ESB\` - Spanish Peseta (convertible account)
* \`XDR\` - Special Drawing Rights
* \`LKR\` - Sri Lankan Rupee
* \`SHP\` - St. Helena Pound
* \`XSU\` - Sucre
* \`SDD\` - Sudanese Dinar (1992–2007)
* \`SDG\` - Sudanese Pound
* \`SDP\` - Sudanese Pound (1957–1998)
* \`SRD\` - Surinamese Dollar
* \`SRG\` - Surinamese Guilder
* \`SZL\` - Swazi Lilangeni
* \`SEK\` - Swedish Krona
* \`CHF\` - Swiss Franc
* \`SYP\` - Syrian Pound
* \`STN\` - São Tomé & Príncipe Dobra
* \`STD\` - São Tomé & Príncipe Dobra (1977–2017)
* \`TVD\` - TVD
* \`TJR\` - Tajikistani Ruble
* \`TJS\` - Tajikistani Somoni
* \`TZS\` - Tanzanian Shilling
* \`XTS\` - Testing Currency Code
* \`THB\` - Thai Baht
* \`XXX\` - The codes assigned for transactions where no currency is involved
* \`TPE\` - Timorese Escudo
* \`TOP\` - Tongan Paʻanga
* \`TTD\` - Trinidad & Tobago Dollar
* \`TND\` - Tunisian Dinar
* \`TRY\` - Turkish Lira
* \`TRL\` - Turkish Lira (1922–2005)
* \`TMT\` - Turkmenistani Manat
* \`TMM\` - Turkmenistani Manat (1993–2009)
* \`USD\` - US Dollar
* \`USN\` - US Dollar (Next day)
* \`USS\` - US Dollar (Same day)
* \`UGX\` - Ugandan Shilling
* \`UGS\` - Ugandan Shilling (1966–1987)
* \`UAH\` - Ukrainian Hryvnia
* \`UAK\` - Ukrainian Karbovanets
* \`AED\` - United Arab Emirates Dirham
* \`UYW\` - Uruguayan Nominal Wage Index Unit
* \`UYU\` - Uruguayan Peso
* \`UYP\` - Uruguayan Peso (1975–1993)
* \`UYI\` - Uruguayan Peso (Indexed Units)
* \`UZS\` - Uzbekistani Som
* \`VUV\` - Vanuatu Vatu
* \`VES\` - Venezuelan Bolívar
* \`VEB\` - Venezuelan Bolívar (1871–2008)
* \`VEF\` - Venezuelan Bolívar (2008–2018)
* \`VND\` - Vietnamese Dong
* \`VNN\` - Vietnamese Dong (1978–1985)
* \`CHE\` - WIR Euro
* \`CHW\` - WIR Franc
* \`XOF\` - West African CFA Franc
* \`YDD\` - Yemeni Dinar
* \`YER\` - Yemeni Rial
* \`YUN\` - Yugoslavian Convertible Dinar (1990–1992)
* \`YUD\` - Yugoslavian Hard Dinar (1966–1990)
* \`YUM\` - Yugoslavian New Dinar (1994–2002)
* \`YUR\` - Yugoslavian Reformed Dinar (1992–1993)
* \`ZWN\` - ZWN
* \`ZRN\` - Zairean New Zaire (1993–1998)
* \`ZRZ\` - Zairean Zaire (1971–1993)
* \`ZMW\` - Zambian Kwacha
* \`ZMK\` - Zambian Kwacha (1968–2012)
* \`ZWD\` - Zimbabwean Dollar (1980–2008)
* \`ZWR\` - Zimbabwean Dollar (2008)
* \`ZWL\` - Zimbabwean Dollar (2009)",
          "enum": [
            {
              "docs": undefined,
              "name": "XUA",
              "value": "XUA",
            },
            {
              "docs": undefined,
              "name": "AFN",
              "value": "AFN",
            },
            {
              "docs": undefined,
              "name": "AFA",
              "value": "AFA",
            },
            {
              "docs": undefined,
              "name": "ALL",
              "value": "ALL",
            },
            {
              "docs": undefined,
              "name": "ALK",
              "value": "ALK",
            },
            {
              "docs": undefined,
              "name": "DZD",
              "value": "DZD",
            },
            {
              "docs": undefined,
              "name": "ADP",
              "value": "ADP",
            },
            {
              "docs": undefined,
              "name": "AOA",
              "value": "AOA",
            },
            {
              "docs": undefined,
              "name": "AOK",
              "value": "AOK",
            },
            {
              "docs": undefined,
              "name": "AON",
              "value": "AON",
            },
            {
              "docs": undefined,
              "name": "AOR",
              "value": "AOR",
            },
            {
              "docs": undefined,
              "name": "ARA",
              "value": "ARA",
            },
            {
              "docs": undefined,
              "name": "ARS",
              "value": "ARS",
            },
            {
              "docs": undefined,
              "name": "ARM",
              "value": "ARM",
            },
            {
              "docs": undefined,
              "name": "ARP",
              "value": "ARP",
            },
            {
              "docs": undefined,
              "name": "ARL",
              "value": "ARL",
            },
            {
              "docs": undefined,
              "name": "AMD",
              "value": "AMD",
            },
            {
              "docs": undefined,
              "name": "AWG",
              "value": "AWG",
            },
            {
              "docs": undefined,
              "name": "AUD",
              "value": "AUD",
            },
            {
              "docs": undefined,
              "name": "ATS",
              "value": "ATS",
            },
            {
              "docs": undefined,
              "name": "AZN",
              "value": "AZN",
            },
            {
              "docs": undefined,
              "name": "AZM",
              "value": "AZM",
            },
            {
              "docs": undefined,
              "name": "BSD",
              "value": "BSD",
            },
            {
              "docs": undefined,
              "name": "BHD",
              "value": "BHD",
            },
            {
              "docs": undefined,
              "name": "BDT",
              "value": "BDT",
            },
            {
              "docs": undefined,
              "name": "BBD",
              "value": "BBD",
            },
            {
              "docs": undefined,
              "name": "BYN",
              "value": "BYN",
            },
            {
              "docs": undefined,
              "name": "BYB",
              "value": "BYB",
            },
            {
              "docs": undefined,
              "name": "BYR",
              "value": "BYR",
            },
            {
              "docs": undefined,
              "name": "BEF",
              "value": "BEF",
            },
            {
              "docs": undefined,
              "name": "BEC",
              "value": "BEC",
            },
            {
              "docs": undefined,
              "name": "BEL",
              "value": "BEL",
            },
            {
              "docs": undefined,
              "name": "BZD",
              "value": "BZD",
            },
            {
              "docs": undefined,
              "name": "BMD",
              "value": "BMD",
            },
            {
              "docs": undefined,
              "name": "BTN",
              "value": "BTN",
            },
            {
              "docs": undefined,
              "name": "BOB",
              "value": "BOB",
            },
            {
              "docs": undefined,
              "name": "BOL",
              "value": "BOL",
            },
            {
              "docs": undefined,
              "name": "BOV",
              "value": "BOV",
            },
            {
              "docs": undefined,
              "name": "BOP",
              "value": "BOP",
            },
            {
              "docs": undefined,
              "name": "BAM",
              "value": "BAM",
            },
            {
              "docs": undefined,
              "name": "BAD",
              "value": "BAD",
            },
            {
              "docs": undefined,
              "name": "BAN",
              "value": "BAN",
            },
            {
              "docs": undefined,
              "name": "BWP",
              "value": "BWP",
            },
            {
              "docs": undefined,
              "name": "BRC",
              "value": "BRC",
            },
            {
              "docs": undefined,
              "name": "BRZ",
              "value": "BRZ",
            },
            {
              "docs": undefined,
              "name": "BRE",
              "value": "BRE",
            },
            {
              "docs": undefined,
              "name": "BRR",
              "value": "BRR",
            },
            {
              "docs": undefined,
              "name": "BRN",
              "value": "BRN",
            },
            {
              "docs": undefined,
              "name": "BRB",
              "value": "BRB",
            },
            {
              "docs": undefined,
              "name": "BRL",
              "value": "BRL",
            },
            {
              "docs": undefined,
              "name": "GBP",
              "value": "GBP",
            },
            {
              "docs": undefined,
              "name": "BND",
              "value": "BND",
            },
            {
              "docs": undefined,
              "name": "BGL",
              "value": "BGL",
            },
            {
              "docs": undefined,
              "name": "BGN",
              "value": "BGN",
            },
            {
              "docs": undefined,
              "name": "BGO",
              "value": "BGO",
            },
            {
              "docs": undefined,
              "name": "BGM",
              "value": "BGM",
            },
            {
              "docs": undefined,
              "name": "BUK",
              "value": "BUK",
            },
            {
              "docs": undefined,
              "name": "BIF",
              "value": "BIF",
            },
            {
              "docs": undefined,
              "name": "XPF",
              "value": "XPF",
            },
            {
              "docs": undefined,
              "name": "KHR",
              "value": "KHR",
            },
            {
              "docs": undefined,
              "name": "CAD",
              "value": "CAD",
            },
            {
              "docs": undefined,
              "name": "CVE",
              "value": "CVE",
            },
            {
              "docs": undefined,
              "name": "KYD",
              "value": "KYD",
            },
            {
              "docs": undefined,
              "name": "XAF",
              "value": "XAF",
            },
            {
              "docs": undefined,
              "name": "CLE",
              "value": "CLE",
            },
            {
              "docs": undefined,
              "name": "CLP",
              "value": "CLP",
            },
            {
              "docs": undefined,
              "name": "CLF",
              "value": "CLF",
            },
            {
              "docs": undefined,
              "name": "CNX",
              "value": "CNX",
            },
            {
              "docs": undefined,
              "name": "CNY",
              "value": "CNY",
            },
            {
              "docs": undefined,
              "name": "CNH",
              "value": "CNH",
            },
            {
              "docs": undefined,
              "name": "COP",
              "value": "COP",
            },
            {
              "docs": undefined,
              "name": "COU",
              "value": "COU",
            },
            {
              "docs": undefined,
              "name": "KMF",
              "value": "KMF",
            },
            {
              "docs": undefined,
              "name": "CDF",
              "value": "CDF",
            },
            {
              "docs": undefined,
              "name": "CRC",
              "value": "CRC",
            },
            {
              "docs": undefined,
              "name": "HRD",
              "value": "HRD",
            },
            {
              "docs": undefined,
              "name": "HRK",
              "value": "HRK",
            },
            {
              "docs": undefined,
              "name": "CUC",
              "value": "CUC",
            },
            {
              "docs": undefined,
              "name": "CUP",
              "value": "CUP",
            },
            {
              "docs": undefined,
              "name": "CYP",
              "value": "CYP",
            },
            {
              "docs": undefined,
              "name": "CZK",
              "value": "CZK",
            },
            {
              "docs": undefined,
              "name": "CSK",
              "value": "CSK",
            },
            {
              "docs": undefined,
              "name": "DKK",
              "value": "DKK",
            },
            {
              "docs": undefined,
              "name": "DJF",
              "value": "DJF",
            },
            {
              "docs": undefined,
              "name": "DOP",
              "value": "DOP",
            },
            {
              "docs": undefined,
              "name": "NLG",
              "value": "NLG",
            },
            {
              "docs": undefined,
              "name": "XCD",
              "value": "XCD",
            },
            {
              "docs": undefined,
              "name": "DDM",
              "value": "DDM",
            },
            {
              "docs": undefined,
              "name": "ECS",
              "value": "ECS",
            },
            {
              "docs": undefined,
              "name": "ECV",
              "value": "ECV",
            },
            {
              "docs": undefined,
              "name": "EGP",
              "value": "EGP",
            },
            {
              "docs": undefined,
              "name": "GQE",
              "value": "GQE",
            },
            {
              "docs": undefined,
              "name": "ERN",
              "value": "ERN",
            },
            {
              "docs": undefined,
              "name": "EEK",
              "value": "EEK",
            },
            {
              "docs": undefined,
              "name": "ETB",
              "value": "ETB",
            },
            {
              "docs": undefined,
              "name": "EUR",
              "value": "EUR",
            },
            {
              "docs": undefined,
              "name": "XBA",
              "value": "XBA",
            },
            {
              "docs": undefined,
              "name": "XEU",
              "value": "XEU",
            },
            {
              "docs": undefined,
              "name": "XBB",
              "value": "XBB",
            },
            {
              "docs": undefined,
              "name": "XBC",
              "value": "XBC",
            },
            {
              "docs": undefined,
              "name": "XBD",
              "value": "XBD",
            },
            {
              "docs": undefined,
              "name": "FKP",
              "value": "FKP",
            },
            {
              "docs": undefined,
              "name": "FJD",
              "value": "FJD",
            },
            {
              "docs": undefined,
              "name": "FIM",
              "value": "FIM",
            },
            {
              "docs": undefined,
              "name": "FRF",
              "value": "FRF",
            },
            {
              "docs": undefined,
              "name": "XFO",
              "value": "XFO",
            },
            {
              "docs": undefined,
              "name": "XFU",
              "value": "XFU",
            },
            {
              "docs": undefined,
              "name": "GMD",
              "value": "GMD",
            },
            {
              "docs": undefined,
              "name": "GEK",
              "value": "GEK",
            },
            {
              "docs": undefined,
              "name": "GEL",
              "value": "GEL",
            },
            {
              "docs": undefined,
              "name": "DEM",
              "value": "DEM",
            },
            {
              "docs": undefined,
              "name": "GHS",
              "value": "GHS",
            },
            {
              "docs": undefined,
              "name": "GHC",
              "value": "GHC",
            },
            {
              "docs": undefined,
              "name": "GIP",
              "value": "GIP",
            },
            {
              "docs": undefined,
              "name": "XAU",
              "value": "XAU",
            },
            {
              "docs": undefined,
              "name": "GRD",
              "value": "GRD",
            },
            {
              "docs": undefined,
              "name": "GTQ",
              "value": "GTQ",
            },
            {
              "docs": undefined,
              "name": "GWP",
              "value": "GWP",
            },
            {
              "docs": undefined,
              "name": "GNF",
              "value": "GNF",
            },
            {
              "docs": undefined,
              "name": "GNS",
              "value": "GNS",
            },
            {
              "docs": undefined,
              "name": "GYD",
              "value": "GYD",
            },
            {
              "docs": undefined,
              "name": "HTG",
              "value": "HTG",
            },
            {
              "docs": undefined,
              "name": "HNL",
              "value": "HNL",
            },
            {
              "docs": undefined,
              "name": "HKD",
              "value": "HKD",
            },
            {
              "docs": undefined,
              "name": "HUF",
              "value": "HUF",
            },
            {
              "docs": undefined,
              "name": "IMP",
              "value": "IMP",
            },
            {
              "docs": undefined,
              "name": "ISK",
              "value": "ISK",
            },
            {
              "docs": undefined,
              "name": "ISJ",
              "value": "ISJ",
            },
            {
              "docs": undefined,
              "name": "INR",
              "value": "INR",
            },
            {
              "docs": undefined,
              "name": "IDR",
              "value": "IDR",
            },
            {
              "docs": undefined,
              "name": "IRR",
              "value": "IRR",
            },
            {
              "docs": undefined,
              "name": "IQD",
              "value": "IQD",
            },
            {
              "docs": undefined,
              "name": "IEP",
              "value": "IEP",
            },
            {
              "docs": undefined,
              "name": "ILS",
              "value": "ILS",
            },
            {
              "docs": undefined,
              "name": "ILP",
              "value": "ILP",
            },
            {
              "docs": undefined,
              "name": "ILR",
              "value": "ILR",
            },
            {
              "docs": undefined,
              "name": "ITL",
              "value": "ITL",
            },
            {
              "docs": undefined,
              "name": "JMD",
              "value": "JMD",
            },
            {
              "docs": undefined,
              "name": "JPY",
              "value": "JPY",
            },
            {
              "docs": undefined,
              "name": "JOD",
              "value": "JOD",
            },
            {
              "docs": undefined,
              "name": "KZT",
              "value": "KZT",
            },
            {
              "docs": undefined,
              "name": "KES",
              "value": "KES",
            },
            {
              "docs": undefined,
              "name": "KWD",
              "value": "KWD",
            },
            {
              "docs": undefined,
              "name": "KGS",
              "value": "KGS",
            },
            {
              "docs": undefined,
              "name": "LAK",
              "value": "LAK",
            },
            {
              "docs": undefined,
              "name": "LVL",
              "value": "LVL",
            },
            {
              "docs": undefined,
              "name": "LVR",
              "value": "LVR",
            },
            {
              "docs": undefined,
              "name": "LBP",
              "value": "LBP",
            },
            {
              "docs": undefined,
              "name": "LSL",
              "value": "LSL",
            },
            {
              "docs": undefined,
              "name": "LRD",
              "value": "LRD",
            },
            {
              "docs": undefined,
              "name": "LYD",
              "value": "LYD",
            },
            {
              "docs": undefined,
              "name": "LTL",
              "value": "LTL",
            },
            {
              "docs": undefined,
              "name": "LTT",
              "value": "LTT",
            },
            {
              "docs": undefined,
              "name": "LUL",
              "value": "LUL",
            },
            {
              "docs": undefined,
              "name": "LUC",
              "value": "LUC",
            },
            {
              "docs": undefined,
              "name": "LUF",
              "value": "LUF",
            },
            {
              "docs": undefined,
              "name": "MOP",
              "value": "MOP",
            },
            {
              "docs": undefined,
              "name": "MKD",
              "value": "MKD",
            },
            {
              "docs": undefined,
              "name": "MKN",
              "value": "MKN",
            },
            {
              "docs": undefined,
              "name": "MGA",
              "value": "MGA",
            },
            {
              "docs": undefined,
              "name": "MGF",
              "value": "MGF",
            },
            {
              "docs": undefined,
              "name": "MWK",
              "value": "MWK",
            },
            {
              "docs": undefined,
              "name": "MYR",
              "value": "MYR",
            },
            {
              "docs": undefined,
              "name": "MVR",
              "value": "MVR",
            },
            {
              "docs": undefined,
              "name": "MVP",
              "value": "MVP",
            },
            {
              "docs": undefined,
              "name": "MLF",
              "value": "MLF",
            },
            {
              "docs": undefined,
              "name": "MTL",
              "value": "MTL",
            },
            {
              "docs": undefined,
              "name": "MTP",
              "value": "MTP",
            },
            {
              "docs": undefined,
              "name": "MRU",
              "value": "MRU",
            },
            {
              "docs": undefined,
              "name": "MRO",
              "value": "MRO",
            },
            {
              "docs": undefined,
              "name": "MUR",
              "value": "MUR",
            },
            {
              "docs": undefined,
              "name": "MXV",
              "value": "MXV",
            },
            {
              "docs": undefined,
              "name": "MXN",
              "value": "MXN",
            },
            {
              "docs": undefined,
              "name": "MXP",
              "value": "MXP",
            },
            {
              "docs": undefined,
              "name": "MDC",
              "value": "MDC",
            },
            {
              "docs": undefined,
              "name": "MDL",
              "value": "MDL",
            },
            {
              "docs": undefined,
              "name": "MCF",
              "value": "MCF",
            },
            {
              "docs": undefined,
              "name": "MNT",
              "value": "MNT",
            },
            {
              "docs": undefined,
              "name": "MAD",
              "value": "MAD",
            },
            {
              "docs": undefined,
              "name": "MAF",
              "value": "MAF",
            },
            {
              "docs": undefined,
              "name": "MZE",
              "value": "MZE",
            },
            {
              "docs": undefined,
              "name": "MZN",
              "value": "MZN",
            },
            {
              "docs": undefined,
              "name": "MZM",
              "value": "MZM",
            },
            {
              "docs": undefined,
              "name": "MMK",
              "value": "MMK",
            },
            {
              "docs": undefined,
              "name": "NAD",
              "value": "NAD",
            },
            {
              "docs": undefined,
              "name": "NPR",
              "value": "NPR",
            },
            {
              "docs": undefined,
              "name": "ANG",
              "value": "ANG",
            },
            {
              "docs": undefined,
              "name": "TWD",
              "value": "TWD",
            },
            {
              "docs": undefined,
              "name": "NZD",
              "value": "NZD",
            },
            {
              "docs": undefined,
              "name": "NIO",
              "value": "NIO",
            },
            {
              "docs": undefined,
              "name": "NIC",
              "value": "NIC",
            },
            {
              "docs": undefined,
              "name": "NGN",
              "value": "NGN",
            },
            {
              "docs": undefined,
              "name": "KPW",
              "value": "KPW",
            },
            {
              "docs": undefined,
              "name": "NOK",
              "value": "NOK",
            },
            {
              "docs": undefined,
              "name": "OMR",
              "value": "OMR",
            },
            {
              "docs": undefined,
              "name": "PKR",
              "value": "PKR",
            },
            {
              "docs": undefined,
              "name": "XPD",
              "value": "XPD",
            },
            {
              "docs": undefined,
              "name": "PAB",
              "value": "PAB",
            },
            {
              "docs": undefined,
              "name": "PGK",
              "value": "PGK",
            },
            {
              "docs": undefined,
              "name": "PYG",
              "value": "PYG",
            },
            {
              "docs": undefined,
              "name": "PEI",
              "value": "PEI",
            },
            {
              "docs": undefined,
              "name": "PEN",
              "value": "PEN",
            },
            {
              "docs": undefined,
              "name": "PES",
              "value": "PES",
            },
            {
              "docs": undefined,
              "name": "PHP",
              "value": "PHP",
            },
            {
              "docs": undefined,
              "name": "XPT",
              "value": "XPT",
            },
            {
              "docs": undefined,
              "name": "PLN",
              "value": "PLN",
            },
            {
              "docs": undefined,
              "name": "PLZ",
              "value": "PLZ",
            },
            {
              "docs": undefined,
              "name": "PTE",
              "value": "PTE",
            },
            {
              "docs": undefined,
              "name": "GWE",
              "value": "GWE",
            },
            {
              "docs": undefined,
              "name": "QAR",
              "value": "QAR",
            },
            {
              "docs": undefined,
              "name": "XRE",
              "value": "XRE",
            },
            {
              "docs": undefined,
              "name": "RHD",
              "value": "RHD",
            },
            {
              "docs": undefined,
              "name": "RON",
              "value": "RON",
            },
            {
              "docs": undefined,
              "name": "ROL",
              "value": "ROL",
            },
            {
              "docs": undefined,
              "name": "RUB",
              "value": "RUB",
            },
            {
              "docs": undefined,
              "name": "RUR",
              "value": "RUR",
            },
            {
              "docs": undefined,
              "name": "RWF",
              "value": "RWF",
            },
            {
              "docs": undefined,
              "name": "SVC",
              "value": "SVC",
            },
            {
              "docs": undefined,
              "name": "WST",
              "value": "WST",
            },
            {
              "docs": undefined,
              "name": "SAR",
              "value": "SAR",
            },
            {
              "docs": undefined,
              "name": "RSD",
              "value": "RSD",
            },
            {
              "docs": undefined,
              "name": "CSD",
              "value": "CSD",
            },
            {
              "docs": undefined,
              "name": "SCR",
              "value": "SCR",
            },
            {
              "docs": undefined,
              "name": "SLL",
              "value": "SLL",
            },
            {
              "docs": undefined,
              "name": "XAG",
              "value": "XAG",
            },
            {
              "docs": undefined,
              "name": "SGD",
              "value": "SGD",
            },
            {
              "docs": undefined,
              "name": "SKK",
              "value": "SKK",
            },
            {
              "docs": undefined,
              "name": "SIT",
              "value": "SIT",
            },
            {
              "docs": undefined,
              "name": "SBD",
              "value": "SBD",
            },
            {
              "docs": undefined,
              "name": "SOS",
              "value": "SOS",
            },
            {
              "docs": undefined,
              "name": "ZAR",
              "value": "ZAR",
            },
            {
              "docs": undefined,
              "name": "ZAL",
              "value": "ZAL",
            },
            {
              "docs": undefined,
              "name": "KRH",
              "value": "KRH",
            },
            {
              "docs": undefined,
              "name": "KRW",
              "value": "KRW",
            },
            {
              "docs": undefined,
              "name": "KRO",
              "value": "KRO",
            },
            {
              "docs": undefined,
              "name": "SSP",
              "value": "SSP",
            },
            {
              "docs": undefined,
              "name": "SUR",
              "value": "SUR",
            },
            {
              "docs": undefined,
              "name": "ESP",
              "value": "ESP",
            },
            {
              "docs": undefined,
              "name": "ESA",
              "value": "ESA",
            },
            {
              "docs": undefined,
              "name": "ESB",
              "value": "ESB",
            },
            {
              "docs": undefined,
              "name": "XDR",
              "value": "XDR",
            },
            {
              "docs": undefined,
              "name": "LKR",
              "value": "LKR",
            },
            {
              "docs": undefined,
              "name": "SHP",
              "value": "SHP",
            },
            {
              "docs": undefined,
              "name": "XSU",
              "value": "XSU",
            },
            {
              "docs": undefined,
              "name": "SDD",
              "value": "SDD",
            },
            {
              "docs": undefined,
              "name": "SDG",
              "value": "SDG",
            },
            {
              "docs": undefined,
              "name": "SDP",
              "value": "SDP",
            },
            {
              "docs": undefined,
              "name": "SRD",
              "value": "SRD",
            },
            {
              "docs": undefined,
              "name": "SRG",
              "value": "SRG",
            },
            {
              "docs": undefined,
              "name": "SZL",
              "value": "SZL",
            },
            {
              "docs": undefined,
              "name": "SEK",
              "value": "SEK",
            },
            {
              "docs": undefined,
              "name": "CHF",
              "value": "CHF",
            },
            {
              "docs": undefined,
              "name": "SYP",
              "value": "SYP",
            },
            {
              "docs": undefined,
              "name": "STN",
              "value": "STN",
            },
            {
              "docs": undefined,
              "name": "STD",
              "value": "STD",
            },
            {
              "docs": undefined,
              "name": "TVD",
              "value": "TVD",
            },
            {
              "docs": undefined,
              "name": "TJR",
              "value": "TJR",
            },
            {
              "docs": undefined,
              "name": "TJS",
              "value": "TJS",
            },
            {
              "docs": undefined,
              "name": "TZS",
              "value": "TZS",
            },
            {
              "docs": undefined,
              "name": "XTS",
              "value": "XTS",
            },
            {
              "docs": undefined,
              "name": "THB",
              "value": "THB",
            },
            {
              "docs": undefined,
              "name": "XXX",
              "value": "XXX",
            },
            {
              "docs": undefined,
              "name": "TPE",
              "value": "TPE",
            },
            {
              "docs": undefined,
              "name": "TOP",
              "value": "TOP",
            },
            {
              "docs": undefined,
              "name": "TTD",
              "value": "TTD",
            },
            {
              "docs": undefined,
              "name": "TND",
              "value": "TND",
            },
            {
              "docs": undefined,
              "name": "TRY",
              "value": "TRY",
            },
            {
              "docs": undefined,
              "name": "TRL",
              "value": "TRL",
            },
            {
              "docs": undefined,
              "name": "TMT",
              "value": "TMT",
            },
            {
              "docs": undefined,
              "name": "TMM",
              "value": "TMM",
            },
            {
              "docs": undefined,
              "name": "USD",
              "value": "USD",
            },
            {
              "docs": undefined,
              "name": "USN",
              "value": "USN",
            },
            {
              "docs": undefined,
              "name": "USS",
              "value": "USS",
            },
            {
              "docs": undefined,
              "name": "UGX",
              "value": "UGX",
            },
            {
              "docs": undefined,
              "name": "UGS",
              "value": "UGS",
            },
            {
              "docs": undefined,
              "name": "UAH",
              "value": "UAH",
            },
            {
              "docs": undefined,
              "name": "UAK",
              "value": "UAK",
            },
            {
              "docs": undefined,
              "name": "AED",
              "value": "AED",
            },
            {
              "docs": undefined,
              "name": "UYW",
              "value": "UYW",
            },
            {
              "docs": undefined,
              "name": "UYU",
              "value": "UYU",
            },
            {
              "docs": undefined,
              "name": "UYP",
              "value": "UYP",
            },
            {
              "docs": undefined,
              "name": "UYI",
              "value": "UYI",
            },
            {
              "docs": undefined,
              "name": "UZS",
              "value": "UZS",
            },
            {
              "docs": undefined,
              "name": "VUV",
              "value": "VUV",
            },
            {
              "docs": undefined,
              "name": "VES",
              "value": "VES",
            },
            {
              "docs": undefined,
              "name": "VEB",
              "value": "VEB",
            },
            {
              "docs": undefined,
              "name": "VEF",
              "value": "VEF",
            },
            {
              "docs": undefined,
              "name": "VND",
              "value": "VND",
            },
            {
              "docs": undefined,
              "name": "VNN",
              "value": "VNN",
            },
            {
              "docs": undefined,
              "name": "CHE",
              "value": "CHE",
            },
            {
              "docs": undefined,
              "name": "CHW",
              "value": "CHW",
            },
            {
              "docs": undefined,
              "name": "XOF",
              "value": "XOF",
            },
            {
              "docs": undefined,
              "name": "YDD",
              "value": "YDD",
            },
            {
              "docs": undefined,
              "name": "YER",
              "value": "YER",
            },
            {
              "docs": undefined,
              "name": "YUN",
              "value": "YUN",
            },
            {
              "docs": undefined,
              "name": "YUD",
              "value": "YUD",
            },
            {
              "docs": undefined,
              "name": "YUM",
              "value": "YUM",
            },
            {
              "docs": undefined,
              "name": "YUR",
              "value": "YUR",
            },
            {
              "docs": undefined,
              "name": "ZWN",
              "value": "ZWN",
            },
            {
              "docs": undefined,
              "name": "ZRN",
              "value": "ZRN",
            },
            {
              "docs": undefined,
              "name": "ZRZ",
              "value": "ZRZ",
            },
            {
              "docs": undefined,
              "name": "ZMW",
              "value": "ZMW",
            },
            {
              "docs": undefined,
              "name": "ZMK",
              "value": "ZMK",
            },
            {
              "docs": undefined,
              "name": "ZWD",
              "value": "ZWD",
            },
            {
              "docs": undefined,
              "name": "ZWR",
              "value": "ZWR",
            },
            {
              "docs": undefined,
              "name": "ZWL",
              "value": "ZWL",
            },
          ],
        },
        "PayFrequencyEnum": {
          "docs": "* \`WEEKLY\` - WEEKLY
* \`BIWEEKLY\` - BIWEEKLY
* \`MONTHLY\` - MONTHLY
* \`QUARTERLY\` - QUARTERLY
* \`SEMIANNUALLY\` - SEMIANNUALLY
* \`ANNUALLY\` - ANNUALLY
* \`THIRTEEN-MONTHLY\` - THIRTEEN-MONTHLY
* \`PRO_RATA\` - PRO_RATA
* \`SEMIMONTHLY\` - SEMIMONTHLY",
          "enum": [
            {
              "docs": undefined,
              "name": "WEEKLY",
              "value": "WEEKLY",
            },
            {
              "docs": undefined,
              "name": "BIWEEKLY",
              "value": "BIWEEKLY",
            },
            {
              "docs": undefined,
              "name": "MONTHLY",
              "value": "MONTHLY",
            },
            {
              "docs": undefined,
              "name": "QUARTERLY",
              "value": "QUARTERLY",
            },
            {
              "docs": undefined,
              "name": "SEMIANNUALLY",
              "value": "SEMIANNUALLY",
            },
            {
              "docs": undefined,
              "name": "ANNUALLY",
              "value": "ANNUALLY",
            },
            {
              "docs": undefined,
              "name": "ThirteenMonthly",
              "value": "THIRTEEN-MONTHLY",
            },
            {
              "docs": undefined,
              "name": "PRO_RATA",
              "value": "PRO_RATA",
            },
            {
              "docs": undefined,
              "name": "SEMIMONTHLY",
              "value": "SEMIMONTHLY",
            },
          ],
        },
        "PayGroup": {
          "docs": "# The PayGroup Object
### Description
The \`PayGroup\` object is used to represent a subset of employees that are put together for payroll processing purposes.

### Usage Example
Fetch from the \`LIST PayGroup\` endpoint and filter by \`ID\` to show all pay group information.",
          "properties": {
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "pay_group_name": {
              "docs": "The pay group name.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
          },
        },
        "PayPeriodEnum": {
          "docs": "* \`HOUR\` - HOUR
* \`DAY\` - DAY
* \`WEEK\` - WEEK
* \`EVERY_TWO_WEEKS\` - EVERY_TWO_WEEKS
* \`SEMIMONTHLY\` - SEMIMONTHLY
* \`MONTH\` - MONTH
* \`QUARTER\` - QUARTER
* \`EVERY_SIX_MONTHS\` - EVERY_SIX_MONTHS
* \`YEAR\` - YEAR",
          "enum": [
            {
              "docs": undefined,
              "name": "HOUR",
              "value": "HOUR",
            },
            {
              "docs": undefined,
              "name": "DAY",
              "value": "DAY",
            },
            {
              "docs": undefined,
              "name": "WEEK",
              "value": "WEEK",
            },
            {
              "docs": undefined,
              "name": "EVERY_TWO_WEEKS",
              "value": "EVERY_TWO_WEEKS",
            },
            {
              "docs": undefined,
              "name": "SEMIMONTHLY",
              "value": "SEMIMONTHLY",
            },
            {
              "docs": undefined,
              "name": "MONTH",
              "value": "MONTH",
            },
            {
              "docs": undefined,
              "name": "QUARTER",
              "value": "QUARTER",
            },
            {
              "docs": undefined,
              "name": "EVERY_SIX_MONTHS",
              "value": "EVERY_SIX_MONTHS",
            },
            {
              "docs": undefined,
              "name": "YEAR",
              "value": "YEAR",
            },
          ],
        },
        "PayrollRun": {
          "docs": "# The PayrollRun Object
### Description
The \`PayrollRun\` object is used to represent a group of pay statements for a specific pay schedule.

### Usage Example
Fetch from the \`LIST PayrollRuns\` endpoint and filter by \`ID\` to show all payroll runs.",
          "properties": {
            "check_date": {
              "docs": "The day and time the payroll run was checked.",
              "type": "optional<string>",
            },
            "end_date": {
              "docs": "The day and time the payroll run ended.",
              "type": "optional<string>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
            "run_state": {
              "docs": "The state of the payroll run

* \`PAID\` - PAID
* \`DRAFT\` - DRAFT
* \`APPROVED\` - APPROVED
* \`FAILED\` - FAILED
* \`CLOSED\` - CLOSED",
              "type": "optional<RunStateEnum>",
            },
            "run_type": {
              "docs": "The type of the payroll run

* \`REGULAR\` - REGULAR
* \`OFF_CYCLE\` - OFF_CYCLE
* \`CORRECTION\` - CORRECTION
* \`TERMINATION\` - TERMINATION
* \`SIGN_ON_BONUS\` - SIGN_ON_BONUS",
              "type": "optional<RunTypeEnum>",
            },
            "start_date": {
              "docs": "The day and time the payroll run started.",
              "type": "optional<string>",
            },
          },
        },
        "PayrollRunsListRequestRemoteFields": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "run_state",
              "value": "run_state",
            },
            {
              "docs": undefined,
              "name": "RunStateRunType",
              "value": "run_state,run_type",
            },
            {
              "docs": undefined,
              "name": "run_type",
              "value": "run_type",
            },
          ],
        },
        "PayrollRunsListRequestRunType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "CORRECTION",
              "value": "CORRECTION",
            },
            {
              "docs": undefined,
              "name": "OFF_CYCLE",
              "value": "OFF_CYCLE",
            },
            {
              "docs": undefined,
              "name": "REGULAR",
              "value": "REGULAR",
            },
            {
              "docs": undefined,
              "name": "SIGN_ON_BONUS",
              "value": "SIGN_ON_BONUS",
            },
            {
              "docs": undefined,
              "name": "TERMINATION",
              "value": "TERMINATION",
            },
          ],
        },
        "PayrollRunsListRequestShowEnumOrigins": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "run_state",
              "value": "run_state",
            },
            {
              "docs": undefined,
              "name": "RunStateRunType",
              "value": "run_state,run_type",
            },
            {
              "docs": undefined,
              "name": "run_type",
              "value": "run_type",
            },
          ],
        },
        "PayrollRunsRetrieveRequestRemoteFields": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "run_state",
              "value": "run_state",
            },
            {
              "docs": undefined,
              "name": "RunStateRunType",
              "value": "run_state,run_type",
            },
            {
              "docs": undefined,
              "name": "run_type",
              "value": "run_type",
            },
          ],
        },
        "PayrollRunsRetrieveRequestShowEnumOrigins": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "run_state",
              "value": "run_state",
            },
            {
              "docs": undefined,
              "name": "RunStateRunType",
              "value": "run_state,run_type",
            },
            {
              "docs": undefined,
              "name": "run_type",
              "value": "run_type",
            },
          ],
        },
        "PolicyTypeEnum": {
          "docs": "* \`VACATION\` - VACATION
* \`SICK\` - SICK
* \`PERSONAL\` - PERSONAL
* \`JURY_DUTY\` - JURY_DUTY
* \`VOLUNTEER\` - VOLUNTEER
* \`BEREAVEMENT\` - BEREAVEMENT",
          "enum": [
            {
              "docs": undefined,
              "name": "VACATION",
              "value": "VACATION",
            },
            {
              "docs": undefined,
              "name": "SICK",
              "value": "SICK",
            },
            {
              "docs": undefined,
              "name": "PERSONAL",
              "value": "PERSONAL",
            },
            {
              "docs": undefined,
              "name": "JURY_DUTY",
              "value": "JURY_DUTY",
            },
            {
              "docs": undefined,
              "name": "VOLUNTEER",
              "value": "VOLUNTEER",
            },
            {
              "docs": undefined,
              "name": "BEREAVEMENT",
              "value": "BEREAVEMENT",
            },
          ],
        },
        "ReasonEnum": {
          "docs": "* \`GENERAL_CUSTOMER_REQUEST\` - GENERAL_CUSTOMER_REQUEST
* \`GDPR\` - GDPR
* \`OTHER\` - OTHER",
          "enum": [
            {
              "docs": undefined,
              "name": "GENERAL_CUSTOMER_REQUEST",
              "value": "GENERAL_CUSTOMER_REQUEST",
            },
            {
              "docs": undefined,
              "name": "GDPR",
              "value": "GDPR",
            },
            {
              "docs": undefined,
              "name": "OTHER",
              "value": "OTHER",
            },
          ],
        },
        "RemoteData": {
          "docs": undefined,
          "properties": {
            "data": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "path": {
              "docs": undefined,
              "type": "string",
            },
          },
        },
        "RemoteKey": {
          "docs": "# The RemoteKey Object
### Description
The \`RemoteKey\` object is used to represent a request for a new remote key.

### Usage Example
Post a \`GenerateRemoteKey\` to receive a new \`RemoteKey\`.",
          "properties": {
            "key": {
              "docs": undefined,
              "type": "string",
            },
            "name": {
              "docs": undefined,
              "type": "string",
            },
          },
        },
        "RemoteResponse": {
          "docs": "# The RemoteResponse Object
### Description
The \`RemoteResponse\` object is used to represent information returned from a third-party endpoint.

### Usage Example
View the \`RemoteResponse\` returned from your \`DataPassthrough\`.",
          "properties": {
            "headers": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "method": {
              "docs": undefined,
              "type": "string",
            },
            "path": {
              "docs": undefined,
              "type": "string",
            },
            "response": "unknown",
            "response_headers": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "response_type": {
              "docs": undefined,
              "type": "optional<ResponseTypeEnum>",
            },
            "status": {
              "docs": undefined,
              "type": "integer",
            },
          },
        },
        "RequestFormatEnum": {
          "docs": "* \`JSON\` - JSON
* \`XML\` - XML
* \`MULTIPART\` - MULTIPART",
          "enum": [
            {
              "docs": undefined,
              "name": "JSON",
              "value": "JSON",
            },
            {
              "docs": undefined,
              "name": "XML",
              "value": "XML",
            },
            {
              "docs": undefined,
              "name": "MULTIPART",
              "value": "MULTIPART",
            },
          ],
        },
        "RequestTypeEnum": {
          "docs": "* \`VACATION\` - VACATION
* \`SICK\` - SICK
* \`PERSONAL\` - PERSONAL
* \`JURY_DUTY\` - JURY_DUTY
* \`VOLUNTEER\` - VOLUNTEER
* \`BEREAVEMENT\` - BEREAVEMENT",
          "enum": [
            {
              "docs": undefined,
              "name": "VACATION",
              "value": "VACATION",
            },
            {
              "docs": undefined,
              "name": "SICK",
              "value": "SICK",
            },
            {
              "docs": undefined,
              "name": "PERSONAL",
              "value": "PERSONAL",
            },
            {
              "docs": undefined,
              "name": "JURY_DUTY",
              "value": "JURY_DUTY",
            },
            {
              "docs": undefined,
              "name": "VOLUNTEER",
              "value": "VOLUNTEER",
            },
            {
              "docs": undefined,
              "name": "BEREAVEMENT",
              "value": "BEREAVEMENT",
            },
          ],
        },
        "ResponseTypeEnum": {
          "docs": "* \`JSON\` - JSON
* \`BASE64_GZIP\` - BASE64_GZIP",
          "enum": [
            {
              "docs": undefined,
              "name": "JSON",
              "value": "JSON",
            },
            {
              "docs": undefined,
              "name": "BASE64_GZIP",
              "value": "BASE64_GZIP",
            },
          ],
        },
        "RunStateEnum": {
          "docs": "* \`PAID\` - PAID
* \`DRAFT\` - DRAFT
* \`APPROVED\` - APPROVED
* \`FAILED\` - FAILED
* \`CLOSED\` - CLOSED",
          "enum": [
            {
              "docs": undefined,
              "name": "PAID",
              "value": "PAID",
            },
            {
              "docs": undefined,
              "name": "DRAFT",
              "value": "DRAFT",
            },
            {
              "docs": undefined,
              "name": "APPROVED",
              "value": "APPROVED",
            },
            {
              "docs": undefined,
              "name": "FAILED",
              "value": "FAILED",
            },
            {
              "docs": undefined,
              "name": "CLOSED",
              "value": "CLOSED",
            },
          ],
        },
        "RunTypeEnum": {
          "docs": "* \`REGULAR\` - REGULAR
* \`OFF_CYCLE\` - OFF_CYCLE
* \`CORRECTION\` - CORRECTION
* \`TERMINATION\` - TERMINATION
* \`SIGN_ON_BONUS\` - SIGN_ON_BONUS",
          "enum": [
            {
              "docs": undefined,
              "name": "REGULAR",
              "value": "REGULAR",
            },
            {
              "docs": undefined,
              "name": "OFF_CYCLE",
              "value": "OFF_CYCLE",
            },
            {
              "docs": undefined,
              "name": "CORRECTION",
              "value": "CORRECTION",
            },
            {
              "docs": undefined,
              "name": "TERMINATION",
              "value": "TERMINATION",
            },
            {
              "docs": undefined,
              "name": "SIGN_ON_BONUS",
              "value": "SIGN_ON_BONUS",
            },
          ],
        },
        "SelectiveSyncConfigurationsUsageEnum": {
          "docs": "* \`IN_NEXT_SYNC\` - IN_NEXT_SYNC
* \`IN_LAST_SYNC\` - IN_LAST_SYNC",
          "enum": [
            {
              "docs": undefined,
              "name": "IN_NEXT_SYNC",
              "value": "IN_NEXT_SYNC",
            },
            {
              "docs": undefined,
              "name": "IN_LAST_SYNC",
              "value": "IN_LAST_SYNC",
            },
          ],
        },
        "SyncStatus": {
          "docs": "# The SyncStatus Object
### Description
The \`SyncStatus\` object is used to represent the syncing state of an account

### Usage Example
View the \`SyncStatus\` for an account to see how recently its models were synced.",
          "properties": {
            "is_initial_sync": {
              "docs": undefined,
              "type": "boolean",
            },
            "last_sync_start": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "model_id": {
              "docs": undefined,
              "type": "string",
            },
            "model_name": {
              "docs": undefined,
              "type": "string",
            },
            "next_sync_start": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "selective_sync_configurations_usage": {
              "docs": undefined,
              "type": "optional<SelectiveSyncConfigurationsUsageEnum>",
            },
            "status": {
              "docs": undefined,
              "type": "SyncStatusStatusEnum",
            },
          },
        },
        "SyncStatusStatusEnum": {
          "docs": "* \`SYNCING\` - SYNCING
* \`DONE\` - DONE
* \`FAILED\` - FAILED
* \`DISABLED\` - DISABLED
* \`PAUSED\` - PAUSED
* \`PARTIALLY_SYNCED\` - PARTIALLY_SYNCED",
          "enum": [
            {
              "docs": undefined,
              "name": "SYNCING",
              "value": "SYNCING",
            },
            {
              "docs": undefined,
              "name": "DONE",
              "value": "DONE",
            },
            {
              "docs": undefined,
              "name": "FAILED",
              "value": "FAILED",
            },
            {
              "docs": undefined,
              "name": "DISABLED",
              "value": "DISABLED",
            },
            {
              "docs": undefined,
              "name": "PAUSED",
              "value": "PAUSED",
            },
            {
              "docs": undefined,
              "name": "PARTIALLY_SYNCED",
              "value": "PARTIALLY_SYNCED",
            },
          ],
        },
        "Tax": {
          "docs": "# The Tax Object
### Description
The \`Tax\` object is used to represent an array of the tax deductions for a given employee's payroll run.

### Usage Example
Fetch from the \`LIST Taxes\` endpoint and filter by \`ID\` to show all taxes.",
          "properties": {
            "amount": {
              "docs": "The tax amount.",
              "type": "optional<double>",
            },
            "employee_payroll_run": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "employer_tax": {
              "docs": "Whether or not the employer is responsible for paying the tax.",
              "type": "optional<boolean>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "name": {
              "docs": "The tax's name.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
          },
        },
        "Team": {
          "docs": "# The Team Object
### Description
The \`Team\` object is used to represent a subdivision of the company, usually a department. Each employee will be grouped into one specific Team.

### Usage Example
If you're building a way to filter by \`Team\`, you'd hit the \`GET Teams\` endpoint to fetch the \`Teams\`, and then use the \`ID\` of the team your user selects to filter the \`GET Employees\` endpoint.",
          "properties": {
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "name": {
              "docs": "The team's name.",
              "type": "optional<string>",
            },
            "parent_team": {
              "docs": "The team's parent team.",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
          },
        },
        "TimeOff": {
          "docs": "# The TimeOff Object
### Description
The \`TimeOff\` object is used to represent all employees' Time Off entries.

### Usage Example
Fetch from the \`LIST TimeOffs\` endpoint and filter by \`ID\` to show all time off requests.",
          "properties": {
            "amount": {
              "docs": "The time off quantity measured by the prescribed “units”.",
              "type": "optional<double>",
            },
            "approver": {
              "docs": "The Merge ID of the employee with the ability to approve the time off request.",
              "type": "optional<string>",
            },
            "employee": {
              "docs": "The employee requesting time off.",
              "type": "optional<string>",
            },
            "employee_note": {
              "docs": "The employee note for this time off request.",
              "type": "optional<string>",
            },
            "end_time": {
              "docs": "The day and time of the end of the time requested off.",
              "type": "optional<string>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": undefined,
              "type": "optional<boolean>",
            },
            "request_type": {
              "docs": "The type of time off request.

* \`VACATION\` - VACATION
* \`SICK\` - SICK
* \`PERSONAL\` - PERSONAL
* \`JURY_DUTY\` - JURY_DUTY
* \`VOLUNTEER\` - VOLUNTEER
* \`BEREAVEMENT\` - BEREAVEMENT",
              "type": "optional<RequestTypeEnum>",
            },
            "start_time": {
              "docs": "The day and time of the start of the time requested off.",
              "type": "optional<string>",
            },
            "status": {
              "docs": "The status of this time off request.

* \`REQUESTED\` - REQUESTED
* \`APPROVED\` - APPROVED
* \`DECLINED\` - DECLINED
* \`CANCELLED\` - CANCELLED
* \`DELETED\` - DELETED",
              "type": "optional<TimeOffStatusEnum>",
            },
            "units": {
              "docs": "The measurement that the third-party integration uses to count time requested.

* \`HOURS\` - HOURS
* \`DAYS\` - DAYS",
              "type": "optional<UnitsEnum>",
            },
          },
        },
        "TimeOffBalance": {
          "docs": "# The TimeOffBalance Object
### Description
The \`TimeOffBalance\` object is used to represent current balances for an employee's Time Off plan.

### Usage Example
Fetch from the \`LIST TimeOffBalances\` endpoint and filter by \`ID\` to show all time off balances.",
          "properties": {
            "balance": {
              "docs": "The current remaining PTO balance, always measured in terms of hours.",
              "type": "optional<double>",
            },
            "employee": {
              "docs": "The employee the balance belongs to.",
              "type": "optional<string>",
            },
            "field_mappings": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "id": {
              "docs": undefined,
              "type": "optional<string>",
            },
            "modified_at": {
              "docs": "This is the datetime that this object was last updated by Merge",
              "type": "optional<string>",
            },
            "policy_type": {
              "docs": "The policy type of this time off balance.

* \`VACATION\` - VACATION
* \`SICK\` - SICK
* \`PERSONAL\` - PERSONAL
* \`JURY_DUTY\` - JURY_DUTY
* \`VOLUNTEER\` - VOLUNTEER
* \`BEREAVEMENT\` - BEREAVEMENT",
              "type": "optional<PolicyTypeEnum>",
            },
            "remote_data": {
              "docs": undefined,
              "type": "optional<list<RemoteData>>",
            },
            "remote_id": {
              "docs": "The third-party API ID of the matching object.",
              "type": "optional<string>",
            },
            "remote_was_deleted": {
              "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
              "type": "optional<boolean>",
            },
            "used": {
              "docs": "The amount of PTO used in terms of hours.",
              "type": "optional<double>",
            },
          },
        },
        "TimeOffBalancesListRequestPolicyType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "BEREAVEMENT",
              "value": "BEREAVEMENT",
            },
            {
              "docs": undefined,
              "name": "JURY_DUTY",
              "value": "JURY_DUTY",
            },
            {
              "docs": undefined,
              "name": "PERSONAL",
              "value": "PERSONAL",
            },
            {
              "docs": undefined,
              "name": "SICK",
              "value": "SICK",
            },
            {
              "docs": undefined,
              "name": "VACATION",
              "value": "VACATION",
            },
            {
              "docs": undefined,
              "name": "VOLUNTEER",
              "value": "VOLUNTEER",
            },
          ],
        },
        "TimeOffListRequestExpand": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "approver",
              "value": "approver",
            },
            {
              "docs": undefined,
              "name": "employee",
              "value": "employee",
            },
            {
              "docs": undefined,
              "name": "EmployeeApprover",
              "value": "employee,approver",
            },
          ],
        },
        "TimeOffListRequestRemoteFields": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "request_type",
              "value": "request_type",
            },
            {
              "docs": undefined,
              "name": "RequestTypeStatus",
              "value": "request_type,status",
            },
            {
              "docs": undefined,
              "name": "RequestTypeStatusUnits",
              "value": "request_type,status,units",
            },
            {
              "docs": undefined,
              "name": "RequestTypeUnits",
              "value": "request_type,units",
            },
            {
              "docs": undefined,
              "name": "status",
              "value": "status",
            },
            {
              "docs": undefined,
              "name": "StatusUnits",
              "value": "status,units",
            },
            {
              "docs": undefined,
              "name": "units",
              "value": "units",
            },
          ],
        },
        "TimeOffListRequestRequestType": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "BEREAVEMENT",
              "value": "BEREAVEMENT",
            },
            {
              "docs": undefined,
              "name": "JURY_DUTY",
              "value": "JURY_DUTY",
            },
            {
              "docs": undefined,
              "name": "PERSONAL",
              "value": "PERSONAL",
            },
            {
              "docs": undefined,
              "name": "SICK",
              "value": "SICK",
            },
            {
              "docs": undefined,
              "name": "VACATION",
              "value": "VACATION",
            },
            {
              "docs": undefined,
              "name": "VOLUNTEER",
              "value": "VOLUNTEER",
            },
          ],
        },
        "TimeOffListRequestShowEnumOrigins": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "request_type",
              "value": "request_type",
            },
            {
              "docs": undefined,
              "name": "RequestTypeStatus",
              "value": "request_type,status",
            },
            {
              "docs": undefined,
              "name": "RequestTypeStatusUnits",
              "value": "request_type,status,units",
            },
            {
              "docs": undefined,
              "name": "RequestTypeUnits",
              "value": "request_type,units",
            },
            {
              "docs": undefined,
              "name": "status",
              "value": "status",
            },
            {
              "docs": undefined,
              "name": "StatusUnits",
              "value": "status,units",
            },
            {
              "docs": undefined,
              "name": "units",
              "value": "units",
            },
          ],
        },
        "TimeOffListRequestStatus": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "APPROVED",
              "value": "APPROVED",
            },
            {
              "docs": undefined,
              "name": "CANCELLED",
              "value": "CANCELLED",
            },
            {
              "docs": undefined,
              "name": "DECLINED",
              "value": "DECLINED",
            },
            {
              "docs": undefined,
              "name": "DELETED",
              "value": "DELETED",
            },
            {
              "docs": undefined,
              "name": "REQUESTED",
              "value": "REQUESTED",
            },
          ],
        },
        "TimeOffRequest": {
          "docs": "# The TimeOff Object
### Description
The \`TimeOff\` object is used to represent all employees' Time Off entries.

### Usage Example
Fetch from the \`LIST TimeOffs\` endpoint and filter by \`ID\` to show all time off requests.",
          "properties": {
            "amount": {
              "docs": "The time off quantity measured by the prescribed “units”.",
              "type": "optional<double>",
            },
            "approver": {
              "docs": "The Merge ID of the employee with the ability to approve the time off request.",
              "type": "optional<string>",
            },
            "employee": {
              "docs": "The employee requesting time off.",
              "type": "optional<string>",
            },
            "employee_note": {
              "docs": "The employee note for this time off request.",
              "type": "optional<string>",
            },
            "end_time": {
              "docs": "The day and time of the end of the time requested off.",
              "type": "optional<string>",
            },
            "integration_params": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "linked_account_params": {
              "docs": undefined,
              "type": "optional<map<string, unknown>>",
            },
            "request_type": {
              "docs": "The type of time off request.

* \`VACATION\` - VACATION
* \`SICK\` - SICK
* \`PERSONAL\` - PERSONAL
* \`JURY_DUTY\` - JURY_DUTY
* \`VOLUNTEER\` - VOLUNTEER
* \`BEREAVEMENT\` - BEREAVEMENT",
              "type": "optional<RequestTypeEnum>",
            },
            "start_time": {
              "docs": "The day and time of the start of the time requested off.",
              "type": "optional<string>",
            },
            "status": {
              "docs": "The status of this time off request.

* \`REQUESTED\` - REQUESTED
* \`APPROVED\` - APPROVED
* \`DECLINED\` - DECLINED
* \`CANCELLED\` - CANCELLED
* \`DELETED\` - DELETED",
              "type": "optional<TimeOffStatusEnum>",
            },
            "units": {
              "docs": "The measurement that the third-party integration uses to count time requested.

* \`HOURS\` - HOURS
* \`DAYS\` - DAYS",
              "type": "optional<UnitsEnum>",
            },
          },
        },
        "TimeOffResponse": {
          "docs": undefined,
          "properties": {
            "errors": {
              "docs": undefined,
              "type": "list<ErrorValidationProblem>",
            },
            "logs": {
              "docs": undefined,
              "type": "optional<list<DebugModeLog>>",
            },
            "model": {
              "docs": undefined,
              "type": "TimeOff",
            },
            "warnings": {
              "docs": undefined,
              "type": "list<WarningValidationProblem>",
            },
          },
        },
        "TimeOffRetrieveRequestExpand": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "approver",
              "value": "approver",
            },
            {
              "docs": undefined,
              "name": "employee",
              "value": "employee",
            },
            {
              "docs": undefined,
              "name": "EmployeeApprover",
              "value": "employee,approver",
            },
          ],
        },
        "TimeOffRetrieveRequestRemoteFields": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "request_type",
              "value": "request_type",
            },
            {
              "docs": undefined,
              "name": "RequestTypeStatus",
              "value": "request_type,status",
            },
            {
              "docs": undefined,
              "name": "RequestTypeStatusUnits",
              "value": "request_type,status,units",
            },
            {
              "docs": undefined,
              "name": "RequestTypeUnits",
              "value": "request_type,units",
            },
            {
              "docs": undefined,
              "name": "status",
              "value": "status",
            },
            {
              "docs": undefined,
              "name": "StatusUnits",
              "value": "status,units",
            },
            {
              "docs": undefined,
              "name": "units",
              "value": "units",
            },
          ],
        },
        "TimeOffRetrieveRequestShowEnumOrigins": {
          "docs": undefined,
          "enum": [
            {
              "docs": undefined,
              "name": "request_type",
              "value": "request_type",
            },
            {
              "docs": undefined,
              "name": "RequestTypeStatus",
              "value": "request_type,status",
            },
            {
              "docs": undefined,
              "name": "RequestTypeStatusUnits",
              "value": "request_type,status,units",
            },
            {
              "docs": undefined,
              "name": "RequestTypeUnits",
              "value": "request_type,units",
            },
            {
              "docs": undefined,
              "name": "status",
              "value": "status",
            },
            {
              "docs": undefined,
              "name": "StatusUnits",
              "value": "status,units",
            },
            {
              "docs": undefined,
              "name": "units",
              "value": "units",
            },
          ],
        },
        "TimeOffStatusEnum": {
          "docs": "* \`REQUESTED\` - REQUESTED
* \`APPROVED\` - APPROVED
* \`DECLINED\` - DECLINED
* \`CANCELLED\` - CANCELLED
* \`DELETED\` - DELETED",
          "enum": [
            {
              "docs": undefined,
              "name": "REQUESTED",
              "value": "REQUESTED",
            },
            {
              "docs": undefined,
              "name": "APPROVED",
              "value": "APPROVED",
            },
            {
              "docs": undefined,
              "name": "DECLINED",
              "value": "DECLINED",
            },
            {
              "docs": undefined,
              "name": "CANCELLED",
              "value": "CANCELLED",
            },
            {
              "docs": undefined,
              "name": "DELETED",
              "value": "DELETED",
            },
          ],
        },
        "UnitsEnum": {
          "docs": "* \`HOURS\` - HOURS
* \`DAYS\` - DAYS",
          "enum": [
            {
              "docs": undefined,
              "name": "HOURS",
              "value": "HOURS",
            },
            {
              "docs": undefined,
              "name": "DAYS",
              "value": "DAYS",
            },
          ],
        },
        "ValidationProblemSource": {
          "docs": undefined,
          "properties": {
            "pointer": {
              "docs": undefined,
              "type": "string",
            },
          },
        },
        "WarningValidationProblem": {
          "docs": undefined,
          "properties": {
            "detail": {
              "docs": undefined,
              "type": "string",
            },
            "problem_type": {
              "docs": undefined,
              "type": "string",
            },
            "source": {
              "docs": undefined,
              "type": "optional<ValidationProblemSource>",
            },
            "title": {
              "docs": undefined,
              "type": "string",
            },
          },
        },
        "WebhookReceiver": {
          "docs": undefined,
          "properties": {
            "event": {
              "docs": undefined,
              "type": "string",
            },
            "is_active": {
              "docs": undefined,
              "type": "boolean",
            },
            "key": {
              "docs": undefined,
              "type": "optional<string>",
            },
          },
        },
      },
    },
    "accountDetails.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "retrieve": {
            "auth": true,
            "docs": "Get details for a linked account.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/account-details",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "AccountDetailsRetrieveRequest",
            },
            "response": {
              "docs": "",
              "type": "root.AccountDetails",
            },
          },
        },
      },
    },
    "accountToken.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "retrieve": {
            "auth": true,
            "docs": "Returns the account token for the end user with the provided public token.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/account-token/{public_token}",
            "path-parameters": {
              "public_token": {
                "docs": undefined,
                "type": "string",
              },
            },
            "response": {
              "docs": "",
              "type": "root.AccountToken",
            },
          },
        },
      },
    },
    "availableActions.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "retrieve": {
            "auth": true,
            "docs": "Returns a list of models and actions available for an account.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/available-actions",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "AvailableActionsRetrieveRequest",
            },
            "response": {
              "docs": "",
              "type": "root.AvailableActions",
            },
          },
        },
      },
    },
    "bankInfo.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`BankInfo\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/bank-info",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "BankInfoListRequest",
              "query-parameters": {
                "account_type": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return BankInfo's with this account type. Options: ('SAVINGS', 'CHECKING')

* \`SAVINGS\` - SAVINGS
* \`CHECKING\` - CHECKING",
                  "type": "optional<root.BankInfoListRequestAccountType>",
                },
                "bank_name": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return BankInfo's with this bank name.",
                  "type": "optional<string>",
                },
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "employee_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return bank accounts for this employee.",
                  "type": "optional<string>",
                },
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<literal<"employee">>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "order_by": {
                  "allow-multiple": undefined,
                  "docs": "Overrides the default ordering for this endpoint.",
                  "type": "optional<root.BankInfoListRequestOrderBy>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<literal<"account_type">>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<literal<"account_type">>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedBankInfoList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`BankInfo\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/bank-info/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "BankInfoRetrieveRequest",
              "query-parameters": {
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<literal<"employee">>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<literal<"account_type">>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<literal<"account_type">>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.BankInfo",
            },
          },
        },
      },
    },
    "benefits.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`Benefit\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/benefits",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "BenefitsListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "employee_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will return the benefits associated with the employee.",
                  "type": "optional<string>",
                },
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<literal<"employee">>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedBenefitList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`Benefit\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/benefits/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "BenefitsRetrieveRequest",
              "query-parameters": {
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<literal<"employee">>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.Benefit",
            },
          },
        },
      },
    },
    "companies.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`Company\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/companies",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "CompaniesListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedCompanyList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`Company\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/companies/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "CompaniesRetrieveRequest",
              "query-parameters": {
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.Company",
            },
          },
        },
      },
    },
    "deleteAccount.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "docs": "Delete a linked account.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/delete-account",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "DeleteAccountCreateRequest",
            },
          },
        },
      },
    },
    "employeePayrollRuns.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`EmployeePayrollRun\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/employee-payroll-runs",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "EmployeePayrollRunsListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "employee_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employee payroll runs for this employee.",
                  "type": "optional<string>",
                },
                "ended_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employee payroll runs ended after this datetime.",
                  "type": "optional<string>",
                },
                "ended_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employee payroll runs ended before this datetime.",
                  "type": "optional<string>",
                },
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<root.EmployeePayrollRunsListRequestExpand>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "payroll_run_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employee payroll runs for this employee.",
                  "type": "optional<string>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
                "started_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employee payroll runs started after this datetime.",
                  "type": "optional<string>",
                },
                "started_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employee payroll runs started before this datetime.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedEmployeePayrollRunList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns an \`EmployeePayrollRun\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/employee-payroll-runs/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "EmployeePayrollRunsRetrieveRequest",
              "query-parameters": {
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<root.EmployeePayrollRunsRetrieveRequestExpand>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.EmployeePayrollRun",
            },
          },
        },
      },
    },
    "employees.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "docs": "Creates an \`Employee\` object with the given values.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/employees",
            "request": {
              "body": {
                "properties": {
                  "model": {
                    "docs": undefined,
                    "type": "root.EmployeeRequest",
                  },
                },
              },
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "EmployeeEndpointRequest",
              "query-parameters": {
                "is_debug_mode": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include debug fields (such as log file links) in the response.",
                  "type": "optional<boolean>",
                },
                "run_async": {
                  "allow-multiple": undefined,
                  "docs": "Whether or not third-party updates should be run asynchronously.",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.EmployeeResponse",
            },
          },
          "ignoreCreate": {
            "auth": true,
            "docs": "Ignores a specific row based on the \`model_id\` in the url. These records will have their properties set to null, and will not be updated in future syncs. The "reason" and "message" fields in the request body will be stored for audit purposes.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/employees/ignore/{model_id}",
            "path-parameters": {
              "model_id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "body": {
                "properties": {
                  "message": {
                    "docs": "<span style="white-space: nowrap">\`non-empty\`</span> <span style="white-space: nowrap">\`<= 256 characters\`</span>",
                    "type": "string",
                  },
                  "reason": {
                    "docs": undefined,
                    "type": "root.ReasonEnum",
                  },
                },
              },
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "IgnoreCommonModelRequest",
              "query-parameters": undefined,
            },
          },
          "list": {
            "auth": true,
            "docs": "Returns a list of \`Employee\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/employees",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "EmployeesListRequest",
              "query-parameters": {
                "company_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees for this company.",
                  "type": "optional<string>",
                },
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "display_full_name": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees with this display name.",
                  "type": "optional<string>",
                },
                "employment_status": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees with this employment status.

* \`ACTIVE\` - ACTIVE
* \`PENDING\` - PENDING
* \`INACTIVE\` - INACTIVE",
                  "type": "optional<root.EmployeesListRequestEmploymentStatus>",
                },
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<root.EmployeesListRequestExpand>",
                },
                "first_name": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees with this first name.",
                  "type": "optional<string>",
                },
                "groups": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees matching the group ids; multiple groups can be separated by commas.",
                  "type": "optional<string>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "include_sensitive_fields": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include sensitive fields (such as social security numbers) in the response.",
                  "type": "optional<boolean>",
                },
                "last_name": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees with this last name.",
                  "type": "optional<string>",
                },
                "manager_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees for this manager.",
                  "type": "optional<string>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "pay_group_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees for this pay group",
                  "type": "optional<string>",
                },
                "personal_email": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return Employees with this personal email",
                  "type": "optional<string>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<root.EmployeesListRequestRemoteFields>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<root.EmployeesListRequestShowEnumOrigins>",
                },
                "started_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees that started after this datetime.",
                  "type": "optional<string>",
                },
                "started_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees that started before this datetime.",
                  "type": "optional<string>",
                },
                "team_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees for this team.",
                  "type": "optional<string>",
                },
                "terminated_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees that were terminated after this datetime.",
                  "type": "optional<string>",
                },
                "terminated_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees that were terminated before this datetime.",
                  "type": "optional<string>",
                },
                "work_email": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return Employees with this work email",
                  "type": "optional<string>",
                },
                "work_location_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employees for this location.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedEmployeeList",
            },
          },
          "metaPostRetrieve": {
            "auth": true,
            "docs": "Returns metadata for \`Employee\` POSTs.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/employees/meta/post",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "EmployeesMetaPostRetrieveRequest",
            },
            "response": {
              "docs": "",
              "type": "root.MetaResponse",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns an \`Employee\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/employees/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "EmployeesRetrieveRequest",
              "query-parameters": {
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<root.EmployeesRetrieveRequestExpand>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "include_sensitive_fields": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include sensitive fields (such as social security numbers) in the response.",
                  "type": "optional<boolean>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<root.EmployeesRetrieveRequestRemoteFields>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<root.EmployeesRetrieveRequestShowEnumOrigins>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.Employee",
            },
          },
        },
      },
    },
    "employments.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`Employment\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/employments",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "EmploymentsListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "employee_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return employments for this employee.",
                  "type": "optional<string>",
                },
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<root.EmploymentsListRequestExpand>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "order_by": {
                  "allow-multiple": undefined,
                  "docs": "Overrides the default ordering for this endpoint.",
                  "type": "optional<root.EmploymentsListRequestOrderBy>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<root.EmploymentsListRequestRemoteFields>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<root.EmploymentsListRequestShowEnumOrigins>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedEmploymentList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns an \`Employment\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/employments/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "EmploymentsRetrieveRequest",
              "query-parameters": {
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<root.EmploymentsRetrieveRequestExpand>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<root.EmploymentsRetrieveRequestRemoteFields>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<root.EmploymentsRetrieveRequestShowEnumOrigins>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.Employment",
            },
          },
        },
      },
    },
    "forceResync.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "sync_status_resync_create": {
            "auth": true,
            "docs": "Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Core, Professional, or Enterprise plans. Doing so will consume a sync credit for the relevant linked account.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/sync-status/resync",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "SyncStatusResyncCreateRequest",
            },
            "response": {
              "docs": "",
              "type": "list<root.SyncStatus>",
            },
          },
        },
      },
    },
    "generateKey.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "docs": "Create a remote key.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/generate-key",
            "request": {
              "body": {
                "properties": {
                  "name": {
                    "docs": "<span style="white-space: nowrap">\`non-empty\`</span>",
                    "type": "string",
                  },
                },
              },
              "headers": undefined,
              "name": "GenerateRemoteKeyRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "",
              "type": "root.RemoteKey",
            },
          },
        },
      },
    },
    "groups.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`Group\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/groups",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "GroupsListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<literal<"type">>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<literal<"type">>",
                },
                "types": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return groups of these types. Multiple values can be separated by commas.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedGroupList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`Group\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/groups/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "GroupsRetrieveRequest",
              "query-parameters": {
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<literal<"type">>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<literal<"type">>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.Group",
            },
          },
        },
      },
    },
    "issues.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Gets issues.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/issues",
            "request": {
              "name": "IssuesListRequest",
              "query-parameters": {
                "account_token": {
                  "allow-multiple": undefined,
                  "docs": undefined,
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "end_date": {
                  "allow-multiple": undefined,
                  "docs": "If included, will only include issues whose most recent action occurred before this time",
                  "type": "optional<string>",
                },
                "end_user_organization_name": {
                  "allow-multiple": undefined,
                  "docs": undefined,
                  "type": "optional<string>",
                },
                "first_incident_time_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return issues whose first incident time was after this datetime.",
                  "type": "optional<string>",
                },
                "first_incident_time_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return issues whose first incident time was before this datetime.",
                  "type": "optional<string>",
                },
                "include_muted": {
                  "allow-multiple": undefined,
                  "docs": "If True, will include muted issues",
                  "type": "optional<string>",
                },
                "integration_name": {
                  "allow-multiple": undefined,
                  "docs": undefined,
                  "type": "optional<string>",
                },
                "last_incident_time_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return issues whose last incident time was after this datetime.",
                  "type": "optional<string>",
                },
                "last_incident_time_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return issues whose last incident time was before this datetime.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "start_date": {
                  "allow-multiple": undefined,
                  "docs": "If included, will only include issues whose most recent action occurred after this time",
                  "type": "optional<string>",
                },
                "status": {
                  "allow-multiple": undefined,
                  "docs": "Status of the issue. Options: ('ONGOING', 'RESOLVED')

* \`ONGOING\` - ONGOING
* \`RESOLVED\` - RESOLVED",
                  "type": "optional<root.IssuesListRequestStatus>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedIssueList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Get a specific issue.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/issues/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "response": {
              "docs": "",
              "type": "root.Issue",
            },
          },
        },
      },
    },
    "linkToken.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "docs": "Creates a link token to be used when linking a new end user.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/link-token",
            "request": {
              "body": {
                "properties": {
                  "categories": {
                    "docs": "The integration categories to show in Merge Link.",
                    "type": "list<root.CategoriesEnum>",
                  },
                  "common_models": {
                    "docs": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account.",
                    "type": "optional<list<root.CommonModelScopesBodyRequest>>",
                  },
                  "end_user_email_address": {
                    "docs": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent. <span style="white-space: nowrap">\`non-empty\`</span> <span style="white-space: nowrap">\`<= 100 characters\`</span> ",
                    "type": "string",
                  },
                  "end_user_organization_name": {
                    "docs": "Your end user's organization. <span style="white-space: nowrap">\`non-empty\`</span> <span style="white-space: nowrap">\`<= 100 characters\`</span> ",
                    "type": "string",
                  },
                  "end_user_origin_id": {
                    "docs": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers. <span style="white-space: nowrap">\`non-empty\`</span> <span style="white-space: nowrap">\`<= 100 characters\`</span> ",
                    "type": "string",
                  },
                  "integration": {
                    "docs": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://www.merge.dev/docs/basics/integration-metadata/.",
                    "type": "optional<string>",
                  },
                  "link_expiry_mins": {
                    "docs": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30.",
                    "type": "integer",
                  },
                  "should_create_magic_link_url": {
                    "docs": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "headers": undefined,
              "name": "EndUserDetailsRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "",
              "type": "root.LinkToken",
            },
          },
        },
      },
    },
    "linkedAccounts.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "List linked accounts for your organization.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/linked-accounts",
            "request": {
              "name": "LinkedAccountsListRequest",
              "query-parameters": {
                "category": {
                  "allow-multiple": undefined,
                  "docs": "Options: ('hris', 'ats', 'accounting', 'ticketing', 'crm', 'mktg', 'filestorage')

* \`hris\` - hris
* \`ats\` - ats
* \`accounting\` - accounting
* \`ticketing\` - ticketing
* \`crm\` - crm
* \`mktg\` - mktg
* \`filestorage\` - filestorage",
                  "type": "optional<root.LinkedAccountsListRequestCategory>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "end_user_email_address": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return linked accounts associated with the given email address.",
                  "type": "optional<string>",
                },
                "end_user_organization_name": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return linked accounts associated with the given organization name.",
                  "type": "optional<string>",
                },
                "end_user_origin_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return linked accounts associated with the given origin ID.",
                  "type": "optional<string>",
                },
                "end_user_origin_ids": {
                  "allow-multiple": undefined,
                  "docs": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once.",
                  "type": "optional<string>",
                },
                "id": {
                  "allow-multiple": undefined,
                  "docs": undefined,
                  "type": "optional<string>",
                },
                "ids": {
                  "allow-multiple": undefined,
                  "docs": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once.",
                  "type": "optional<string>",
                },
                "include_duplicates": {
                  "allow-multiple": undefined,
                  "docs": "If \`true\`, will include complete production duplicates of the account specified by the \`id\` query parameter in the response. \`id\` must be for a complete production linked account.",
                  "type": "optional<boolean>",
                },
                "integration_name": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return linked accounts associated with the given integration name.",
                  "type": "optional<string>",
                },
                "is_test_account": {
                  "allow-multiple": undefined,
                  "docs": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "status": {
                  "allow-multiple": undefined,
                  "docs": "Filter by status. Options: \`COMPLETE\`, \`INCOMPLETE\`, \`RELINK_NEEDED\`",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedAccountDetailsAndActionsList",
            },
          },
        },
      },
    },
    "locations.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`Location\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/locations",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "LocationsListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<literal<"location_type">>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<literal<"location_type">>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedLocationList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`Location\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/locations/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "LocationsRetrieveRequest",
              "query-parameters": {
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<literal<"location_type">>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<literal<"location_type">>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.Location",
            },
          },
        },
      },
    },
    "passthrough.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "docs": "Pull data from an endpoint not currently supported by Merge.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/passthrough",
            "request": {
              "body": {
                "properties": {
                  "base_url_override": {
                    "docs": "<span style="white-space: nowrap">\`non-empty\`</span>",
                    "type": "optional<string>",
                  },
                  "data": {
                    "docs": "<span style="white-space: nowrap">\`non-empty\`</span>",
                    "type": "optional<string>",
                  },
                  "headers": {
                    "docs": "The headers to use for the request (Merge will handle the account's authorization headers). \`Content-Type\` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
                    "type": "optional<map<string, unknown>>",
                  },
                  "method": {
                    "docs": undefined,
                    "type": "root.MethodEnum",
                  },
                  "multipart_form_data": {
                    "docs": "Pass an array of \`MultipartFormField\` objects in here instead of using the \`data\` param if \`request_format\` is set to \`MULTIPART\`.",
                    "type": "optional<list<root.MultipartFormFieldRequest>>",
                  },
                  "normalize_response": {
                    "docs": "Optional. If true, the response will always be an object of the form \`{"type": T, "value": ...}\` where \`T\` will be one of \`string, boolean, number, null, array, object\`.",
                    "type": "boolean",
                  },
                  "path": {
                    "docs": "<span style="white-space: nowrap">\`non-empty\`</span>",
                    "type": "string",
                  },
                  "request_format": {
                    "docs": undefined,
                    "type": "optional<root.RequestFormatEnum>",
                  },
                },
              },
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "DataPassthroughRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "",
              "type": "root.RemoteResponse",
            },
          },
        },
      },
    },
    "payGroups.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`PayGroup\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/pay-groups",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "PayGroupsListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedPayGroupList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`PayGroup\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/pay-groups/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "PayGroupsRetrieveRequest",
              "query-parameters": {
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PayGroup",
            },
          },
        },
      },
    },
    "payrollRuns.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`PayrollRun\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/payroll-runs",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "PayrollRunsListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "ended_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return payroll runs ended after this datetime.",
                  "type": "optional<string>",
                },
                "ended_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return payroll runs ended before this datetime.",
                  "type": "optional<string>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<root.PayrollRunsListRequestRemoteFields>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
                "run_type": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return PayrollRun's with this status. Options: ('REGULAR', 'OFF_CYCLE', 'CORRECTION', 'TERMINATION', 'SIGN_ON_BONUS')

* \`REGULAR\` - REGULAR
* \`OFF_CYCLE\` - OFF_CYCLE
* \`CORRECTION\` - CORRECTION
* \`TERMINATION\` - TERMINATION
* \`SIGN_ON_BONUS\` - SIGN_ON_BONUS",
                  "type": "optional<root.PayrollRunsListRequestRunType>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<root.PayrollRunsListRequestShowEnumOrigins>",
                },
                "started_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return payroll runs started after this datetime.",
                  "type": "optional<string>",
                },
                "started_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return payroll runs started before this datetime.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedPayrollRunList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`PayrollRun\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/payroll-runs/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "PayrollRunsRetrieveRequest",
              "query-parameters": {
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<root.PayrollRunsRetrieveRequestRemoteFields>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<root.PayrollRunsRetrieveRequestShowEnumOrigins>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PayrollRun",
            },
          },
        },
      },
    },
    "regenerateKey.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "docs": "Exchange remote keys.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/regenerate-key",
            "request": {
              "body": {
                "properties": {
                  "name": {
                    "docs": "<span style="white-space: nowrap">\`non-empty\`</span>",
                    "type": "string",
                  },
                },
              },
              "headers": undefined,
              "name": "RemoteKeyForRegenerationRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "",
              "type": "root.RemoteKey",
            },
          },
        },
      },
    },
    "selectiveSync.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "configurationsList": {
            "auth": true,
            "docs": "Get a linked account's selective syncs.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/selective-sync/configurations",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "SelectiveSyncConfigurationsListRequest",
            },
            "response": {
              "docs": "",
              "type": "list<root.LinkedAccountSelectiveSyncConfiguration>",
            },
          },
          "configurationsUpdate": {
            "auth": true,
            "docs": "Replace a linked account's selective syncs.",
            "errors": [],
            "method": "PUT",
            "path": "/api/hris/v1/selective-sync/configurations",
            "request": {
              "body": {
                "properties": {
                  "sync_configurations": {
                    "docs": "The selective syncs associated with a linked account.",
                    "type": "list<root.LinkedAccountSelectiveSyncConfigurationRequest>",
                  },
                },
              },
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "LinkedAccountSelectiveSyncConfigurationListRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "",
              "type": "list<root.LinkedAccountSelectiveSyncConfiguration>",
            },
          },
          "metaList": {
            "auth": true,
            "docs": "Get metadata for the conditions available to a linked account.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/selective-sync/meta",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "SelectiveSyncMetaListRequest",
              "query-parameters": {
                "common_model": {
                  "allow-multiple": undefined,
                  "docs": undefined,
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedConditionSchemaList",
            },
          },
        },
      },
    },
    "syncStatus.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Get syncing status. Possible values: \`DISABLED\`, \`DONE\`, \`FAILED\`, \`PARTIALLY_SYNCED\`, \`PAUSED\`, \`SYNCING\`",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/sync-status",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "SyncStatusListRequest",
              "query-parameters": {
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedSyncStatusList",
            },
          },
        },
      },
    },
    "teams.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`Team\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/teams",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "TeamsListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<literal<"parent_team">>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "parent_team_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return teams with this parent team.",
                  "type": "optional<string>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedTeamList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`Team\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/teams/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "TeamsRetrieveRequest",
              "query-parameters": {
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<literal<"parent_team">>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.Team",
            },
          },
        },
      },
    },
    "timeOff.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "docs": "Creates a \`TimeOff\` object with the given values.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/time-off",
            "request": {
              "body": {
                "properties": {
                  "model": {
                    "docs": undefined,
                    "type": "root.TimeOffRequest",
                  },
                },
              },
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "TimeOffEndpointRequest",
              "query-parameters": {
                "is_debug_mode": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include debug fields (such as log file links) in the response.",
                  "type": "optional<boolean>",
                },
                "run_async": {
                  "allow-multiple": undefined,
                  "docs": "Whether or not third-party updates should be run asynchronously.",
                  "type": "optional<boolean>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.TimeOffResponse",
            },
          },
          "list": {
            "auth": true,
            "docs": "Returns a list of \`TimeOff\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/time-off",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "TimeOffListRequest",
              "query-parameters": {
                "approver_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return time off for this approver.",
                  "type": "optional<string>",
                },
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "employee_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return time off for this employee.",
                  "type": "optional<string>",
                },
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<root.TimeOffListRequestExpand>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<root.TimeOffListRequestRemoteFields>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
                "request_type": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return TimeOff with this request type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')

* \`VACATION\` - VACATION
* \`SICK\` - SICK
* \`PERSONAL\` - PERSONAL
* \`JURY_DUTY\` - JURY_DUTY
* \`VOLUNTEER\` - VOLUNTEER
* \`BEREAVEMENT\` - BEREAVEMENT",
                  "type": "optional<root.TimeOffListRequestRequestType>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<root.TimeOffListRequestShowEnumOrigins>",
                },
                "status": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return TimeOff with this status. Options: ('REQUESTED', 'APPROVED', 'DECLINED', 'CANCELLED', 'DELETED')

* \`REQUESTED\` - REQUESTED
* \`APPROVED\` - APPROVED
* \`DECLINED\` - DECLINED
* \`CANCELLED\` - CANCELLED
* \`DELETED\` - DELETED",
                  "type": "optional<root.TimeOffListRequestStatus>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedTimeOffList",
            },
          },
          "metaPostRetrieve": {
            "auth": true,
            "docs": "Returns metadata for \`TimeOff\` POSTs.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/time-off/meta/post",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "TimeOffMetaPostRetrieveRequest",
            },
            "response": {
              "docs": "",
              "type": "root.MetaResponse",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`TimeOff\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/time-off/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "TimeOffRetrieveRequest",
              "query-parameters": {
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<root.TimeOffRetrieveRequestExpand>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<root.TimeOffRetrieveRequestRemoteFields>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<root.TimeOffRetrieveRequestShowEnumOrigins>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.TimeOff",
            },
          },
        },
      },
    },
    "timeOffBalances.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "list": {
            "auth": true,
            "docs": "Returns a list of \`TimeOffBalance\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/time-off-balances",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "TimeOffBalancesListRequest",
              "query-parameters": {
                "created_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created after this datetime.",
                  "type": "optional<string>",
                },
                "created_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return objects created before this datetime.",
                  "type": "optional<string>",
                },
                "cursor": {
                  "allow-multiple": undefined,
                  "docs": "The pagination cursor value.",
                  "type": "optional<string>",
                },
                "employee_id": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return time off balances for this employee.",
                  "type": "optional<string>",
                },
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<literal<"employee">>",
                },
                "include_deleted_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include data that was marked as deleted by third party webhooks.",
                  "type": "optional<boolean>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "modified_after": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge after this date time will be returned.",
                  "type": "optional<string>",
                },
                "modified_before": {
                  "allow-multiple": undefined,
                  "docs": "If provided, only objects synced by Merge before this date time will be returned.",
                  "type": "optional<string>",
                },
                "page_size": {
                  "allow-multiple": undefined,
                  "docs": "Number of results to return per page.",
                  "type": "optional<integer>",
                },
                "policy_type": {
                  "allow-multiple": undefined,
                  "docs": "If provided, will only return TimeOffBalance with this policy type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')

* \`VACATION\` - VACATION
* \`SICK\` - SICK
* \`PERSONAL\` - PERSONAL
* \`JURY_DUTY\` - JURY_DUTY
* \`VOLUNTEER\` - VOLUNTEER
* \`BEREAVEMENT\` - BEREAVEMENT",
                  "type": "optional<root.TimeOffBalancesListRequestPolicyType>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<literal<"policy_type">>",
                },
                "remote_id": {
                  "allow-multiple": undefined,
                  "docs": "The API provider's ID for the given object.",
                  "type": "optional<string>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<literal<"policy_type">>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.PaginatedTimeOffBalanceList",
            },
          },
          "retrieve": {
            "auth": true,
            "docs": "Returns a \`TimeOffBalance\` object with the given \`id\`.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/time-off-balances/{id}",
            "path-parameters": {
              "id": {
                "docs": undefined,
                "type": "string",
              },
            },
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "TimeOffBalancesRetrieveRequest",
              "query-parameters": {
                "expand": {
                  "allow-multiple": undefined,
                  "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                  "type": "optional<literal<"employee">>",
                },
                "include_remote_data": {
                  "allow-multiple": undefined,
                  "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
                  "type": "optional<boolean>",
                },
                "remote_fields": {
                  "allow-multiple": undefined,
                  "docs": "Deprecated. Use show_enum_origins.",
                  "type": "optional<literal<"policy_type">>",
                },
                "show_enum_origins": {
                  "allow-multiple": undefined,
                  "docs": "Which fields should be returned in non-normalized form.",
                  "type": "optional<literal<"policy_type">>",
                },
              },
            },
            "response": {
              "docs": "",
              "type": "root.TimeOffBalance",
            },
          },
        },
      },
    },
    "webhookReceivers.yml": {
      "imports": {
        "root": "__package__.yml",
      },
      "service": {
        "auth": false,
        "base-path": "",
        "endpoints": {
          "create": {
            "auth": true,
            "docs": "Creates a \`WebhookReceiver\` object with the given values.",
            "errors": [],
            "method": "POST",
            "path": "/api/hris/v1/webhook-receivers",
            "request": {
              "body": {
                "properties": {
                  "event": {
                    "docs": "<span style="white-space: nowrap">\`non-empty\`</span>",
                    "type": "string",
                  },
                  "is_active": {
                    "docs": undefined,
                    "type": "boolean",
                  },
                  "key": {
                    "docs": "<span style="white-space: nowrap">\`non-empty\`</span>",
                    "type": "string",
                  },
                },
              },
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "WebhookReceiverRequest",
              "query-parameters": undefined,
            },
            "response": {
              "docs": "",
              "type": "root.WebhookReceiver",
            },
          },
          "list": {
            "auth": true,
            "docs": "Returns a list of \`WebhookReceiver\` objects.",
            "errors": [],
            "method": "GET",
            "path": "/api/hris/v1/webhook-receivers",
            "request": {
              "headers": {
                "X-Account-Token": {
                  "docs": "Token identifying the end user.",
                  "name": "accountToken",
                  "type": "string",
                },
              },
              "name": "WebhookReceiversListRequest",
            },
            "response": {
              "docs": "",
              "type": "list<root.WebhookReceiver>",
            },
          },
        },
      },
    },
  },
  "rootApiFile": {
    "auth": "tokenAuth",
    "auth-schemes": {
      "tokenAuth": {
        "header": "Authorization",
        "name": "apiKey",
        "prefix": undefined,
        "type": "string",
      },
    },
    "default-environment": "Production",
    "display-name": "Merge HRIS API",
    "environments": {
      "Production": "https://api.merge.dev",
      "Sandbox": "https://api-sandbox.merge.dev",
    },
    "error-discrimination": {
      "strategy": "status-code",
    },
    "imports": {
      "root": "__package__.yml",
    },
    "name": "api",
  },
}
`;

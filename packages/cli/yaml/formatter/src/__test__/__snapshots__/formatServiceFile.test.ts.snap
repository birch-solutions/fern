// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`formatServiceFile headers/file-header-with-newline.yml 1`] = `
"# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

# i'm a file header

types:
  MovieId: string
"
`;

exports[`formatServiceFile headers/file-header-without-newline.yml 1`] = `
"# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

# i'm a file header

types:
  MovieId: string
"
`;

exports[`formatServiceFile lang-server/with-lang-server.yml 1`] = `
"# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  MyAlias: string
"
`;

exports[`formatServiceFile lang-server/without-lang-server.yml 1`] = `
"# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  MyAlias: string
"
`;

exports[`formatServiceFile lots-of-newlines.yml 1`] = `
"# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  MovieId: string

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale is one to five stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

services:
  http:
    MoviesService:
      auth: false
      base-path: /movies
      endpoints:
        # Here's an HTTP endpoint

        createMovie:
          docs: Add a movie to the database
          method: POST
          path: /create-movie
          request: CreateMovieRequest
          response: MovieId

        getMovie:
          method: GET
          path: /{movieId}
          path-parameters:
            movieId: MovieId
          response: Movie
          errors:
            - MovieDoesNotExistError

        deleteMovie:
          method: GET
          path: /{movieId}
          path-parameters:
            movieId: MovieId
          response: Movie
          errors:
            - MovieDoesNotExistError

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
"
`;

exports[`formatServiceFile no-newlines.yml 1`] = `
"# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  foo: foo.yml

types:
  MovieId: string

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale is one to five stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

services:
  http:
    MoviesService:
      auth: false
      base-path: /movies
      endpoints:
        # Here's an HTTP endpoint

        createMovie:
          docs: Add a movie to the database
          method: POST
          path: /create-movie
          request: CreateMovieRequest
          response: MovieId

        getMovie:
          method: GET
          path: /{movieId}
          path-parameters:
            movieId: MovieId
          response: Movie
          errors:
            - MovieDoesNotExistError

        deleteMovie:
          method: GET
          path: /{movieId}
          path-parameters:
            movieId: MovieId
          response: Movie
          errors:
            - MovieDoesNotExistError

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
"
`;

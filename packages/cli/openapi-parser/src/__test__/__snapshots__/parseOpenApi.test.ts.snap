// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser devrev simple 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "DevRev's REST API.",
      "endpoints": [
        {
          "description": "Gets the download URL for the artifact.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "artifacts-locate",
          "path": "/artifacts.locate",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "artifacts-locate-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "description": "Creates an artifact and generates an upload URL for its data.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "artifacts-prepare",
          "path": "/artifacts.prepare",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "artifacts-prepare-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "artifacts-prepare-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "description": "Creates a JWT corresponding to the requested token type for the
authenticated user.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-create",
          "path": "/auth-tokens.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Revokes the token that matches the given token ID issued under the
given Dev organization.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-delete",
          "path": "/auth-tokens.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Gets the token metadata corresponding to the given token ID under the
given Dev organization.
",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "auth-tokens-get",
          "path": "/auth-tokens.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "token_id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Gets the token metadata for all the tokens corresponding to the given
token type issued for a given subject.
",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "auth-tokens-list",
          "path": "/auth-tokens.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "subject",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Revokes all the tokens that matches the given token type created by the
authenticated user.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-self-delete",
          "path": "/auth-tokens.self.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-self-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Updates token metadata of a token issued under a given Dev
organization.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-update",
          "path": "/auth-tokens.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Creates a new enterprise authentication connection for a Dev
organization. This authentication connection will not be enabled by
default for the organization and the user will need to explicitly
enable this. Keep in mind that at a time, only one authentication
connection can be enabled for a Dev organization. At present, only 5
enterprise connections can be created by an organization.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-create",
          "path": "/dev-orgs.auth-connections.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Deletes an authentication connection. Only enterprise connections which
are explicitly set up for a Dev organization can be deleted. Default
connections can not be deleted using this method.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-delete",
          "path": "/dev-orgs.auth-connections.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Retrieves the details for an authentication connection.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "dev-org-auth-connections-get",
          "path": "/dev-orgs.auth-connections.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Lists all the authentication connections available for a Dev
organization. This list will include both social and enterprise
connections which are either available by default or are explicitly
created by the user.
",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "dev-org-auth-connections-list",
          "path": "/dev-orgs.auth-connections.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Enable or disable an authentication connection for a Dev organization.
Currently, only 1 authentication connection can be enabled at a time.
When a new authentication connection is enabled, the connection which
is currently enabled for the Dev organization is automatically
disabled.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-toggle",
          "path": "/dev-orgs.auth-connections.toggle",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-toggle-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Updates an authentication connection.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-update",
          "path": "/dev-orgs.auth-connections.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Lists users within your organization.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "dev-users-list",
          "path": "/dev-users.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "user-state",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-users-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "description": "Gets the authenticated user's information.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "dev-users-self",
          "path": "/dev-users.self",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-users-self-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "description": "Creates new [part](https://devrev.ai/docs/product/parts).",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "parts-create",
          "path": "/parts.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Deletes a [part](https://devrev.ai/docs/product/parts).",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "parts-delete",
          "path": "/parts.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "parts-get",
          "path": "/parts.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).
",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "parts-list",
          "path": "/parts.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "part-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Updates a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "parts-update",
          "path": "/parts.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Creates a Rev organization in the authenticated user's Dev
organization.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-create",
          "path": "/rev-orgs.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Deletes the Rev organization.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-delete",
          "path": "/rev-orgs.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Retrieves the Rev organization's information.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "rev-orgs-get",
          "path": "/rev-orgs.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Gets the list of Rev organizations' information belonging to the
authenticated user's Dev Organization which the user is also authorized
to access.
",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "rev-orgs-list",
          "path": "/rev-orgs.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "created_date.after",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "created_date.before",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "modified_date.after",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "modified_date.before",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Updates the Rev organization's information.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-update",
          "path": "/rev-orgs.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Creates a new tag, which is used to create associations between objects
and a logical concept denoted by the tag's name.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "tags-create",
          "path": "/tags.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Deletes a tag.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "tags-delete",
          "path": "/tags.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Gets a tag's information.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "tags-get",
          "path": "/tags.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Lists the available tags.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "tags-list",
          "path": "/tags.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Updates a tag's information.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "tags-update",
          "path": "/tags.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Creates a new entry on an object's timeline.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "timeline-entries-create",
          "path": "/timeline-entries.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "description": "Gets an entry on an object's timeline.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "timeline-entries-get",
          "path": "/timeline-entries.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "description": "Lists the timeline entries for an object.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "timeline-entries-list",
          "path": "/timeline-entries.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "object",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "description": "Updates an entry on an object's timeline.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "timeline-entries-update",
          "path": "/timeline-entries.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "description": "Creates a new webhook target.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-create",
          "path": "/webhooks.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Deletes the requested webhook.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-delete",
          "path": "/webhooks.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Gets the requested webhook's information.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "webhooks-get",
          "path": "/webhooks.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Lists the webhooks.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "webhooks-list",
          "path": "/webhooks.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Updates the requested webhook.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-update",
          "path": "/webhooks.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Creates new work ([issue](https://devrev.ai/docs/product/build),
[ticket](https://devrev.ai/docs/product/support)) item.
",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "works-create",
          "path": "/works.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Deletes a work item.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "works-delete",
          "path": "/works.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Exports a collection of work items.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "works-export",
          "path": "/works.export",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "first",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-export-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Gets a work item's information.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "works-get",
          "path": "/works.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Lists a collection of work items.",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "works-list",
          "path": "/works.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Updates a work item's information.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "works-update",
          "path": "/works.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
      ],
      "schemas": {
        "artifact-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "artifacts-locate-response": {
          "allOf": [],
          "description": "The response to getting an artifact's download URL.",
          "generatedName": "ArtifactsLocateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "expires_at",
              "schema": {
                "description": "The expiration timestamp of the URL.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The artifact's download URL.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-request": {
          "allOf": [],
          "description": "The request to prepare a URL to upload a file.",
          "generatedName": "ArtifactsPrepareRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "file_name",
              "schema": {
                "description": "The name of the file that's being uploaded.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response": {
          "allOf": [],
          "description": "The response to preparing a URL to upload a file.",
          "generatedName": "ArtifactsPrepareResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "form_data",
              "schema": {
                "description": "The POST policy form data.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "artifacts-prepare-response-form-data",
                  "type": "reference",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The generated artifact's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The URL that the file's data should be uploaded to.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response-form-data": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ArtifactsPrepareResponseFormData",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "key",
              "schema": {
                "description": "Key of the form field.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "Value corresponding to the key.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "atom-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "created_date",
              "schema": {
                "description": "Timestamp when the object was created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_id",
              "schema": {
                "description": "Human-readable object ID unique to the Dev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "modified_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "modified_date",
              "schema": {
                "description": "Timestamp when the object was last modified.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "atom-base-summary": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_id",
              "schema": {
                "description": "Human-readable object ID unique to the Dev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-connection": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "enabled",
                "schema": {
                  "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-connection-type",
                  "type": "reference",
                },
              },
            ],
            "description": "Connection object that specifies the configuration for an
authentication connection that is set up for a Dev organization.
",
            "discriminantProperty": "type",
            "generatedName": "AuthConnection",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "social": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-social",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "auth-connection-options-azure-ad": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an Azure AD
authentication connection.
",
          "generatedName": "AuthConnectionOptionsAzureAd",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "Client ID for the Azure authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client_secret",
              "schema": {
                "description": "Client secret for the Azure authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Domain URL of the Azure authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-google-apps": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a Google Apps
authentication connection.
",
          "generatedName": "AuthConnectionOptionsGoogleApps",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "Client ID for the Google Apps authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client_secret",
              "schema": {
                "description": "Client secret for the Google Apps authentication connection.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tenant_domain",
              "schema": {
                "description": "Tenant domain URL of the Google Apps authentication connection.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-oidc": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an OIDC
authentication connection.
",
          "generatedName": "AuthConnectionOptionsOidc",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "Client ID for the OIDC authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client_secret",
              "schema": {
                "description": "Client secret for the OIDC authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "issuer",
              "schema": {
                "description": "Issuer URL of the OIDC authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-saml": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a SAML
authentication connection.
",
          "generatedName": "AuthConnectionOptionsSaml",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "sign_in_endpoint",
              "schema": {
                "description": "Sign In endpoint for the SAML authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "signing_cert",
              "schema": {
                "description": "Signing certificate for the SAML authentication connection.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-social": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "auth-connection-toggle": {
          "description": undefined,
          "generatedName": "AuthConnectionToggle",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "disable",
            },
            {
              "name": undefined,
              "value": "enable",
            },
          ],
        },
        "auth-connection-type": {
          "description": "Defines the type for the authentication connection. The configuration
for each authentication connection will depend on the type value.
",
          "generatedName": "AuthConnectionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "google_apps",
            },
            {
              "name": undefined,
              "value": "oidc",
            },
            {
              "name": undefined,
              "value": "samlp",
            },
            {
              "name": undefined,
              "value": "social",
            },
            {
              "name": undefined,
              "value": "waad",
            },
          ],
        },
        "auth-token": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AuthToken",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "An identifier that represents the application that requested the
token. Only applicable for application access tokens.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_at",
              "schema": {
                "description": "The time at which the token expires.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "issued_at",
              "schema": {
                "description": "The time at which the token was issued.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "scopes",
              "schema": {
                "description": "The scopes associated with the issued token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-status",
                  "type": "reference",
                },
              },
            },
            {
              "key": "subject",
              "schema": {
                "description": "The subject of the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-token-grant-type": {
          "description": "Specifies the process of obtaining a token.",
          "generatedName": "AuthTokenGrantType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:grant-type:token-issue",
            },
            {
              "name": undefined,
              "value": "urn:ietf:params:oauth:grant-type:token-exchange",
            },
          ],
        },
        "auth-token-requested-token-type": {
          "description": "The type of the requested token.",
          "generatedName": "AuthTokenRequestedTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat:public",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:dev",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:pat",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:rev",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:session",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:session:dev0",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:sys",
            },
            {
              "name": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-status": {
          "description": "The status of the token.",
          "generatedName": "AuthTokenStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "active",
            },
            {
              "name": undefined,
              "value": "expired",
            },
            {
              "name": undefined,
              "value": "revoked",
            },
          ],
        },
        "auth-token-subject-token-type": {
          "description": "The type of the subject token.",
          "generatedName": "AuthTokenSubjectTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:auth0",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:dev",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:revinfo",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:sysu",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo",
            },
            {
              "name": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo:profile",
            },
            {
              "name": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-token-type": {
          "description": "The type of the issued token. Bearer is the only supported token type.
",
          "generatedName": "AuthTokenTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "bearer",
            },
          ],
        },
        "auth-tokens-create-request": {
          "allOf": [],
          "description": "A request to create a new token corresponding to the requested token
type.
",
          "generatedName": "AuthTokensCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "aud",
              "schema": {
                "description": "The expected audience values with respect to the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "client_id",
              "schema": {
                "description": "An identifier that represents the application which is requesting
the token. If no client_id is present in the request to generate an
application access token (AAT), DevRev will generate a client_id.
This client_id is only associated with an AAT.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": "The expected validity lifetime of the token in number of days.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "grant_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-grant-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-tokens-rev-info",
                  "type": "reference",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": "The requested set of scopes associated with the issued token. A
space-delimited list of values in which the order of values does
not matter.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subject_token",
              "schema": {
                "description": "Represents the entity that requests the token. Not required when
requesting an application access token (AAT).
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subject_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-subject-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new token corresponding to the
requested token type.
",
          "generatedName": "AuthTokensCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "access_token",
              "schema": {
                "description": "The issued JSON Web Token (JWT) corresponding to the requested
token type.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "client_id",
              "schema": {
                "description": "An identifier that represents the application which is requesting
the token. Only present in a response corresponding to an
application access token (AAT).
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": "The validity lifetime of the token specified in seconds since Unix
epoch.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "refresh_token",
              "schema": {
                "description": "A token to refresh the issued token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": "The scopes associated with the issued token. A space-delimited list
of values in which the order of values does not matter.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-token-token-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-delete-request": {
          "allOf": [],
          "description": "The request to revoke the token.",
          "generatedName": "AuthTokensDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token_id",
              "schema": {
                "description": "The unique identifier for the token under a given Dev organization.
If no token ID is provided, then the token ID will be set from the
JTI claim of the token in the authorization header.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-get-response": {
          "allOf": [],
          "description": "The response to get the token metadata.",
          "generatedName": "AuthTokensGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-list-response": {
          "allOf": [],
          "description": "The response to list the token metadata.",
          "generatedName": "AuthTokensListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tokens",
              "schema": {
                "description": "The list of token metadata.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-org-traits": {
          "allOf": [],
          "description": "Carries Rev org info.",
          "generatedName": "AuthTokensOrgTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The display name of the Rev org.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "The domain of the Rev org.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-rev-info": {
          "allOf": [],
          "description": "Carries info corresponding to the Rev user to be provisioned and/or
issue a Rev session token.
",
          "generatedName": "AuthTokensRevInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "org_ref",
              "schema": {
                "description": "An identifier which uniquely identifies a Rev org.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "org_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-tokens-org-traits",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_user_id",
              "schema": {
                "description": "The unique ID of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "user_ref",
              "schema": {
                "description": "An identifier which uniquely identifies a Rev user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "user_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-tokens-user-traits",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-self-delete-request": {
          "allOf": [],
          "description": "The request to delete all the tokens created by the authenticated user,
that match with the provided token type.
",
          "generatedName": "AuthTokensSelfDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-request": {
          "allOf": [],
          "description": "A request to update the token metadata.",
          "generatedName": "AuthTokensUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "token_id",
              "schema": {
                "description": "The unique identifier of the token under a given Dev organization.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-response": {
          "allOf": [],
          "description": "Response for the request to update the token metadata.",
          "generatedName": "AuthTokensUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-user-traits": {
          "allOf": [],
          "description": "Carries Rev user info.",
          "generatedName": "AuthTokensUserTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The display name of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "The email address of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "full_name",
              "schema": {
                "description": "The full name of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "capability": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "capability-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "dev-org-auth-connections-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "dev-org-auth-connections-create-request-type",
                  "type": "reference",
                },
              },
            ],
            "description": "Request to create a new enterprise authentication connection.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-create-request-type": {
          "description": "Defines the type for the authentication connection. Different types of
authentication connections have different configuration parameters.
",
          "generatedName": "DevOrgAuthConnectionsCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "google_apps",
            },
            {
              "name": undefined,
              "value": "oidc",
            },
            {
              "name": undefined,
              "value": "samlp",
            },
            {
              "name": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-delete-request": {
          "allOf": [],
          "description": "Request to delete an enterprise authentication connection for a Dev
organization. A default connection and a connection which is currently
enabled cannot be deleted.
",
          "generatedName": "DevOrgAuthConnectionsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-get-response": {
          "allOf": [],
          "description": "Response object encapsulating the configuration details of an
authentication connection.
",
          "generatedName": "DevOrgAuthConnectionsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-list-response": {
          "allOf": [],
          "description": "Response object for the request to list all the social and enterprise
authentication connections configured for a Dev organization.
",
          "generatedName": "DevOrgAuthConnectionsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connections",
              "schema": {
                "description": "List of all the authentication connections currently configured for
a Dev organization.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-connection",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-toggle-request": {
          "allOf": [],
          "description": "Request to enable or disable an authentication connection for a Dev
organization.
",
          "generatedName": "DevOrgAuthConnectionsToggleRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be toggled.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "toggle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-connection-toggle",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection which is to be updated.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "dev-org-auth-connections-update-request-type",
                  "type": "reference",
                },
              },
            ],
            "description": "Request to update an enterprise authentication connection for a Dev
organization.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-update-request-type": {
          "description": "Specifies the type for the authentication connection. Different types
of authentication connections have different configuration parameters
that can be updated.
",
          "generatedName": "DevOrgAuthConnectionsUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "google_apps",
            },
            {
              "name": undefined,
              "value": "none",
            },
            {
              "name": undefined,
              "value": "oidc",
            },
            {
              "name": undefined,
              "value": "samlp",
            },
            {
              "name": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-update-response": {
          "allOf": [],
          "description": "Response for the request to update an enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-user": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "user-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "DevUser",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "external_identities",
              "schema": {
                "description": "IDs of the Dev User outside the DevRev SOR.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "external-identity",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-user-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "dev-users-list-response": {
          "allOf": [],
          "description": "The response to listing the Dev users.",
          "generatedName": "DevUsersListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dev_users",
              "schema": {
                "description": "The list of Dev users.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "dev-user",
                  "type": "reference",
                },
              },
            },
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-users-self-response": {
          "allOf": [],
          "description": "The response to getting the information for the authenticated user.
",
          "generatedName": "DevUsersSelfResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dev_user",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "dev-user",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "empty": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "enhancement": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "part-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Enhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "target_close_date",
              "schema": {
                "description": "Timestamp when the enhancement is expected to be closed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "enhancement-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "error-bad-request": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorBadRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-bad-request-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-bad-request": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-invalid-enum-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestInvalidEnumValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the field.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "field_name",
              "schema": {
                "description": "The field whose enum value is invalid.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "The value that was received.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-missing-required-field": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestMissingRequiredField",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "field_name",
              "schema": {
                "description": "The missing field's name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-parse-error": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-type": {
          "description": undefined,
          "generatedName": "ErrorBadRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "bad_request",
            },
            {
              "name": undefined,
              "value": "invalid_enum_value",
            },
            {
              "name": undefined,
              "value": "missing_required_field",
            },
            {
              "name": undefined,
              "value": "parse_error",
            },
            {
              "name": undefined,
              "value": "value_not_permitted",
            },
          ],
        },
        "error-bad-request-value-not-permitted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestValueNotPermitted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "field_name",
              "schema": {
                "description": "The field whose value is not permitted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "reason",
              "schema": {
                "description": "The reason the value isn't permitted.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "message",
              "schema": {
                "description": "The message associated with the error.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorForbidden",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-forbidden-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden-forbidden": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-forbidden-type": {
          "description": undefined,
          "generatedName": "ErrorForbiddenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "forbidden",
            },
          ],
        },
        "error-internal-server-error": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorInternalServerError",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "reference_id",
              "schema": {
                "description": "A unique ID that's generated for the error that can be used for
inquiry.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-internal-server-error-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-internal-server-error-internal-error": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-internal-server-error-type": {
          "description": undefined,
          "generatedName": "ErrorInternalServerErrorType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "internal_error",
            },
          ],
        },
        "error-not-found": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorNotFound",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-not-found-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-not-found-not-found": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-not-found-type": {
          "description": undefined,
          "generatedName": "ErrorNotFoundType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "not_found",
            },
          ],
        },
        "error-service-unavailable": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorServiceUnavailable",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-service-unavailable-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-service-unavailable-service-unavailable": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-service-unavailable-type": {
          "description": undefined,
          "generatedName": "ErrorServiceUnavailableType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "service_unavailable",
            },
          ],
        },
        "error-too-many-requests": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorTooManyRequests",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "retry_after",
              "schema": {
                "description": "The number of seconds after which the client should retry.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-too-many-requests-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-too-many-requests-too-many-requests": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-too-many-requests-type": {
          "description": undefined,
          "generatedName": "ErrorTooManyRequestsType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "too_many_requests",
            },
          ],
        },
        "error-unauthorized": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorUnauthorized",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-unauthorized-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-unauthorized-type": {
          "description": undefined,
          "generatedName": "ErrorUnauthorizedType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "unauthenticated",
            },
          ],
        },
        "error-unauthorized-unauthenticated": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "event-part-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-part-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the part that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-part-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the Rev organization that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the timeline entry that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the webhook that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the work that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-work-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "external-identity": {
          "description": "External identity of a user.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "feature": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "feature-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "group-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "issue": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Issue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "issue-priority": {
          "description": "Priority of the work based upon impact and criticality.",
          "generatedName": "IssuePriority",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "p0",
            },
            {
              "name": undefined,
              "value": "p1",
            },
            {
              "name": undefined,
              "value": "p2",
            },
            {
              "name": undefined,
              "value": "p3",
            },
          ],
        },
        "list-mode": {
          "description": "The iteration mode to use. If "after", then entries after the provided
cursor will be returned, or if no cursor is provided, then from the
beginning. If "before", then entries before the provided cursor will be
returned, or if no cursor is provided, then from the end. Entries will
always be returned in the specified sort-by order.
",
          "generatedName": "ListMode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "after",
            },
            {
              "name": undefined,
              "value": "before",
            },
          ],
        },
        "org-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "Name of the Organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "Name of the Organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-environment": {
          "description": "The environment of the Org. Defaults to 'production' if not specified.
",
          "generatedName": "OrgEnvironment",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "production",
            },
            {
              "name": undefined,
              "value": "staging",
            },
            {
              "name": undefined,
              "value": "test",
            },
          ],
        },
        "org-summary": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "OrgSummary",
            "nameOverride": undefined,
            "schemas": {
              "rev_org": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "org-type": {
          "description": undefined,
          "generatedName": "OrgType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "rev_org",
            },
          ],
        },
        "part": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Part",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "schema": "capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "schema": "enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "schema": "feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "schema": "product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": "The attached artifacts.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "Description of the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "owned_by",
              "schema": {
                "description": "The users that own the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "Tags associated with the object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "part-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "part-summary": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartSummary",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "schema": "capability-summary",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "schema": "enhancement-summary",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "schema": "feature-summary",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "schema": "product-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-type": {
          "description": undefined,
          "generatedName": "PartType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "capability",
            },
            {
              "name": undefined,
              "value": "enhancement",
            },
            {
              "name": undefined,
              "value": "feature",
            },
            {
              "name": undefined,
              "value": "product",
            },
          ],
        },
        "parts-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "Description of the part.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "Name of the part.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the part.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-create-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-create-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-create-request-feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-create-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-create-request-capability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestCapability",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent product for the capability.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent part on which the enhancement is to be created.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "target_close_date",
              "schema": {
                "description": "Target close date by which enhancement is expected to be closed.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-feature": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestFeature",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent capability/feature for the feature.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-product": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the part to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-response": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "parts",
              "schema": {
                "description": "The list of parts.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part",
                  "type": "reference",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "The updated description of the part.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the part to update.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "The updated name of the part.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "parts-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-update-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-update-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-update-request-feature",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-update-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-update-request-capability": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "target_close_date",
              "schema": {
                "description": "Updates the target close date of the enhancement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-feature": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-product": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "product": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "product-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "rev-org": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "org-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevOrg",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description of the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a unique identifier for the Rev (customer)
organization from your primary customer system of records. If none
is specified, a system-generated identifier will be assigned to the
organization.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-org-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "org-base-summary",
          "type": "reference",
        },
        "rev-orgs-create-request": {
          "allOf": [],
          "description": "Request object to create a new Rev organization in the Dev
organization.
",
          "generatedName": "RevOrgsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description of the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_name",
              "schema": {
                "description": "Name of the Rev organization.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tier",
              "schema": {
                "description": "The tier of the RevOrg.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-create-response": {
          "allOf": [],
          "description": "Response object for request to create a new Rev organization.
",
          "generatedName": "RevOrgsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-request": {
          "allOf": [],
          "description": "Request object to delete a Rev organization.",
          "generatedName": "RevOrgsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-response": {
          "description": "The response to deleting a Rev organization.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "rev-orgs-get-response": {
          "allOf": [],
          "description": "The response to getting a Rev organization's information.",
          "generatedName": "RevOrgsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-list-response": {
          "allOf": [],
          "description": "The response to getting a list of Rev organizations' information.
",
          "generatedName": "RevOrgsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_orgs",
              "schema": {
                "description": "List with all of the Rev organizations' information.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "rev-org",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-request": {
          "allOf": [],
          "description": "Request object to update information of the Rev organization.
",
          "generatedName": "RevOrgsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description of the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_name",
              "schema": {
                "description": "Customer chosen name for the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "tier",
              "schema": {
                "description": "The tier of the RevOrg.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-response": {
          "allOf": [],
          "description": "Response object to updating Rev organization's information.",
          "generatedName": "RevOrgsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-user-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "user-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevUserSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a mutable unique identifier for a user within the
Rev organization from your primary customer record. If none is
available, a good alternative is the email address/phone number
which could uniquely identify the user. If none is specified, a
system-generated identifier will be assigned to the user.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "set-tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SetTagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage": {
          "allOf": [],
          "description": "Describes the current stage of a work item.",
          "generatedName": "Stage",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Current stage name of the work item.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "stage-init": {
          "allOf": [],
          "description": "Sets an object's initial stage.",
          "generatedName": "StageInit",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the stage.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage-update": {
          "allOf": [],
          "description": "Updates an object's stage.",
          "generatedName": "StageUpdate",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The updated name of the stage, otherwise unchanged if not set.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "sys-user-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "tag": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Tag",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the tag, where a value is provided when a
tag is associated with an object. If empty, then no value should be
provided when the association is made.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "An informative description for the tag that should provide context
on the tag's purpose and usage.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tag-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TagSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag-summary",
                "type": "reference",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "The value for the object's association with the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-create-request": {
          "allOf": [],
          "description": "The request to create a new tag.",
          "generatedName": "TagsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the tag, or empty if no values are
permitted.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The description for the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name for the tag, which must be unique across all tags.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-create-response": {
          "allOf": [],
          "description": "The response to creating a new tag.",
          "generatedName": "TagsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-request": {
          "allOf": [],
          "description": "The request to delete a tag.",
          "generatedName": "TagsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-response": {
          "description": "The response for deleting a tag.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "tags-get-response": {
          "allOf": [],
          "description": "The response to getting a tag's information.",
          "generatedName": "TagsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-list-response": {
          "allOf": [],
          "description": "The response to listing the tags.",
          "generatedName": "TagsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "The list of tags.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "tag",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-allowed-values": {
          "allOf": [],
          "description": "Specifies an update to a tag's allowed values.",
          "generatedName": "TagsUpdateAllowedValues",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the allowed values for the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-request": {
          "allOf": [],
          "description": "The request to update a tag.",
          "generatedName": "TagsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "tags-update-allowed-values",
                  "type": "reference",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The updated description of the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The updated name of the tag. The name must be unique across all
tags.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-response": {
          "allOf": [],
          "description": "The response for updating a tag.",
          "generatedName": "TagsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ticket": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Ticket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "group",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "group-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ticket-severity": {
          "description": "Severity of the ticket.",
          "generatedName": "TicketSeverity",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "blocker",
            },
            {
              "name": undefined,
              "value": "high",
            },
            {
              "name": undefined,
              "value": "low",
            },
            {
              "name": undefined,
              "value": "medium",
            },
          ],
        },
        "timeline-comment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entry-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": "The artifacts for the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "The comment's body. If the comment has been deleted, then no body
will appear in the response.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "snap_kit_body",
              "schema": {
                "description": "The SnapKit Body of the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-comment-body-type": {
          "description": "The type of the body to use for the comment.",
          "generatedName": "TimelineCommentBodyType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "snap_kit",
            },
            {
              "name": undefined,
              "value": "text",
            },
          ],
        },
        "timeline-entries-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "object",
                "schema": {
                  "description": "The ID of the object to create the timeline entry for.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entries-create-request-type",
                  "type": "reference",
                },
              },
              {
                "key": "visibility",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "timeline-entry-visibility",
                    "type": "reference",
                  },
                },
              },
            ],
            "description": "The request to create a timeline entry for an object.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entries-create-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-create-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": "The IDs of the artifacts attached to the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "The comment's body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "snap_kit_body",
              "schema": {
                "description": "The SnapKit body of the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-create-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-create-response": {
          "allOf": [],
          "description": "The response to creating a timeline entry for an object.",
          "generatedName": "TimelineEntriesCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-get-response": {
          "allOf": [],
          "description": "The request to getting a timeline entry.",
          "generatedName": "TimelineEntriesGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-list-response": {
          "allOf": [],
          "description": "The response to listing timeline entries for an object.",
          "generatedName": "TimelineEntriesListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timeline_entries",
              "schema": {
                "description": "The timeline entries for the object.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entry",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the timeline entry to update.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entries-update-request-type",
                  "type": "reference",
                },
              },
            ],
            "description": "The request to update a timeline entry.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entries-update-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-update-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entries-update-request-timeline-comment-artifacts",
                  "type": "reference",
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "The updated comment's body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "snap_kit_body",
              "schema": {
                "description": "The SnapKit body of the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-timeline-comment-artifacts": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "add",
              "schema": {
                "description": "Adds the provided artifacts to the comment. An artifact cannot be
added more than once, i.e. nothing is done if the artifact is
already attached. Mutually exclusive with \`set\`.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "remove",
              "schema": {
                "description": "Removes the provided artifacts from the comment. If an artifact is
not present, then it's ignored. Mututally exclusive with \`set\`.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "set",
              "schema": {
                "description": "Sets the field to the provided artifacts.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-update-response": {
          "allOf": [],
          "description": "The response to updating a timeline entry.",
          "generatedName": "TimelineEntriesUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entry": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entry-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "TimelineEntry",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entry-base": {
          "description": undefined,
          "file": undefined,
          "schema": "atom-base",
          "type": "reference",
        },
        "timeline-entry-type": {
          "description": undefined,
          "generatedName": "TimelineEntryType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entry-visibility": {
          "description": "The visibility of the entry. If 'private', then the entry is only
visible to the creator, otherwise if not set, then the entry has
default visibility.
",
          "generatedName": "TimelineEntryVisibility",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "private",
            },
          ],
        },
        "user-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The user's display name. The name is non-unique and mutable.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "Email address of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "full_name",
              "schema": {
                "description": "Full name of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "phone_numbers",
              "schema": {
                "description": "Phone numbers of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The user's display name. The name is non-unique and mutable.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "Email address of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "full_name",
              "schema": {
                "description": "Full name of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-state": {
          "description": "State of the user.",
          "generatedName": "UserState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "active",
            },
            {
              "name": undefined,
              "value": "deactivated",
            },
            {
              "name": undefined,
              "value": "locked",
            },
            {
              "name": undefined,
              "value": "shadow",
            },
            {
              "name": undefined,
              "value": "unassigned",
            },
          ],
        },
        "user-summary": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "UserSummary",
            "nameOverride": undefined,
            "schemas": {
              "dev_user": {
                "description": undefined,
                "file": undefined,
                "schema": "dev-user-summary",
                "type": "reference",
              },
              "rev_user": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-user-summary",
                "type": "reference",
              },
              "sys_user": {
                "description": undefined,
                "file": undefined,
                "schema": "sys-user-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "user-type": {
          "description": undefined,
          "generatedName": "UserType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "dev_user",
            },
            {
              "name": undefined,
              "value": "rev_user",
            },
            {
              "name": undefined,
              "value": "sys_user",
            },
          ],
        },
        "webhook": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Webhook",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "event_types",
              "schema": {
                "description": "The event types that the webhook will receive.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "The secret to use for verifying webhook events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhook-status",
                  "type": "reference",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The event's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "part_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-part-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "part_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-part-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "part_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-part-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-rev-org-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-rev-org-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-rev-org-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tag_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-tag-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tag_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-tag-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tag_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-tag-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timeline_entry_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-timeline-entry-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timeline_entry_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-timeline-entry-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timeline_entry_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-timeline-entry-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "Timestamp of the webhook's invocation for the event. Note this
should be used to protect against replay attacks, where the event
should only be processed if the timestamp isn't stale by several
seconds.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhook-event-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "verify",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhook-event-verify",
                  "type": "reference",
                },
              },
            },
            {
              "key": "webhook_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-webhook-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "webhook_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-webhook-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "webhook_id",
              "schema": {
                "description": "ID of the webhook for the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "webhook_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-webhook-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "work_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-work-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "work_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-work-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "work_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-work-updated",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "challenge",
              "schema": {
                "description": "The challenge from the "verify" request, otherwise this should not
be set for other request types.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-type": {
          "description": "The event types that the webhook will receive.",
          "generatedName": "WebhookEventType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "part_created",
            },
            {
              "name": undefined,
              "value": "part_deleted",
            },
            {
              "name": undefined,
              "value": "part_updated",
            },
            {
              "name": undefined,
              "value": "rev_org_created",
            },
            {
              "name": undefined,
              "value": "rev_org_deleted",
            },
            {
              "name": undefined,
              "value": "rev_org_updated",
            },
            {
              "name": undefined,
              "value": "tag_created",
            },
            {
              "name": undefined,
              "value": "tag_deleted",
            },
            {
              "name": undefined,
              "value": "tag_updated",
            },
            {
              "name": undefined,
              "value": "timeline_entry_created",
            },
            {
              "name": undefined,
              "value": "timeline_entry_deleted",
            },
            {
              "name": undefined,
              "value": "timeline_entry_updated",
            },
            {
              "name": undefined,
              "value": "verify",
            },
            {
              "name": undefined,
              "value": "webhook_created",
            },
            {
              "name": undefined,
              "value": "webhook_deleted",
            },
            {
              "name": undefined,
              "value": "webhook_updated",
            },
            {
              "name": undefined,
              "value": "work_created",
            },
            {
              "name": undefined,
              "value": "work_deleted",
            },
            {
              "name": undefined,
              "value": "work_updated",
            },
          ],
        },
        "webhook-event-verify": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventVerify",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "challenge",
              "schema": {
                "description": "The challenge that must be echoed in the response.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhook-status": {
          "description": "The status of the webhook.",
          "generatedName": "WebhookStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "active",
            },
            {
              "name": undefined,
              "value": "inactive",
            },
            {
              "name": undefined,
              "value": "unverified",
            },
          ],
        },
        "webhooks-create-request": {
          "allOf": [],
          "description": "The request to create a new webhook.",
          "generatedName": "WebhooksCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "event_types",
              "schema": {
                "description": "The event types that the webhook endpoint will receive.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "The secret to use when verifying webhook events. If provided, the
secret must be between 8 and 32 bytes (inclusive). If not set, a
secret will be automatically generated and provided in the
response.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-create-response": {
          "allOf": [],
          "description": "The response to creating a new webhook.",
          "generatedName": "WebhooksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-request": {
          "allOf": [],
          "description": "The request to delete a webhook.",
          "generatedName": "WebhooksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-response": {
          "description": "The response to deleting the webhook.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "webhooks-get-response": {
          "allOf": [],
          "description": "The response to getting the information for the webhook.",
          "generatedName": "WebhooksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-list-response": {
          "allOf": [],
          "description": "The response to listing the webhooks.",
          "generatedName": "WebhooksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhooks",
              "schema": {
                "description": "The list of webhooks.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhook",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-action": {
          "description": "The action to update the webhook's status.",
          "generatedName": "WebhooksUpdateAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "activate",
            },
            {
              "name": undefined,
              "value": "deactivate",
            },
          ],
        },
        "webhooks-update-request": {
          "allOf": [],
          "description": "The request to update a webhook.",
          "generatedName": "WebhooksUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhooks-update-action",
                  "type": "reference",
                },
              },
            },
            {
              "key": "event_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhooks-update-request-event-types",
                  "type": "reference",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "If provided, updates the secret that's used when verifying webhook
events, which must be between 8 and 32 bytes (inclusive). Otherwise
if empty, then a new secret is generated. If the webhook is active,
then its status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The webhook's updated URL. If the webhook is active, then the
webhook's status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-request-event-types": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhooksUpdateRequestEventTypes",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "add",
              "schema": {
                "description": "The event types to add. If a provided event type is already set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "remove",
              "schema": {
                "description": "The event types to remove. If a provided event type isn't set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "set",
              "schema": {
                "description": "The updated event types, which will replace the webhook's current
event types. Note this is mutually exclusive with 'add' and
'remove'.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-response": {
          "allOf": [],
          "description": "The response to updating the webhook.",
          "generatedName": "WebhooksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "work": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Work",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "schema": "issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "schema": "ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "work-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "WorkBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "artifacts",
              "schema": {
                "description": "The artifacts attached to the work item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "Body of the work object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "owned_by",
              "schema": {
                "description": "The users that own the work.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "reported_by",
              "schema": {
                "description": "Users that reported the work.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "stage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "stage",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "Tags associated with the object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "target_close_date",
              "schema": {
                "description": "Timestamp when the work is expected to be complete.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "Title of the work object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "work-type": {
          "description": undefined,
          "generatedName": "WorkType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "issue",
            },
            {
              "name": undefined,
              "value": "ticket",
            },
          ],
        },
        "works-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "The [part](https://devrev.ai/docs/product/parts) that the work
applies to. Specifying a part is required when creating tickets and
issues.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": "The IDs of the artifacts to associate with the work item.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Body of the work object.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the work.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": "The users that reported the work.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "stage-init",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": "Tags associated with the work item.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "schema": "set-tag-with-value",
                      "type": "reference",
                    },
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Timestamp for when the work is expected to be complete.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Title of the work object.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "schema": "works-create-request-issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "schema": "works-create-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-create-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "key": "sprint",
              "schema": {
                "description": "The sprint that the issue belongs to.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "group",
              "schema": {
                "description": "The group that the ticket is associated with.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": "The Rev organization that the ticket is associated with.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The work's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-response": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "works-export-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksExportResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "works",
              "schema": {
                "description": "The resulting collection of work items.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "works",
              "schema": {
                "description": "The list of works.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "Updates the part that the work applies to.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "works-update-request-artifact-ids",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Updated body of the work object, or unchanged if not provided.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The work's ID.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "works-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "works-update-request-reported-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "stage-update",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "works-update-request-tags",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Updates the timestamp for when the work is expected to be complete.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Updated title of the work object, or unchanged if not provided.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "schema": "works-update-request-issue",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "schema": "works-update-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-update-request-artifact-ids": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestArtifactIds",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the IDs to the provided artifact IDs.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "key": "sprint",
              "schema": {
                "description": "Updates the sprint that the issue belongs to.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-reported-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestReportedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the users that reported the work to the provided user IDs.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-tags": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTags",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the provided tags on the work item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "set-tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "group",
              "schema": {
                "description": "The group that the ticket is associated with.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": "Updates the Rev organization that the ticket is associated with.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "auth-token": {
          "headerName": "Authorization",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": "DevRev API endpoint.",
          "name": undefined,
          "url": "{protocol}://{hostname}",
        },
      ],
      "tags": [],
      "title": "DevRev REST API",
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser hathora simple 1`] = `
{
  "files": {
    "openapi.json": {
      "dependencies": [],
      "description": undefined,
      "endpoints": [
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetApps",
          "path": "/apps/v1/list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "ApplicationWithDeployment",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "CreateApp",
          "path": "/apps/v1/create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "authConfiguration",
                  "schema": {
                    "allOf": [],
                    "description": undefined,
                    "generatedName": "AuthConfiguration",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "key": "google",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "allOf": [],
                            "description": undefined,
                            "generatedName": "AuthConfigurationGoogle",
                            "nameOverride": undefined,
                            "properties": [
                              {
                                "key": "clientId",
                                "schema": {
                                  "description": undefined,
                                  "schema": {
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "object",
                          },
                        },
                      },
                      {
                        "key": "nickname",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "key": "anonymous",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
                {
                  "key": "appName",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Application",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "UpdateApp",
          "path": "/apps/v1/update/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "authConfiguration",
                  "schema": {
                    "allOf": [],
                    "description": undefined,
                    "generatedName": "AuthConfiguration",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "key": "google",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "allOf": [],
                            "description": undefined,
                            "generatedName": "AuthConfigurationGoogle",
                            "nameOverride": undefined,
                            "properties": [
                              {
                                "key": "clientId",
                                "schema": {
                                  "description": undefined,
                                  "schema": {
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "object",
                          },
                        },
                      },
                      {
                        "key": "nickname",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "key": "anonymous",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
                {
                  "key": "appName",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Application",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetAppInfo",
          "path": "/apps/v1/info/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Application",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteApp",
          "path": "/apps/v1/delete/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "LoginAnonymous",
          "path": "/auth/v1/{appId}/login/anonymous",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "LoginNickname",
          "path": "/auth/v1/{appId}/login/nickname",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "nickname",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "LoginGoogle",
          "path": "/auth/v1/{appId}/login/google",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "idToken",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetBuilds",
          "path": "/builds/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Build",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetBuildInfo",
          "path": "/builds/v1/{appId}/info/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Build",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "CreateBuild",
          "path": "/builds/v1/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Build",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "RunBuild",
          "path": "/builds/v1/{appId}/run/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteBuild",
          "path": "/builds/v1/{appId}/delete/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetDeployments",
          "path": "/deployments/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Deployment",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetDeploymentInfo",
          "path": "/deployments/v1/{appId}/info/{deploymentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Deployment",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "CreateDeployment",
          "path": "/deployments/v1/{appId}/create/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "DeploymentConfig",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Deployment",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetPingServiceEndpoints",
          "path": "/discovery/v1/ping",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "DiscoveryResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "DiscoveryV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePrivateLobbyDeprecated",
          "path": "/lobby/v1/{appId}/create/private",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePublicLobbyDeprecated",
          "path": "/lobby/v1/{appId}/create/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "GET",
          "operationId": "ListActivePublicLobbiesDeprecated",
          "path": "/lobby/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Lobby",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePrivateLobby",
          "path": "/lobby/v2/{appId}/create/private",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePublicLobby",
          "path": "/lobby/v2/{appId}/create/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreateLocalLobby",
          "path": "/lobby/v2/{appId}/create/local",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreateLobby",
          "path": "/lobby/v2/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "visibility",
                  "schema": {
                    "description": undefined,
                    "generatedName": "Visibility",
                    "nameOverride": undefined,
                    "type": "enum",
                    "values": [
                      {
                        "name": undefined,
                        "value": "public",
                      },
                      {
                        "name": undefined,
                        "value": "private",
                      },
                      {
                        "name": undefined,
                        "value": "local",
                      },
                    ],
                  },
                },
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "ListActivePublicLobbies",
          "path": "/lobby/v2/{appId}/list/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Lobby",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetLobbyInfo",
          "path": "/lobby/v2/{appId}/info/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "SetLobbyState",
          "path": "/lobby/v2/{appId}/setState/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "state",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForApp",
          "path": "/logs/v1/{appId}/all",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForProcess",
          "path": "/logs/v1/{appId}/process/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForDeployment",
          "path": "/logs/v1/{appId}/deployment/{deploymentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetMetrics",
          "path": "/metrics/v1/{appId}/process/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "metrics",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricName",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "end",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "start",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "step",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "MetricsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "MetricsV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetRunningProcesses",
          "path": "/processes/v1/{appId}/list/running",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessWithRooms",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetStoppedProcesses",
          "path": "/processes/v1/{appId}/list/stopped",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Process",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetProcessInfo",
          "path": "/processes/v1/{appId}/info/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Process",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "CreateRoom",
          "path": "/rooms/v1/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetRoomInfo",
          "path": "/rooms/v1/{appId}/info/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Room",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetActiveRoomsForProcess",
          "path": "/rooms/v1/{appId}/list/{processId}/active",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomWithoutAllocations",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetInactiveRoomsForProcess",
          "path": "/rooms/v1/{appId}/list/{processId}/inactive",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomWithoutAllocations",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "DestroyRoom",
          "path": "/rooms/v1/{appId}/destroy/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "SuspendRoom",
          "path": "/rooms/v1/{appId}/suspend/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "GetConnectionInfo",
          "path": "/rooms/v1/{appId}/connectioninfo/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "ConnectionInfo",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
      ],
      "schemas": {
        "ActiveConnectionInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ActiveConnectionInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "ActiveConnectionInfoStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "name": undefined,
                    "value": "active",
                  },
                ],
              },
            },
            {
              "key": "transportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "TransportType",
                "type": "reference",
              },
            },
            {
              "key": "port",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "host",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "AppId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "Application": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Application",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deletedBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "deletedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "orgId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "OrgId",
                "type": "reference",
              },
            },
            {
              "key": "authConfiguration",
              "schema": {
                "allOf": [],
                "description": undefined,
                "generatedName": "ApplicationAuthConfiguration",
                "nameOverride": undefined,
                "properties": [
                  {
                    "key": "google",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "description": undefined,
                        "generatedName": "ApplicationAuthConfigurationGoogle",
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "key": "clientId",
                            "schema": {
                              "description": undefined,
                              "schema": {
                                "type": "string",
                              },
                              "type": "primitive",
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                  {
                    "key": "nickname",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "schema": "Record_string.never_",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "key": "anonymous",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "schema": "Record_string.never_",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "key": "appSecret",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "appName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ApplicationWithDeployment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "Application",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ApplicationWithDeployment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deployment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Deployment",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Build": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Build",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "regionalContainerTags",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "allOf": [],
                  "description": undefined,
                  "generatedName": "BuildRegionalContainerTagsItem",
                  "nameOverride": undefined,
                  "properties": [
                    {
                      "key": "containerTag",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    {
                      "key": "region",
                      "schema": {
                        "description": undefined,
                        "file": undefined,
                        "schema": "Region",
                        "type": "reference",
                      },
                    },
                  ],
                  "type": "object",
                },
              },
            },
            {
              "key": "imageSize",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "BuildStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "name": undefined,
                    "value": "created",
                  },
                  {
                    "name": undefined,
                    "value": "running",
                  },
                  {
                    "name": undefined,
                    "value": "succeeded",
                  },
                  {
                    "name": undefined,
                    "value": "failed",
                  },
                ],
              },
            },
            {
              "key": "deletedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "finishedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "startedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "BuildId": {
          "description": undefined,
          "schema": {
            "type": "double",
          },
          "type": "primitive",
        },
        "ConnectionInfo": {
          "oneOf": {
            "description": undefined,
            "generatedName": "ConnectionInfo",
            "nameOverride": undefined,
            "schemas": [
              {
                "description": undefined,
                "file": undefined,
                "schema": "StartingConnectionInfo",
                "type": "reference",
              },
              {
                "description": undefined,
                "file": undefined,
                "schema": "ActiveConnectionInfo",
                "type": "reference",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "Deployment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "DeploymentConfig",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Deployment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requestedMemoryMB",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requestedCPU",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deploymentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "DeploymentId",
                  "type": "reference",
                },
              },
            },
            {
              "key": "buildId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "BuildId",
                  "type": "reference",
                },
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AppId",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DeploymentConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DeploymentConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "env",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "allOf": [],
                  "description": undefined,
                  "generatedName": "DeploymentConfigEnvItem",
                  "nameOverride": undefined,
                  "properties": [
                    {
                      "key": "value",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    {
                      "key": "name",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  ],
                  "type": "object",
                },
              },
            },
            {
              "key": "roomsPerProcess",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "planName",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "PlanName",
                "type": "reference",
              },
            },
            {
              "key": "transportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "TransportType",
                "type": "reference",
              },
            },
            {
              "key": "containerPort",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DeploymentId": {
          "description": undefined,
          "schema": {
            "type": "double",
          },
          "type": "primitive",
        },
        "DiscoveryResponse": {
          "description": undefined,
          "type": "array",
          "value": {
            "allOf": [],
            "description": undefined,
            "generatedName": "DiscoveryResponseItem",
            "nameOverride": undefined,
            "properties": [
              {
                "key": "port",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "host",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "region",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            ],
            "type": "object",
          },
        },
        "Lobby": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Lobby",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "key": "initialConfig",
              "schema": {
                "description": undefined,
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "local",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "visibility",
              "schema": {
                "description": undefined,
                "generatedName": "LobbyVisibility",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "name": undefined,
                    "value": "private",
                  },
                  {
                    "name": undefined,
                    "value": "public",
                  },
                  {
                    "name": undefined,
                    "value": "local",
                  },
                ],
              },
            },
            {
              "key": "region",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "Region",
                "type": "reference",
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "MetricName": {
          "description": undefined,
          "generatedName": "MetricName",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "cpu",
            },
            {
              "name": undefined,
              "value": "memory",
            },
            {
              "name": undefined,
              "value": "rate_egress",
            },
            {
              "name": undefined,
              "value": "total_egress",
            },
          ],
        },
        "MetricValue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MetricValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "value",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "MetricsResponse": {
          "description": undefined,
          "file": undefined,
          "schema": "Record_Partial_MetricName_.MetricValue-Array_",
          "type": "reference",
        },
        "Omit_Room.allocations_": {
          "description": undefined,
          "file": undefined,
          "schema": "Pick_Room.Exclude_keyofRoom.allocations__",
          "type": "reference",
        },
        "OrgId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "Pick_Room.Exclude_keyofRoom.allocations__": {
          "allOf": [],
          "description": "From T, pick a set of properties whose keys are in the union K",
          "generatedName": "PickRoomExcludeKeyofRoomAllocations",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomStatus",
                "type": "reference",
              },
            },
            {
              "key": "currentAllocation",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomAllocation",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "PlanName": {
          "description": undefined,
          "generatedName": "PlanName",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "tiny",
            },
            {
              "name": undefined,
              "value": "small",
            },
            {
              "name": undefined,
              "value": "medium",
            },
            {
              "name": undefined,
              "value": "large",
            },
          ],
        },
        "Process": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Process",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "egressedBytes",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "idleSince",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "activeConnections",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "roomSlotsAvailable",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "draining",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "terminatedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "stoppingAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "startedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "startingAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "roomsPerProcess",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "port",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "host",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "region",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "Region",
                "type": "reference",
              },
            },
            {
              "key": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
            {
              "key": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ProcessId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "ProcessWithRooms": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "Process",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ProcessWithRooms",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rooms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "RoomWithoutAllocations",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "totalRooms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Record_Partial_MetricName_.MetricValue-Array_": {
          "allOf": [],
          "description": "Construct a type with a set of properties K of type T",
          "generatedName": "RecordPartialMetricNameMetricValueArray",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "cpu",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "memory",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "rate_egress",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "total_egress",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "Record_string.never_": {
          "allOf": [],
          "description": "Construct a type with a set of properties K of type T",
          "generatedName": "RecordStringNever",
          "nameOverride": undefined,
          "properties": [],
          "type": "object",
        },
        "Region": {
          "description": undefined,
          "generatedName": "Region",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "Seattle",
            },
            {
              "name": undefined,
              "value": "Washington_DC",
            },
            {
              "name": undefined,
              "value": "Chicago",
            },
            {
              "name": undefined,
              "value": "London",
            },
            {
              "name": undefined,
              "value": "Frankfurt",
            },
            {
              "name": undefined,
              "value": "Mumbai",
            },
            {
              "name": undefined,
              "value": "Singapore",
            },
            {
              "name": undefined,
              "value": "Tokyo",
            },
            {
              "name": undefined,
              "value": "Sydney",
            },
            {
              "name": undefined,
              "value": "Sao_Paulo",
            },
          ],
        },
        "Room": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Room",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currentAllocation",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomAllocation",
                "type": "reference",
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomStatus",
                "type": "reference",
              },
            },
            {
              "key": "allocations",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomAllocation",
                  "type": "reference",
                },
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RoomAllocation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RoomAllocation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "unscheduledAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "scheduledAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
            {
              "key": "roomAllocationId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomAllocationId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RoomAllocationId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "RoomId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "RoomStatus": {
          "description": undefined,
          "generatedName": "RoomStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "scheduling",
            },
            {
              "name": undefined,
              "value": "active",
            },
            {
              "name": undefined,
              "value": "suspended",
            },
            {
              "name": undefined,
              "value": "destroyed",
            },
          ],
        },
        "RoomWithoutAllocations": {
          "description": undefined,
          "file": undefined,
          "schema": "Omit_Room.allocations_",
          "type": "reference",
        },
        "StartingConnectionInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StartingConnectionInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "StartingConnectionInfoStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "name": undefined,
                    "value": "starting",
                  },
                ],
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "TransportType": {
          "description": undefined,
          "generatedName": "TransportType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "tcp",
            },
            {
              "name": undefined,
              "value": "udp",
            },
            {
              "name": undefined,
              "value": "tls",
            },
          ],
        },
      },
      "securitySchemes": {
        "auth0": {
          "type": "bearer",
        },
      },
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "https://api.hathora.dev",
        },
        {
          "description": undefined,
          "name": undefined,
          "url": "/",
        },
      ],
      "tags": [],
      "title": "Hathora Cloud API",
    },
  },
  "rootPackage": {
    "file": "openapi.json",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser vellum simple 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "
## Vellum API Documentation

### Welcome 👋
Welcome to Vellum's API documentation! Here you'll find information about the various endpoints available to you,
as well as the parameters and responses that they accept and return.

We will be exposing more and more of our APIs over time as they stabilize. If there is some action you can perform
via the UI that you wish you could perform via API, please let us know and we can expose it here in an unstable state.

### API Stability
Some of the APIs documented within are undergoing active development. Use the
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>
and
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>
tags to differentiate between those that are stable and those that are not.

### Base URLs
Some endpoints are hosted separately from the main Vellum API and therefore have a different base url. If this is
the case, they will say so in their description.

Unless otherwise specified, all endpoints use <code>https://api.vellum.ai</code> as their base URL.

### Official API Clients:
Vellum maintains official API clients for Python and Node/Typescript. We recommend using these clients to interact
with all stable endpoints. You can find them here:
- [Python](https://github.com/vocify/vellum-client-python)
- [Node/Typescript](https://github.com/vocify/vellum-client-node)
",
      "endpoints": [
        {
          "description": "
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to list documents. Optionally filter on supported fields.
",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "documents_list",
          "path": "/v1/documents",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "document_index_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "ordering",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestName": "ListDocumentsRequest",
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "PaginatedSlimDocumentList",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "documents",
          ],
        },
        {
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Generate a completion using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "generate",
          "path": "/v1/generate",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "GenerateRequestBodyRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "GenerateResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "generate",
          ],
        },
        {
          "description": "
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Used to retrieve a model version given its ID.
",
          "errors": [],
          "headers": [],
          "method": "GET",
          "operationId": "model_versions_retrieve",
          "path": "/v1/model-versions/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "ModelVersionRead",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "model-versions",
          ],
        },
        {
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Perform a search against a document index.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "search",
          "path": "/v1/search",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "SearchRequestBodyRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "SearchResponse",
              "type": "reference",
            },
          },
          "server": [
            {
              "description": undefined,
              "name": "Predict",
              "url": "https://predict.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "search",
          ],
        },
        {
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to submit feedback regarding the quality of previously generated completions.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "submit_completion_actuals",
          "path": "/v1/submit-completion-actuals",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "SubmitCompletionActualsRequestRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestName": undefined,
          "response": undefined,
          "server": [
            {
              "description": undefined,
              "name": "Predict",
              "url": "https://predict.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "submit-completion-actuals",
          ],
        },
        {
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Upload a document to be indexed and used for search.

**Note:** Uses a base url of \`https://documents.vellum.ai\`.",
          "errors": [],
          "headers": [],
          "method": "POST",
          "operationId": "documents_upload",
          "path": "/v1/upload-document",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "add_to_index_names",
                "schema": {
                  "json": {
                    "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "external_id",
                "schema": {
                  "json": {
                    "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "label",
                "schema": {
                  "json": {
                    "description": "A human-friendly name for this document. Typically the filename.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "contents",
                "schema": {
                  "type": "file",
                },
              },
              {
                "description": undefined,
                "key": "keywords",
                "schema": {
                  "json": {
                    "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "json",
                },
              },
            ],
            "type": "multipart",
          },
          "requestName": "UploadDocumentRequestBodyRequest",
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "UploadDocumentResponse",
              "type": "reference",
            },
          },
          "server": [
            {
              "description": undefined,
              "name": "Documents",
              "url": "https://documents.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "documents",
          ],
        },
      ],
      "schemas": {
        "Document": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Document",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "The human-readable name for the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "DocumentDocumentToDocumentIndex": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DocumentDocumentToDocumentIndex",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "document_index_id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies the index this document is included in.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "indexing_state",
              "schema": {
                "description": "An enum value representing where this document is along its indexing lifecycle for this index.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "IndexingStateEnum",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "EnrichedNormalizedCompletion": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EnrichedNormalizedCompletion",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The Vellum-generated ID of the completion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text generated by the LLM.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "finish_reason",
              "schema": {
                "description": "The reason the generation finished.",
                "file": undefined,
                "schema": "FinishReasonEnum",
                "type": "reference",
              },
            },
            {
              "key": "logprobs",
              "schema": {
                "description": "The logprobs of the completion. Only present if specified in the original request options.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "NormalizedLogProbs",
                  "type": "reference",
                },
              },
            },
            {
              "key": "model_version_id",
              "schema": {
                "description": "The ID of the model version used to generate this completion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "FinishReasonEnum": {
          "description": undefined,
          "generatedName": "FinishReasonEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "LENGTH",
            },
            {
              "name": undefined,
              "value": "STOP",
            },
            {
              "name": undefined,
              "value": "UNKNOWN",
            },
          ],
        },
        "GenerateErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": "Details about why the request failed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "GenerateOptionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateOptionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "logprobs",
              "schema": {
                "description": "Which logprobs to include, if any. Defaults to NONE.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "LogprobsEnum",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deployment_id",
              "schema": {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deployment_name",
              "schema": {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requests",
              "schema": {
                "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateRequestRequest",
                  "type": "reference",
                },
              },
            },
            {
              "key": "options",
              "schema": {
                "description": "Additional configuration that can be used to control what's included in the response.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateOptionsRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateRequestRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateRequestRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "input_values",
              "schema": {
                "description": "Key/value pairs for each template variable defined in the deployment's prompt.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "key": "external_ids",
              "schema": {
                "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "results",
              "schema": {
                "description": "The results of each generation request.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateResult",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "data",
              "schema": {
                "description": "An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateResultData",
                  "type": "reference",
                },
              },
            },
            {
              "key": "error",
              "schema": {
                "description": "An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateResultError",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResultData": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResultData",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "completions",
              "schema": {
                "description": "The generated completions. This will generally be a list of length one.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "EnrichedNormalizedCompletion",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResultError": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResultError",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "message",
              "schema": {
                "description": "The error message returned by the LLM provider.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "IndexingStateEnum": {
          "description": undefined,
          "generatedName": "IndexingStateEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "AWAITING_PROCESSING",
            },
            {
              "name": undefined,
              "value": "QUEUED",
            },
            {
              "name": undefined,
              "value": "INDEXING",
            },
            {
              "name": undefined,
              "value": "INDEXED",
            },
            {
              "name": undefined,
              "value": "FAILED",
            },
          ],
        },
        "LogprobsEnum": {
          "description": undefined,
          "generatedName": "LogprobsEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "ALL",
            },
            {
              "name": undefined,
              "value": "NONE",
            },
          ],
        },
        "ModelTypeEnum": {
          "description": undefined,
          "generatedName": "ModelTypeEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "GENERATE",
            },
            {
              "name": undefined,
              "value": "CLASSIFY",
            },
          ],
        },
        "ModelVersionBuildConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionBuildConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "base_model",
              "schema": {
                "description": "The name of the base model used to create this model version, as identified by the LLM provider.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "sandbox_snapshot",
              "schema": {
                "description": "Information about the sandbox snapshot that was used to create this model version, if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ModelVersionSandboxSnapshot",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionExecConfigParameters": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionExecConfigParameters",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "temperature",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "max_tokens",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "stop",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "top_p",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "top_k",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "frequency_penalty",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "presence_penalty",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "logit_bias",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionExecConfigRead": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionExecConfigRead",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "prompt_template",
              "schema": {
                "description": "The template used to generate prompts for this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "parameters",
              "schema": {
                "description": "The generation parameters that are passed to the LLM provider at runtime.",
                "file": undefined,
                "schema": "ModelVersionExecConfigParameters",
                "type": "reference",
              },
            },
            {
              "key": "input_variables",
              "schema": {
                "description": "Names of the template variables specified in the prompt template.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionRead": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionRead",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "Timestamp of when this model version was created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "Human-friendly name for this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "model_type",
              "schema": {
                "description": "The type of task this model is used for.",
                "file": undefined,
                "schema": "ModelTypeEnum",
                "type": "reference",
              },
            },
            {
              "key": "provider",
              "schema": {
                "description": "Which LLM provider this model version is associated with.",
                "file": undefined,
                "schema": "ProviderEnum",
                "type": "reference",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The unique id of this model version as it exists in the above provider's system.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "build_config",
              "schema": {
                "description": "Configuration used to build this model version.",
                "file": undefined,
                "schema": "ModelVersionBuildConfig",
                "type": "reference",
              },
            },
            {
              "key": "exec_config",
              "schema": {
                "description": "Configuration used to execute this model version.",
                "file": undefined,
                "schema": "ModelVersionExecConfigRead",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionSandboxSnapshot": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionSandboxSnapshot",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the sandbox snapshot.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "prompt_index",
              "schema": {
                "description": "The index of the prompt in the sandbox snapshot.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NormalizedLogProbs": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NormalizedLogProbs",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tokens",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "NormalizedTokenLogProbs",
                  "type": "reference",
                },
              },
            },
            {
              "key": "likelihood",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NormalizedTokenLogProbs": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NormalizedTokenLogProbs",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "logprob",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "top_logprobs",
              "schema": {
                "description": undefined,
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text_offset",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaginatedSlimDocumentList": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaginatedSlimDocumentList",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "SlimDocument",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ProcessingStateEnum": {
          "description": undefined,
          "generatedName": "ProcessingStateEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "QUEUED",
            },
            {
              "name": undefined,
              "value": "PROCESSING",
            },
            {
              "name": undefined,
              "value": "PROCESSED",
            },
            {
              "name": undefined,
              "value": "FAILED",
            },
          ],
        },
        "ProviderEnum": {
          "description": undefined,
          "generatedName": "ProviderEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "OPENAI",
            },
            {
              "name": undefined,
              "value": "COHERE",
            },
            {
              "name": undefined,
              "value": "ANTHROPIC",
            },
          ],
        },
        "SearchErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": "Details about why the request failed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchFiltersRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchFiltersRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "external_ids",
              "schema": {
                "description": "The document external IDs to filter by",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "index_id",
              "schema": {
                "description": "The ID of the index to search against. Must provide either this or index_name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "index_name",
              "schema": {
                "description": "The name of the index to search against. Must provide either this or index_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "query",
              "schema": {
                "description": "The query to search for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "options",
              "schema": {
                "description": "Configuration options for the search.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchRequestOptionsRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchRequestOptionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchRequestOptionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "limit",
              "schema": {
                "description": "The maximum number of results to return.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "weights",
              "schema": {
                "description": "The weights to use for the search. Must add up to 1.0.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchWeightsRequest",
                  "type": "reference",
                },
              },
            },
            {
              "key": "result_merging",
              "schema": {
                "description": "The configuration for merging results.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchResultMergingRequest",
                  "type": "reference",
                },
              },
            },
            {
              "key": "filters",
              "schema": {
                "description": "The filters to apply to the search.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchFiltersRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "results",
              "schema": {
                "description": "The results of the search. Each result represents a chunk that matches the search query.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchResult",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "document",
              "schema": {
                "description": "The document that contains the chunk that matched the search query.",
                "file": undefined,
                "schema": "Document",
                "type": "reference",
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text of the chunk that matched the search query.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "score",
              "schema": {
                "description": "A score representing how well the chunk matches the search query.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchResultMergingRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResultMergingRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "enabled",
              "schema": {
                "description": "Whether to enable merging results",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchWeightsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchWeightsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "semantic_similarity",
              "schema": {
                "description": "The relative weight to give to semantic similarity",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": "The relative weight to give to keyword matches",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SlimDocument": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlimDocument",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The external ID that was originally provided when uploading the document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "last_uploaded_at",
              "schema": {
                "description": "A timestamp representing when this document was most recently uploaded.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "Human-friendly name for this document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "processing_state",
              "schema": {
                "description": "The current processing state of the document",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ProcessingStateEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "The document's current status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "StatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": "A list of keywords associated with this document. Originally provided when uploading the document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "document_to_document_indexes",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "DocumentDocumentToDocumentIndex",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "StatusEnum": {
          "description": undefined,
          "generatedName": "StatusEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "name": undefined,
              "value": "ACTIVE",
            },
          ],
        },
        "SubmitCompletionActualRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "Text representing what the completion _should_ have been.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quality",
              "schema": {
                "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SubmitCompletionActualsErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualsErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SubmitCompletionActualsRequestRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualsRequestRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deployment_id",
              "schema": {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deployment_name",
              "schema": {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "actuals",
              "schema": {
                "description": "Feedback regarding the quality of previously generated completions",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SubmitCompletionActualRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "add_to_index_names",
              "schema": {
                "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "A human-friendly name for this document. Typically the filename.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "contents",
              "schema": {
                "description": "The file contents of the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "document_id",
              "schema": {
                "description": "The ID of the newly created document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "apiKeyAuth": {
          "headerName": "X_API_KEY",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": "Default Server",
          "name": "Default",
          "url": "https://api.vellum.ai",
        },
      ],
      "tags": [],
      "title": "Vellum Client API",
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

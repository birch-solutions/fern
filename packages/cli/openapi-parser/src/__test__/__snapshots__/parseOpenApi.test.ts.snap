// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser devrev simple 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "DevRev's REST API.",
      "endpoints": [
        {
          "description": "Gets the download URL for the artifact.",
          "errors": [],
          "generatedRequestName": "ArtifactsLocateRequest",
          "headers": [],
          "method": "GET",
          "operationId": "artifacts-locate",
          "path": "/artifacts.locate",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "artifacts-locate-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "description": "Creates an artifact and generates an upload URL for its data.
",
          "errors": [],
          "generatedRequestName": "ArtifactsPrepareRequest",
          "headers": [],
          "method": "POST",
          "operationId": "artifacts-prepare",
          "path": "/artifacts.prepare",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "artifacts-prepare-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "artifacts-prepare-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "description": "Creates a JWT corresponding to the requested token type for the
authenticated user.
",
          "errors": [],
          "generatedRequestName": "AuthTokensCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-create",
          "path": "/auth-tokens.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Revokes the token that matches the given token ID issued under the
given Dev organization.
",
          "errors": [],
          "generatedRequestName": "AuthTokensDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-delete",
          "path": "/auth-tokens.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Gets the token metadata corresponding to the given token ID under the
given Dev organization.
",
          "errors": [],
          "generatedRequestName": "AuthTokensGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "auth-tokens-get",
          "path": "/auth-tokens.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "token_id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Gets the token metadata for all the tokens corresponding to the given
token type issued for a given subject.
",
          "errors": [],
          "generatedRequestName": "AuthTokensListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "auth-tokens-list",
          "path": "/auth-tokens.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "subject",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Revokes all the tokens that matches the given token type created by the
authenticated user.
",
          "errors": [],
          "generatedRequestName": "AuthTokensSelfDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-self-delete",
          "path": "/auth-tokens.self.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-self-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Updates token metadata of a token issued under a given Dev
organization.
",
          "errors": [],
          "generatedRequestName": "AuthTokensUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-update",
          "path": "/auth-tokens.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "auth-tokens-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "description": "Creates a new enterprise authentication connection for a Dev
organization. This authentication connection will not be enabled by
default for the organization and the user will need to explicitly
enable this. Keep in mind that at a time, only one authentication
connection can be enabled for a Dev organization. At present, only 5
enterprise connections can be created by an organization.
",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-create",
          "path": "/dev-orgs.auth-connections.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Deletes an authentication connection. Only enterprise connections which
are explicitly set up for a Dev organization can be deleted. Default
connections can not be deleted using this method.
",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-delete",
          "path": "/dev-orgs.auth-connections.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Retrieves the details for an authentication connection.",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-org-auth-connections-get",
          "path": "/dev-orgs.auth-connections.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Lists all the authentication connections available for a Dev
organization. This list will include both social and enterprise
connections which are either available by default or are explicitly
created by the user.
",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-org-auth-connections-list",
          "path": "/dev-orgs.auth-connections.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Enable or disable an authentication connection for a Dev organization.
Currently, only 1 authentication connection can be enabled at a time.
When a new authentication connection is enabled, the connection which
is currently enabled for the Dev organization is automatically
disabled.
",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsToggleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-toggle",
          "path": "/dev-orgs.auth-connections.toggle",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-toggle-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Updates an authentication connection.",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-update",
          "path": "/dev-orgs.auth-connections.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-org-auth-connections-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "description": "Lists users within your organization.",
          "errors": [],
          "generatedRequestName": "DevUsersListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-users-list",
          "path": "/dev-users.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "user-state",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-users-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "description": "Gets the authenticated user's information.",
          "errors": [],
          "generatedRequestName": "DevUsersSelfRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-users-self",
          "path": "/dev-users.self",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "dev-users-self-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "description": "Creates new [part](https://devrev.ai/docs/product/parts).",
          "errors": [],
          "generatedRequestName": "PartsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "parts-create",
          "path": "/parts.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Deletes a [part](https://devrev.ai/docs/product/parts).",
          "errors": [],
          "generatedRequestName": "PartsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "parts-delete",
          "path": "/parts.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errors": [],
          "generatedRequestName": "PartsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "parts-get",
          "path": "/parts.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).
",
          "errors": [],
          "generatedRequestName": "PartsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "parts-list",
          "path": "/parts.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "part-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Updates a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errors": [],
          "generatedRequestName": "PartsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "parts-update",
          "path": "/parts.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "parts-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "description": "Creates a Rev organization in the authenticated user's Dev
organization.
",
          "errors": [],
          "generatedRequestName": "RevOrgsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-create",
          "path": "/rev-orgs.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Deletes the Rev organization.",
          "errors": [],
          "generatedRequestName": "RevOrgsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-delete",
          "path": "/rev-orgs.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Retrieves the Rev organization's information.",
          "errors": [],
          "generatedRequestName": "RevOrgsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "rev-orgs-get",
          "path": "/rev-orgs.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Gets the list of Rev organizations' information belonging to the
authenticated user's Dev Organization which the user is also authorized
to access.
",
          "errors": [],
          "generatedRequestName": "RevOrgsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "rev-orgs-list",
          "path": "/rev-orgs.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "created_date.after",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "created_date.before",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "modified_date.after",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "modified_date.before",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Updates the Rev organization's information.",
          "errors": [],
          "generatedRequestName": "RevOrgsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-update",
          "path": "/rev-orgs.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "rev-orgs-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "description": "Creates a new tag, which is used to create associations between objects
and a logical concept denoted by the tag's name.
",
          "errors": [],
          "generatedRequestName": "TagsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "tags-create",
          "path": "/tags.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Deletes a tag.",
          "errors": [],
          "generatedRequestName": "TagsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "tags-delete",
          "path": "/tags.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Gets a tag's information.",
          "errors": [],
          "generatedRequestName": "TagsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "tags-get",
          "path": "/tags.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Lists the available tags.",
          "errors": [],
          "generatedRequestName": "TagsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "tags-list",
          "path": "/tags.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Updates a tag's information.",
          "errors": [],
          "generatedRequestName": "TagsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "tags-update",
          "path": "/tags.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "tags-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "description": "Creates a new entry on an object's timeline.",
          "errors": [],
          "generatedRequestName": "TimelineEntriesCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "timeline-entries-create",
          "path": "/timeline-entries.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "description": "Gets an entry on an object's timeline.",
          "errors": [],
          "generatedRequestName": "TimelineEntriesGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "timeline-entries-get",
          "path": "/timeline-entries.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "description": "Lists the timeline entries for an object.",
          "errors": [],
          "generatedRequestName": "TimelineEntriesListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "timeline-entries-list",
          "path": "/timeline-entries.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "object",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "description": "Updates an entry on an object's timeline.",
          "errors": [],
          "generatedRequestName": "TimelineEntriesUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "timeline-entries-update",
          "path": "/timeline-entries.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entries-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "description": "Creates a new webhook target.",
          "errors": [],
          "generatedRequestName": "WebhooksCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-create",
          "path": "/webhooks.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Deletes the requested webhook.",
          "errors": [],
          "generatedRequestName": "WebhooksDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-delete",
          "path": "/webhooks.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Gets the requested webhook's information.",
          "errors": [],
          "generatedRequestName": "WebhooksGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "webhooks-get",
          "path": "/webhooks.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Lists the webhooks.",
          "errors": [],
          "generatedRequestName": "WebhooksListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "webhooks-list",
          "path": "/webhooks.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Updates the requested webhook.",
          "errors": [],
          "generatedRequestName": "WebhooksUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-update",
          "path": "/webhooks.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "webhooks-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "description": "Creates new work ([issue](https://devrev.ai/docs/product/build),
[ticket](https://devrev.ai/docs/product/support)) item.
",
          "errors": [],
          "generatedRequestName": "WorksCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "works-create",
          "path": "/works.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-create-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Deletes a work item.",
          "errors": [],
          "generatedRequestName": "WorksDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "works-delete",
          "path": "/works.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-delete-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Exports a collection of work items.",
          "errors": [],
          "generatedRequestName": "WorksExportRequest",
          "headers": [],
          "method": "GET",
          "operationId": "works-export",
          "path": "/works.export",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "first",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-export-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Gets a work item's information.",
          "errors": [],
          "generatedRequestName": "WorksGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "works-get",
          "path": "/works.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-get-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Lists a collection of work items.",
          "errors": [],
          "generatedRequestName": "WorksListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "works-list",
          "path": "/works.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-list-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "description": "Updates a work item's information.",
          "errors": [],
          "generatedRequestName": "WorksUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "works-update",
          "path": "/works.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "works-update-response",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
      ],
      "schemas": {
        "artifact-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "artifacts-locate-response": {
          "allOf": [],
          "description": "The response to getting an artifact's download URL.",
          "generatedName": "ArtifactsLocateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "expires_at",
              "schema": {
                "description": "The expiration timestamp of the URL.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The artifact's download URL.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-request": {
          "allOf": [],
          "description": "The request to prepare a URL to upload a file.",
          "generatedName": "ArtifactsPrepareRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "file_name",
              "schema": {
                "description": "The name of the file that's being uploaded.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response": {
          "allOf": [],
          "description": "The response to preparing a URL to upload a file.",
          "generatedName": "ArtifactsPrepareResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "form_data",
              "schema": {
                "description": "The POST policy form data.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "artifacts-prepare-response-form-data",
                  "type": "reference",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The generated artifact's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The URL that the file's data should be uploaded to.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response-form-data": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ArtifactsPrepareResponseFormData",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "key",
              "schema": {
                "description": "Key of the form field.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "Value corresponding to the key.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "atom-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "created_date",
              "schema": {
                "description": "Timestamp when the object was created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_id",
              "schema": {
                "description": "Human-readable object ID unique to the Dev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "modified_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "modified_date",
              "schema": {
                "description": "Timestamp when the object was last modified.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "atom-base-summary": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_id",
              "schema": {
                "description": "Human-readable object ID unique to the Dev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-connection": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "enabled",
                "schema": {
                  "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-connection-type",
                  "type": "reference",
                },
              },
            ],
            "description": "Connection object that specifies the configuration for an
authentication connection that is set up for a Dev organization.
",
            "discriminantProperty": "type",
            "generatedName": "AuthConnection",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "social": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-social",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "auth-connection-options-azure-ad": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an Azure AD
authentication connection.
",
          "generatedName": "AuthConnectionOptionsAzureAd",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "Client ID for the Azure authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client_secret",
              "schema": {
                "description": "Client secret for the Azure authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Domain URL of the Azure authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-google-apps": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a Google Apps
authentication connection.
",
          "generatedName": "AuthConnectionOptionsGoogleApps",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "Client ID for the Google Apps authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client_secret",
              "schema": {
                "description": "Client secret for the Google Apps authentication connection.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tenant_domain",
              "schema": {
                "description": "Tenant domain URL of the Google Apps authentication connection.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-oidc": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an OIDC
authentication connection.
",
          "generatedName": "AuthConnectionOptionsOidc",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "Client ID for the OIDC authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client_secret",
              "schema": {
                "description": "Client secret for the OIDC authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "issuer",
              "schema": {
                "description": "Issuer URL of the OIDC authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-saml": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a SAML
authentication connection.
",
          "generatedName": "AuthConnectionOptionsSaml",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "sign_in_endpoint",
              "schema": {
                "description": "Sign In endpoint for the SAML authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "signing_cert",
              "schema": {
                "description": "Signing certificate for the SAML authentication connection.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-social": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "auth-connection-toggle": {
          "description": undefined,
          "generatedName": "AuthConnectionToggle",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "disable",
              "nameOverride": undefined,
              "value": "disable",
            },
            {
              "generatedName": "enable",
              "nameOverride": undefined,
              "value": "enable",
            },
          ],
        },
        "auth-connection-type": {
          "description": "Defines the type for the authentication connection. The configuration
for each authentication connection will depend on the type value.
",
          "generatedName": "AuthConnectionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "generatedName": "social",
              "nameOverride": undefined,
              "value": "social",
            },
            {
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "auth-token": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AuthToken",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "An identifier that represents the application that requested the
token. Only applicable for application access tokens.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_at",
              "schema": {
                "description": "The time at which the token expires.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "issued_at",
              "schema": {
                "description": "The time at which the token was issued.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "scopes",
              "schema": {
                "description": "The scopes associated with the issued token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-status",
                  "type": "reference",
                },
              },
            },
            {
              "key": "subject",
              "schema": {
                "description": "The subject of the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-token-grant-type": {
          "description": "Specifies the process of obtaining a token.",
          "generatedName": "AuthTokenGrantType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UrnDevrevParamsOauthGrantTypeTokenIssue",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:grant-type:token-issue",
            },
            {
              "generatedName": "UrnIetfParamsOauthGrantTypeTokenExchange",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:grant-type:token-exchange",
            },
          ],
        },
        "auth-token-requested-token-type": {
          "description": "The type of the requested token.",
          "generatedName": "AuthTokenRequestedTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeAat",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeAatPublic",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat:public",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeDev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:dev",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypePat",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:pat",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeRev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:rev",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSession",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:session",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSessionDev0",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:session:dev0",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSys",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:sys",
            },
            {
              "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-status": {
          "description": "The status of the token.",
          "generatedName": "AuthTokenStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "expired",
              "nameOverride": undefined,
              "value": "expired",
            },
            {
              "generatedName": "revoked",
              "nameOverride": undefined,
              "value": "revoked",
            },
          ],
        },
        "auth-token-subject-token-type": {
          "description": "The type of the subject token.",
          "generatedName": "AuthTokenSubjectTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeJwtAuth0",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:auth0",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeJwtDev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:dev",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeRevinfo",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:revinfo",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSysu",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:sysu",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfo",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfoProfile",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo:profile",
            },
            {
              "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-token-type": {
          "description": "The type of the issued token. Bearer is the only supported token type.
",
          "generatedName": "AuthTokenTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "bearer",
              "nameOverride": undefined,
              "value": "bearer",
            },
          ],
        },
        "auth-tokens-create-request": {
          "allOf": [],
          "description": "A request to create a new token corresponding to the requested token
type.
",
          "generatedName": "AuthTokensCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "aud",
              "schema": {
                "description": "The expected audience values with respect to the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "client_id",
              "schema": {
                "description": "An identifier that represents the application which is requesting
the token. If no client_id is present in the request to generate an
application access token (AAT), DevRev will generate a client_id.
This client_id is only associated with an AAT.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": "The expected validity lifetime of the token in number of days.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "grant_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-grant-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-tokens-rev-info",
                  "type": "reference",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": "The requested set of scopes associated with the issued token. A
space-delimited list of values in which the order of values does
not matter.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subject_token",
              "schema": {
                "description": "Represents the entity that requests the token. Not required when
requesting an application access token (AAT).
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subject_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-subject-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new token corresponding to the
requested token type.
",
          "generatedName": "AuthTokensCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "access_token",
              "schema": {
                "description": "The issued JSON Web Token (JWT) corresponding to the requested
token type.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "client_id",
              "schema": {
                "description": "An identifier that represents the application which is requesting
the token. Only present in a response corresponding to an
application access token (AAT).
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": "The validity lifetime of the token specified in seconds since Unix
epoch.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "refresh_token",
              "schema": {
                "description": "A token to refresh the issued token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": "The scopes associated with the issued token. A space-delimited list
of values in which the order of values does not matter.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-token-token-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-delete-request": {
          "allOf": [],
          "description": "The request to revoke the token.",
          "generatedName": "AuthTokensDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token_id",
              "schema": {
                "description": "The unique identifier for the token under a given Dev organization.
If no token ID is provided, then the token ID will be set from the
JTI claim of the token in the authorization header.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-get-response": {
          "allOf": [],
          "description": "The response to get the token metadata.",
          "generatedName": "AuthTokensGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-list-response": {
          "allOf": [],
          "description": "The response to list the token metadata.",
          "generatedName": "AuthTokensListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tokens",
              "schema": {
                "description": "The list of token metadata.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-org-traits": {
          "allOf": [],
          "description": "Carries Rev org info.",
          "generatedName": "AuthTokensOrgTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The display name of the Rev org.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "The domain of the Rev org.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-rev-info": {
          "allOf": [],
          "description": "Carries info corresponding to the Rev user to be provisioned and/or
issue a Rev session token.
",
          "generatedName": "AuthTokensRevInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "org_ref",
              "schema": {
                "description": "An identifier which uniquely identifies a Rev org.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "org_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-tokens-org-traits",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_user_id",
              "schema": {
                "description": "The unique ID of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "user_ref",
              "schema": {
                "description": "An identifier which uniquely identifies a Rev user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "user_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-tokens-user-traits",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-self-delete-request": {
          "allOf": [],
          "description": "The request to delete all the tokens created by the authenticated user,
that match with the provided token type.
",
          "generatedName": "AuthTokensSelfDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-request": {
          "allOf": [],
          "description": "A request to update the token metadata.",
          "generatedName": "AuthTokensUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "token_id",
              "schema": {
                "description": "The unique identifier of the token under a given Dev organization.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-response": {
          "allOf": [],
          "description": "Response for the request to update the token metadata.",
          "generatedName": "AuthTokensUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-user-traits": {
          "allOf": [],
          "description": "Carries Rev user info.",
          "generatedName": "AuthTokensUserTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The display name of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "The email address of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "full_name",
              "schema": {
                "description": "The full name of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "capability": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "capability-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "dev-org-auth-connections-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "dev-org-auth-connections-create-request-type",
                  "type": "reference",
                },
              },
            ],
            "description": "Request to create a new enterprise authentication connection.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-create-request-type": {
          "description": "Defines the type for the authentication connection. Different types of
authentication connections have different configuration parameters.
",
          "generatedName": "DevOrgAuthConnectionsCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-delete-request": {
          "allOf": [],
          "description": "Request to delete an enterprise authentication connection for a Dev
organization. A default connection and a connection which is currently
enabled cannot be deleted.
",
          "generatedName": "DevOrgAuthConnectionsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-get-response": {
          "allOf": [],
          "description": "Response object encapsulating the configuration details of an
authentication connection.
",
          "generatedName": "DevOrgAuthConnectionsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-list-response": {
          "allOf": [],
          "description": "Response object for the request to list all the social and enterprise
authentication connections configured for a Dev organization.
",
          "generatedName": "DevOrgAuthConnectionsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connections",
              "schema": {
                "description": "List of all the authentication connections currently configured for
a Dev organization.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-connection",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-toggle-request": {
          "allOf": [],
          "description": "Request to enable or disable an authentication connection for a Dev
organization.
",
          "generatedName": "DevOrgAuthConnectionsToggleRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be toggled.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "toggle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "auth-connection-toggle",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection which is to be updated.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "dev-org-auth-connections-update-request-type",
                  "type": "reference",
                },
              },
            ],
            "description": "Request to update an enterprise authentication connection for a Dev
organization.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-update-request-type": {
          "description": "Specifies the type for the authentication connection. Different types
of authentication connections have different configuration parameters
that can be updated.
",
          "generatedName": "DevOrgAuthConnectionsUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "generatedName": "none",
              "nameOverride": undefined,
              "value": "none",
            },
            {
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-update-response": {
          "allOf": [],
          "description": "Response for the request to update an enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-user": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "user-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "DevUser",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "external_identities",
              "schema": {
                "description": "IDs of the Dev User outside the DevRev SOR.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "external-identity",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-user-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "dev-users-list-response": {
          "allOf": [],
          "description": "The response to listing the Dev users.",
          "generatedName": "DevUsersListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dev_users",
              "schema": {
                "description": "The list of Dev users.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "dev-user",
                  "type": "reference",
                },
              },
            },
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-users-self-response": {
          "allOf": [],
          "description": "The response to getting the information for the authenticated user.
",
          "generatedName": "DevUsersSelfResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dev_user",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "dev-user",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "empty": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "enhancement": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "part-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Enhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "target_close_date",
              "schema": {
                "description": "Timestamp when the enhancement is expected to be closed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "enhancement-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "error-bad-request": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorBadRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-bad-request-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-bad-request": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-invalid-enum-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestInvalidEnumValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the field.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "field_name",
              "schema": {
                "description": "The field whose enum value is invalid.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "The value that was received.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-missing-required-field": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestMissingRequiredField",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "field_name",
              "schema": {
                "description": "The missing field's name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-parse-error": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-type": {
          "description": undefined,
          "generatedName": "ErrorBadRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "bad_request",
              "nameOverride": undefined,
              "value": "bad_request",
            },
            {
              "generatedName": "invalid_enum_value",
              "nameOverride": undefined,
              "value": "invalid_enum_value",
            },
            {
              "generatedName": "missing_required_field",
              "nameOverride": undefined,
              "value": "missing_required_field",
            },
            {
              "generatedName": "parse_error",
              "nameOverride": undefined,
              "value": "parse_error",
            },
            {
              "generatedName": "value_not_permitted",
              "nameOverride": undefined,
              "value": "value_not_permitted",
            },
          ],
        },
        "error-bad-request-value-not-permitted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestValueNotPermitted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "field_name",
              "schema": {
                "description": "The field whose value is not permitted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "reason",
              "schema": {
                "description": "The reason the value isn't permitted.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "message",
              "schema": {
                "description": "The message associated with the error.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorForbidden",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-forbidden-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden-forbidden": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-forbidden-type": {
          "description": undefined,
          "generatedName": "ErrorForbiddenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "forbidden",
              "nameOverride": undefined,
              "value": "forbidden",
            },
          ],
        },
        "error-internal-server-error": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorInternalServerError",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "reference_id",
              "schema": {
                "description": "A unique ID that's generated for the error that can be used for
inquiry.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-internal-server-error-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-internal-server-error-internal-error": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-internal-server-error-type": {
          "description": undefined,
          "generatedName": "ErrorInternalServerErrorType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "internal_error",
              "nameOverride": undefined,
              "value": "internal_error",
            },
          ],
        },
        "error-not-found": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorNotFound",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-not-found-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-not-found-not-found": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-not-found-type": {
          "description": undefined,
          "generatedName": "ErrorNotFoundType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "not_found",
              "nameOverride": undefined,
              "value": "not_found",
            },
          ],
        },
        "error-service-unavailable": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorServiceUnavailable",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-service-unavailable-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-service-unavailable-service-unavailable": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-service-unavailable-type": {
          "description": undefined,
          "generatedName": "ErrorServiceUnavailableType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "service_unavailable",
              "nameOverride": undefined,
              "value": "service_unavailable",
            },
          ],
        },
        "error-too-many-requests": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorTooManyRequests",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "retry_after",
              "schema": {
                "description": "The number of seconds after which the client should retry.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-too-many-requests-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-too-many-requests-too-many-requests": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-too-many-requests-type": {
          "description": undefined,
          "generatedName": "ErrorTooManyRequestsType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "too_many_requests",
              "nameOverride": undefined,
              "value": "too_many_requests",
            },
          ],
        },
        "error-unauthorized": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorUnauthorized",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "error-unauthorized-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-unauthorized-type": {
          "description": undefined,
          "generatedName": "ErrorUnauthorizedType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "unauthenticated",
              "nameOverride": undefined,
              "value": "unauthenticated",
            },
          ],
        },
        "error-unauthorized-unauthenticated": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "event-part-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-part-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the part that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-part-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the Rev organization that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the timeline entry that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the webhook that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the work that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-work-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "external-identity": {
          "description": "External identity of a user.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "feature": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "feature-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "group-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "issue": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Issue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "issue-priority": {
          "description": "Priority of the work based upon impact and criticality.",
          "generatedName": "IssuePriority",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "p0",
              "nameOverride": undefined,
              "value": "p0",
            },
            {
              "generatedName": "p1",
              "nameOverride": undefined,
              "value": "p1",
            },
            {
              "generatedName": "p2",
              "nameOverride": undefined,
              "value": "p2",
            },
            {
              "generatedName": "p3",
              "nameOverride": undefined,
              "value": "p3",
            },
          ],
        },
        "list-mode": {
          "description": "The iteration mode to use. If "after", then entries after the provided
cursor will be returned, or if no cursor is provided, then from the
beginning. If "before", then entries before the provided cursor will be
returned, or if no cursor is provided, then from the end. Entries will
always be returned in the specified sort-by order.
",
          "generatedName": "ListMode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "after",
              "nameOverride": undefined,
              "value": "after",
            },
            {
              "generatedName": "before",
              "nameOverride": undefined,
              "value": "before",
            },
          ],
        },
        "org-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "Name of the Organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "Name of the Organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-environment": {
          "description": "The environment of the Org. Defaults to 'production' if not specified.
",
          "generatedName": "OrgEnvironment",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "production",
              "nameOverride": undefined,
              "value": "production",
            },
            {
              "generatedName": "staging",
              "nameOverride": undefined,
              "value": "staging",
            },
            {
              "generatedName": "test",
              "nameOverride": undefined,
              "value": "test",
            },
          ],
        },
        "org-summary": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "OrgSummary",
            "nameOverride": undefined,
            "schemas": {
              "rev_org": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "org-type": {
          "description": undefined,
          "generatedName": "OrgType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "rev_org",
              "nameOverride": undefined,
              "value": "rev_org",
            },
          ],
        },
        "part": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Part",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "schema": "capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "schema": "enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "schema": "feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "schema": "product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": "The attached artifacts.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "Description of the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "owned_by",
              "schema": {
                "description": "The users that own the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "Tags associated with the object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "part-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "part-summary": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartSummary",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "schema": "capability-summary",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "schema": "enhancement-summary",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "schema": "feature-summary",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "schema": "product-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-type": {
          "description": undefined,
          "generatedName": "PartType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "capability",
              "nameOverride": undefined,
              "value": "capability",
            },
            {
              "generatedName": "enhancement",
              "nameOverride": undefined,
              "value": "enhancement",
            },
            {
              "generatedName": "feature",
              "nameOverride": undefined,
              "value": "feature",
            },
            {
              "generatedName": "product",
              "nameOverride": undefined,
              "value": "product",
            },
          ],
        },
        "parts-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "Description of the part.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "Name of the part.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the part.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-create-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-create-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-create-request-feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-create-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-create-request-capability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestCapability",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent product for the capability.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent part on which the enhancement is to be created.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "target_close_date",
              "schema": {
                "description": "Target close date by which enhancement is expected to be closed.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-feature": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestFeature",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent capability/feature for the feature.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-product": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the part to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-response": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "parts",
              "schema": {
                "description": "The list of parts.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part",
                  "type": "reference",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "The updated description of the part.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the part to update.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "The updated name of the part.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "parts-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-update-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-update-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-update-request-feature",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "schema": "parts-update-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-update-request-capability": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "target_close_date",
              "schema": {
                "description": "Updates the target close date of the enhancement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-feature": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-product": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "product": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "product-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "rev-org": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "org-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevOrg",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description of the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a unique identifier for the Rev (customer)
organization from your primary customer system of records. If none
is specified, a system-generated identifier will be assigned to the
organization.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-org-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "org-base-summary",
          "type": "reference",
        },
        "rev-orgs-create-request": {
          "allOf": [],
          "description": "Request object to create a new Rev organization in the Dev
organization.
",
          "generatedName": "RevOrgsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description of the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_name",
              "schema": {
                "description": "Name of the Rev organization.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tier",
              "schema": {
                "description": "The tier of the RevOrg.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-create-response": {
          "allOf": [],
          "description": "Response object for request to create a new Rev organization.
",
          "generatedName": "RevOrgsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-request": {
          "allOf": [],
          "description": "Request object to delete a Rev organization.",
          "generatedName": "RevOrgsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-response": {
          "description": "The response to deleting a Rev organization.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "rev-orgs-get-response": {
          "allOf": [],
          "description": "The response to getting a Rev organization's information.",
          "generatedName": "RevOrgsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-list-response": {
          "allOf": [],
          "description": "The response to getting a list of Rev organizations' information.
",
          "generatedName": "RevOrgsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_orgs",
              "schema": {
                "description": "List with all of the Rev organizations' information.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "rev-org",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-request": {
          "allOf": [],
          "description": "Request object to update information of the Rev organization.
",
          "generatedName": "RevOrgsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description of the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_name",
              "schema": {
                "description": "Customer chosen name for the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "tier",
              "schema": {
                "description": "The tier of the RevOrg.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-response": {
          "allOf": [],
          "description": "Response object to updating Rev organization's information.",
          "generatedName": "RevOrgsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-user-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "user-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevUserSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a mutable unique identifier for a user within the
Rev organization from your primary customer record. If none is
available, a good alternative is the email address/phone number
which could uniquely identify the user. If none is specified, a
system-generated identifier will be assigned to the user.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "set-tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SetTagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage": {
          "allOf": [],
          "description": "Describes the current stage of a work item.",
          "generatedName": "Stage",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Current stage name of the work item.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "stage-init": {
          "allOf": [],
          "description": "Sets an object's initial stage.",
          "generatedName": "StageInit",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the stage.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage-update": {
          "allOf": [],
          "description": "Updates an object's stage.",
          "generatedName": "StageUpdate",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The updated name of the stage, otherwise unchanged if not set.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "sys-user-summary": {
          "description": undefined,
          "file": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "tag": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Tag",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the tag, where a value is provided when a
tag is associated with an object. If empty, then no value should be
provided when the association is made.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "An informative description for the tag that should provide context
on the tag's purpose and usage.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tag-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TagSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag-summary",
                "type": "reference",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "The value for the object's association with the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-create-request": {
          "allOf": [],
          "description": "The request to create a new tag.",
          "generatedName": "TagsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the tag, or empty if no values are
permitted.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The description for the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name for the tag, which must be unique across all tags.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-create-response": {
          "allOf": [],
          "description": "The response to creating a new tag.",
          "generatedName": "TagsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-request": {
          "allOf": [],
          "description": "The request to delete a tag.",
          "generatedName": "TagsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-response": {
          "description": "The response for deleting a tag.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "tags-get-response": {
          "allOf": [],
          "description": "The response to getting a tag's information.",
          "generatedName": "TagsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-list-response": {
          "allOf": [],
          "description": "The response to listing the tags.",
          "generatedName": "TagsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "The list of tags.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "tag",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-allowed-values": {
          "allOf": [],
          "description": "Specifies an update to a tag's allowed values.",
          "generatedName": "TagsUpdateAllowedValues",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the allowed values for the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-request": {
          "allOf": [],
          "description": "The request to update a tag.",
          "generatedName": "TagsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "tags-update-allowed-values",
                  "type": "reference",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The updated description of the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The updated name of the tag. The name must be unique across all
tags.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-response": {
          "allOf": [],
          "description": "The response for updating a tag.",
          "generatedName": "TagsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ticket": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Ticket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "group",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "group-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ticket-severity": {
          "description": "Severity of the ticket.",
          "generatedName": "TicketSeverity",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "blocker",
              "nameOverride": undefined,
              "value": "blocker",
            },
            {
              "generatedName": "high",
              "nameOverride": undefined,
              "value": "high",
            },
            {
              "generatedName": "low",
              "nameOverride": undefined,
              "value": "low",
            },
            {
              "generatedName": "medium",
              "nameOverride": undefined,
              "value": "medium",
            },
          ],
        },
        "timeline-comment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "timeline-entry-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": "The artifacts for the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "The comment's body. If the comment has been deleted, then no body
will appear in the response.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "snap_kit_body",
              "schema": {
                "description": "The SnapKit Body of the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-comment-body-type": {
          "description": "The type of the body to use for the comment.",
          "generatedName": "TimelineCommentBodyType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "snap_kit",
              "nameOverride": undefined,
              "value": "snap_kit",
            },
            {
              "generatedName": "text",
              "nameOverride": undefined,
              "value": "text",
            },
          ],
        },
        "timeline-entries-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "object",
                "schema": {
                  "description": "The ID of the object to create the timeline entry for.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entries-create-request-type",
                  "type": "reference",
                },
              },
              {
                "key": "visibility",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "timeline-entry-visibility",
                    "type": "reference",
                  },
                },
              },
            ],
            "description": "The request to create a timeline entry for an object.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entries-create-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-create-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": "The IDs of the artifacts attached to the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "The comment's body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "snap_kit_body",
              "schema": {
                "description": "The SnapKit body of the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-create-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-create-response": {
          "allOf": [],
          "description": "The response to creating a timeline entry for an object.",
          "generatedName": "TimelineEntriesCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-get-response": {
          "allOf": [],
          "description": "The request to getting a timeline entry.",
          "generatedName": "TimelineEntriesGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-list-response": {
          "allOf": [],
          "description": "The response to listing timeline entries for an object.",
          "generatedName": "TimelineEntriesListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timeline_entries",
              "schema": {
                "description": "The timeline entries for the object.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entry",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the timeline entry to update.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entries-update-request-type",
                  "type": "reference",
                },
              },
            ],
            "description": "The request to update a timeline entry.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entries-update-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-update-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entries-update-request-timeline-comment-artifacts",
                  "type": "reference",
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "The updated comment's body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "snap_kit_body",
              "schema": {
                "description": "The SnapKit body of the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-timeline-comment-artifacts": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "add",
              "schema": {
                "description": "Adds the provided artifacts to the comment. An artifact cannot be
added more than once, i.e. nothing is done if the artifact is
already attached. Mutually exclusive with \`set\`.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "remove",
              "schema": {
                "description": "Removes the provided artifacts from the comment. If an artifact is
not present, then it's ignored. Mututally exclusive with \`set\`.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "set",
              "schema": {
                "description": "Sets the field to the provided artifacts.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-update-response": {
          "allOf": [],
          "description": "The response to updating a timeline entry.",
          "generatedName": "TimelineEntriesUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entry": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "timeline-entry-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "TimelineEntry",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "schema": "timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entry-base": {
          "description": undefined,
          "file": undefined,
          "schema": "atom-base",
          "type": "reference",
        },
        "timeline-entry-type": {
          "description": undefined,
          "generatedName": "TimelineEntryType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entry-visibility": {
          "description": "The visibility of the entry. If 'private', then the entry is only
visible to the creator, otherwise if not set, then the entry has
default visibility.
",
          "generatedName": "TimelineEntryVisibility",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "private",
              "nameOverride": undefined,
              "value": "private",
            },
          ],
        },
        "user-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The user's display name. The name is non-unique and mutable.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "Email address of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "full_name",
              "schema": {
                "description": "Full name of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "phone_numbers",
              "schema": {
                "description": "Phone numbers of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The user's display name. The name is non-unique and mutable.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "Email address of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "full_name",
              "schema": {
                "description": "Full name of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-state": {
          "description": "State of the user.",
          "generatedName": "UserState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "deactivated",
              "nameOverride": undefined,
              "value": "deactivated",
            },
            {
              "generatedName": "locked",
              "nameOverride": undefined,
              "value": "locked",
            },
            {
              "generatedName": "shadow",
              "nameOverride": undefined,
              "value": "shadow",
            },
            {
              "generatedName": "unassigned",
              "nameOverride": undefined,
              "value": "unassigned",
            },
          ],
        },
        "user-summary": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "user-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "UserSummary",
            "nameOverride": undefined,
            "schemas": {
              "dev_user": {
                "description": undefined,
                "file": undefined,
                "schema": "dev-user-summary",
                "type": "reference",
              },
              "rev_user": {
                "description": undefined,
                "file": undefined,
                "schema": "rev-user-summary",
                "type": "reference",
              },
              "sys_user": {
                "description": undefined,
                "file": undefined,
                "schema": "sys-user-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "user-type": {
          "description": undefined,
          "generatedName": "UserType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "dev_user",
              "nameOverride": undefined,
              "value": "dev_user",
            },
            {
              "generatedName": "rev_user",
              "nameOverride": undefined,
              "value": "rev_user",
            },
            {
              "generatedName": "sys_user",
              "nameOverride": undefined,
              "value": "sys_user",
            },
          ],
        },
        "webhook": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Webhook",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "event_types",
              "schema": {
                "description": "The event types that the webhook will receive.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "The secret to use for verifying webhook events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhook-status",
                  "type": "reference",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The event's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "part_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-part-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "part_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-part-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "part_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-part-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-rev-org-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-rev-org-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-rev-org-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tag_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-tag-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tag_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-tag-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tag_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-tag-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timeline_entry_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-timeline-entry-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timeline_entry_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-timeline-entry-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timeline_entry_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-timeline-entry-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "Timestamp of the webhook's invocation for the event. Note this
should be used to protect against replay attacks, where the event
should only be processed if the timestamp isn't stale by several
seconds.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhook-event-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "verify",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhook-event-verify",
                  "type": "reference",
                },
              },
            },
            {
              "key": "webhook_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-webhook-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "webhook_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-webhook-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "webhook_id",
              "schema": {
                "description": "ID of the webhook for the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "webhook_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-webhook-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "work_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-work-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "work_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-work-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "work_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "event-work-updated",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "challenge",
              "schema": {
                "description": "The challenge from the "verify" request, otherwise this should not
be set for other request types.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-type": {
          "description": "The event types that the webhook will receive.",
          "generatedName": "WebhookEventType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "part_created",
              "nameOverride": undefined,
              "value": "part_created",
            },
            {
              "generatedName": "part_deleted",
              "nameOverride": undefined,
              "value": "part_deleted",
            },
            {
              "generatedName": "part_updated",
              "nameOverride": undefined,
              "value": "part_updated",
            },
            {
              "generatedName": "rev_org_created",
              "nameOverride": undefined,
              "value": "rev_org_created",
            },
            {
              "generatedName": "rev_org_deleted",
              "nameOverride": undefined,
              "value": "rev_org_deleted",
            },
            {
              "generatedName": "rev_org_updated",
              "nameOverride": undefined,
              "value": "rev_org_updated",
            },
            {
              "generatedName": "tag_created",
              "nameOverride": undefined,
              "value": "tag_created",
            },
            {
              "generatedName": "tag_deleted",
              "nameOverride": undefined,
              "value": "tag_deleted",
            },
            {
              "generatedName": "tag_updated",
              "nameOverride": undefined,
              "value": "tag_updated",
            },
            {
              "generatedName": "timeline_entry_created",
              "nameOverride": undefined,
              "value": "timeline_entry_created",
            },
            {
              "generatedName": "timeline_entry_deleted",
              "nameOverride": undefined,
              "value": "timeline_entry_deleted",
            },
            {
              "generatedName": "timeline_entry_updated",
              "nameOverride": undefined,
              "value": "timeline_entry_updated",
            },
            {
              "generatedName": "verify",
              "nameOverride": undefined,
              "value": "verify",
            },
            {
              "generatedName": "webhook_created",
              "nameOverride": undefined,
              "value": "webhook_created",
            },
            {
              "generatedName": "webhook_deleted",
              "nameOverride": undefined,
              "value": "webhook_deleted",
            },
            {
              "generatedName": "webhook_updated",
              "nameOverride": undefined,
              "value": "webhook_updated",
            },
            {
              "generatedName": "work_created",
              "nameOverride": undefined,
              "value": "work_created",
            },
            {
              "generatedName": "work_deleted",
              "nameOverride": undefined,
              "value": "work_deleted",
            },
            {
              "generatedName": "work_updated",
              "nameOverride": undefined,
              "value": "work_updated",
            },
          ],
        },
        "webhook-event-verify": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventVerify",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "challenge",
              "schema": {
                "description": "The challenge that must be echoed in the response.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhook-status": {
          "description": "The status of the webhook.",
          "generatedName": "WebhookStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "inactive",
              "nameOverride": undefined,
              "value": "inactive",
            },
            {
              "generatedName": "unverified",
              "nameOverride": undefined,
              "value": "unverified",
            },
          ],
        },
        "webhooks-create-request": {
          "allOf": [],
          "description": "The request to create a new webhook.",
          "generatedName": "WebhooksCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "event_types",
              "schema": {
                "description": "The event types that the webhook endpoint will receive.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "The secret to use when verifying webhook events. If provided, the
secret must be between 8 and 32 bytes (inclusive). If not set, a
secret will be automatically generated and provided in the
response.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-create-response": {
          "allOf": [],
          "description": "The response to creating a new webhook.",
          "generatedName": "WebhooksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-request": {
          "allOf": [],
          "description": "The request to delete a webhook.",
          "generatedName": "WebhooksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-response": {
          "description": "The response to deleting the webhook.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "webhooks-get-response": {
          "allOf": [],
          "description": "The response to getting the information for the webhook.",
          "generatedName": "WebhooksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-list-response": {
          "allOf": [],
          "description": "The response to listing the webhooks.",
          "generatedName": "WebhooksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhooks",
              "schema": {
                "description": "The list of webhooks.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhook",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-action": {
          "description": "The action to update the webhook's status.",
          "generatedName": "WebhooksUpdateAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "activate",
              "nameOverride": undefined,
              "value": "activate",
            },
            {
              "generatedName": "deactivate",
              "nameOverride": undefined,
              "value": "deactivate",
            },
          ],
        },
        "webhooks-update-request": {
          "allOf": [],
          "description": "The request to update a webhook.",
          "generatedName": "WebhooksUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhooks-update-action",
                  "type": "reference",
                },
              },
            },
            {
              "key": "event_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "webhooks-update-request-event-types",
                  "type": "reference",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "If provided, updates the secret that's used when verifying webhook
events, which must be between 8 and 32 bytes (inclusive). Otherwise
if empty, then a new secret is generated. If the webhook is active,
then its status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The webhook's updated URL. If the webhook is active, then the
webhook's status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-request-event-types": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhooksUpdateRequestEventTypes",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "add",
              "schema": {
                "description": "The event types to add. If a provided event type is already set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "remove",
              "schema": {
                "description": "The event types to remove. If a provided event type isn't set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "set",
              "schema": {
                "description": "The updated event types, which will replace the webhook's current
event types. Note this is mutually exclusive with 'add' and
'remove'.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-response": {
          "allOf": [],
          "description": "The response to updating the webhook.",
          "generatedName": "WebhooksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "work": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Work",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "schema": "issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "schema": "ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "work-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "WorkBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "part-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "artifacts",
              "schema": {
                "description": "The artifacts attached to the work item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "Body of the work object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "owned_by",
              "schema": {
                "description": "The users that own the work.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "reported_by",
              "schema": {
                "description": "Users that reported the work.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "stage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "stage",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "Tags associated with the object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "target_close_date",
              "schema": {
                "description": "Timestamp when the work is expected to be complete.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "Title of the work object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "work-type": {
          "description": undefined,
          "generatedName": "WorkType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "issue",
              "nameOverride": undefined,
              "value": "issue",
            },
            {
              "generatedName": "ticket",
              "nameOverride": undefined,
              "value": "ticket",
            },
          ],
        },
        "works-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "The [part](https://devrev.ai/docs/product/parts) that the work
applies to. Specifying a part is required when creating tickets and
issues.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": "The IDs of the artifacts to associate with the work item.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Body of the work object.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the work.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": "The users that reported the work.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "stage-init",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": "Tags associated with the work item.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "schema": "set-tag-with-value",
                      "type": "reference",
                    },
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Timestamp for when the work is expected to be complete.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Title of the work object.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "schema": "works-create-request-issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "schema": "works-create-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-create-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "key": "sprint",
              "schema": {
                "description": "The sprint that the issue belongs to.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "group",
              "schema": {
                "description": "The group that the ticket is associated with.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": "The Rev organization that the ticket is associated with.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The work's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-response": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "works-export-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksExportResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "works",
              "schema": {
                "description": "The resulting collection of work items.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "works",
              "schema": {
                "description": "The list of works.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "Updates the part that the work applies to.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "works-update-request-artifact-ids",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Updated body of the work object, or unchanged if not provided.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The work's ID.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "works-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "works-update-request-reported-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "stage-update",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "works-update-request-tags",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Updates the timestamp for when the work is expected to be complete.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Updated title of the work object, or unchanged if not provided.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "work-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "schema": "works-update-request-issue",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "schema": "works-update-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-update-request-artifact-ids": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestArtifactIds",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the IDs to the provided artifact IDs.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "key": "sprint",
              "schema": {
                "description": "Updates the sprint that the issue belongs to.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-reported-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestReportedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the users that reported the work to the provided user IDs.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-tags": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTags",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the provided tags on the work item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "set-tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "group",
              "schema": {
                "description": "The group that the ticket is associated with.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": "Updates the Rev organization that the ticket is associated with.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "auth-token": {
          "headerName": "Authorization",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": "DevRev API endpoint.",
          "name": undefined,
          "url": "{protocol}://{hostname}",
        },
      ],
      "tags": [],
      "title": "DevRev REST API",
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser hathora simple 1`] = `
{
  "files": {
    "openapi.json": {
      "dependencies": [],
      "description": undefined,
      "endpoints": [
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetAppsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetApps",
          "path": "/apps/v1/list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "ApplicationWithDeployment",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateAppRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateApp",
          "path": "/apps/v1/create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "authConfiguration",
                  "schema": {
                    "allOf": [],
                    "description": undefined,
                    "generatedName": "AuthConfiguration",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "key": "google",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "allOf": [],
                            "description": undefined,
                            "generatedName": "AuthConfigurationGoogle",
                            "nameOverride": undefined,
                            "properties": [
                              {
                                "key": "clientId",
                                "schema": {
                                  "description": undefined,
                                  "schema": {
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "object",
                          },
                        },
                      },
                      {
                        "key": "nickname",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "key": "anonymous",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
                {
                  "key": "appName",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Application",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UpdateAppRequest",
          "headers": [],
          "method": "POST",
          "operationId": "UpdateApp",
          "path": "/apps/v1/update/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "authConfiguration",
                  "schema": {
                    "allOf": [],
                    "description": undefined,
                    "generatedName": "AuthConfiguration",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "key": "google",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "allOf": [],
                            "description": undefined,
                            "generatedName": "AuthConfigurationGoogle",
                            "nameOverride": undefined,
                            "properties": [
                              {
                                "key": "clientId",
                                "schema": {
                                  "description": undefined,
                                  "schema": {
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "object",
                          },
                        },
                      },
                      {
                        "key": "nickname",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "key": "anonymous",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
                {
                  "key": "appName",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Application",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetAppInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetAppInfo",
          "path": "/apps/v1/info/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Application",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "DeleteAppRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteApp",
          "path": "/apps/v1/delete/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "LoginAnonymousRequest",
          "headers": [],
          "method": "POST",
          "operationId": "LoginAnonymous",
          "path": "/auth/v1/{appId}/login/anonymous",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "LoginNicknameRequest",
          "headers": [],
          "method": "POST",
          "operationId": "LoginNickname",
          "path": "/auth/v1/{appId}/login/nickname",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "nickname",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "LoginGoogleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "LoginGoogle",
          "path": "/auth/v1/{appId}/login/google",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "idToken",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetBuildsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetBuilds",
          "path": "/builds/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Build",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetBuildInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetBuildInfo",
          "path": "/builds/v1/{appId}/info/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Build",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateBuildRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateBuild",
          "path": "/builds/v1/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Build",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RunBuildRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RunBuild",
          "path": "/builds/v1/{appId}/run/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "DeleteBuildRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteBuild",
          "path": "/builds/v1/{appId}/delete/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetDeploymentsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetDeployments",
          "path": "/deployments/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Deployment",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetDeploymentInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetDeploymentInfo",
          "path": "/deployments/v1/{appId}/info/{deploymentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Deployment",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateDeploymentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateDeployment",
          "path": "/deployments/v1/{appId}/create/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "DeploymentConfig",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Deployment",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetPingServiceEndpointsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetPingServiceEndpoints",
          "path": "/discovery/v1/ping",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "DiscoveryResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "DiscoveryV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreatePrivateLobbyDeprecatedRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePrivateLobbyDeprecated",
          "path": "/lobby/v1/{appId}/create/private",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreatePublicLobbyDeprecatedRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePublicLobbyDeprecated",
          "path": "/lobby/v1/{appId}/create/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "ListActivePublicLobbiesDeprecatedRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "GET",
          "operationId": "ListActivePublicLobbiesDeprecated",
          "path": "/lobby/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Lobby",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreatePrivateLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePrivateLobby",
          "path": "/lobby/v2/{appId}/create/private",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreatePublicLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePublicLobby",
          "path": "/lobby/v2/{appId}/create/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateLocalLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreateLocalLobby",
          "path": "/lobby/v2/{appId}/create/local",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreateLobby",
          "path": "/lobby/v2/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "visibility",
                  "schema": {
                    "description": undefined,
                    "generatedName": "Visibility",
                    "nameOverride": undefined,
                    "type": "enum",
                    "values": [
                      {
                        "generatedName": "public",
                        "nameOverride": undefined,
                        "value": "public",
                      },
                      {
                        "generatedName": "private",
                        "nameOverride": undefined,
                        "value": "private",
                      },
                      {
                        "generatedName": "local",
                        "nameOverride": undefined,
                        "value": "local",
                      },
                    ],
                  },
                },
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "ListActivePublicLobbiesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListActivePublicLobbies",
          "path": "/lobby/v2/{appId}/list/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Lobby",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetLobbyInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLobbyInfo",
          "path": "/lobby/v2/{appId}/info/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SetLobbyStateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SetLobbyState",
          "path": "/lobby/v2/{appId}/setState/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "state",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetLogsForAppRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForApp",
          "path": "/logs/v1/{appId}/all",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetLogsForProcessRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForProcess",
          "path": "/logs/v1/{appId}/process/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetLogsForDeploymentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForDeployment",
          "path": "/logs/v1/{appId}/deployment/{deploymentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetMetricsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetMetrics",
          "path": "/metrics/v1/{appId}/process/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "metrics",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricName",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "end",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "start",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "step",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "MetricsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "MetricsV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetRunningProcessesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetRunningProcesses",
          "path": "/processes/v1/{appId}/list/running",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessWithRooms",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetStoppedProcessesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetStoppedProcesses",
          "path": "/processes/v1/{appId}/list/stopped",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "Process",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetProcessInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetProcessInfo",
          "path": "/processes/v1/{appId}/info/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Process",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateRoomRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateRoom",
          "path": "/rooms/v1/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetRoomInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetRoomInfo",
          "path": "/rooms/v1/{appId}/info/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "Room",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetActiveRoomsForProcessRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetActiveRoomsForProcess",
          "path": "/rooms/v1/{appId}/list/{processId}/active",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomWithoutAllocations",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetInactiveRoomsForProcessRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetInactiveRoomsForProcess",
          "path": "/rooms/v1/{appId}/list/{processId}/inactive",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomWithoutAllocations",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "DestroyRoomRequest",
          "headers": [],
          "method": "POST",
          "operationId": "DestroyRoom",
          "path": "/rooms/v1/{appId}/destroy/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SuspendRoomRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SuspendRoom",
          "path": "/rooms/v1/{appId}/suspend/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetConnectionInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetConnectionInfo",
          "path": "/rooms/v1/{appId}/connectioninfo/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "ConnectionInfo",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
      ],
      "schemas": {
        "ActiveConnectionInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ActiveConnectionInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "ActiveConnectionInfoStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "active",
                    "nameOverride": undefined,
                    "value": "active",
                  },
                ],
              },
            },
            {
              "key": "transportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "TransportType",
                "type": "reference",
              },
            },
            {
              "key": "port",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "host",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "AppId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "Application": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Application",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deletedBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "deletedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "orgId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "OrgId",
                "type": "reference",
              },
            },
            {
              "key": "authConfiguration",
              "schema": {
                "allOf": [],
                "description": undefined,
                "generatedName": "ApplicationAuthConfiguration",
                "nameOverride": undefined,
                "properties": [
                  {
                    "key": "google",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "description": undefined,
                        "generatedName": "ApplicationAuthConfigurationGoogle",
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "key": "clientId",
                            "schema": {
                              "description": undefined,
                              "schema": {
                                "type": "string",
                              },
                              "type": "primitive",
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                  {
                    "key": "nickname",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "schema": "Record_string.never_",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "key": "anonymous",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "schema": "Record_string.never_",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "key": "appSecret",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "appName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ApplicationWithDeployment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "Application",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ApplicationWithDeployment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deployment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Deployment",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Build": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Build",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "regionalContainerTags",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "allOf": [],
                  "description": undefined,
                  "generatedName": "BuildRegionalContainerTagsItem",
                  "nameOverride": undefined,
                  "properties": [
                    {
                      "key": "containerTag",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    {
                      "key": "region",
                      "schema": {
                        "description": undefined,
                        "file": undefined,
                        "schema": "Region",
                        "type": "reference",
                      },
                    },
                  ],
                  "type": "object",
                },
              },
            },
            {
              "key": "imageSize",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "BuildStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "created",
                    "nameOverride": undefined,
                    "value": "created",
                  },
                  {
                    "generatedName": "running",
                    "nameOverride": undefined,
                    "value": "running",
                  },
                  {
                    "generatedName": "succeeded",
                    "nameOverride": undefined,
                    "value": "succeeded",
                  },
                  {
                    "generatedName": "failed",
                    "nameOverride": undefined,
                    "value": "failed",
                  },
                ],
              },
            },
            {
              "key": "deletedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "finishedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "startedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "BuildId": {
          "description": undefined,
          "schema": {
            "type": "double",
          },
          "type": "primitive",
        },
        "ConnectionInfo": {
          "oneOf": {
            "description": undefined,
            "generatedName": "ConnectionInfo",
            "nameOverride": undefined,
            "schemas": [
              {
                "description": undefined,
                "file": undefined,
                "schema": "StartingConnectionInfo",
                "type": "reference",
              },
              {
                "description": undefined,
                "file": undefined,
                "schema": "ActiveConnectionInfo",
                "type": "reference",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "Deployment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "DeploymentConfig",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Deployment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requestedMemoryMB",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requestedCPU",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deploymentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "DeploymentId",
                  "type": "reference",
                },
              },
            },
            {
              "key": "buildId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "BuildId",
                  "type": "reference",
                },
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AppId",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DeploymentConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DeploymentConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "env",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "allOf": [],
                  "description": undefined,
                  "generatedName": "DeploymentConfigEnvItem",
                  "nameOverride": undefined,
                  "properties": [
                    {
                      "key": "value",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    {
                      "key": "name",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  ],
                  "type": "object",
                },
              },
            },
            {
              "key": "roomsPerProcess",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "planName",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "PlanName",
                "type": "reference",
              },
            },
            {
              "key": "transportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "TransportType",
                "type": "reference",
              },
            },
            {
              "key": "containerPort",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DeploymentId": {
          "description": undefined,
          "schema": {
            "type": "double",
          },
          "type": "primitive",
        },
        "DiscoveryResponse": {
          "description": undefined,
          "type": "array",
          "value": {
            "allOf": [],
            "description": undefined,
            "generatedName": "DiscoveryResponseItem",
            "nameOverride": undefined,
            "properties": [
              {
                "key": "port",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "host",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "region",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            ],
            "type": "object",
          },
        },
        "Lobby": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Lobby",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "key": "initialConfig",
              "schema": {
                "description": undefined,
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "local",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "visibility",
              "schema": {
                "description": undefined,
                "generatedName": "LobbyVisibility",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "private",
                    "nameOverride": undefined,
                    "value": "private",
                  },
                  {
                    "generatedName": "public",
                    "nameOverride": undefined,
                    "value": "public",
                  },
                  {
                    "generatedName": "local",
                    "nameOverride": undefined,
                    "value": "local",
                  },
                ],
              },
            },
            {
              "key": "region",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "Region",
                "type": "reference",
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "MetricName": {
          "description": undefined,
          "generatedName": "MetricName",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "cpu",
              "nameOverride": undefined,
              "value": "cpu",
            },
            {
              "generatedName": "memory",
              "nameOverride": undefined,
              "value": "memory",
            },
            {
              "generatedName": "rate_egress",
              "nameOverride": undefined,
              "value": "rate_egress",
            },
            {
              "generatedName": "total_egress",
              "nameOverride": undefined,
              "value": "total_egress",
            },
          ],
        },
        "MetricValue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MetricValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "value",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "MetricsResponse": {
          "description": undefined,
          "file": undefined,
          "schema": "Record_Partial_MetricName_.MetricValue-Array_",
          "type": "reference",
        },
        "Omit_Room.allocations_": {
          "description": undefined,
          "file": undefined,
          "schema": "Pick_Room.Exclude_keyofRoom.allocations__",
          "type": "reference",
        },
        "OrgId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "Pick_Room.Exclude_keyofRoom.allocations__": {
          "allOf": [],
          "description": "From T, pick a set of properties whose keys are in the union K",
          "generatedName": "PickRoomExcludeKeyofRoomAllocations",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomStatus",
                "type": "reference",
              },
            },
            {
              "key": "currentAllocation",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomAllocation",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "PlanName": {
          "description": undefined,
          "generatedName": "PlanName",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "tiny",
              "nameOverride": undefined,
              "value": "tiny",
            },
            {
              "generatedName": "small",
              "nameOverride": undefined,
              "value": "small",
            },
            {
              "generatedName": "medium",
              "nameOverride": undefined,
              "value": "medium",
            },
            {
              "generatedName": "large",
              "nameOverride": undefined,
              "value": "large",
            },
          ],
        },
        "Process": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Process",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "egressedBytes",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "idleSince",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "activeConnections",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "roomSlotsAvailable",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "draining",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "terminatedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "stoppingAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "startedAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "startingAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "roomsPerProcess",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "port",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "host",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "region",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "Region",
                "type": "reference",
              },
            },
            {
              "key": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
            {
              "key": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ProcessId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "ProcessWithRooms": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "schema": "Process",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ProcessWithRooms",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rooms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "RoomWithoutAllocations",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "totalRooms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Record_Partial_MetricName_.MetricValue-Array_": {
          "allOf": [],
          "description": "Construct a type with a set of properties K of type T",
          "generatedName": "RecordPartialMetricNameMetricValueArray",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "cpu",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "memory",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "rate_egress",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "total_egress",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "Record_string.never_": {
          "allOf": [],
          "description": "Construct a type with a set of properties K of type T",
          "generatedName": "RecordStringNever",
          "nameOverride": undefined,
          "properties": [],
          "type": "object",
        },
        "Region": {
          "description": undefined,
          "generatedName": "Region",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Seattle",
              "nameOverride": undefined,
              "value": "Seattle",
            },
            {
              "generatedName": "Washington_DC",
              "nameOverride": undefined,
              "value": "Washington_DC",
            },
            {
              "generatedName": "Chicago",
              "nameOverride": undefined,
              "value": "Chicago",
            },
            {
              "generatedName": "London",
              "nameOverride": undefined,
              "value": "London",
            },
            {
              "generatedName": "Frankfurt",
              "nameOverride": undefined,
              "value": "Frankfurt",
            },
            {
              "generatedName": "Mumbai",
              "nameOverride": undefined,
              "value": "Mumbai",
            },
            {
              "generatedName": "Singapore",
              "nameOverride": undefined,
              "value": "Singapore",
            },
            {
              "generatedName": "Tokyo",
              "nameOverride": undefined,
              "value": "Tokyo",
            },
            {
              "generatedName": "Sydney",
              "nameOverride": undefined,
              "value": "Sydney",
            },
            {
              "generatedName": "Sao_Paulo",
              "nameOverride": undefined,
              "value": "Sao_Paulo",
            },
          ],
        },
        "Room": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Room",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currentAllocation",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomAllocation",
                "type": "reference",
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomStatus",
                "type": "reference",
              },
            },
            {
              "key": "allocations",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "RoomAllocation",
                  "type": "reference",
                },
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RoomAllocation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RoomAllocation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "unscheduledAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "scheduledAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
            {
              "key": "roomAllocationId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomAllocationId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RoomAllocationId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "RoomId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "RoomStatus": {
          "description": undefined,
          "generatedName": "RoomStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "scheduling",
              "nameOverride": undefined,
              "value": "scheduling",
            },
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "suspended",
              "nameOverride": undefined,
              "value": "suspended",
            },
            {
              "generatedName": "destroyed",
              "nameOverride": undefined,
              "value": "destroyed",
            },
          ],
        },
        "RoomWithoutAllocations": {
          "description": undefined,
          "file": undefined,
          "schema": "Omit_Room.allocations_",
          "type": "reference",
        },
        "StartingConnectionInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StartingConnectionInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "StartingConnectionInfoStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "starting",
                    "nameOverride": undefined,
                    "value": "starting",
                  },
                ],
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "TransportType": {
          "description": undefined,
          "generatedName": "TransportType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "tcp",
              "nameOverride": undefined,
              "value": "tcp",
            },
            {
              "generatedName": "udp",
              "nameOverride": undefined,
              "value": "udp",
            },
            {
              "generatedName": "tls",
              "nameOverride": undefined,
              "value": "tls",
            },
          ],
        },
      },
      "securitySchemes": {
        "auth0": {
          "type": "bearer",
        },
      },
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "https://api.hathora.dev",
        },
        {
          "description": undefined,
          "name": undefined,
          "url": "/",
        },
      ],
      "tags": [],
      "title": "Hathora Cloud API",
    },
  },
  "rootPackage": {
    "file": "openapi.json",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser suger simple 1`] = `
{
  "files": {
    "swagger.json": {
      "dependencies": [],
      "description": "CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.",
      "endpoints": [
        {
          "description": "list all buyers by the given organization",
          "errors": [],
          "generatedRequestName": "ListBuyersByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListBuyersByOrganization",
          "path": "/org/{orgId}/buyer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.IdentityBuyer",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list buyers by organization",
          "tags": [
            "Buyer",
          ],
        },
        {
          "description": "get buyer by the given organization and buyer id",
          "errors": [],
          "generatedRequestName": "GetBuyerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetBuyer",
          "path": "/org/{orgId}/buyer/{buyerId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.IdentityBuyer",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get buyer",
          "tags": [
            "Buyer",
          ],
        },
        {
          "description": "update buyer name and description by the given organization and buyer id",
          "errors": [],
          "generatedRequestName": "UpdateBuyerNameDescriptionRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateBuyerNameDescription",
          "path": "/org/{orgId}/buyer/{buyerId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "github_com_sugerio_marketplace-service_rds-db_lib.UpdateBuyerNameDescriptionParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.IdentityBuyer",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "update buyer name and description",
          "tags": [
            "Buyer",
          ],
        },
        {
          "description": "List all entitlements of the given buyer",
          "errors": [],
          "generatedRequestName": "ListEntitlementsByBuyerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByBuyer",
          "path": "/org/{orgId}/buyer/{buyerId}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list entitlements by buyer",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "description": "Create a new draft offer or update the existing draft offer. When updating draft offer, the offer.ID is required.",
          "errors": [],
          "generatedRequestName": "CreateOrUpdateDraftOfferRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateOrUpdateDraftOffer",
          "path": "/org/{orgId}/draftOffer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "create or update draft offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "description": "List all entitlements under the organization",
          "errors": [],
          "generatedRequestName": "ListEntitlementsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlements",
          "path": "/org/{orgId}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list entitlements",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "description": "Get the entitlement by ID",
          "errors": [],
          "generatedRequestName": "GetEntitlementRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetEntitlement",
          "path": "/org/{orgId}/entitlement/{entitlementId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadEntitlement",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get entitlement",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "description": "Add the credit amount to the given Entitlement. The credit amount is accumulated & saved in the current Entitlement Term of the gvien Entitlement.",
          "errors": [],
          "generatedRequestName": "AddEntitlementCreditRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AddEntitlementCredit",
          "path": "/org/{orgId}/entitlement/{entitlementId}/addCredit",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.AddEntitlementCreditParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.AddEntitlementCreditResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "add entitlement credit",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "description": "Update the name of the given Entitlement",
          "errors": [],
          "generatedRequestName": "UpdateEntitlementNameRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateEntitlementName",
          "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementName",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadEntitlement",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "update entitlement name",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "description": "List all Entitlement Terms of the given Entitlement",
          "errors": [],
          "generatedRequestName": "ListEntitlementTermsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementTerms",
          "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadEntitlementTerm",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list entitlement terms",
          "tags": [
            "Entitlement Term",
          ],
        },
        {
          "description": "Get the entitlement term by ID",
          "errors": [],
          "generatedRequestName": "GetEntitlementTermRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetEntitlementTerm",
          "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm/{entitlementTermId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementTermId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadEntitlementTerm",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get entitlement term",
          "tags": [
            "Entitlement Term",
          ],
        },
        {
          "description": "list UsageRecordGroups for the given organization and entitlement",
          "errors": [],
          "generatedRequestName": "ListUsageRecordGroupsByEntitlementRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordGroupsByEntitlement",
          "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.ListUsageRecordGroupsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "list usageRecordGroups by entitlement",
          "tags": [
            "Metering",
          ],
        },
        {
          "description": "It is recommended to provide the ID in the request body CreateUsageRecordGroupParams, so the report can be deduplicated. All duplicate report will return error code 409.",
          "errors": [],
          "generatedRequestName": "ReportUsageRecordGroupRequest",
          "headers": [],
          "method": "POST",
          "operationId": "ReportUsageRecordGroup",
          "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.CreateUsageRecordGroupParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.MeteringUsageRecordGroup",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "report usageRecordGroup",
          "tags": [
            "Metering",
          ],
        },
        {
          "description": "List usageRecordReports for the given organization and entitlement. Filter by entitlementTermId if it is given.",
          "errors": [],
          "generatedRequestName": "ListUsageRecordReportsByEntitlementRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordReportsByEntitlement",
          "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "entitlementTermId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.ListUsageRecordReportsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "list usageRecordReports by entitlement",
          "tags": [
            "Metering",
          ],
        },
        {
          "description": "List all integrations for the given organization.",
          "errors": [],
          "generatedRequestName": "ListIntegrationsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListIntegrationsByOrganization",
          "path": "/org/{orgId}/integration",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.IdentityIntegration",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list integrations by organization",
          "tags": [
            "Integration",
          ],
        },
        {
          "description": "For each organization, partner & service, there should be at most one integration.",
          "errors": [],
          "generatedRequestName": "CreateIntegrationRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateIntegration",
          "path": "/org/{orgId}/integration",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.CreateIntegrationParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.IdentityIntegration",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "create integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "description": "Get the integration for the given organization, partner & service.",
          "errors": [],
          "generatedRequestName": "GetIntegrationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.IdentityIntegration",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "description": "Update the given integration.",
          "errors": [],
          "generatedRequestName": "UpdateIntegrationRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.UpdateIntegrationParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.IdentityIntegration",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "update integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "description": "delete the integration for the given orgId, partner and service.",
          "errors": [],
          "generatedRequestName": "DeleteIntegrationRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if deletion is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "server": [],
          "summary": "delete integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "description": "Verify the given integration, check whether it works correctly.",
          "errors": [],
          "generatedRequestName": "VerifyIntegrationRequest",
          "headers": [],
          "method": "POST",
          "operationId": "VerifyIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}/verify",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "whether it is verified or not",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
          "server": [],
          "summary": "verify integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "description": "List all offers under the given organization.",
          "errors": [],
          "generatedRequestName": "ListOffersByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOffersByOrganization",
          "path": "/org/{orgId}/offer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadOffer",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list offers by organization",
          "tags": [
            "Offer",
          ],
        },
        {
          "description": "Create a private offer under the given organization.",
          "errors": [],
          "generatedRequestName": "CreateOfferRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateOffer",
          "path": "/org/{orgId}/offer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "create offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "description": "Get the offer by the given offer ID.",
          "errors": [],
          "generatedRequestName": "GetOfferRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetOffer",
          "path": "/org/{orgId}/offer/{offerId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "description": "Only the offer with status = "DRAFT" or "CREATE_FAILED" is allowed to be deleted.",
          "errors": [],
          "generatedRequestName": "DeleteOfferRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteOffer",
          "path": "/org/{orgId}/offer/{offerId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if deletion is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "server": [],
          "summary": "delete offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "description": "Only the offer with status = "PENDING_ACCEPTANCE" or "PENDING_CANCEL" is allowed to cancel.",
          "errors": [],
          "generatedRequestName": "CancelOfferRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CancelOffer",
          "path": "/org/{orgId}/offer/{offerId}/cancel",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if cancellation is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "server": [],
          "summary": "cancel offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "description": "List all entitlements under the given offer",
          "errors": [],
          "generatedRequestName": "ListEntitlementsByOfferRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByOffer",
          "path": "/org/{orgId}/offer/{offerId}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list entitlements by offer",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "description": "List all long running operations under the given organization, offer, entitlement, crmOpportunity or partnerOpportunity. Only provide one filter on a request.",
          "errors": [],
          "generatedRequestName": "ListOperationsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOperations",
          "path": "/org/{orgId}/operation",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "crmOpportunityId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "partnerOpportunityId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.Operation",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list operations",
          "tags": [
            "Operation",
          ],
        },
        {
          "description": "List all entitlements under the given partner",
          "errors": [],
          "generatedRequestName": "ListEntitlementsByPartnerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByPartner",
          "path": "/org/{orgId}/partner/{partner}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list entitlements by partner",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "description": "List all offers under the given organization & cloud partner.",
          "errors": [],
          "generatedRequestName": "ListOffersByPartnerRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "GET",
          "operationId": "ListOffersByPartner",
          "path": "/org/{orgId}/partner/{partner}/offer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadOffer",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list offers by partner",
          "tags": [
            "Offer",
          ],
        },
        {
          "description": "list all products under the given organization and cloud partner",
          "errors": [],
          "generatedRequestName": "ListProductsByPartnerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListProductsByPartner",
          "path": "/org/{orgId}/partner/{partner}/product",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadProduct",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list products by partner",
          "tags": [
            "Product",
          ],
        },
        {
          "description": "list the revenue records for the given organization, product, entitlement, or buyer.",
          "errors": [],
          "generatedRequestName": "ListRevenueRecordsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListRevenueRecords",
          "path": "/org/{orgId}/partner/{partner}/revenueRecord",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.ListRevenueRecordsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "list revenue records",
          "tags": [
            "Report",
          ],
        },
        {
          "description": "list the raw revenue record details for the given organization, product, entitlement, or buyer.",
          "errors": [],
          "generatedRequestName": "ListRevenueRecordDetailsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListRevenueRecordDetails",
          "path": "/org/{orgId}/partner/{partner}/revenueRecordDetail",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.ListRevenueRecordDetailsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "list revenue record details",
          "tags": [
            "Report",
          ],
        },
        {
          "description": "list all products under the given organization",
          "errors": [],
          "generatedRequestName": "ListProductsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListProductsByOrganization",
          "path": "/org/{orgId}/product",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadProduct",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list products by organization",
          "tags": [
            "Product",
          ],
        },
        {
          "description": "get product by product id",
          "errors": [],
          "generatedRequestName": "GetProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetProduct",
          "path": "/org/{orgId}/product/{productId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadProduct",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get product",
          "tags": [
            "Product",
          ],
        },
        {
          "description": "currently only the Fulfillment URL is allowed to update via this API.",
          "errors": [],
          "generatedRequestName": "UpdateProductRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateProduct",
          "path": "/org/{orgId}/product/{productId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.UpdateProductParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.WorkloadProduct",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "update product",
          "tags": [
            "Product",
          ],
        },
        {
          "description": "only the product with status = "CREATE_FAILED" is allowed to be deleted.",
          "errors": [],
          "generatedRequestName": "DeleteProductRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteProduct",
          "path": "/org/{orgId}/product/{productId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if deletion is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "server": [],
          "summary": "delete product",
          "tags": [
            "Product",
          ],
        },
        {
          "description": "list all metering dimensions of the given product",
          "errors": [],
          "generatedRequestName": "ListProductMeteringDimensionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListProductMeteringDimensions",
          "path": "/org/{orgId}/product/{productId}/dimension",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.AwsSaasProductDimension",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list metering dimensions of product",
          "tags": [
            "Product",
          ],
        },
        {
          "description": "List all entitlements under the given product",
          "errors": [],
          "generatedRequestName": "ListEntitlementsByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByProduct",
          "path": "/org/{orgId}/product/{productId}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list entitlements by product",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "description": "List all offers under the given organization & product.",
          "errors": [],
          "generatedRequestName": "ListOffersByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOffersByProduct",
          "path": "/org/{orgId}/product/{productId}/offer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.WorkloadOffer",
                "type": "reference",
              },
            },
          },
          "server": [],
          "summary": "list offers by product",
          "tags": [
            "Offer",
          ],
        },
        {
          "description": "list UsageRecordGroups for the given organization and product",
          "errors": [],
          "generatedRequestName": "ListUsageRecordGroupsByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordGroupsByProduct",
          "path": "/org/{orgId}/product/{productId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.ListUsageRecordGroupsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "list usageRecordGroups by product",
          "tags": [
            "Metering",
          ],
        },
        {
          "description": "List usageRecordReports for the given organization and product",
          "errors": [],
          "generatedRequestName": "ListUsageRecordReportsByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordReportsByProduct",
          "path": "/org/{orgId}/product/{productId}/usageRecordReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.ListUsageRecordReportsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "list usageRecordReports by product",
          "tags": [
            "Metering",
          ],
        },
        {
          "description": "Get the revenue report of the given organization, product, entitlement, or buyer.",
          "errors": [],
          "generatedRequestName": "GetRevenueReportRequest",
          "headers": [],
          "method": "POST",
          "operationId": "GetRevenueReport",
          "path": "/org/{orgId}/revenueReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.GetRevenueReportParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.RevenueReport",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get revenue report",
          "tags": [
            "Report",
          ],
        },
        {
          "description": "list UsageRecordGroups under the given organization.",
          "errors": [],
          "generatedRequestName": "ListUsageRecordGroupsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordGroupsByOrganization",
          "path": "/org/{orgId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.ListUsageRecordGroupsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "list usageRecordGroups by organization",
          "tags": [
            "Metering",
          ],
        },
        {
          "description": "get UsageRecordGroup for the given organization and usageRecordGroup ID",
          "errors": [],
          "generatedRequestName": "GetUsageRecordGroupRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetUsageRecordGroup",
          "path": "/org/{orgId}/usageRecordGroup/{usageRecordGroupId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "usageRecordGroupId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.MeteringUsageRecordGroup",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get usageRecordGroup",
          "tags": [
            "Metering",
          ],
        },
        {
          "description": "List usageRecordReports under the given organization",
          "errors": [],
          "generatedRequestName": "ListUsageRecordReportsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordReportsByOrganization",
          "path": "/org/{orgId}/usageRecordReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.ListUsageRecordReportsResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "list usageRecordReports by organization",
          "tags": [
            "Metering",
          ],
        },
        {
          "description": "get the usageRecordReport for a given organization and usageRecordReport ID.",
          "errors": [],
          "generatedRequestName": "GetUsageRecordReportRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetUsageRecordReport",
          "path": "/org/{orgId}/usageRecordReport/{usageRecordReportId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "usageRecordReportId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.MeteringUsageRecordReport",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get usageRecordReport",
          "tags": [
            "Metering",
          ],
        },
        {
          "description": "get the daily usage report of the given entitlement, the default timespan is lifetime.",
          "errors": [],
          "generatedRequestName": "GetUsageReportRequest",
          "headers": [],
          "method": "POST",
          "operationId": "GetUsageReport",
          "path": "/org/{orgId}/usageReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.GetUsageReportParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.UsageReport",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get usage report",
          "tags": [
            "Report",
          ],
        },
        {
          "description": "Get the Bearer Access Token by giving the Suger API Client ID & Client Secret.",
          "errors": [],
          "generatedRequestName": "GetApiClientAccessTokenRequest",
          "headers": [],
          "method": "POST",
          "operationId": "GetApiClientAccessToken",
          "path": "/public/apiClient/accessToken",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.GetApiClientAccessTokenParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "shared.ApiClientAccessToken",
              "type": "reference",
            },
          },
          "server": [],
          "summary": "get api access token",
          "tags": [
            "API",
          ],
        },
      ],
      "schemas": {
        "AzureAudience": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureAudience",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureGovernmentCertification": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureGovernmentCertification",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "validationResults",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureValidationResult",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureIncludedBaseQuantity": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureIncludedBaseQuantity",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "isInfinite",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "recurringUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureIncludedBaseQuantityRecurringUnit",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Monthly",
                      "nameOverride": undefined,
                      "value": "Monthly",
                    },
                    {
                      "generatedName": "Annual",
                      "nameOverride": undefined,
                      "value": "Annual",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureListingContact": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureListingContact",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "phone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureListingContactType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "CustomerSupport",
                      "nameOverride": undefined,
                      "value": "CustomerSupport",
                    },
                    {
                      "generatedName": "Engineering",
                      "nameOverride": undefined,
                      "value": "Engineering",
                    },
                    {
                      "generatedName": "ChannelManager",
                      "nameOverride": undefined,
                      "value": "ChannelManager",
                    },
                  ],
                },
              },
            },
            {
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureListingUri": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureListingUri",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "displayText",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subtype",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureLocalizedDateTime": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureLocalizedDateTime",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dateTimeInUtc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "localizePerMarket",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureLocalizedTimeRange": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureLocalizedTimeRange",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "endAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureLocalizedDateTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "startAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureLocalizedDateTime",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "marketCode",
              "schema": {
                "description": "ISO Country Code",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketState": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketState",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "marketCode",
              "schema": {
                "description": "ISO Country Code",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketStateState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Disabled",
                      "nameOverride": undefined,
                      "value": "Disabled",
                    },
                    {
                      "generatedName": "Enabled",
                      "nameOverride": undefined,
                      "value": "Enabled",
                    },
                    {
                      "generatedName": "StopSelling",
                      "nameOverride": undefined,
                      "value": "StopSelling",
                    },
                    {
                      "generatedName": "Terminated",
                      "nameOverride": undefined,
                      "value": "Terminated",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currency",
              "schema": {
                "description": "ISO 4217 currency code",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "markets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "price",
              "schema": {
                "description": "default 0",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prices",
              "schema": {
                "type": "unknown",
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOffer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOffer",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "$schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "acceptBy",
              "schema": {
                "description": "in format YYYY-MM-DD",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "acceptanceLinks",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureMarketplacePrivateOfferAcceptanceLink",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "beneficiaries",
              "schema": {
                "description": "array of email addresses.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureMarketplacePrivateOfferBeneficiary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "eTag",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "end",
              "schema": {
                "description": "in format YYYY-MM-DD",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "in format of "private-offer/private-offer-durable-id"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": "in format YYYY-MM-DD",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "notificationContacts",
              "schema": {
                "description": "array of email addresses of the users to be notified of any changes in the private offer status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "preparedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pricing",
              "schema": {
                "description": "Up to 10 pricing entries are allowed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureMarketplacePrivateOfferPricing",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "privateOfferType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPrivateOfferType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "customerPromotion",
                      "nameOverride": undefined,
                      "value": "customerPromotion",
                    },
                    {
                      "generatedName": "cspPromotion",
                      "nameOverride": undefined,
                      "value": "cspPromotion",
                    },
                  ],
                },
              },
            },
            {
              "key": "resourceName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "start",
              "schema": {
                "description": "in format YYYY-MM-DD, if VariableStartDate = true, this field should be empty.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "draft",
                      "nameOverride": undefined,
                      "value": "draft",
                    },
                    {
                      "generatedName": "live",
                      "nameOverride": undefined,
                      "value": "live",
                    },
                    {
                      "generatedName": "withdrawn",
                      "nameOverride": undefined,
                      "value": "withdrawn",
                    },
                    {
                      "generatedName": "deleted",
                      "nameOverride": undefined,
                      "value": "deleted",
                    },
                  ],
                },
              },
            },
            {
              "key": "subState",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferSubState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "pendingAcceptance",
                      "nameOverride": undefined,
                      "value": "pendingAcceptance",
                    },
                    {
                      "generatedName": "accepted",
                      "nameOverride": undefined,
                      "value": "accepted",
                    },
                  ],
                },
              },
            },
            {
              "key": "termsAndConditionsDocSasUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "upgradedFrom",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureMarketplacePrivateOfferPromotionReference",
                  "type": "reference",
                },
              },
            },
            {
              "key": "validations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureMarketplaceValidation",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "variableStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferAcceptanceLink": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferAcceptanceLink",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "beneficiaryId",
              "schema": {
                "description": "The Customer Billing Account ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferBeneficiary": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferBeneficiary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "beneficiaryRecipients",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureMarketplacePrivateOfferBeneficiaryRecipient",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "the customer billing account id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferBeneficiaryRecipient": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferBeneficiaryRecipient",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "recipientType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferBeneficiaryRecipientRecipientType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "cspCustomer",
                      "nameOverride": undefined,
                      "value": "cspCustomer",
                    },
                    {
                      "generatedName": "billingGroup",
                      "nameOverride": undefined,
                      "value": "billingGroup",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferPricing": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferPricing",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "discountPercentage",
              "schema": {
                "description": "between 0 and 100",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "discountType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPricingDiscountType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "percentage",
                      "nameOverride": undefined,
                      "value": "percentage",
                    },
                    {
                      "generatedName": "absolute",
                      "nameOverride": undefined,
                      "value": "absolute",
                    },
                  ],
                },
              },
            },
            {
              "key": "originalPlan",
              "schema": {
                "description": "the pricing plan of the original plan.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                  "type": "reference",
                },
              },
            },
            {
              "key": "plan",
              "schema": {
                "description": "in format of "plan/product-durable-id/plan-durable-id"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planType",
              "schema": {
                "description": "The type of the plan, FLAT_RATE or PER_USER.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPricingPlanType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "FLAT_RATE",
                      "nameOverride": undefined,
                      "value": "FLAT_RATE",
                    },
                    {
                      "generatedName": "PER_USER",
                      "nameOverride": undefined,
                      "value": "PER_USER",
                    },
                  ],
                },
              },
            },
            {
              "key": "priceDetails",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "privateOfferPlan",
              "schema": {
                "description": "the pricing plan of the private offer",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                  "type": "reference",
                },
              },
            },
            {
              "key": "product",
              "schema": {
                "description": "in format of "product/product-durable-id"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sugerOfferId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferPromotionReference": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferPromotionReference",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplaceTerm": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplaceTerm",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplaceTermType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "day",
                      "nameOverride": undefined,
                      "value": "day",
                    },
                    {
                      "generatedName": "week",
                      "nameOverride": undefined,
                      "value": "week",
                    },
                    {
                      "generatedName": "month",
                      "nameOverride": undefined,
                      "value": "month",
                    },
                    {
                      "generatedName": "year",
                      "nameOverride": undefined,
                      "value": "year",
                    },
                  ],
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "default 0",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplaceValidation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplaceValidation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "$schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplaceValidationCode",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "businessValidationError",
                      "nameOverride": undefined,
                      "value": "businessValidationError",
                    },
                    {
                      "generatedName": "collectionLimitExceeded",
                      "nameOverride": undefined,
                      "value": "collectionLimitExceeded",
                    },
                    {
                      "generatedName": "invalidId",
                      "nameOverride": undefined,
                      "value": "invalidId",
                    },
                    {
                      "generatedName": "invalidEntityStatus",
                      "nameOverride": undefined,
                      "value": "invalidEntityStatus",
                    },
                    {
                      "generatedName": "invalidRequest",
                      "nameOverride": undefined,
                      "value": "invalidRequest",
                    },
                    {
                      "generatedName": "invalidResource",
                      "nameOverride": undefined,
                      "value": "invalidResource",
                    },
                    {
                      "generatedName": "invalidState",
                      "nameOverride": undefined,
                      "value": "invalidState",
                    },
                    {
                      "generatedName": "notDeployed",
                      "nameOverride": undefined,
                      "value": "notDeployed",
                    },
                    {
                      "generatedName": "notSupported",
                      "nameOverride": undefined,
                      "value": "notSupported",
                    },
                    {
                      "generatedName": "operationCanceled",
                      "nameOverride": undefined,
                      "value": "operationCanceled",
                    },
                    {
                      "generatedName": "productLocked",
                      "nameOverride": undefined,
                      "value": "productLocked",
                    },
                    {
                      "generatedName": "resourceNotFound",
                      "nameOverride": undefined,
                      "value": "resourceNotFound",
                    },
                    {
                      "generatedName": "schemaValidationError",
                      "nameOverride": undefined,
                      "value": "schemaValidationError",
                    },
                  ],
                },
              },
            },
            {
              "key": "level",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplaceValidationLevel",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "informational",
                      "nameOverride": undefined,
                      "value": "informational",
                    },
                    {
                      "generatedName": "warning",
                      "nameOverride": undefined,
                      "value": "warning",
                    },
                  ],
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePendingUpdateInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePendingUpdateInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "updateType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currencyCode",
              "schema": {
                "description": "ISO currency code, Three characters",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "openPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceTierID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityPrivateOfferCustomMeters": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "meters",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "key": "priceInputOption",
              "schema": {
                "description": "default "usd"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferCustomMetersPriceInputOption",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "perMarket",
                      "nameOverride": undefined,
                      "value": "perMarket",
                    },
                    {
                      "generatedName": "usd",
                      "nameOverride": undefined,
                      "value": "usd",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityPrivateOfferPlan": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlan",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "$schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "plan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pricing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPrice",
                  "type": "reference",
                },
              },
            },
            {
              "key": "product",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "validations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureMarketplaceValidation",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityPrivateOfferPrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityPrivateOfferPrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "customMeters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
                  "type": "reference",
                },
              },
            },
            {
              "key": "recurrentPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzurePriceAndAvailabilityRecurrentPrice",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityRecurrentPrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityRecurrentPrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priceInputOption",
              "schema": {
                "description": "default "usd"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceAndAvailabilityRecurrentPricePriceInputOption",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "perMarket",
                      "nameOverride": undefined,
                      "value": "perMarket",
                    },
                    {
                      "generatedName": "usd",
                      "nameOverride": undefined,
                      "value": "usd",
                    },
                  ],
                },
              },
            },
            {
              "key": "prices",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzurePriceAndAvailabilityRecurrentPriceItem",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityRecurrentPriceItem": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItem",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "billingTerm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureMarketplaceTerm",
                  "type": "reference",
                },
              },
            },
            {
              "key": "paymentOption",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureMarketplaceTerm",
                  "type": "reference",
                },
              },
            },
            {
              "key": "pricePerPaymentInUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prices",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureMarketplacePrice",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceCadence": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceCadence",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceCadenceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Month",
                      "nameOverride": undefined,
                      "value": "Month",
                    },
                    {
                      "generatedName": "Year",
                      "nameOverride": undefined,
                      "value": "Year",
                    },
                  ],
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceSchedule": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceSchedule",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priceCadence",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzurePriceCadence",
                  "type": "reference",
                },
              },
            },
            {
              "key": "pricingModel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceSchedulePricingModel",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Flat",
                      "nameOverride": undefined,
                      "value": "Flat",
                    },
                    {
                      "generatedName": "Recurring",
                      "nameOverride": undefined,
                      "value": "Recurring",
                    },
                    {
                      "generatedName": "Usage",
                      "nameOverride": undefined,
                      "value": "Usage",
                    },
                  ],
                },
              },
            },
            {
              "key": "pricingUnits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzurePricingUnit",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "retailPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzurePrice",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePricingUnit": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePricingUnit",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "isUnlimitedUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lowerUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePricingUnitName",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "sharedcore",
                      "nameOverride": undefined,
                      "value": "sharedcore",
                    },
                    {
                      "generatedName": "transactions",
                      "nameOverride": undefined,
                      "value": "transactions",
                    },
                  ],
                },
              },
            },
            {
              "key": "unitType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "upperUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "availabilities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductAvailability",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "branches",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductBranch",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "externalIDs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isModularPublishing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "listings",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductListing",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "packageConfigurations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductPackageConfiguration",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductProperty",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "setup",
              "schema": {
                "description": "Not original fields. They are populated by other API calls",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureProductSetup",
                  "type": "reference",
                },
              },
            },
            {
              "key": "submissions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductSubmission",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "variants",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductVariant",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductAvailability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductAvailability",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "emailAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "enterpriseLicensing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subscriptionAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductBranch": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductBranch",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currentDraftInstanceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "module",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "variantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductFeatureAvailability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductFeatureAvailability",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "customMeters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductVariantCustomMeter",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isHidden",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "marketStates",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureMarketState",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "markets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureMarket",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "priceSchedules",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductVariantPriceSchedule",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": "ResourceType = FeatureAvailability",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subscriptionAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "tenantAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "trial",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureProductVariantTrial",
                  "type": "reference",
                },
              },
            },
            {
              "key": "visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductFeatureAvailabilityVisibility",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Public",
                      "nameOverride": undefined,
                      "value": "Public",
                    },
                    {
                      "generatedName": "Private",
                      "nameOverride": undefined,
                      "value": "Private",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductListing": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductListing",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessInformation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "assets",
              "schema": {
                "description": "Not original fields. They are populated by other API calls",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductListingAsset",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "compatibleProducts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gettingStartedInstructions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "languageCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "listingContacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureListingContact",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "listingUris",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureListingUri",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "productDisplayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "publisherName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductListingResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureListing",
                      "nameOverride": undefined,
                      "value": "AzureListing",
                    },
                  ],
                },
              },
            },
            {
              "key": "shortDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "summary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductListingAsset": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductListingAsset",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fileName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fileSasUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "order",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "publisherDefinedSasUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductListingAssetResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ListingAsset",
                      "nameOverride": undefined,
                      "value": "ListingAsset",
                    },
                    {
                      "generatedName": "ListingImage",
                      "nameOverride": undefined,
                      "value": "ListingImage",
                    },
                    {
                      "generatedName": "ListingVideo",
                      "nameOverride": undefined,
                      "value": "ListingVideo",
                    },
                  ],
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductListingAssetState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "PendingUpload",
                      "nameOverride": undefined,
                      "value": "PendingUpload",
                    },
                    {
                      "generatedName": "Uploaded",
                      "nameOverride": undefined,
                      "value": "Uploaded",
                    },
                    {
                      "generatedName": "InProcessing",
                      "nameOverride": undefined,
                      "value": "InProcessing",
                    },
                    {
                      "generatedName": "Processed",
                      "nameOverride": undefined,
                      "value": "Processed",
                    },
                    {
                      "generatedName": "ProcessFailed",
                      "nameOverride": undefined,
                      "value": "ProcessFailed",
                    },
                  ],
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductPackageConfiguration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductPackageConfiguration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "azureActiveDirectoryApplicationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azureActiveDirectoryTenantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "connectionWebhook",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "landingPageUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductPackageConfigurationResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureSoftwareAsAServicePackageConfiguration",
                      "nameOverride": undefined,
                      "value": "AzureSoftwareAsAServicePackageConfiguration",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductProperty": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductProperty",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "additionalCategories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "appVersion",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "applicableProducts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "categories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "customAmendments",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "extendedProperties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "globalAmendmentTerms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "hideKeys",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "industries",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "leveledCategories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "key": "leveledIndustries",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "key": "marketingOnlyChange",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productTags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "submissionVersion",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "termsOfUse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "useEnterpriseContract",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductSetup": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductSetup",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "callToAction",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSetupCallToAction",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "free",
                      "nameOverride": undefined,
                      "value": "free",
                    },
                    {
                      "generatedName": "FreeTrial",
                      "nameOverride": undefined,
                      "value": "free-trial",
                    },
                    {
                      "generatedName": "ContactMe",
                      "nameOverride": undefined,
                      "value": "contact-me",
                    },
                  ],
                },
              },
            },
            {
              "key": "channelStates",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "enableTestDrive",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSetupResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureProductSetup",
                      "nameOverride": undefined,
                      "value": "AzureProductSetup",
                    },
                  ],
                },
              },
            },
            {
              "key": "sellingOption",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSetupSellingOption",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ListingOnly",
                      "nameOverride": undefined,
                      "value": "ListingOnly",
                    },
                    {
                      "generatedName": "ListAndSell",
                      "nameOverride": undefined,
                      "value": "ListAndSell",
                    },
                  ],
                },
              },
            },
            {
              "key": "testDriveType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "trialUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductSubmission": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductSubmission",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "areResourcesReady",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pendingUpdateInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzurePendingUpdateInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "publishedTimeInUtc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "releaseNumber",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSubmissionResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Submission",
                      "nameOverride": undefined,
                      "value": "Submission",
                    },
                  ],
                },
              },
            },
            {
              "key": "resources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSubmissionState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Inprogress",
                      "nameOverride": undefined,
                      "value": "Inprogress",
                    },
                    {
                      "generatedName": "Published",
                      "nameOverride": undefined,
                      "value": "Published",
                    },
                  ],
                },
              },
            },
            {
              "key": "subState",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSubmissionSubState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "InDraft",
                      "nameOverride": undefined,
                      "value": "InDraft",
                    },
                    {
                      "generatedName": "Submitted",
                      "nameOverride": undefined,
                      "value": "Submitted",
                    },
                    {
                      "generatedName": "Failed",
                      "nameOverride": undefined,
                      "value": "Failed",
                    },
                    {
                      "generatedName": "FailedInCertification",
                      "nameOverride": undefined,
                      "value": "FailedInCertification",
                    },
                    {
                      "generatedName": "ReadyToPublish",
                      "nameOverride": undefined,
                      "value": "ReadyToPublish",
                    },
                    {
                      "generatedName": "Publishing",
                      "nameOverride": undefined,
                      "value": "Publishing",
                    },
                    {
                      "generatedName": "Published",
                      "nameOverride": undefined,
                      "value": "Published",
                    },
                    {
                      "generatedName": "InStore",
                      "nameOverride": undefined,
                      "value": "InStore",
                    },
                  ],
                },
              },
            },
            {
              "key": "targets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "variantResources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureVariantResource",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariant": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariant",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "azureGovernmentCertifications",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureGovernmentCertification",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "cloudAvailabilities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "conversionPaths",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "extendedProperties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "featureAvailabilities",
              "schema": {
                "description": "Not original fields. They are populated by other API calls",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureProductFeatureAvailability",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "leadGenID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "referenceVariantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureSkuVariant",
                      "nameOverride": undefined,
                      "value": "AzureSkuVariant",
                    },
                    {
                      "generatedName": "AzureTestDriveVariant",
                      "nameOverride": undefined,
                      "value": "AzureTestDriveVariant",
                    },
                  ],
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "InActive",
                      "nameOverride": undefined,
                      "value": "InActive",
                    },
                    {
                      "generatedName": "Active",
                      "nameOverride": undefined,
                      "value": "Active",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariantCustomMeter": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariantCustomMeter",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "displayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "includedBaseQuantities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureIncludedBaseQuantity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "isEnabled",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceInUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "uniqueID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "unitOfMeasure",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariantPriceSchedule": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariantPriceSchedule",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dateTimeRange",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureLocalizedTimeRange",
                  "type": "reference",
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isBaseSchedule",
              "schema": {
                "description": "There is only one base schedule.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "marketCodes",
              "schema": {
                "description": "ISO country code",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "schedules",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzurePriceSchedule",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariantTrial": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariantTrial",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dateTimeRange",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureLocalizedTimeRange",
                  "type": "reference",
                },
              },
            },
            {
              "key": "duration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "durationType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantTrialDurationType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Minute",
                      "nameOverride": undefined,
                      "value": "Minute",
                    },
                    {
                      "generatedName": "Days",
                      "nameOverride": undefined,
                      "value": "Days",
                    },
                    {
                      "generatedName": "Months",
                      "nameOverride": undefined,
                      "value": "Months",
                    },
                  ],
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantTrialType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "NoTrial",
                      "nameOverride": undefined,
                      "value": "NoTrial",
                    },
                    {
                      "generatedName": "TimedAccess",
                      "nameOverride": undefined,
                      "value": "TimedAccess",
                    },
                    {
                      "generatedName": "TimedUsage",
                      "nameOverride": undefined,
                      "value": "TimedUsage",
                    },
                    {
                      "generatedName": "Unlimited",
                      "nameOverride": undefined,
                      "value": "Unlimited",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureTypeValue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureTypeValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureValidationResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureValidationResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "errorMessage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "memberNames",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureVariantResource": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureVariantResource",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "resources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "variantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTag",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "key",
              "schema": {
                "description": "One part of a key-value pair that makes up a tag. A key is a label that acts
like a category for the specific tag values.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "One part of a key-value pair that makes up a tag. A value acts as a descriptor
within a tag category (key). The value can be empty or null.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "result",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessage",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dimension",
              "schema": {
                "description": "Dimension identifier",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "effectiveStartTime",
              "schema": {
                "description": "Time in UTC when the usage event occurred",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "error",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse",
                  "type": "reference",
                },
              },
            },
            {
              "key": "messageTime",
              "schema": {
                "description": "Time this message was created in UTC",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planId",
              "schema": {
                "description": "Plan associated with the purchased offer",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": "Number of units consumed",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceId",
              "schema": {
                "description": "Identifier of the resource against which usage is emitted",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceUri",
              "schema": {
                "description": "Identifier of the managed app resource against which usage is emitted",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "Status of the operation.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "usageEventId",
              "schema": {
                "description": "Unique identifier associated with the usage event",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "additionalInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "acceptedMessage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dimension",
              "schema": {
                "description": "Dimension identifier",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "effectiveStartTime",
              "schema": {
                "description": "Time in UTC when the usage event occurred",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "messageTime",
              "schema": {
                "description": "Time this message was created in UTC",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planId",
              "schema": {
                "description": "Plan associated with the purchased offer",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": "Number of units consumed",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceId",
              "schema": {
                "description": "Identifier of the resource against which usage is emitted",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceUri",
              "schema": {
                "description": "Identifier of the managed app resource against which usage is emitted",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "Status of the operation.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "usageEventId",
              "schema": {
                "description": "Unique identifier associated with the usage event",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum": {
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Accepted",
              "nameOverride": undefined,
              "value": "Accepted",
            },
            {
              "generatedName": "Expired",
              "nameOverride": undefined,
              "value": "Expired",
            },
            {
              "generatedName": "Duplicate",
              "nameOverride": undefined,
              "value": "Duplicate",
            },
            {
              "generatedName": "Error",
              "nameOverride": undefined,
              "value": "Error",
            },
            {
              "generatedName": "ResourceNotFound",
              "nameOverride": undefined,
              "value": "ResourceNotFound",
            },
            {
              "generatedName": "ResourceNotAuthorized",
              "nameOverride": undefined,
              "value": "ResourceNotAuthorized",
            },
            {
              "generatedName": "InvalidDimension",
              "nameOverride": undefined,
              "value": "InvalidDimension",
            },
            {
              "generatedName": "InvalidQuantity",
              "nameOverride": undefined,
              "value": "InvalidQuantity",
            },
            {
              "generatedName": "BadArgument",
              "nameOverride": undefined,
              "value": "BadArgument",
            },
          ],
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "agreementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "amount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "balanceImpacting",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "bankTraceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "billingAddressID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "brokerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dataFeedProductID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "disbursementBillingEventID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endUserAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fromAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "insertDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "invoiceDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "invoiceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "parentBillingEventID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentDueDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "toAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "transactionReferenceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "transactionType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usagePeriodEndDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "usagePeriodStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "azureAssetID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azureBillingAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azureCustomerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azureOfferID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azurePlanID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "billingModel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "earningUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "payoutStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "purchaseRecordID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "revenueUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "termEndDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "termStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsage",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "abandoned",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "accountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "charges",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dueVendor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "googleEntity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "insightAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentSchedule",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prepayCredits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundBalanceDeductedThisMonth",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundBalanceOutstanding",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundReason",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "released",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resource",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sku",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "trialUse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "unit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "withheld",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.UpdateBuyerNameDescriptionParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "marketplacemetering.BatchMeterUsageOutput": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MarketplacemeteringBatchMeterUsageOutput",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "resultMetadata",
              "schema": {
                "description": "Metadata pertaining to the operation's result.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "middleware.Metadata",
                  "type": "reference",
                },
              },
            },
            {
              "key": "results",
              "schema": {
                "description": "Contains all UsageRecords processed by BatchMeterUsage. These records were
either honored by AWS Marketplace Metering Service or were invalid. Invalid
records should be fixed before being resubmitted.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "types.UsageRecordResult",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "unprocessedRecords",
              "schema": {
                "description": "Contains all UsageRecords that were not processed by BatchMeterUsage. This is a
list of UsageRecords. You can retry the failed request by making another
BatchMeterUsage call with this list as input in the BatchMeterUsageRequest.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "types.UsageRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "middleware.Metadata": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "servicecontrol.ReportError": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ServicecontrolReportError",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "operationId",
              "schema": {
                "description": "OperationId: The Operation.operation_id value from the request.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "Status: Details of the error when processing the Operation.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "servicecontrol.Status",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "servicecontrol.ReportResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ServicecontrolReportResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "reportErrors",
              "schema": {
                "description": "ReportErrors: Partial failures, one for each \`Operation\` in the
request that failed processing. There are three possible combinations
of the RPC status: 1. The combination of a successful RPC status and
an empty \`report_errors\` list indicates a complete success where all
\`Operations\` in the request are processed successfully. 2. The
combination of a successful RPC status and a non-empty
\`report_errors\` list indicates a partial success where some
\`Operations\` in the request succeeded. Each \`Operation\` that failed
processing has a corresponding item in this list. 3. A failed RPC
status indicates a general non-deterministic failure. When this
happens, it's impossible to know which of the 'Operations' in the
request succeeded or failed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "servicecontrol.ReportError",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "serviceConfigId",
              "schema": {
                "description": "ServiceConfigId: The actual config id used to process the request.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serviceRolloutId",
              "schema": {
                "description": "ServiceRolloutId: The current service rollout id used to process the
request.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "servicecontrol.Status": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ServicecontrolStatus",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "code",
              "schema": {
                "description": "Code: The status code, which should be an enum value of
google.rpc.Code.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "details",
              "schema": {
                "description": "Details: A list of messages that carry the error details. There is a
common set of message types for APIs to use.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "int",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": "Message: A developer-facing error message, which should be in
English. Any user-facing error message should be localized and sent
in the google.rpc.Status.details field, or localized by the client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AddEntitlementCreditParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAddEntitlementCreditParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creditAmountIncrement",
              "schema": {
                "description": "The amount to be added to the credit amount.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.AddEntitlementCreditResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAddEntitlementCreditResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creditAmountIncrement",
              "schema": {
                "description": "The amount to be added to the credit amount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementTermID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newCreditAmount",
              "schema": {
                "description": "The new credit amount after the increment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ApiClientAccessToken": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedApiClientAccessToken",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": "The token expires in 1 hour",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsAccountIdentifier": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsAccountIdentifier",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsAccountID",
              "schema": {
                "description": "The AWS Account ID of the buyer in AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "awsCustomerID",
              "schema": {
                "description": "The AWS Customer ID of the buyer in AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "companyInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.CompanyInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "dataFeedAccountID",
              "schema": {
                "description": "The Account ID in AWS Marketplace Data Feed service",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsAceIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsAceIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AwsIntegrationCredential",
                  "type": "reference",
                },
              },
            },
            {
              "key": "partnerId",
              "schema": {
                "description": "The partner ID of the ISV/Seller in AWS Partner Network.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "s3BucketName",
              "schema": {
                "description": "The Name of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "s3BucketRegion",
              "schema": {
                "description": "The region of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "secretKey",
              "schema": {
                "description": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsIntegrationCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsIntegrationCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessKeyId",
              "schema": {
                "description": "The access key ID of the IAM user for Suger service to access the client's AWS services.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "iamUserArn",
              "schema": {
                "description": "The ARN of the IAM user for Suger service to access the client's AWS services.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "secretAccessKey",
              "schema": {
                "description": "The secret access key of the IAM user for Suger service to access the client's AWS services.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsMarketplaceIntegration": {
          "allOf": [],
          "description": "The data struct to store integration info for Suger service to access the client's AWS services.",
          "generatedName": "SharedAwsMarketplaceIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "externalID",
              "schema": {
                "description": "The external ID for assuming IAM role. If empty, means no external ID set or needed. Otherwise, it should be auth_id in table identity.organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "iamRoleArn",
              "schema": {
                "description": "The AWS IAM role for Suger service to assume to access the client's AWS services.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "marketplaceStartDate",
              "schema": {
                "description": "AWS Marketplace start date which comes from MDFS Full-Sync.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mcasFullSyncDone",
              "schema": {
                "description": "Is AWS Marketplace Commerce Analytics Service (MCAS) full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mcasIamRoleArn",
              "schema": {
                "description": "IAM role ARN to allow AWS Marketplace to write to the S3 bucket and publish notifications to the SNS topic.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mcasS3Bucket",
              "schema": {
                "description": "S3 bucket for AWS Marketplace Commerce Analytics Service (MCAS)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mcasSnsTopic",
              "schema": {
                "description": "SNS topic ARN for AWS Marketplace Commerce Analytics Service (MCAS)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mdfsFullSyncDone",
              "schema": {
                "description": "Is AWS Marketplace Data Feeds Service (MDFS) full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mdfsKmsKeyArn",
              "schema": {
                "description": "KMS Key ARN for the S3 bucket of AWS Marketplace Data Feeds Service (MDFS)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mdfsS3BucketArn",
              "schema": {
                "description": "S3 bucket ARN for AWS Marketplace Data Feeds Service (MDFS)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "policyArns",
              "schema": {
                "description": "The policy ARNs in the IAM role.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "revenueRecordFullSyncDone",
              "schema": {
                "description": "Is AWS Marketplace Revenue Record full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AwsSaasProductDescription",
                  "type": "reference",
                },
              },
            },
            {
              "key": "Dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.AwsSaasProductDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "PromotionalResources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AwsSaasProductPromotionalResources",
                  "type": "reference",
                },
              },
            },
            {
              "key": "SupportInformation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AwsSaasProductSupportInformation",
                  "type": "reference",
                },
              },
            },
            {
              "key": "Versions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.AwsSaasProductVersion",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "dataFeedProductId",
              "schema": {
                "description": "The product Id in AWS Marketplace Data Feed Service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductAdditionalResource": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductAdditionalResource",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Text",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductDeliveryOption": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductDeliveryOption",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "FulfillmentUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductDescription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductDescription",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "AssociatedProducts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Categories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "EuW8Submitted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Highlights",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "LongDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Manufacturer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "ProductCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "ProductTitle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Registered",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "SearchKeywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "ShortDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Sku",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "UsW9Submitted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductDimension": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductDimension",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "Unit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductPromotionalResources": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductPromotionalResources",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "AdditionalResources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.AwsSaasProductAdditionalResource",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "LogoUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductSupportInformation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductSupportInformation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductVersion": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductVersion",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "DeliveryOptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.AwsSaasProductDeliveryOption",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "Id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSnsSubscription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSnsSubscription",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Endpoint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Protocol",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AwsSnsSubscriptionStatus",
                  "type": "reference",
                },
              },
            },
            {
              "key": "SubscriptionArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "TopicArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSnsSubscriptionStatus": {
          "description": undefined,
          "generatedName": "SharedAwsSnsSubscriptionStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UNKNOWN",
              "nameOverride": undefined,
              "value": "UNKNOWN",
            },
            {
              "generatedName": "CONFIRMED",
              "nameOverride": undefined,
              "value": "CONFIRMED",
            },
            {
              "generatedName": "PENDING_CONFIRMATION",
              "nameOverride": undefined,
              "value": "PENDING_CONFIRMATION",
            },
          ],
        },
        "shared.AzureADIdentifier": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureAdIdentifier",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AzureBuyerInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "companyInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.CompanyInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "emailId",
              "schema": {
                "description": "Email address",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "objectId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "puid",
              "schema": {
                "description": "ID of the user, used as External ID of suger IdentityBuyer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tenantId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureBuyerInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureBuyerInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "billingAccountId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "customerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "firstName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "cmaFullSyncDone",
              "schema": {
                "description": "Is Azure Commercial Marketplace Analytics (CMA) full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AzureIntegrationCredential",
                  "type": "reference",
                },
              },
            },
            {
              "key": "secretKey",
              "schema": {
                "description": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureIntegrationCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureIntegrationCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "clientID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "clientSecret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expiresOn",
              "schema": {
                "description": "The time when the access token expires.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refreshToken",
              "schema": {
                "description": "The refresh token used to refresh the access token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tenantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tokenScope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tokenType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureMarketplaceSubscription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureMarketplaceSubscription",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowedCustomerOperations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "SharedAzureMarketplaceSubscriptionAllowedCustomerOperationsItem",
                    "nameOverride": undefined,
                    "type": "enum",
                    "values": [
                      {
                        "generatedName": "Read",
                        "nameOverride": undefined,
                        "value": "Read",
                      },
                      {
                        "generatedName": "Update",
                        "nameOverride": undefined,
                        "value": "Update",
                      },
                      {
                        "generatedName": "Delete",
                        "nameOverride": undefined,
                        "value": "Delete",
                      },
                    ],
                  },
                },
              },
            },
            {
              "key": "autoRenew",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "beneficiary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AzureADIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "key": "created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fulfillmentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isFreeTrial",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isTest",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "publisherId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "purchaser",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AzureADIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "saasSubscriptionStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AzureMarketplaceSubscriptionStatus",
                  "type": "reference",
                },
              },
            },
            {
              "key": "sandboxType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionSandboxType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "None",
                      "nameOverride": undefined,
                      "value": "None",
                    },
                    {
                      "generatedName": "Csp",
                      "nameOverride": undefined,
                      "value": "Csp",
                    },
                  ],
                },
              },
            },
            {
              "key": "sessionId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sessionMode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionSessionMode",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "None",
                      "nameOverride": undefined,
                      "value": "None",
                    },
                    {
                      "generatedName": "DryRun",
                      "nameOverride": undefined,
                      "value": "DryRun",
                    },
                  ],
                },
              },
            },
            {
              "key": "storeFront",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "term",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AzureTerm",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureMarketplaceSubscriptionStatus": {
          "description": undefined,
          "generatedName": "SharedAzureMarketplaceSubscriptionStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "NotStarted",
              "nameOverride": undefined,
              "value": "NotStarted",
            },
            {
              "generatedName": "PendingFulfillmentStart",
              "nameOverride": undefined,
              "value": "PendingFulfillmentStart",
            },
            {
              "generatedName": "Subscribed",
              "nameOverride": undefined,
              "value": "Subscribed",
            },
            {
              "generatedName": "Suspended",
              "nameOverride": undefined,
              "value": "Suspended",
            },
            {
              "generatedName": "Unsubscribed",
              "nameOverride": undefined,
              "value": "Unsubscribed",
            },
          ],
        },
        "shared.AzureTerm": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureTerm",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "chargeDuration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "termUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.BuyerInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedBuyerInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsBuyer",
              "schema": {
                "description": "Buyer from AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AwsAccountIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureBuyer",
              "schema": {
                "description": "Buyer from Azure Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AzureADIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "key": "collectableAmount",
              "schema": {
                "description": "The amount that the seller can collect. It excludes the marketplace commision fee.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "disbursedAmount",
              "schema": {
                "description": "The amount that has been disbursed to the seller account.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpBuyer",
              "schema": {
                "description": "Buyer from GCP Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpMarketplaceUserAccount",
                  "type": "reference",
                },
              },
            },
            {
              "key": "invoicedAmount",
              "schema": {
                "description": "The amount that the buyer has got invoiced.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.CommitDimension": {
          "allOf": [],
          "description": "The commit dimension. There may be one or more commit dimensions defined in single product, offer or entitlement.",
          "generatedName": "SharedCommitDimension",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "category",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isUserCreated",
              "schema": {
                "description": "Whether this commit dimension is newly created by user when creating AWS Marketplace Contract private offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "key",
              "schema": {
                "description": "API name of the dimension",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "length",
              "schema": {
                "description": "The term length for the commit amount, such as 6 months, or 1 year. length is used together with timeUnit",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maximumUsers",
              "schema": {
                "description": "The maximum number of users for PER_USER commit",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minimumUsers",
              "schema": {
                "description": "The minimum number of users for PER_USER commit",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Display name of the dimension",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": "The quantity of this commit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rate",
              "schema": {
                "description": "The commit amount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timeUnit",
              "schema": {
                "description": "The term unit for the commit amount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.CommitDimensionTimeUnit",
                  "type": "reference",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.CommitDimensionType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.CommitDimensionTimeUnit": {
          "description": undefined,
          "generatedName": "SharedCommitDimensionTimeUnit",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "DAY",
              "nameOverride": undefined,
              "value": "DAY",
            },
            {
              "generatedName": "MONTH",
              "nameOverride": undefined,
              "value": "MONTH",
            },
            {
              "generatedName": "YEAR",
              "nameOverride": undefined,
              "value": "YEAR",
            },
          ],
        },
        "shared.CommitDimensionType": {
          "description": undefined,
          "generatedName": "SharedCommitDimensionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "FLAT_RATE",
              "nameOverride": undefined,
              "value": "FLAT_RATE",
            },
            {
              "generatedName": "PER_USER",
              "nameOverride": undefined,
              "value": "PER_USER",
            },
          ],
        },
        "shared.CompanyInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedCompanyInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "addressLine1",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "addressLine2",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "city",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "country",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "emailDomain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "postalCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.Contact": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedContact",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "company",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.CreateIntegrationParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedCreateIntegrationParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.IntegrationInfo",
                "type": "reference",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "SharedCreateIntegrationParamsPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "generatedName": "SharedCreateIntegrationParamsService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                ],
              },
            },
          ],
          "type": "object",
        },
        "shared.CreateUsageRecordGroupParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedCreateUsageRecordGroupParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "uuid of the UsageRecordGroup (the size is up to 36 characters), if not provided, suger will generate one.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metaInfo",
              "schema": {
                "description": "read-only, don't set it when reporting the usage record group.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.MeteringUsageRecordGroupMetaInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "records",
              "schema": {
                "description": undefined,
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntitlementInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedEntitlementInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "autoRenew",
              "schema": {
                "description": "Is this Entitlement Auto Renew enabled.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "awsEntitlements",
              "schema": {
                "description": "Nullable. AWS Entitlements from AWS Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "types.Entitlement",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "azureSubscriptions",
              "schema": {
                "description": "Nullable. Azure Subscriptions from Azure Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.AzureMarketplaceSubscription",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "collectableAmount",
              "schema": {
                "description": "The amount that the seller can collect. It excludes the marketplace commision fee.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "commitAmount",
              "schema": {
                "description": "The amount that the buyer has committed to pay. It can be the sum of payment installments if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "commits",
              "schema": {
                "description": "The dimensions for commit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.CommitDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": "The default Currency is USD.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimensions",
              "schema": {
                "description": "The dimensions for usage-based metering.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.MeteringDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "disbursedAmount",
              "schema": {
                "description": "The amount that has been disbursed to the seller account.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "discount",
              "schema": {
                "description": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "eulaType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.EulaType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpEntitlements",
              "schema": {
                "description": "Nullable. GCP Entitlements from GCP Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpMarketplaceEntitlement",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "gcpPlans",
              "schema": {
                "description": "Only applicable for GCP Marketplace Entitlements.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpPurchasePlan",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "invoicedAmount",
              "schema": {
                "description": "The amount that the buyer has got invoiced.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentInstallments",
              "schema": {
                "description": "For flexible payment schedules",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.PaymentInstallment",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "refundCancelationPolicy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sellerNotes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntitlementTermInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedEntitlementTermInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.EntitlementTermType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntitlementTermType": {
          "description": undefined,
          "generatedName": "SharedEntitlementTermType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "",
              "nameOverride": undefined,
              "value": "",
            },
            {
              "generatedName": "AutoRenew",
              "nameOverride": undefined,
              "value": "AutoRenew",
            },
            {
              "generatedName": "ManualRenew",
              "nameOverride": undefined,
              "value": "ManualRenew",
            },
            {
              "generatedName": "PlanChange",
              "nameOverride": undefined,
              "value": "PlanChange",
            },
            {
              "generatedName": "QuantityChange",
              "nameOverride": undefined,
              "value": "QuantityChange",
            },
            {
              "generatedName": "Signup",
              "nameOverride": undefined,
              "value": "Signup",
            },
          ],
        },
        "shared.EntitlementUsageRecord": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedEntitlementUsageRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "amounts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "keys",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "quantities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntityType": {
          "description": undefined,
          "generatedName": "SharedEntityType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ORGANIZATION",
              "nameOverride": undefined,
              "value": "ORGANIZATION",
            },
            {
              "generatedName": "PRODUCT",
              "nameOverride": undefined,
              "value": "PRODUCT",
            },
            {
              "generatedName": "OFFER",
              "nameOverride": undefined,
              "value": "OFFER",
            },
            {
              "generatedName": "ENTITLEMENT",
              "nameOverride": undefined,
              "value": "ENTITLEMENT",
            },
            {
              "generatedName": "ENTITLEMENT_TERM",
              "nameOverride": undefined,
              "value": "ENTITLEMENT_TERM",
            },
            {
              "generatedName": "INTEGRATION",
              "nameOverride": undefined,
              "value": "INTEGRATION",
            },
          ],
        },
        "shared.EulaType": {
          "description": undefined,
          "generatedName": "SharedEulaType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "",
              "nameOverride": undefined,
              "value": "",
            },
            {
              "generatedName": "SCMP",
              "nameOverride": undefined,
              "value": "SCMP",
            },
            {
              "generatedName": "ECMP",
              "nameOverride": undefined,
              "value": "ECMP",
            },
            {
              "generatedName": "CUSTOM",
              "nameOverride": undefined,
              "value": "CUSTOM",
            },
            {
              "generatedName": "ISV",
              "nameOverride": undefined,
              "value": "ISV",
            },
            {
              "generatedName": "CURRENT",
              "nameOverride": undefined,
              "value": "CURRENT",
            },
          ],
        },
        "shared.GcpCommerceProducerExternalAccountSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerExternalAccountSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "loginUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "signupUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "singleSignOnUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerListingSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerListingSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "externalAccountSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerExternalAccountSpec",
                  "type": "reference",
                },
              },
            },
            {
              "key": "listingType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerListingSpecListingType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "BillingIntegratedManagedService",
                      "nameOverride": undefined,
                      "value": "BillingIntegratedManagedService",
                    },
                  ],
                },
              },
            },
            {
              "key": "marketingSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerMarketingSpec",
                  "type": "reference",
                },
              },
            },
            {
              "key": "purchaseSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerPurchaseSpec",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerMarketingSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerMarketingSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "displayNames",
              "schema": {
                "description": "In format of "{provider-id}/{product-name}"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalMarketingUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "icon",
              "schema": {
                "description": "In format of "base64://..."",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "searchCategories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "searchDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "searchKeywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "shortTitle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "supportSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerSupportSpec",
                  "type": "reference",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "The product title.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currencyCode",
              "schema": {
                "description": "ISO currency code, Three UPPER_CASE characters",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "nanos",
              "schema": {
                "description": "Decimal part of the price. For example, 2000000 = 0.002, 200000000 = 0.2",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "units",
              "schema": {
                "description": "Integer part of the price.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceModel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerPriceModel",
                  "type": "reference",
                },
              },
            },
            {
              "key": "subscriptionPlans",
              "schema": {
                "description": "Commit price plan, when priceModel = SUBSCRIPTION or SUBSCRIPTION_PLUS_USAGE.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpCommerceProducerPriceSubscription",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "usageFees",
              "schema": {
                "description": "Usage based metering plan, when priceModel =  USAGE or SUBSCRIPTION_PLUS_USAGE",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpCommerceProducerPriceUsage",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceModel": {
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceModel",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "FREE",
              "nameOverride": undefined,
              "value": "FREE",
            },
            {
              "generatedName": "SUBSCRIPTION",
              "nameOverride": undefined,
              "value": "SUBSCRIPTION",
            },
            {
              "generatedName": "USAGE",
              "nameOverride": undefined,
              "value": "USAGE",
            },
            {
              "generatedName": "SUBSCRIPTION_PLUS_USAGE",
              "nameOverride": undefined,
              "value": "SUBSCRIPTION_PLUS_USAGE",
            },
          ],
        },
        "shared.GcpCommerceProducerPriceSubscription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceSubscription",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "period",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceSubscriptionPeriod",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ONE_YEAR",
                      "nameOverride": undefined,
                      "value": "ONE_YEAR",
                    },
                  ],
                },
              },
            },
            {
              "key": "price",
              "schema": {
                "description": "the Monthly subscription fee as commit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerPrice",
                  "type": "reference",
                },
              },
            },
            {
              "key": "taxCategoryOverride",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceSubscriptionTaxCategoryOverride",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "TAX_CATEGORY_UNSPECIFIED",
                      "nameOverride": undefined,
                      "value": "TAX_CATEGORY_UNSPECIFIED",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceTier": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceTier",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "endUsageAmount",
              "schema": {
                "description": "The usage amount below which this tier is effective.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "price",
              "schema": {
                "description": "The price of this tier",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerPrice",
                  "type": "reference",
                },
              },
            },
            {
              "key": "startUsageAmount",
              "schema": {
                "description": "The usage amount beyond which this tier is effective.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceUsage": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceUsage",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "displayQuantity",
              "schema": {
                "description": "Default value is 1.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metricId",
              "schema": {
                "description": "the usage metering dimension key",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceTiers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpCommerceProducerPriceTier",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "taxCategoryOverride",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceUsageTaxCategoryOverride",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "TAX_CATEGORY_UNSPECIFIED",
                      "nameOverride": undefined,
                      "value": "TAX_CATEGORY_UNSPECIFIED",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPurchaseMetric": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPurchaseMetric",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description: A detailed description of the metric, which can be used in documentation.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "displayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "displayUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "displayUnitDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The usage metering dimension key, in format of "{plan_key}_{usage_dimension_key}"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metricKind",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Name: The resource name of the metric descriptor, in format of "{service_name}/{plan_key}_{usage_dimension_key}"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportingUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "unit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "valueType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.ValueType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPurchaseSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPurchaseSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metrics",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpCommerceProducerPurchaseMetric",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "purchaseOptionSpecs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpPurchasePlan",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerServiceBilling": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerServiceBilling",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metrics",
              "schema": {
                "description": "in format of ["{product-name}.endpoints.{provider-id}.cloud.goog/{plan_key}_{usage_dimension_key}"]",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerServiceConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerServiceConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "billing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerServiceBilling",
                  "type": "reference",
                },
              },
            },
            {
              "key": "metrics",
              "schema": {
                "description": "Metrics: Defines the metrics used by this service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpCommerceProducerPurchaseMetric",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "In format of "{product-name}.endpoints.{provider-id}.cloud.goog"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "producerProjectId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "The Product title",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerSupportSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerSupportSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "gcpProjectId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpProjectNumber",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "identityProviderId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partnerId",
              "schema": {
                "description": "The GCP Marketplace Partner ID, it is also called as Provider ID somewhere.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pubsubTopic",
              "schema": {
                "description": "The resource name of the Pub/Sub topic to receive notifications from Google when a user signs up for your service, purchases a plan, or changes an existing plan.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportBucket",
              "schema": {
                "description": "The GCP storage bucket name to store the GCP Marketplace reports.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportFullSyncDone",
              "schema": {
                "description": "Is GCP Marketplace Report full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportStartDate",
              "schema": {
                "description": "The UTC date when GCP Marketplace reprots start to generate.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serviceAccountEmail",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serviceNames",
              "schema": {
                "description": "The array of service resource names of the listings in GCP Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "workloadIdentityPoolId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceConsumer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceConsumer",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "project",
              "schema": {
                "description": "The project name with format \`projects/\`.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceEntitlement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "account",
              "schema": {
                "description": "The resource name of the account that this entitlement is based on, if any, in format ""providers/{provider_id}/accounts/{account_id}"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "consumers",
              "schema": {
                "description": "The resources using this entitlement, if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpMarketplaceConsumer",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "createTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Entitlement Id generated by GCP Marketplace. For Marketplace pub/sub event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "inputProperties",
              "schema": {
                "description": "The custom properties that were collected from the user to create this entitlement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "messageToUser",
              "schema": {
                "description": "Provider-supplied message that is displayed to the end user. Currently this is used to communicate progress and ETA for
provisioning. This field can be updated only when a user is waiting for an action from the provider, i.e. entitlement state is
EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically when the entitlement state changes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The resource name of the entitlement. Entitlement names have the form \`providers/{provider_id}/entitlements/{entitlement_id}\`.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newOfferDuration",
              "schema": {
                "description": "in ISO 8601 duration format, such as "P2Y3M". For Marketplace pub/sub event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newOfferEndTime",
              "schema": {
                "description": "Output only. The end time of the new offer. Field is empty if the pending plan change is not moving to an offer.
If the offer was created with a term instead of a specified end date, this field is empty.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newOfferStartTime",
              "schema": {
                "description": "Output only. The start time of the new offer. Field is empty if the pending plan change is not moving to an offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newPendingOffer",
              "schema": {
                "description": "The name of the offer the entitlement is switching to upon a pending plan change. Only exists if the
pending plan change is moving to an offer. Format:
'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
'projects/{project}/services/{service}/standardOffers/{offer-id}',
depending on whether the offer is private or public.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newPendingOfferDuration",
              "schema": {
                "description": "The offer duration of the new offer in ISO 8601 duration format. Field is empty if the pending plan
change is not moving to an offer since the entitlement is not pending, only the plan change is pending.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newPendingPlan",
              "schema": {
                "description": "The identifier of the pending new plan. Required if the product has plans and the entitlement has a pending plan change.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newPlan",
              "schema": {
                "description": "When the buyer changes plan, For Marketplace pub/sub event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offer",
              "schema": {
                "description": "The name of the offer that was procured. Field is empty if order was not made using an offer. Format:
'projects/{project}/services/{service}/privateOffers/{offer-id}' OR 'projects/{project}/services/{service}/standardOffers/{offer-id}',
depending on whether the offer is private or public.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerDuration",
              "schema": {
                "description": "The offer duration of the current offer in ISO 8601 duration format. Field is empty if entitlement was not made using an offer, such as "P1Y", "P2M"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerEndTime",
              "schema": {
                "description": "Output only. End time for the Offer association corresponding to this entitlement. The field is only populated if the entitlement is currently associated with an Offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "plan",
              "schema": {
                "description": "The identifier of the plan that was procured. Required if the product has plans.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "product",
              "schema": {
                "description": "The identifier of the entity that was purchased. This may actually represent a product, quote, or offer.
For Private offer, "projects/project-id/services/product-id.endpoints.partner-id.cloud.goog/privateOffers/private-offer-id"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productExternalName",
              "schema": {
                "description": "The identifier of the product that was procured.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "provider",
              "schema": {
                "description": "The ID of the service provider under Cloud Commerce platform that this entitlement was created against.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quoteExternalName",
              "schema": {
                "description": "The identifier of the quote that was used to procure, such as the private offer Id. Empty if the order is not purchased using a quote.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": "Enums of the Entitlement State. https://cloud.google.com/marketplace/docs/partners/commerce-procurement-api/reference/rest/v1/providers.entitlements#EntitlementState",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpMarketplaceEntitlementState",
                  "type": "reference",
                },
              },
            },
            {
              "key": "subscriptionEndTime",
              "schema": {
                "description": "The End time for the subscription corresponding to this entitlement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "updateTime",
              "schema": {
                "description": "The last update timestamp. It is the endTime for the cancelled entitlement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageReportingId",
              "schema": {
                "description": "The consumerId to use when reporting usage through the Service Control API. See the consumerId field at
Reporting Metrics (https://cloud.google.com/service-control/reporting-metrics) for more details.
This field is present only if the product has usage-based billing configured.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceEntitlementState": {
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceEntitlementState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ENTITLEMENT_STATE_UNSPECIFIED",
              "nameOverride": undefined,
              "value": "ENTITLEMENT_STATE_UNSPECIFIED",
            },
            {
              "generatedName": "ENTITLEMENT_ACTIVATION_REQUESTED",
              "nameOverride": undefined,
              "value": "ENTITLEMENT_ACTIVATION_REQUESTED",
            },
            {
              "generatedName": "ENTITLEMENT_ACTIVE",
              "nameOverride": undefined,
              "value": "ENTITLEMENT_ACTIVE",
            },
            {
              "generatedName": "ENTITLEMENT_PENDING_CANCELLATION",
              "nameOverride": undefined,
              "value": "ENTITLEMENT_PENDING_CANCELLATION",
            },
            {
              "generatedName": "ENTITLEMENT_CANCELLED",
              "nameOverride": undefined,
              "value": "ENTITLEMENT_CANCELLED",
            },
            {
              "generatedName": "ENTITLEMENT_PENDING_PLAN_CHANGE",
              "nameOverride": undefined,
              "value": "ENTITLEMENT_PENDING_PLAN_CHANGE",
            },
            {
              "generatedName": "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL",
              "nameOverride": undefined,
              "value": "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL",
            },
            {
              "generatedName": "ENTITLEMENT_SUSPENDED",
              "nameOverride": undefined,
              "value": "ENTITLEMENT_SUSPENDED",
            },
          ],
        },
        "shared.GcpMarketplaceUserAccount": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccount",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "approvals",
              "schema": {
                "description": "The approvals for this account, that are permitted or have been completed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpMarketplaceUserAccountApproval",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "createTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "GCP Marketplace User Account ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "inputProperties",
              "schema": {
                "description": "RFC3339 UTC timestamp",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The resource name of the account. Account names have the form providers/{provider_id}/accounts/{account_id}.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "provider",
              "schema": {
                "description": "The identifier of the service provider (SaaS Seller) that this account was created against.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": "The state of the account. An account might not be able to make a purchase if the billing account is suspended, for example.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpMarketplaceUserAccountState",
                  "type": "reference",
                },
              },
            },
            {
              "key": "updateTime",
              "schema": {
                "description": "RFC3339 UTC timestamp",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "userInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpUserInfo",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceUserAccountApproval": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccountApproval",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reason",
              "schema": {
                "description": "An explanation for the state of the approval.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpMarketplaceUserAccountApprovalState",
                  "type": "reference",
                },
              },
            },
            {
              "key": "updateTime",
              "schema": {
                "description": "RFC3339 UTC timestamp",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceUserAccountApprovalState": {
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccountApprovalState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "STATE_UNSPECIFIED",
              "nameOverride": undefined,
              "value": "STATE_UNSPECIFIED",
            },
            {
              "generatedName": "PENDING",
              "nameOverride": undefined,
              "value": "PENDING",
            },
            {
              "generatedName": "APPROVED",
              "nameOverride": undefined,
              "value": "APPROVED",
            },
            {
              "generatedName": "REJECTED",
              "nameOverride": undefined,
              "value": "REJECTED",
            },
          ],
        },
        "shared.GcpMarketplaceUserAccountState": {
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccountState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACCOUNT_STATE_UNSPECIFIED",
              "nameOverride": undefined,
              "value": "ACCOUNT_STATE_UNSPECIFIED",
            },
            {
              "generatedName": "ACCOUNT_ACTIVE",
              "nameOverride": undefined,
              "value": "ACCOUNT_ACTIVE",
            },
          ],
        },
        "shared.GcpProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Nullable, GCP Marketplace Product UUID",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "listingSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerListingSpec",
                  "type": "reference",
                },
              },
            },
            {
              "key": "marketplace",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpProductMarketplace",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MarketplacesGoogleCloud",
                      "nameOverride": undefined,
                      "value": "marketplaces/google-cloud",
                    },
                  ],
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "In format of "projects/{project-number}/listings/{product-name}.endpoints.{provider-id}.cloud.goog"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": "In format of "services/{product-name}.endpoints.{provider-id}.cloud.goog"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serviceConfig",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerServiceConfig",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpPurchasePlan": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpPurchasePlan",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The Plan key.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpCommerceProducerPriceInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "purchaseMode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpPurchasePlanPurchaseMode",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "PURCHASE_MODE_PUBLIC",
                      "nameOverride": undefined,
                      "value": "PURCHASE_MODE_PUBLIC",
                    },
                  ],
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "The Plan title",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpUserInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpUserInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "roles",
              "schema": {
                "description": "An array of strings representing the user's roles. Right now, it can be either: ** account_admin, which indicates that the user is a Billing Account Administrator of the billing account that purchased the product, or ** project_editor, which indicates that the user is a Project Editor, but not a Billing Administrator, of the project under that billing account.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "user_identity",
              "schema": {
                "description": "The user's obfuscated GAIA ID, which can be used to initiate Open ID Connect.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GetApiClientAccessTokenParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGetApiClientAccessTokenParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the API Client.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "The secret of the API Client.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.GetRevenueReportParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGetRevenueReportParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerID",
              "schema": {
                "description": "Optional, if available, return the report for the Buyer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": "Optional, if available, return the report for the Entitlement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": "Required. If the productID & entitlementID are emtpy, return the report for the entire Organization.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": "Required.",
                "generatedName": "SharedGetRevenueReportParamsPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": "Optional, if available, return the report for the Product.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.RevenueReportType",
                "type": "reference",
              },
            },
            {
              "key": "service",
              "schema": {
                "description": "Required.",
                "generatedName": "SharedGetRevenueReportParamsService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                ],
              },
            },
          ],
          "type": "object",
        },
        "shared.GetUsageReportParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGetUsageReportParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.HubspotCrmCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedHubspotCrmCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "acquiredOn",
              "schema": {
                "description": "UTC timestamp on receiving the auth response",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expiresIn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.HubspotCrmIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedHubspotCrmIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.HubspotCrmCredential",
                  "type": "reference",
                },
              },
            },
            {
              "key": "portalId",
              "schema": {
                "description": "Hubspot Account Id",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "secretKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.IdentityBuyer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedIdentityBuyer",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.BuyerInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityBuyerPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.IdentityIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedIdentityIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.IntegrationInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastUpdatedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityIntegrationPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityIntegrationService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityIntegrationStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "CREATED",
                      "nameOverride": undefined,
                      "value": "CREATED",
                    },
                    {
                      "generatedName": "VERIFIED",
                      "nameOverride": undefined,
                      "value": "VERIFIED",
                    },
                    {
                      "generatedName": "NOT_VERIFIED",
                      "nameOverride": undefined,
                      "value": "NOT_VERIFIED",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.IntegrationInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedIntegrationInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsAceIntegration",
              "schema": {
                "description": "AWS ACE Integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AwsAceIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "awsIntegration",
              "schema": {
                "description": "AWS Marketplace Integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AwsMarketplaceIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureIntegration",
              "schema": {
                "description": "Azure Marketplace Integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AzureIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "gcpIntegration",
              "schema": {
                "description": "GCP Marketplace Integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "hubspotCrmIntegration",
              "schema": {
                "description": "Integration for HubSpot CRM",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.HubspotCrmIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "salesforceCrmIntegration",
              "schema": {
                "description": "Integration for Salesforce CRM",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.SalesforceCrmIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "slackIntegration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.SlackIntegration",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListRevenueRecordDetailsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListRevenueRecordDetailsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "revenueRecordDetails",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.RevenueRecordDetail",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListRevenueRecordsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListRevenueRecordsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "revenueRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.RevenueRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListUsageRecordGroupsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListUsageRecordGroupsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecordGroups",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.MeteringUsageRecordGroup",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListUsageRecordReportsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListUsageRecordReportsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecordReports",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.MeteringUsageRecordReport",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringDimension": {
          "allOf": [],
          "description": "The dimension to meter usage in entitlement.",
          "generatedName": "SharedMeteringDimension",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "category",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "includedBaseQuantities",
              "schema": {
                "description": "how many quantities of this dimension are included in the commit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureIncludedBaseQuantity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Display name of the dimension",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "usageCount",
              "schema": {
                "description": "The current Dimension Usage Count. Available when call GetEntitlement API.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.UsageCount",
                  "type": "reference",
                },
              },
            },
            {
              "key": "valueType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.ValueType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordGroup": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordGroup",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metaInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.MeteringUsageRecordGroupMetaInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "records",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "serialID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecordReportID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordGroupMetaInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordGroupMetaInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "originRecords",
              "schema": {
                "description": "The original records reported by the customer before convertion. If no dimension mapping is applied, this field is the same as the records field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordReport": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordReport",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementTermID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.MeteringUsageRecordReportInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordReportInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordReportInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsMeteringResponse",
              "schema": {
                "description": "The raw response from AWS metering service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "marketplacemetering.BatchMeterUsageOutput",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureMeteringResponse",
              "schema": {
                "description": "The raw response from Azure metering service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse",
                  "type": "reference",
                },
              },
            },
            {
              "key": "commitAmount",
              "schema": {
                "description": "The amount of the commit if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creditAmount",
              "schema": {
                "description": "The amount of the credit if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creditRecords",
              "schema": {
                "description": "The credit usage records in the map of <DimensionKey, Count>",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "dimensionUnitPrice",
              "schema": {
                "description": "The unit price of each dimension in the map of <DimensionKey, UnitPrice>",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "endTime",
              "schema": {
                "description": "time in UTC when the UsageRecordReport ends",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpMeteringResponse",
              "schema": {
                "description": "The raw response from GCP metering service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "servicecontrol.ReportResponse",
                  "type": "reference",
                },
              },
            },
            {
              "key": "includedRecords",
              "schema": {
                "description": "The included usage records in the map of <DimensionKey, Count>",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "reportedRecords",
              "schema": {
                "description": "The reported usage records in the map of <DimensionKey, Count>",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "startTime",
              "schema": {
                "description": "time in UTC when the UsageRecordReport starts",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecordGroupIds",
              "schema": {
                "description": "The IDs of UsageRecordGroups aggregated in this UsageRecordReport.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "usedCommitAmount",
              "schema": {
                "description": "The amount of the used commit before the this usage record report if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCommitAmountIncrement",
              "schema": {
                "description": "The amount of the used commit increment in this usage record report if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCreditAmount",
              "schema": {
                "description": "The amount of the used credit before the this usage record report if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCreditAmountIncrement",
              "schema": {
                "description": "The amount of the used credit increment in this usage record report if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.NotificationEvent": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedNotificationEvent",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.NotificationEventAction",
                  "type": "reference",
                },
              },
            },
            {
              "key": "entityID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entityStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entityType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.EntityType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "eventID",
              "schema": {
                "description": "notification event id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "eventStatus",
              "schema": {
                "description": "notification event status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.NotificationEventStatus",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": "timestamp of the event when it is updated.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": "suger organization id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "timestamp of the event when it is scheduled or created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.NotificationEventAction": {
          "description": undefined,
          "generatedName": "SharedNotificationEventAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACCEPT",
              "nameOverride": undefined,
              "value": "ACCEPT",
            },
            {
              "generatedName": "CREATE",
              "nameOverride": undefined,
              "value": "CREATE",
            },
            {
              "generatedName": "DELETE",
              "nameOverride": undefined,
              "value": "DELETE",
            },
            {
              "generatedName": "CANCEL",
              "nameOverride": undefined,
              "value": "CANCEL",
            },
            {
              "generatedName": "PENDING_CANCEL",
              "nameOverride": undefined,
              "value": "PENDING_CANCEL",
            },
            {
              "generatedName": "EXPIRE",
              "nameOverride": undefined,
              "value": "EXPIRE",
            },
            {
              "generatedName": "REINSTATE",
              "nameOverride": undefined,
              "value": "REINSTATE",
            },
            {
              "generatedName": "SUSPEND",
              "nameOverride": undefined,
              "value": "SUSPEND",
            },
            {
              "generatedName": "UPDATE",
              "nameOverride": undefined,
              "value": "UPDATE",
            },
            {
              "generatedName": "NOTIFY_CONTACTS",
              "nameOverride": undefined,
              "value": "NOTIFY_CONTACTS",
            },
            {
              "generatedName": "TEST",
              "nameOverride": undefined,
              "value": "TEST",
            },
          ],
        },
        "shared.NotificationEventStatus": {
          "description": undefined,
          "generatedName": "SharedNotificationEventStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "",
              "nameOverride": undefined,
              "value": "",
            },
            {
              "generatedName": "SCHEDULED",
              "nameOverride": undefined,
              "value": "SCHEDULED",
            },
            {
              "generatedName": "PENDING",
              "nameOverride": undefined,
              "value": "PENDING",
            },
            {
              "generatedName": "DONE",
              "nameOverride": undefined,
              "value": "DONE",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "shared.OfferInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedOfferInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "azureOriginalPlan",
              "schema": {
                "description": "The origin pricing of Azure plan. Only applicable for Azure Marketplace plans.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azurePrivateOffer",
              "schema": {
                "description": "The private offer for Azure Marketplace. Only applicable for Azure Marketplace private offers.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureMarketplacePrivateOffer",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureProductVariant",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureProductVariant",
                  "type": "reference",
                },
              },
            },
            {
              "key": "buyerAwsAccountIds",
              "schema": {
                "description": "The buyers' AWS Account IDs of this offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "buyerAzureTenants",
              "schema": {
                "description": "The buyers' Azure tenants of this offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "commits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.CommitDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.MeteringDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "discount",
              "schema": {
                "description": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "eulaType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.EulaType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpMetrics",
              "schema": {
                "description": "Only applicable for GCP Marketplace Offers (the default or private offer)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpCommerceProducerPurchaseMetric",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "gcpPlans",
              "schema": {
                "description": "Only applicable for GCP Marketplace Offers (the default or private offer).",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.GcpPurchasePlan",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "paymentInstallments",
              "schema": {
                "description": "For flexible payment schedule. Not empty if it is enabled.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.PaymentInstallment",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "privateOfferUrl",
              "schema": {
                "description": "The URL of the private offer sent to buyers to accept. Only applicable for private offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundCancelationPolicy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sellerNotes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "visibility",
              "schema": {
                "description": "The default visibility of offer is PRIVATE.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedOfferInfoVisibility",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "PRIVATE",
                      "nameOverride": undefined,
                      "value": "PRIVATE",
                    },
                    {
                      "generatedName": "PUBLIC",
                      "nameOverride": undefined,
                      "value": "PUBLIC",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.OfferMetaInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedOfferMetaInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "baseAgreementId",
              "schema": {
                "description": "Applicable for AWS Marketplace only, when the IsAgreementBasedOffer is true.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contacts",
              "schema": {
                "description": "The contacts of the offer to notify if any updates.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.Contact",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "isAgreementBasedOffer",
              "schema": {
                "description": "Applicable for AWS Marketplace only, If this offer is agreement based offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isRenewalOffer",
              "schema": {
                "description": "Applicable for AWS Marketplace only, If this offer is renewal offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "notifications",
              "schema": {
                "description": "The notifications of the offer if any updates. In most cases, it is to notify contacts/buyers when the offer is pending acceptance.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.NotificationEvent",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.Operation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedOperation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "endTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Operation ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.OperationType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.OperationType": {
          "description": undefined,
          "generatedName": "SharedOperationType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "TemporalWorkflow",
              "nameOverride": undefined,
              "value": "TemporalWorkflow",
            },
          ],
        },
        "shared.PaymentInstallment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedPaymentInstallment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "amount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "chargeOn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ProductInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedProductInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "attributes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "awsSaasProduct",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.AwsSaasProduct",
                  "type": "reference",
                },
              },
            },
            {
              "key": "awsSnsSubscriptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.AwsSnsSubscription",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "azureProduct",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "AzureProduct",
                  "type": "reference",
                },
              },
            },
            {
              "key": "commits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.CommitDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.MeteringDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpProduct",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.GcpProduct",
                  "type": "reference",
                },
              },
            },
            {
              "key": "refundCancelationPolicy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sellerNotes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueRecord": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "amount",
              "schema": {
                "description": "The revenue amount for the revenue report",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "collectableAmount",
              "schema": {
                "description": "The revenue amount that the seller/ISV can collect.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": "The currency of the revenue in ISO 4217 format, such as "USD".",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "date",
              "schema": {
                "description": "The date for the revenue report",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "disburseAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "disburseDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.RevenueRecordInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "invoiceAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "invoiceDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentDueDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundDisburseAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundDisburseDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundInvoiceAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundInvoiceDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "taxAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueRecordDetail": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueRecordDetail",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsRevenueRecordDetail",
              "schema": {
                "description": "For AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureRevenueRecordDetail",
              "schema": {
                "description": "For Azure Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
                  "type": "reference",
                },
              },
            },
            {
              "key": "gcpRevenueRecordDetail",
              "schema": {
                "description": "For GCP Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueRecordInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueRecordInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsRevenueRecords",
              "schema": {
                "description": "For raw revenue records in AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "azureRevenueRecords",
              "schema": {
                "description": "For raw revenue records in Azure Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "gcpRevenueRecords",
              "schema": {
                "description": "For raw revenue records in GCP Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueReport": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueReport",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.RevenueReportType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "revenueRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.RevenueRecord",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueReportType": {
          "description": undefined,
          "generatedName": "SharedRevenueReportType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "InvoicedAmount",
              "nameOverride": undefined,
              "value": "InvoicedAmount",
            },
            {
              "generatedName": "CollectableAmount",
              "nameOverride": undefined,
              "value": "CollectableAmount",
            },
            {
              "generatedName": "DisbursedAmount",
              "nameOverride": undefined,
              "value": "DisbursedAmount",
            },
          ],
        },
        "shared.SalesforceCrmCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSalesforceCrmCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "exp",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "instance_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refresh_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.SalesforceCrmIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSalesforceCrmIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "credential",
              "schema": {
                "description": "System created",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.SalesforceCrmCredential",
                  "type": "reference",
                },
              },
            },
            {
              "key": "filters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.SalesforceSyncFilter",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "instanceUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isSandbox",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "secretKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subdomain",
              "schema": {
                "description": "User defined when setting up the integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.SalesforceSyncFilter": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSalesforceSyncFilter",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fieldName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "operator",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "type": "unknown",
              },
            },
          ],
          "type": "object",
        },
        "shared.SlackIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSlackIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "authedUser",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "slack.OAuthV2ResponseAuthedUser",
                  "type": "reference",
                },
              },
            },
            {
              "key": "botUserId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "enterprise",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "slack.OAuthV2ResponseEnterprise",
                  "type": "reference",
                },
              },
            },
            {
              "key": "expiresIn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "incomingWebhook",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "slack.OAuthResponseIncomingWebhook",
                  "type": "reference",
                },
              },
            },
            {
              "key": "redirectUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": "The scope of the access token. multiple scopes are separated by comma.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "team",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "slack.OAuthV2ResponseTeam",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tokenType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.UpdateIntegrationParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUpdateIntegrationParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "file": undefined,
                "schema": "shared.IntegrationInfo",
                "type": "reference",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "SharedUpdateIntegrationParamsPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "generatedName": "SharedUpdateIntegrationParamsService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                ],
              },
            },
          ],
          "type": "object",
        },
        "shared.UpdateProductParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUpdateProductParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fulfillmentUrl",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.UsageCount": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUsageCount",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creditCount",
              "schema": {
                "description": "The count of this dimension usage records that are handled as credit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "includedCount",
              "schema": {
                "description": "The count of this dimension usage records that are handled as included in IncludedBaseQuantity",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportedCount",
              "schema": {
                "description": "The count of this dimension usage records that are reported to cloud vendors.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.UsageReport": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUsageReport",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "shared.EntitlementUsageRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ValueType": {
          "description": undefined,
          "generatedName": "SharedValueType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "VALUE_TYPE_UNSPECIFIED",
              "nameOverride": undefined,
              "value": "VALUE_TYPE_UNSPECIFIED",
            },
            {
              "generatedName": "BOOL",
              "nameOverride": undefined,
              "value": "BOOL",
            },
            {
              "generatedName": "INT64",
              "nameOverride": undefined,
              "value": "INT64",
            },
            {
              "generatedName": "DOUBLE",
              "nameOverride": undefined,
              "value": "DOUBLE",
            },
            {
              "generatedName": "STRING",
              "nameOverride": undefined,
              "value": "STRING",
            },
            {
              "generatedName": "DISTRIBUTION",
              "nameOverride": undefined,
              "value": "DISTRIBUTION",
            },
            {
              "generatedName": "MONEY",
              "nameOverride": undefined,
              "value": "MONEY",
            },
          ],
        },
        "shared.WorkloadEntitlement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endTime",
              "schema": {
                "description": "nullable",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementTermID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalBuyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalProductID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.EntitlementInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ACTIVE",
                      "nameOverride": undefined,
                      "value": "ACTIVE",
                    },
                    {
                      "generatedName": "CANCELLED",
                      "nameOverride": undefined,
                      "value": "CANCELLED",
                    },
                    {
                      "generatedName": "SUSPENDED",
                      "nameOverride": undefined,
                      "value": "SUSPENDED",
                    },
                    {
                      "generatedName": "PENDING_START",
                      "nameOverride": undefined,
                      "value": "PENDING_START",
                    },
                    {
                      "generatedName": "UNKNOWN",
                      "nameOverride": undefined,
                      "value": "UNKNOWN",
                    },
                  ],
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.WorkloadEntitlementTerm": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadEntitlementTerm",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "commitAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creditAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endTime",
              "schema": {
                "description": "nullable",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.EntitlementInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "externalEntitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.EntitlementTermInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCommitAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCreditAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.WorkloadOffer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadOffer",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endTime",
              "schema": {
                "description": "nullable",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expireTime",
              "schema": {
                "description": "nullable",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.OfferInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastUpdatedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metaInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.OfferMetaInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferOfferType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "DEFAULT",
                      "nameOverride": undefined,
                      "value": "DEFAULT",
                    },
                    {
                      "generatedName": "CONTRACT",
                      "nameOverride": undefined,
                      "value": "CONTRACT",
                    },
                    {
                      "generatedName": "SUBSCRIPTION",
                      "nameOverride": undefined,
                      "value": "SUBSCRIPTION",
                    },
                    {
                      "generatedName": "FREE_TRIAL",
                      "nameOverride": undefined,
                      "value": "FREE_TRIAL",
                    },
                    {
                      "generatedName": "FLAT_RATE",
                      "nameOverride": undefined,
                      "value": "FLAT_RATE",
                    },
                    {
                      "generatedName": "PER_USER",
                      "nameOverride": undefined,
                      "value": "PER_USER",
                    },
                    {
                      "generatedName": "PRIVATE",
                      "nameOverride": undefined,
                      "value": "PRIVATE",
                    },
                    {
                      "generatedName": "UNKNOWN",
                      "nameOverride": undefined,
                      "value": "UNKNOWN",
                    },
                  ],
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ACCEPTED",
                      "nameOverride": undefined,
                      "value": "ACCEPTED",
                    },
                    {
                      "generatedName": "PENDING_CREATE",
                      "nameOverride": undefined,
                      "value": "PENDING_CREATE",
                    },
                    {
                      "generatedName": "CREATE_FAILED",
                      "nameOverride": undefined,
                      "value": "CREATE_FAILED",
                    },
                    {
                      "generatedName": "CREATE_SUCCESS",
                      "nameOverride": undefined,
                      "value": "CREATE_SUCCESS",
                    },
                    {
                      "generatedName": "DRAFT",
                      "nameOverride": undefined,
                      "value": "DRAFT",
                    },
                    {
                      "generatedName": "EXPIRED",
                      "nameOverride": undefined,
                      "value": "EXPIRED",
                    },
                    {
                      "generatedName": "PENDING_ACCEPTANCE",
                      "nameOverride": undefined,
                      "value": "PENDING_ACCEPTANCE",
                    },
                    {
                      "generatedName": "PENDING_CANCEL",
                      "nameOverride": undefined,
                      "value": "PENDING_CANCEL",
                    },
                    {
                      "generatedName": "CANCEL_FAILED",
                      "nameOverride": undefined,
                      "value": "CANCEL_FAILED",
                    },
                    {
                      "generatedName": "CANCEL_SUCCESS",
                      "nameOverride": undefined,
                      "value": "CANCEL_SUCCESS",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.WorkloadProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fulfillmentUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "shared.ProductInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastUpdatedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadProductPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "productType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadProductProductType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "UNKNOWN",
                      "nameOverride": undefined,
                      "value": "UNKNOWN",
                    },
                    {
                      "generatedName": "SUBSCRIPTION",
                      "nameOverride": undefined,
                      "value": "SUBSCRIPTION",
                    },
                    {
                      "generatedName": "CONTRACT",
                      "nameOverride": undefined,
                      "value": "CONTRACT",
                    },
                    {
                      "generatedName": "FLAT_RATE",
                      "nameOverride": undefined,
                      "value": "FLAT_RATE",
                    },
                    {
                      "generatedName": "PER_USER",
                      "nameOverride": undefined,
                      "value": "PER_USER",
                    },
                    {
                      "generatedName": "USAGE_BASED",
                      "nameOverride": undefined,
                      "value": "USAGE_BASED",
                    },
                  ],
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadProductService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthResponseIncomingWebhook": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthResponseIncomingWebhook",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "channel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "channel_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "configuration_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthV2ResponseAuthedUser": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthV2ResponseAuthedUser",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refresh_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthV2ResponseEnterprise": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthV2ResponseEnterprise",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthV2ResponseTeam": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthV2ResponseTeam",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "sql.NullTime": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SqlNullTime",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "time",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "valid",
              "schema": {
                "description": "Valid is true if Time is not NULL",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "types.Entitlement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "customerIdentifier",
              "schema": {
                "description": "The customer identifier is a handle to each unique customer in an application.
Customer identifiers are obtained through the ResolveCustomer operation in AWS
Marketplace Metering Service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimension",
              "schema": {
                "description": "The dimension for which the given entitlement applies. Dimensions represent
categories of capacity in a product and are specified when the product is listed
in AWS Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expirationDate",
              "schema": {
                "description": "The expiration date represents the minimum date through which this entitlement
is expected to remain valid. For contractual products listed on AWS Marketplace,
the expiration date is the date at which the customer will renew or cancel their
contract. Customers who are opting to renew their contract will still have
entitlements with an expiration date.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productCode",
              "schema": {
                "description": "The product code for which the given entitlement applies. Product codes are
provided by AWS Marketplace when the product listing is created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "type": "unknown",
              },
            },
          ],
          "type": "object",
        },
        "types.UsageAllocation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesUsageAllocation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allocatedUsageQuantity",
              "schema": {
                "description": "The total quantity allocated to this bucket of usage.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "The set of tags that define the bucket of usage. For the bucket of items with no
tags, this parameter can be left out.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageRecord": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesUsageRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "customerIdentifier",
              "schema": {
                "description": "The CustomerIdentifier is obtained through the ResolveCustomer operation and
represents an individual buyer in your application.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimension",
              "schema": {
                "description": "During the process of registering a product on AWS Marketplace, dimensions are
specified. These represent different units of value in your application.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": "The quantity of usage consumed by the customer for the given dimension and time.
Defaults to 0 if not specified.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "Timestamp, in UTC, for which the usage is being reported. Your application can
meter usage for up to one hour in the past. Make sure the timestamp value is not
before the start of the software usage.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageAllocations",
              "schema": {
                "description": "The set of UsageAllocations to submit. The sum of all UsageAllocation quantities
must equal the Quantity of the UsageRecord.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "types.UsageAllocation",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageRecordResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesUsageRecordResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "meteringRecordId",
              "schema": {
                "description": "The MeteringRecordId is a unique identifier for this metering event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "The UsageRecordResultStatus indicates the status of an individual UsageRecord
processed by BatchMeterUsage.

* Success- The UsageRecord was accepted and
honored by BatchMeterUsage.

* CustomerNotSubscribed- The CustomerIdentifier
specified is not able to use your product. The UsageRecord was not honored.
There are three causes for this result:

* The customer identifier is
invalid.

* The customer identifier provided in the metering record does not
have an active agreement or subscription with this product. Future UsageRecords
for this customer will fail until the customer subscribes to your product.

*
The customer's AWS account was suspended.

* DuplicateRecord- Indicates that the
UsageRecord was invalid and not honored. A previously metered UsageRecord had
the same customer, dimension, and time, but a different quantity.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "types.UsageRecordResultStatus",
                  "type": "reference",
                },
              },
            },
            {
              "key": "usageRecord",
              "schema": {
                "description": "The UsageRecord that was part of the BatchMeterUsage request.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "types.UsageRecord",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageRecordResultStatus": {
          "description": undefined,
          "generatedName": "TypesUsageRecordResultStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Success",
              "nameOverride": undefined,
              "value": "Success",
            },
            {
              "generatedName": "CustomerNotSubscribed",
              "nameOverride": undefined,
              "value": "CustomerNotSubscribed",
            },
            {
              "generatedName": "DuplicateRecord",
              "nameOverride": undefined,
              "value": "DuplicateRecord",
            },
          ],
        },
      },
      "securitySchemes": {
        "BearerTokenAuth": {
          "headerName": "Authorization",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "//https://api.suger.cloud",
        },
      ],
      "tags": [],
      "title": "Suger API",
    },
  },
  "rootPackage": {
    "file": "swagger.json",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser vellum simple 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "
## Vellum API Documentation

### Welcome 👋
Welcome to Vellum's API documentation! Here you'll find information about the various endpoints available to you,
as well as the parameters and responses that they accept and return.

We will be exposing more and more of our APIs over time as they stabilize. If there is some action you can perform
via the UI that you wish you could perform via API, please let us know and we can expose it here in an unstable state.

### API Stability
Some of the APIs documented within are undergoing active development. Use the
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>
and
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>
tags to differentiate between those that are stable and those that are not.

### Base URLs
Some endpoints are hosted separately from the main Vellum API and therefore have a different base url. If this is
the case, they will say so in their description.

Unless otherwise specified, all endpoints use <code>https://api.vellum.ai</code> as their base URL.

### Official API Clients:
Vellum maintains official API clients for Python and Node/Typescript. We recommend using these clients to interact
with all stable endpoints. You can find them here:
- [Python](https://github.com/vocify/vellum-client-python)
- [Node/Typescript](https://github.com/vocify/vellum-client-node)
",
      "endpoints": [
        {
          "description": "
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to list documents. Optionally filter on supported fields.
",
          "errors": [],
          "generatedRequestName": "DocumentsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "documents_list",
          "path": "/v1/documents",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "document_index_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "ordering",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": "ListDocumentsRequest",
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "PaginatedSlimDocumentList",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "documents",
          ],
        },
        {
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Generate a completion using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errors": [],
          "generatedRequestName": "GenerateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "generate",
          "path": "/v1/generate",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "GenerateRequestBodyRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "GenerateResponse",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "generate",
          ],
        },
        {
          "description": "
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Used to retrieve a model version given its ID.
",
          "errors": [],
          "generatedRequestName": "ModelVersionsRetrieveRequest",
          "headers": [],
          "method": "GET",
          "operationId": "model_versions_retrieve",
          "path": "/v1/model-versions/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "ModelVersionRead",
              "type": "reference",
            },
          },
          "server": [],
          "summary": undefined,
          "tags": [
            "model-versions",
          ],
        },
        {
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Perform a search against a document index.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errors": [],
          "generatedRequestName": "SearchRequest",
          "headers": [],
          "method": "POST",
          "operationId": "search",
          "path": "/v1/search",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "SearchRequestBodyRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "SearchResponse",
              "type": "reference",
            },
          },
          "server": [
            {
              "description": undefined,
              "name": "Predict",
              "url": "https://predict.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "search",
          ],
        },
        {
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to submit feedback regarding the quality of previously generated completions.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errors": [],
          "generatedRequestName": "SubmitCompletionActualsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "submit_completion_actuals",
          "path": "/v1/submit-completion-actuals",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "SubmitCompletionActualsRequestRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "server": [
            {
              "description": undefined,
              "name": "Predict",
              "url": "https://predict.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "submit-completion-actuals",
          ],
        },
        {
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Upload a document to be indexed and used for search.

**Note:** Uses a base url of \`https://documents.vellum.ai\`.",
          "errors": [],
          "generatedRequestName": "DocumentsUploadRequest",
          "headers": [],
          "method": "POST",
          "operationId": "documents_upload",
          "path": "/v1/upload-document",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": "UploadDocumentRequestBodyRequest",
            "properties": [
              {
                "description": undefined,
                "key": "add_to_index_names",
                "schema": {
                  "json": {
                    "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "external_id",
                "schema": {
                  "json": {
                    "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "label",
                "schema": {
                  "json": {
                    "description": "A human-friendly name for this document. Typically the filename.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "contents",
                "schema": {
                  "type": "file",
                },
              },
              {
                "description": undefined,
                "key": "keywords",
                "schema": {
                  "json": {
                    "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "json",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "schema": "UploadDocumentResponse",
              "type": "reference",
            },
          },
          "server": [
            {
              "description": undefined,
              "name": "Documents",
              "url": "https://documents.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "documents",
          ],
        },
      ],
      "schemas": {
        "Document": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Document",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "The human-readable name for the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "DocumentDocumentToDocumentIndex": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DocumentDocumentToDocumentIndex",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "document_index_id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies the index this document is included in.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "indexing_state",
              "schema": {
                "description": "An enum value representing where this document is along its indexing lifecycle for this index.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "IndexingStateEnum",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "EnrichedNormalizedCompletion": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EnrichedNormalizedCompletion",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The Vellum-generated ID of the completion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text generated by the LLM.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "finish_reason",
              "schema": {
                "description": "The reason the generation finished.",
                "file": undefined,
                "schema": "FinishReasonEnum",
                "type": "reference",
              },
            },
            {
              "key": "logprobs",
              "schema": {
                "description": "The logprobs of the completion. Only present if specified in the original request options.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "NormalizedLogProbs",
                  "type": "reference",
                },
              },
            },
            {
              "key": "model_version_id",
              "schema": {
                "description": "The ID of the model version used to generate this completion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "FinishReasonEnum": {
          "description": undefined,
          "generatedName": "FinishReasonEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "LENGTH",
              "nameOverride": undefined,
              "value": "LENGTH",
            },
            {
              "generatedName": "STOP",
              "nameOverride": undefined,
              "value": "STOP",
            },
            {
              "generatedName": "UNKNOWN",
              "nameOverride": undefined,
              "value": "UNKNOWN",
            },
          ],
        },
        "GenerateErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": "Details about why the request failed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "GenerateOptionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateOptionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "logprobs",
              "schema": {
                "description": "Which logprobs to include, if any. Defaults to NONE.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "LogprobsEnum",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deployment_id",
              "schema": {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deployment_name",
              "schema": {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requests",
              "schema": {
                "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateRequestRequest",
                  "type": "reference",
                },
              },
            },
            {
              "key": "options",
              "schema": {
                "description": "Additional configuration that can be used to control what's included in the response.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateOptionsRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateRequestRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateRequestRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "input_values",
              "schema": {
                "description": "Key/value pairs for each template variable defined in the deployment's prompt.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "key": "external_ids",
              "schema": {
                "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "results",
              "schema": {
                "description": "The results of each generation request.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateResult",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "data",
              "schema": {
                "description": "An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateResultData",
                  "type": "reference",
                },
              },
            },
            {
              "key": "error",
              "schema": {
                "description": "An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "GenerateResultError",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResultData": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResultData",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "completions",
              "schema": {
                "description": "The generated completions. This will generally be a list of length one.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "EnrichedNormalizedCompletion",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResultError": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResultError",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "message",
              "schema": {
                "description": "The error message returned by the LLM provider.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "IndexingStateEnum": {
          "description": undefined,
          "generatedName": "IndexingStateEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "AWAITING_PROCESSING",
              "nameOverride": undefined,
              "value": "AWAITING_PROCESSING",
            },
            {
              "generatedName": "QUEUED",
              "nameOverride": undefined,
              "value": "QUEUED",
            },
            {
              "generatedName": "INDEXING",
              "nameOverride": undefined,
              "value": "INDEXING",
            },
            {
              "generatedName": "INDEXED",
              "nameOverride": undefined,
              "value": "INDEXED",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "LogprobsEnum": {
          "description": undefined,
          "generatedName": "LogprobsEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ALL",
              "nameOverride": undefined,
              "value": "ALL",
            },
            {
              "generatedName": "NONE",
              "nameOverride": undefined,
              "value": "NONE",
            },
          ],
        },
        "ModelTypeEnum": {
          "description": undefined,
          "generatedName": "ModelTypeEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "GENERATE",
              "nameOverride": undefined,
              "value": "GENERATE",
            },
            {
              "generatedName": "CLASSIFY",
              "nameOverride": undefined,
              "value": "CLASSIFY",
            },
          ],
        },
        "ModelVersionBuildConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionBuildConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "base_model",
              "schema": {
                "description": "The name of the base model used to create this model version, as identified by the LLM provider.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "sandbox_snapshot",
              "schema": {
                "description": "Information about the sandbox snapshot that was used to create this model version, if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ModelVersionSandboxSnapshot",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionExecConfigParameters": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionExecConfigParameters",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "temperature",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "max_tokens",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "stop",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "top_p",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "top_k",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "frequency_penalty",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "presence_penalty",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "logit_bias",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionExecConfigRead": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionExecConfigRead",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "prompt_template",
              "schema": {
                "description": "The template used to generate prompts for this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "parameters",
              "schema": {
                "description": "The generation parameters that are passed to the LLM provider at runtime.",
                "file": undefined,
                "schema": "ModelVersionExecConfigParameters",
                "type": "reference",
              },
            },
            {
              "key": "input_variables",
              "schema": {
                "description": "Names of the template variables specified in the prompt template.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionRead": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionRead",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "Timestamp of when this model version was created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "Human-friendly name for this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "model_type",
              "schema": {
                "description": "The type of task this model is used for.",
                "file": undefined,
                "schema": "ModelTypeEnum",
                "type": "reference",
              },
            },
            {
              "key": "provider",
              "schema": {
                "description": "Which LLM provider this model version is associated with.",
                "file": undefined,
                "schema": "ProviderEnum",
                "type": "reference",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The unique id of this model version as it exists in the above provider's system.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "build_config",
              "schema": {
                "description": "Configuration used to build this model version.",
                "file": undefined,
                "schema": "ModelVersionBuildConfig",
                "type": "reference",
              },
            },
            {
              "key": "exec_config",
              "schema": {
                "description": "Configuration used to execute this model version.",
                "file": undefined,
                "schema": "ModelVersionExecConfigRead",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionSandboxSnapshot": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionSandboxSnapshot",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the sandbox snapshot.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "prompt_index",
              "schema": {
                "description": "The index of the prompt in the sandbox snapshot.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NormalizedLogProbs": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NormalizedLogProbs",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tokens",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "NormalizedTokenLogProbs",
                  "type": "reference",
                },
              },
            },
            {
              "key": "likelihood",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NormalizedTokenLogProbs": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NormalizedTokenLogProbs",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "logprob",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "top_logprobs",
              "schema": {
                "description": undefined,
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text_offset",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaginatedSlimDocumentList": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaginatedSlimDocumentList",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "schema": "SlimDocument",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ProcessingStateEnum": {
          "description": undefined,
          "generatedName": "ProcessingStateEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "QUEUED",
              "nameOverride": undefined,
              "value": "QUEUED",
            },
            {
              "generatedName": "PROCESSING",
              "nameOverride": undefined,
              "value": "PROCESSING",
            },
            {
              "generatedName": "PROCESSED",
              "nameOverride": undefined,
              "value": "PROCESSED",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "ProviderEnum": {
          "description": undefined,
          "generatedName": "ProviderEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "OPENAI",
              "nameOverride": undefined,
              "value": "OPENAI",
            },
            {
              "generatedName": "COHERE",
              "nameOverride": undefined,
              "value": "COHERE",
            },
            {
              "generatedName": "ANTHROPIC",
              "nameOverride": undefined,
              "value": "ANTHROPIC",
            },
          ],
        },
        "SearchErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": "Details about why the request failed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchFiltersRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchFiltersRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "external_ids",
              "schema": {
                "description": "The document external IDs to filter by",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "index_id",
              "schema": {
                "description": "The ID of the index to search against. Must provide either this or index_name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "index_name",
              "schema": {
                "description": "The name of the index to search against. Must provide either this or index_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "query",
              "schema": {
                "description": "The query to search for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "options",
              "schema": {
                "description": "Configuration options for the search.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchRequestOptionsRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchRequestOptionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchRequestOptionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "limit",
              "schema": {
                "description": "The maximum number of results to return.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "weights",
              "schema": {
                "description": "The weights to use for the search. Must add up to 1.0.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchWeightsRequest",
                  "type": "reference",
                },
              },
            },
            {
              "key": "result_merging",
              "schema": {
                "description": "The configuration for merging results.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchResultMergingRequest",
                  "type": "reference",
                },
              },
            },
            {
              "key": "filters",
              "schema": {
                "description": "The filters to apply to the search.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchFiltersRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "results",
              "schema": {
                "description": "The results of the search. Each result represents a chunk that matches the search query.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SearchResult",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "document",
              "schema": {
                "description": "The document that contains the chunk that matched the search query.",
                "file": undefined,
                "schema": "Document",
                "type": "reference",
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text of the chunk that matched the search query.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "score",
              "schema": {
                "description": "A score representing how well the chunk matches the search query.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchResultMergingRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResultMergingRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "enabled",
              "schema": {
                "description": "Whether to enable merging results",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchWeightsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchWeightsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "semantic_similarity",
              "schema": {
                "description": "The relative weight to give to semantic similarity",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": "The relative weight to give to keyword matches",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SlimDocument": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlimDocument",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The external ID that was originally provided when uploading the document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "last_uploaded_at",
              "schema": {
                "description": "A timestamp representing when this document was most recently uploaded.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "Human-friendly name for this document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "processing_state",
              "schema": {
                "description": "The current processing state of the document",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "ProcessingStateEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "The document's current status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "StatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": "A list of keywords associated with this document. Originally provided when uploading the document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "document_to_document_indexes",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "DocumentDocumentToDocumentIndex",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "StatusEnum": {
          "description": undefined,
          "generatedName": "StatusEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACTIVE",
              "nameOverride": undefined,
              "value": "ACTIVE",
            },
          ],
        },
        "SubmitCompletionActualRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "Text representing what the completion _should_ have been.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quality",
              "schema": {
                "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SubmitCompletionActualsErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualsErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SubmitCompletionActualsRequestRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualsRequestRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deployment_id",
              "schema": {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deployment_name",
              "schema": {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "actuals",
              "schema": {
                "description": "Feedback regarding the quality of previously generated completions",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "schema": "SubmitCompletionActualRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "add_to_index_names",
              "schema": {
                "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "A human-friendly name for this document. Typically the filename.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "contents",
              "schema": {
                "description": "The file contents of the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "document_id",
              "schema": {
                "description": "The ID of the newly created document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "apiKeyAuth": {
          "headerName": "X_API_KEY",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": "Default Server",
          "name": "Default",
          "url": "https://api.vellum.ai",
        },
      ],
      "tags": [],
      "title": "Vellum Client API",
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

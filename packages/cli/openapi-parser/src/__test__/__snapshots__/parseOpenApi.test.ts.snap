// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser belvo simple 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "# Introduction

Belvo is an open banking API for Latin America that allows companies to access banking and fiscal information in a secure as well as agile way.

Through our API, you can access:


- **Bank information** such as account information, real-time
balance, historical transactions, and account owner identification.

- **Fiscal information** such as received and sent invoices and tax returns.


<img src="https://files.readme.io/acf27d3-belvo_pipes.png"
alt="fiscal-endpoints">


In this API reference you'll find all the information you need about each

endpoint and resource.


<div style="background-color:#f4f6f8; border-left: 6px solid
#4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right:
25px">

<strong>Tip: </strong> Make sure that you also check out our Developer
Portal for guides on <a
href="https://developers.belvo.com/docs/get-started-in-5-minutes"
target="_blank">how to get started</a>, using our <a
href="https://developers.belvo.com/docs/test-in-sandbox"
target="_blank">Sandbox environment</a>, as well as how to <a
href="https://developers.belvo.com/docs/connect-widget"
target="_blank">integrate the widget</a> or use our <a
href="https://developers.belvo.com/docs/quickstart-application"
target="_blank">quickstart application</a>.

</div>


## Environment

We currently offer three environments: sandbox, development, and
production.


When using our SDKs, make sure to use the **Alias** (and not the Base URL).


| Environment | Purpose | Access |
|-----------|-------|-------|
| **Sandbox** | The [Sandbox environment](https://developers.belvo.com/docs/test-in-sandbox) is dedicated for your testing and development phases. In this environment, you can create links without real credentials and you can pull test data from all endpoints. **⚠️The sandbox environment is refreshed frequently and your test data can be updated or deleted.** | Base URL (cURL): https://sandbox.belvo.com/ <br><br>Alias (SDKs): sandbox|
|**Development**|The Development environment is dedicated for testing with real credentials and institutions with real-world institutions. You can create up to 25 links for free in this environment.| Base URL (cURL): https://development.belvo.com/ <br><br>Alias (SDKs): development |
| **Production** | The Production environment is dedicated for live applications with real connections to institutions. In this environment, you
will need real credentials to create links and you will pull real data from the institutions.| Base URL (cURL): https://api.belvo.com/ <br><br>Alias
(SDKs): production|


For each environment, you'll need to [generate separate API
keys](https://developers.belvo.com/docs/get-your-belvo-api-keys).


## Response codes


We use the following HTTP status code in the response depending on the
success or failure:


| Status Code | Description |
|-----------|-------|
| \`200\` | ✅ **Success** - The content is available in the response body. |
| \`201\` | ✅ **Success** - The content was created successfully on Belvo. |
| \`204\` | ✅ **Success** - No content to return. |
| \`400\` | ❌ **Bad Request Error** - Request returned an error, detail in content.|
| \`401\` | ❌ **Unauthorized** - The Belvo credentials provided are not valid.|
| \`404\` | ❌ **Not Found** - The resource you try to access cannot be found.|
| \`405\` | ❌ **Method Not Allowed** - The HTTP method you are using is not accepted for this resource.|
| \`408\` | ❌ **Request Timeout** - The request timed out and was terminated by the server.|
| \`428\` | ❌ **MFA Token Required** - MFA token was required by the institution to connect. |
| \`500\` | ❌ **Internal Server Error** - The detail of the error is available in the response body.|


## Error handling


### Error messages


Belvo API errors are returned in JSON format. For example, an error might
look like this:


\`\`\`json

[
    {
      "request_id": "a6e1c493d7a29d91aed4338e6fcf077d",
      "message": "This field is required.",
      "code": "required",
      "field": "link"
    }
]

\`\`\`


Typically, an error response will have the following parameters:

- \`request_id\`: a unique ID for the request, you should share it with the
Belvo support team for investigations.

- \`message\`: human-readable description of the error.

- \`code\`: a unique code for the error. Check the table below to see how to
handle each error code.

- \`field\` *(optional)*: The specific field in the request body that has an
issue.



### Request identifier

When you need help with a specific error, add the request identifier
(\`request_id\`) in your message to the Belvo support team. This will speed up
investigations and get you back up and running in no time at all.


### Error codes and troubleshooting


For a full list of errors and how to troubleshoot them, please see our
dedicated [Error handling
articles](https://developers.belvo.com/docs/integration-overview#error-handling)
in our DevPortal.



### Retry policy


Please see our recommended [retry
policies](https://developers.belvo.com/docs/integration-overview#error-retry-policy)
in the DevPortal.
",
      "endpoints": [
        {
          "authed": true,
          "description": "Get a paginated list of all the existing links in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListLinksRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListLinks",
          "path": "/api/links",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links only with this access mode. Can be either \`single\` or \`recurrent\`.",
              "name": "access_mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links that were last updated in Belvo's database on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links that were not created by these Belvo users.",
              "name": "created_by__not_in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links with this external ID.",
              "name": "external_id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links with these external IDs.",
              "name": "external_id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for this \`link.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for these \`link.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links created for this institution (use the Belvo-designated name, such as \`erebor_mx_retail\`).",
              "name": "institution",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links created for these institutions (use the Belvo-designated name, such as \`erebor_mx_retail\` and \`gringotts_co_retail\`).",
              "name": "institution__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links with this specific institution user ID.",
              "name": "institution_user_id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links with these institution user IDs.",
              "name": "institution_user_id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links with this refresh rate. Choose between \`6h\`, \`12h\`, \`24h\`, \`7d\`, or \`30d\`.",
              "name": "refresh_rate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links with this status. Choose between \`valid\`, \`invalid\`, \`unconfirmed\`, or \`token_required\`.",
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return links with these statuses. Choose between \`valid\`, \`invalid\`, \`unconfirmed\`, or \`token_required\`.",
              "name": "status__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListLinksResponse",
              "nameOverride": undefined,
              "schema": "PaginatedResponseLink",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all links",
          "tags": [
            "Links",
          ],
        },
        {
          "authed": true,
          "description": "Register a new link with your Belvo account.

<div style="background-color:#f4f6f8; border-left: 6px solid #4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
<strong>Note: </strong> We recommend using our <a href="https://developers.belvo.com/docs/connect-widget" target="_blank">Connect Widget</a> to handle link creation and link status updates.
</div>
",
          "errorStatusCode": [
            400,
            401,
            428,
            500,
          ],
          "generatedRequestName": "RegisterLinkRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RegisterLink",
          "path": "/api/links",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RegisterLinkRequestBody",
              "nameOverride": undefined,
              "schema": "LinksRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Created",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RegisterLinkResponse",
              "nameOverride": undefined,
              "schema": "Link",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Register a new link",
          "tags": [
            "Links",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume a Link register session that was paused because an MFA token was required by the institution.",
          "errorStatusCode": [
            400,
            401,
            428,
            500,
          ],
          "generatedRequestName": "PatchLinksRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchLinks",
          "path": "/api/links",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchLinksRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBodyWithoutSaveData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchLinksResponse",
              "nameOverride": undefined,
              "schema": "Link",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete a links request",
          "tags": [
            "Links",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific link.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailLinkRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailLink",
          "path": "/api/links/{id}",
          "pathParameters": [
            {
              "description": "The \`link.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailLinkResponse",
              "nameOverride": undefined,
              "schema": "Link",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a link's details",
          "tags": [
            "Links",
          ],
        },
        {
          "authed": true,
          "description": "Update the credentials of a specific link. If the successfully updated link is a recurrent one, we automatically trigger an update of the link. If we find fresh data, you'll [receive historical update](https://developers.belvo.com/docs/webhooks) webhooks.
<div style="background-color:#f4f6f8; border-left: 6px solid #4CAF50;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Note: </strong> We recommend using our <a href="https://developers.belvo.com/docs/connect-widget" target="_blank">Connect Widget</a> to handle updating <code>invalid</code> or <code>token_required</code> links. </div>
",
          "errorStatusCode": [
            400,
            401,
            404,
            428,
            500,
          ],
          "generatedRequestName": "UpdateLinkRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "UpdateLink",
          "path": "/api/links/{id}",
          "pathParameters": [
            {
              "description": "The \`link.id\` you want to update.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateLinkRequestBody",
              "nameOverride": undefined,
              "schema": "LinksPutRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateLinkResponse",
              "nameOverride": undefined,
              "schema": "Link",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Update a link's credentials",
          "tags": [
            "Links",
          ],
        },
        {
          "authed": true,
          "description": "Change a link's access mode from \`single\` to \`recurrent\` or from \`recurrent\` to single.
ℹ️ **Note**: When you change a link from \`single\`\` to \`recurrent\`, they will only be updated the next day at the scheduled interval.",
          "errorStatusCode": [
            400,
            401,
            404,
            428,
            500,
          ],
          "generatedRequestName": "ChangeLinkAccessModeRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "ChangeLinkAccessMode",
          "path": "/api/links/{id}",
          "pathParameters": [
            {
              "description": "The \`link.id\` you want to change the \`access_mode\` for.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ChangeLinkAccessModeRequestBody",
              "nameOverride": undefined,
              "schema": "ChangeAccessMode",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ChangeLinkAccessModeResponse",
              "nameOverride": undefined,
              "schema": "Link",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Change a link's access mode",
          "tags": [
            "Links",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific link and all associated accounts, transactions, and owners from your Belvo account.
# Deleting links in batches
To delete links in bulk, we recommend looping through the list of links you want to delete and making the delete request.

  > 🚧 **Rate limiting and IP blocking**
  > 
  > An important technical note for performing operations in batches is to take into consideration our rate-limiting: up to 80 requests every 30 seconds. If you exceed this limit, you run the risk of Belvo blocking your IP from making further requests.
  > 
  > For more information, or if your IP address has been blocked, please contact our [support team](https://support.belvo.com/hc/en-us/requests/new).",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyLinkRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyLink",
          "path": "/api/links/{id}",
          "pathParameters": [
            {
              "description": "The \`link.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a link",
          "tags": [
            "Links",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing accounts in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListAccountsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListAccounts",
          "path": "/api/accounts",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.available\` matching exactly this value.",
              "name": "balance__available",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.available\` less than this value.",
              "name": "balance__available__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.available\` less than or equal to this value.",
              "name": "balance__available__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.available\` greater than this value.",
              "name": "balance__available__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.available\` greater than or equal to this value.",
              "name": "balance__available__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.available\` within a range of two values.",
              "name": "balance__available__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.current\` matching exactly this value.",
              "name": "balance__current",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.current\` less than this value.",
              "name": "balance__current__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.available\` less than or equal to this value.",
              "name": "balance__current__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.current\` greater than this value.",
              "name": "balance__current__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.available\` greater than or equal to this value.",
              "name": "balance__current__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that have a \`balance.available\` within a range of two values.",
              "name": "balance__current__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts only for the given category (for example, \`CHECKING_ACCOUNT\` and \`SAVINGS_ACCOUNT\`).",
              "name": "category",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts only for the given categories (for example, \`CHECKING_ACCOUNT\` and \`SAVINGS_ACCOUNT\`).",
              "name": "category__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that hold finances in only this three-letter currency code.",
              "name": "currency",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts that hold finances in one of these three-letter currency codes.",
              "name": "currency__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for this \`account.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`account.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts only for this institution (use the Belvo-designated name, such as \`erebor_mx_retail\`).",
              "name": "institution",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts only for these institutions (use the Belvo-designated names, such as \`erebor_mx_retail\` and \`gringotts_mx_retail\`).",
              "name": "institution__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts only for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts with exactly this internal (specified by the institution) name.",
              "name": "name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return accounts partially matching this internal (specified by the institution) name.",
              "name": "name__icontains",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for this account number (as specified by the institution).",
              "name": "number",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these account numbers (as specified by the institution).",
              "name": "number__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for this type of account ID. For example, CLABE accounts.",
              "name": "public_identification_name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for this account ID. For example, the account number for a CLABE account.",
              "name": "public_identification_value",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for accounts matching this account type, as designated by the institution.",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListAccountsResponse",
              "nameOverride": undefined,
              "schema": "AccountsPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all accounts",
          "tags": [
            "Accounts",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve accounts from an existing link.

  > 🚧 Scheduled field deprecation
  > 
  > Please note that we will soon be deprecating the following fields in our \`loan_data\` object:
  > - \`cutting_date\`
  > - \`cutting_day\`
  > - \`credit_limit\`: replaced by the \`principal\` field.
  > - \`interest_rate\`: replaced by the \`interest_rates\` object.
  > - \`last_payment_date\`
  > - \`last_period_balance\`: replaced by the \`outstanding_balance \` field.
  > - \`limit_day\`
  > - \`limit_date\`: replaced by the \`payment_day \` field.
  > - \`no_interest_payment\`
  > - \`payment_due_day\`",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveAccountsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveAccounts",
          "path": "/api/accounts",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveAccountsRequestBody",
              "nameOverride": undefined,
              "schema": "StandardRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RetrieveAccountsResponseItem",
                "nameOverride": undefined,
                "schema": "Account",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve accounts for a link",
          "tags": [
            "Accounts",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume an Account retrieve session that was paused because an MFA token was required by the institution.

  > 🚧 Scheduled field deprecation
  > 
  > Please note that we will soon be deprecating the following fields in our \`loan_data\` object:
  > - \`cutting_date\`
  > - \`cutting_day\`
  > - \`credit_limit\`: replaced by the \`principal\` field.
  > - \`interest_rate\`: replaced by the \`interest_rates\` object.
  > - \`last_payment_date\`
  > - \`last_period_balance\`: replaced by the \`outstanding_balance \` field.
  > - \`limit_day\`
  > - \`limit_date\`: replaced by the \`payment_day \` field.
  > - \`no_interest_payment\`
  > - \`payment_due_day\`",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "PatchAccountsRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchAccounts",
          "path": "/api/accounts",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchAccountsRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBody",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PatchAccountsResponseItem",
                "nameOverride": undefined,
                "schema": "Account",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete an accounts request",
          "tags": [
            "Accounts",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific account.

  > 🚧 Scheduled field deprecation
  >
  > Please note that we will soon be deprecating the following fields in our \`loan_data\` object:
  > - \`cutting_date\`
  > - \`cutting_day\`
  > - \`credit_limit\`: replaced by the \`principal\` field.
  > - \`interest_rate\`: replaced by the \`interest_rates\` object.
  > - \`last_payment_date\`
  > - \`last_period_balance\`: replaced by the \`outstanding_balance \` field.
  > - \`limit_day\`
  > - \`limit_date\`: replaced by the \`payment_day \` field.
  > - \`no_interest_payment\`
  > - \`payment_due_day\`",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailAccountRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailAccount",
          "path": "/api/accounts/{id}",
          "pathParameters": [
            {
              "description": "The \`account.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailAccountResponse",
              "nameOverride": undefined,
              "schema": "Account",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get an account's details",
          "tags": [
            "Accounts",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific account and all associated transactions, as well as owners, from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyAccountRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyAccount",
          "path": "/api/accounts/{id}",
          "pathParameters": [
            {
              "description": "The \`account.id\` you want to delete",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete an account",
          "tags": [
            "Accounts",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing transactions in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListTransactionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListTransactions",
          "path": "/api/transactions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page.

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`account.id\` filter as well in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding the \`account.id\` filter in order to improve your performance.
",
              "name": "account",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.available\` matching exactly this value.",
              "name": "account__balance__available",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.available\` less than this value.",
              "name": "account__balance__available__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.available\` less than or equal to this value.",
              "name": "account__balance__available__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.available\` within a range of two values.",
              "name": "account__balance__available__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.current\` matching exactly this value.",
              "name": "account__balance__current",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.current\` greater than this value.",
              "name": "account__balance__current__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.current\` greater than or equal to this value.",
              "name": "account__balance__current__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.current\` less than this value.",
              "name": "account__balance__current__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.current\` less than or equal to this value.",
              "name": "account__balance__current__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that have a \`account.balance.current\` within a range of two values.",
              "name": "account__balance__current__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions only for these \`account.id\`s.",
              "name": "account__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for transactions matching this account type, as designated by the institution.",
              "name": "account_type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for transactions matching these account types, as designated by the institution.",
              "name": "account_type__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were processed by the institution on exactly this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "accounting_date",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were processed by the institution after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "accounting_date__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were processed by the institution on this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "accounting_date__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were processed by the institution before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "accounting_date__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were processed by the institution on this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "accounting_date__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were processed by the institution in this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "accounting_date__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions matching exactly this value.",
              "name": "amount",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions greater than this value.",
              "name": "amount__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions greater than or equal to this value.",
              "name": "amount__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions less than this value.",
              "name": "amount__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions less than or equal to this value.",
              "name": "amount__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions between these two values.",
              "name": "amount__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were retrieved from the institution on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "collected_at",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were retrieved from the institution after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "collected_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were retrieved from the institution after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "collected_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were retrieved from the institution before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "collected_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were retrieved from the institution before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "collected_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were retrieved from the institution between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "collected_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were last updated in Belvo's database on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions for one of these bill names.",
              "name": "credit_card_data__bill_name__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions in only this three-letter currency code.",
              "name": "currency",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions in one of these three-letter currency codes.",
              "name": "currency__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Returns transactions with this institution-assigned reference number.",
              "name": "reference",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Returns transactions with these institution-assigned reference numbers.",
              "name": "reference__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions with this status. Can be either \`PENDING\`, \`PROCESSED\`, or \`UNCATEGORIZED\`.",
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions with these statuses. Can be either \`PENDING\`, \`PROCESSED\`, or \`UNCATEGORIZED\`.",
              "name": "status__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions with this type. Can be either \`INFLOW\` or \`OUTFLOW\`.",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions with this types. Can be either \`INFLOW\` or \`OUTFLOW\`.",
              "name": "type__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that occurred on exactly this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that occurred after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that occurred on this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that occurred before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions that occurred on this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return transactions for this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListTransactionsResponse",
              "nameOverride": undefined,
              "schema": "TransactionsPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all transactions",
          "tags": [
            "Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve transactions for one or more accounts from a specific link.
<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Info: </strong> When retrieving transactions, it is important to understand that the available transaction data ranges depend on each institution. <br><br>
If you try to access older information than what we can access, we will return all the data we can read within that date range. For example, if you request transactions for the last year and we can only access the last six months, we will return the information corresponding to these six months of data. </div>
",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveTransactionsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveTransactions",
          "path": "/api/transactions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveTransactionsRequestBody",
              "nameOverride": undefined,
              "schema": "TransactionsRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RetrieveTransactionsResponseItem",
                "nameOverride": undefined,
                "schema": "Transaction",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve transactions for a link",
          "tags": [
            "Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve transactions for one or more accounts from a specific link.
<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Info: </strong> When retrieving transactions, it is important to understand that the available transaction data ranges depend on each institution. <br><br>
If you try to access older information than what we can access, we will return all the data we can read within that date range. For example, if you request transactions for the last year and we can only access the last six months, we will return the information corresponding to these six months of data. </div>
",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveTransactionsAsyncRequest",
          "headers": [
            {
              "description": undefined,
              "name": "X-Belvo-Request-Mode",
              "schema": {
                "description": null,
                "type": "literal",
                "value": "async",
              },
            },
          ],
          "method": "POST",
          "operationId": "RetrieveTransactions_async",
          "path": "/api/transactions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveTransactionsAsyncRequestBody",
              "nameOverride": undefined,
              "schema": "TransactionsRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Accepted (when \`X-Belvo-Request-Mode\` is \`async\`)",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveTransactionsAsyncResponse",
              "nameOverride": undefined,
              "schema": "AsynchronousAccepted202",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve transactions for a link",
          "tags": [
            "Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume a Transaction retrieve session that was paused because an MFA token was required by the institution.",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "PatchTransactionsRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchTransactions",
          "path": "/api/transactions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchTransactionsRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBody",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PatchTransactionsResponseItem",
                "nameOverride": undefined,
                "schema": "Transaction",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete a transactions request",
          "tags": [
            "Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific transaction.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailTransactionRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailTransaction",
          "path": "/api/transactions/{id}",
          "pathParameters": [
            {
              "description": "The \`transaction.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailTransactionResponse",
              "nameOverride": undefined,
              "schema": "Transaction",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a transaction's details",
          "tags": [
            "Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific transaction from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyTransactionRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyTransaction",
          "path": "/api/transactions/{id}",
          "pathParameters": [
            {
              "description": "The \`transaction.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a transaction",
          "tags": [
            "Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing balances in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListBalancesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListBalances",
          "path": "/api/balances",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
              "name": "account",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances only for these \`account.id\`s.",
              "name": "account__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for accounts matching this account type, as designated by the institution.",
              "name": "account__type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for accounts matching these account types, as designated by the institution.",
              "name": "account__type__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances matching exactly this value.",
              "name": "balance",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances less than this value.",
              "name": "balance__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances less than or equal to this value.",
              "name": "balance__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances greater than this value.",
              "name": "balance__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances greater than or equal to this value.",
              "name": "balance__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances between these two values.",
              "name": "balance__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances that are in this three-letter currency code.",
              "name": "currency",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances that are in these three-letter currency codes.",
              "name": "currency__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for this \`balance.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for these \`balance.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances only for this institution (use the Belvo-designated name, such as \`erebor_mx_retail\`).",
              "name": "institution",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances only for these institutions (use the Belvo-designated names, such as \`erebor_mx_retail\` and \`gringotts_mx_retail\`).",
              "name": "institution__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances only for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances for exactly this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances for after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances for this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances for before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances for this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances for this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListBalancesResponse",
              "nameOverride": undefined,
              "schema": "BalancesPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all balances",
          "tags": [
            "Balances",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve balances from one or more accounts for a specific link within a specified date range.",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveBalancesRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveBalances",
          "path": "/api/balances",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveBalancesRequestBody",
              "nameOverride": undefined,
              "schema": "BalancesRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RetrieveBalancesResponseItem",
                "nameOverride": undefined,
                "schema": "Balance",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve balances for a link",
          "tags": [
            "Balances",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume a Balance retrieve session that was paused because an MFA token was required by the institution.",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "PatchBalancesRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchBalances",
          "path": "/api/balances",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchBalancesRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBody",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PatchBalancesResponseItem",
                "nameOverride": undefined,
                "schema": "Balance",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete a balances request",
          "tags": [
            "Balances",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific balance.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailBalanceRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailBalance",
          "path": "/api/balances/{id}",
          "pathParameters": [
            {
              "description": "The \`balance.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailBalanceResponse",
              "nameOverride": undefined,
              "schema": "Balance",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a balance's details",
          "tags": [
            "Balances",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific balance from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyBalanceRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyBalance",
          "path": "/api/balances/{id}",
          "pathParameters": [
            {
              "description": "The \`balance.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a balance",
          "tags": [
            "Balances",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all the institutions currently supported by Belvo. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListInstitutionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListInstitutions",
          "path": "/api/institutions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions only for this two-letter country code.",
              "name": "country_code",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions only for these two-letter country codes.",
              "name": "country_code__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions that partially match this display name.",
              "name": "display_name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions with one or more of these Belvo-designated names.",
              "name": "name__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions that support these resources.",
              "name": "resources__allin",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions with the given status. You can choose between \`healthy\` or \`down\`.",
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions with one of the given statuses. You can choose between \`healthy\` or \`down\`.",
              "name": "status__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions of this type. You can choose between \`bank\` or \`fiscal\`.",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions of one of these types. You can choose between \`bank\` or \`fiscal\`.",
              "name": "type__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions with this website URL.",
              "name": "website",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListInstitutionsResponse",
              "nameOverride": undefined,
              "schema": "InstitutionsPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all institutions",
          "tags": [
            "Institutions",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific institution.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailInstitutionRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailInstitution",
          "path": "/api/institutions/{id}",
          "pathParameters": [
            {
              "description": "The \`institution.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailInstitutionResponse",
              "nameOverride": undefined,
              "schema": "Institution",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get an institution's details",
          "tags": [
            "Institutions",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing owners in your Belvo account. We return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListOwnersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOwners",
          "path": "/api/owners",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return owners that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return owners that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return owners that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return owners that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return owners that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return owners whose full display name partially matches your query. For example, \`mar\` will return results for Mark, Maria, Neymar, Remarque, and so on.",
              "name": "display_name__icontains",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Returns owners whose email address match your query.",
              "name": "email",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for this \`owner.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for these \`owner.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for this \`link.id\`.",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances only for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListOwnersResponse",
              "nameOverride": undefined,
              "schema": "OwnersPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all owners",
          "tags": [
            "Owners",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve owner information from a specific link.",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveOwnersRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveOwners",
          "path": "/api/owners",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveOwnersRequestBody",
              "nameOverride": undefined,
              "schema": "StandardRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RetrieveOwnersResponseItem",
                "nameOverride": undefined,
                "schema": "Owner",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve owners for a link",
          "tags": [
            "Owners",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume an Owner retrieve session that was paused because an MFA token was required by the institution.",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "PatchOwnersRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchOwners",
          "path": "/api/owners",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchOwnersRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBody",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PatchOwnersResponseItem",
                "nameOverride": undefined,
                "schema": "Owner",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete an owners request",
          "tags": [
            "Owners",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific owner.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailOwnerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailOwner",
          "path": "/api/owners/{id}",
          "pathParameters": [
            {
              "description": "The \`owner.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailOwnerResponse",
              "nameOverride": undefined,
              "schema": "Owner",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get an owner's details",
          "tags": [
            "Owners",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific owner from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyOwnerRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyOwner",
          "path": "/api/owners/{id}",
          "pathParameters": [
            {
              "description": "The \`owner.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete an owner",
          "tags": [
            "Owners",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing invoices in your Belvo account. By default, we return 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListInvoicesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListInvoices",
          "path": "/api/invoices",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for this \`invoice.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information only for these \`invoice.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices issued exactly on this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "invoice_date",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances issued before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "invoice_date__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return balances issued on this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "invoice_date__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices issued after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "invoice_date__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices issued on this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "invoice_date__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices issued within this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "invoice_date__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return an invoice with this ID (as provided by the insitution).",
              "name": "invoice_identification",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices with these IDs (as provided by the institution).",
              "name": "invoice_identification__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices only for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices with this status. Can be either \`Vigente\` (valid) or \`Cancelado\` (cancelled).",
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices with these statuses. Can be either \`Vigente\` (valid) or \`Cancelado\` (cancelled).",
              "name": "status__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices matching exactly this value.",
              "name": "total_amount",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices less than this value.",
              "name": "total_amount__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices less than or equal to this value.",
              "name": "total_amount__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices greater than this value.",
              "name": "total_amount__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices greater than or equal to this value.",
              "name": "total_amount__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices between these two values.",
              "name": "total_amount__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices of this type. Can be either \`OUTFLOW\` or \`INFLOW\`.",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return invoices of these types. Can be either \`OUTFLOW\` or \`INFLOW\`.",
              "name": "type__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListInvoicesResponse",
              "nameOverride": undefined,
              "schema": "InvoicesResponsePaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all invoices",
          "tags": [
            "Invoices",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve invoice information from a specific fiscal link.
<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Info: </strong> You can ask for up to **one** year (365 days) of invoices per request. If you need invoices for more than one year, just make another request. </div>
",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "RetrieveInvoicesRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveInvoices",
          "path": "/api/invoices",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveInvoicesRequestBody",
              "nameOverride": undefined,
              "schema": "InvoicesRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "RetrieveInvoicesResponseItem",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "RetrieveInvoicesResponseItemRetrieveInvoicesResponseItem",
                      "nameOverride": undefined,
                      "schema": "InvoiceWithIdSat",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "RetrieveInvoicesResponseItemRetrieveInvoicesResponseItem",
                      "nameOverride": undefined,
                      "schema": "InvoiceDian",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve invoices for a link",
          "tags": [
            "Invoices",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume an Invoice retrieve session that was paused because an MFA token was required by the institution.",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "PatchInvoicesRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchInvoices",
          "path": "/api/invoices",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchInvoicesRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBody",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "PatchInvoicesResponseItem",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PatchInvoicesResponseItemPatchInvoicesResponseItem",
                      "nameOverride": undefined,
                      "schema": "InvoiceWithIdSat",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PatchInvoicesResponseItemPatchInvoicesResponseItem",
                      "nameOverride": undefined,
                      "schema": "InvoiceDian",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete an invoices request",
          "tags": [
            "Invoices",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific invoice.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailInvoiceRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailInvoice",
          "path": "/api/invoices/{id}",
          "pathParameters": [
            {
              "description": "The \`invoice.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "DetailInvoiceResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailInvoiceResponseDetailInvoiceResponse",
                    "nameOverride": undefined,
                    "schema": "InvoiceWithIdSat",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailInvoiceResponseDetailInvoiceResponse",
                    "nameOverride": undefined,
                    "schema": "InvoiceDian",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get an invoice's details",
          "tags": [
            "Invoices",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific invoice from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyInvoiceRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyInvoice",
          "path": "/api/invoices/{id}",
          "pathParameters": [
            {
              "description": "The \`invoice.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete an invoice",
          "tags": [
            "Invoices",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing tax returns in your Belvo account. By default, we return up to 100 results per page. The results will include a mix of both monthly and yearly tax returns.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListTaxReturnsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListTaxReturns",
          "path": "/api/tax-returns",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for this \`tax-return.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`tax-return.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns for exactly this year (\`YYYY\`).",
              "name": "ejercicio",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns for before this year (\`YYYY\`).",
              "name": "ejercicio__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns for this year and earlier (\`YYYY\`).",
              "name": "ejercicio__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns for after this year (\`YYYY\`).",
              "name": "ejercicio__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns for this year or later (\`YYYY\`).",
              "name": "ejercicio__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns for this range of years (\`YYYY\`).",
              "name": "ejercicio__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns with this declaration type.",
              "name": "tipo_declaracion",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax returns with these declaration types.",
              "name": "tipo_declaracion__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "ListTaxReturnsResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ListTaxReturnsResponseListTaxReturnsResponse",
                    "nameOverride": undefined,
                    "schema": "TaxReturnsPersonalPaginated",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ListTaxReturnsResponseListTaxReturnsResponse",
                    "nameOverride": undefined,
                    "schema": "TaxReturnsPersonalMonthlyPaginated",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ListTaxReturnsResponseListTaxReturnsResponse",
                    "nameOverride": undefined,
                    "schema": "TaxReturnsBusinessPaginated",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ListTaxReturnsResponseListTaxReturnsResponse",
                    "nameOverride": undefined,
                    "schema": "TaxReturnsBusinessMonthlyPaginated",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all tax returns",
          "tags": [
            "Tax returns",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve tax return information for a specific fiscal link.",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "RetrieveTaxReturnsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveTaxReturns",
          "path": "/api/tax-returns",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "RetrieveTaxReturnsRequestBody",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RetrieveTaxReturnsRequestBodyRetrieveTaxReturnsRequestBody",
                    "nameOverride": undefined,
                    "schema": "TaxReturnsMonthlyRequest",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RetrieveTaxReturnsRequestBodyRetrieveTaxReturnsRequestBody",
                    "nameOverride": undefined,
                    "schema": "TaxReturnsYearlyRequest",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "RetrieveTaxReturnsResponseItem",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "RetrieveTaxReturnsResponseItemRetrieveTaxReturnsResponseItem",
                      "nameOverride": undefined,
                      "schema": "TaxReturnPersonal",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "RetrieveTaxReturnsResponseItemRetrieveTaxReturnsResponseItem",
                      "nameOverride": undefined,
                      "schema": "TaxReturnPersonalMonthly",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "RetrieveTaxReturnsResponseItemRetrieveTaxReturnsResponseItem",
                      "nameOverride": undefined,
                      "schema": "TaxReturnBusiness",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "RetrieveTaxReturnsResponseItemRetrieveTaxReturnsResponseItem",
                      "nameOverride": undefined,
                      "schema": "TaxReturnBusinessMonthly",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve tax returns for a link",
          "tags": [
            "Tax returns",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific tax return.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailTaxReturnRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailTaxReturn",
          "path": "/api/tax-returns/{id}",
          "pathParameters": [
            {
              "description": "The \`tax-return.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "DetailTaxReturnResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailTaxReturnResponseDetailTaxReturnResponse",
                    "nameOverride": undefined,
                    "schema": "TaxReturnPersonal",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailTaxReturnResponseDetailTaxReturnResponse",
                    "nameOverride": undefined,
                    "schema": "TaxReturnPersonalMonthly",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailTaxReturnResponseDetailTaxReturnResponse",
                    "nameOverride": undefined,
                    "schema": "TaxReturnBusiness",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailTaxReturnResponseDetailTaxReturnResponse",
                    "nameOverride": undefined,
                    "schema": "TaxReturnBusinessMonthly",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a tax return's details",
          "tags": [
            "Tax returns",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific tax return from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyTaxReturnRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyTaxReturn",
          "path": "/api/tax-returns/{id}",
          "pathParameters": [
            {
              "description": "The ID of the tax return you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a tax return",
          "tags": [
            "Tax returns",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing tax status in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListTaxStatusRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListTaxStatus",
          "path": "/api/tax-status",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax statuses that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax statuses that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax statuses that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax statuses that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax statuses that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for this \`tax-status.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`tax-status.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListTaxStatusResponse",
              "nameOverride": undefined,
              "schema": "TaxStatusPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all tax statuses",
          "tags": [
            "Tax status",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve tax status information for a specific fiscal link.",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "RetrieveTaxStatusRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveTaxStatus",
          "path": "/api/tax-status",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveTaxStatusRequestBody",
              "nameOverride": undefined,
              "schema": "TaxStatusRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "RetrieveTaxStatusResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RetrieveTaxStatusResponseRetrieveTaxStatusResponse",
                    "nameOverride": undefined,
                    "schema": "TaxStatusSat",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RetrieveTaxStatusResponseRetrieveTaxStatusResponse",
                    "nameOverride": undefined,
                    "schema": "TaxStatusDian",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve tax statuses for a link",
          "tags": [
            "Tax status",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific tax status.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailTaxStatusRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailTaxStatus",
          "path": "/api/tax-status/{id}",
          "pathParameters": [
            {
              "description": "The \`tax-status.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "DetailTaxStatusResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailTaxStatusResponseDetailTaxStatusResponse",
                    "nameOverride": undefined,
                    "schema": "TaxStatusSat",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailTaxStatusResponseDetailTaxStatusResponse",
                    "nameOverride": undefined,
                    "schema": "TaxStatusDian",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a tax status's details",
          "tags": [
            "Tax status",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific tax status from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyTaxStatusRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyTaxStatus",
          "path": "/api/tax-status/{id}",
          "pathParameters": [
            {
              "description": "the \`tax-status.id\` that you want to delete",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a tax status",
          "tags": [
            "Tax status",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing Tax compliance statuses in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListTaxComplianceStatusRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListTaxComplianceStatus",
          "path": "/api/tax-compliance-status",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax compliance statuses that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax compliance statuses that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax compliance statuses that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax compliance statuses that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax compliance statuses that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for this \`tax-compliance-status.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`tax-compliance-status.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListTaxComplianceStatusResponse",
              "nameOverride": undefined,
              "schema": "TaxComplianceStatusPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all tax compliance statuses",
          "tags": [
            "Tax compliance status",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve the Tax compliance status information for a specific fiscal link.",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "RetrieveTaxComplianceStatusRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveTaxComplianceStatus",
          "path": "/api/tax-compliance-status",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveTaxComplianceStatusRequestBody",
              "nameOverride": undefined,
              "schema": "TaxComplianceStatusRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveTaxComplianceStatusResponse",
              "nameOverride": undefined,
              "schema": "TaxComplianceStatus",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve tax compliance statuses for a link",
          "tags": [
            "Tax compliance status",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific Tax compliance status.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailTaxComplianceStatusRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailTaxComplianceStatus",
          "path": "/api/tax-compliance-status/{id}",
          "pathParameters": [
            {
              "description": "The \`tax-compliance-status.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailTaxComplianceStatusResponse",
              "nameOverride": undefined,
              "schema": "TaxComplianceStatus",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a tax compliance status's details",
          "tags": [
            "Tax compliance status",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific Tax compliance status from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyTaxComplianceStatusRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyTaxComplianceStatus",
          "path": "/api/tax-compliance-status/{id}",
          "pathParameters": [
            {
              "description": "The \`tax-compliance-status.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a tax compliance status",
          "tags": [
            "Tax compliance status",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all incomes in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListIncomesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListIncomes",
          "path": "/api/incomes",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding the \`account.id\` filter in order to improve your performance.
",
              "name": "account",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return incomes for these \`account.id\`s.",
              "name": "account__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return incomes only for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListIncomesResponse",
              "nameOverride": undefined,
              "schema": "IncomesPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all incomes",
          "tags": [
            "Incomes",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve income insights for <b>checking and savings accounts</b> from a specific link. You can receive insights for a period of up to 365 days, depending on the transaction history available for each [bank](https://developers.belvo.com/docs/institution).",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveIncomeRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveIncome",
          "path": "/api/incomes",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveIncomeRequestBody",
              "nameOverride": undefined,
              "schema": "IncomesRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveIncomeResponse",
              "nameOverride": undefined,
              "schema": "Income",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve incomes for a link",
          "tags": [
            "Incomes",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume an Income retrieve session that was paused because an MFA token was required by the institution.",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "PatchIncomesRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchIncomes",
          "path": "/api/incomes",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchIncomesRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBody",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PatchIncomesResponseItem",
                "nameOverride": undefined,
                "schema": "Income",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete an incomes request",
          "tags": [
            "Incomes",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific income.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailIncomeRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailIncome",
          "path": "/api/incomes/{id}",
          "pathParameters": [
            {
              "description": "The \`income.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DetailIncomeResponseItem",
                "nameOverride": undefined,
                "schema": "Income",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get an income's details",
          "tags": [
            "Incomes",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific income from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyIncomesRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyIncomes",
          "path": "/api/incomes/{id}",
          "pathParameters": [
            {
              "description": "the \`income.id\` that you want to delete",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete an income",
          "tags": [
            "Incomes",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all recurring expenses in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListRecurringExpensesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListRecurringExpenses",
          "path": "/api/recurring-expenses",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
              "name": "account",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return recurring expenses for these \`accound.id\`s.",
              "name": "account_in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for this \`recurring-expense.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`recurring-expense.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListRecurringExpensesResponse",
              "nameOverride": undefined,
              "schema": "RecurringExpensesPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all recurring expenses",
          "tags": [
            "Recurring Expenses",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve recurring expense insights for <b>checking and savings accounts</b> from a specific link. You can receive insights for a period of up to 365 days, depending on the transaction history available for each [bank](https://developers.belvo.com/docs/institution).",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveRecurringExpensesRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveRecurringExpenses",
          "path": "/api/recurring-expenses",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveRecurringExpensesRequestBody",
              "nameOverride": undefined,
              "schema": "RecurringExpensesRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when save_data=false)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RetrieveRecurringExpensesResponseItem",
                "nameOverride": undefined,
                "schema": "RecurringExpenses",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve recurring expenses for a link",
          "tags": [
            "Recurring Expenses",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume an Recurring Expenses retrieve session that was paused because an MFA token was required by the institution.",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "PatchRecurringExpensesRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchRecurringExpenses",
          "path": "/api/recurring-expenses",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchRecurringExpensesRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBody",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when save_data=false)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PatchRecurringExpensesResponseItem",
                "nameOverride": undefined,
                "schema": "RecurringExpenses",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete a recurring expenses request",
          "tags": [
            "Recurring Expenses",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific recurring expense.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailRecurringExpenseRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailRecurringExpense",
          "path": "/api/recurring-expenses/{id}",
          "pathParameters": [
            {
              "description": "The \`recurring-expenses.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DetailRecurringExpenseResponseItem",
                "nameOverride": undefined,
                "schema": "RecurringExpenses",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a recurring expense's details",
          "tags": [
            "Recurring Expenses",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific recurring expense from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyRecurringExpenseRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyRecurringExpense",
          "path": "/api/recurring-expenses/{id}",
          "pathParameters": [
            {
              "description": "The \`recurring-expenses.id\` that you want to delete",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a recurring expense",
          "tags": [
            "Recurring Expenses",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all the existing portfolios (and their instruments) in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListPortfolioRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListPortfolio",
          "path": "/investments/portfolios",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListPortfolioResponse",
              "nameOverride": undefined,
              "schema": "InvestmentsPortfoliosPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all portfolios",
          "tags": [
            "Investment Portfolios",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve all portfolios for an existing link.",
          "errorStatusCode": [
            400,
            401,
            428,
            500,
          ],
          "generatedRequestName": "RetrievePortfolioRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrievePortfolio",
          "path": "/investments/portfolios",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrievePortfolioRequestBody",
              "nameOverride": undefined,
              "schema": "StandardRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrievePortfolioResponse",
              "nameOverride": undefined,
              "schema": "InvestmentsPortfolio",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve portfolios for a link",
          "tags": [
            "Investment Portfolios",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume a portfolio retrieve session that was paused because an MFA token was required by the institution.",
          "errorStatusCode": [
            400,
            401,
            428,
            500,
          ],
          "generatedRequestName": "PatchPortfolioRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchPortfolio",
          "path": "/investments/portfolios",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchPortfolioRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBodyWithoutSaveData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchPortfolioResponse",
              "nameOverride": undefined,
              "schema": "InvestmentsPortfolio",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete a portfolios request",
          "tags": [
            "Investment Portfolios",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific portfolio.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailPortfolioRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailPortfolio",
          "path": "/investments/portfolios/{id}",
          "pathParameters": [
            {
              "description": "The \`portfolio.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailPortfolioResponse",
              "nameOverride": undefined,
              "schema": "InvestmentsPortfolio",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a portfolio's details",
          "tags": [
            "Investment Portfolios",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific investment portfolio and all associated instruments, transactions, and owners from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyPortfolioRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyPortfolio",
          "path": "/investments/portfolios/{id}",
          "pathParameters": [
            {
              "description": "The \`portfolio.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a portfolio",
          "tags": [
            "Investment Portfolios",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all the existing receivable transactions in your Belvo account. We return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListReceivableTransactionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListReceivableTransactions",
          "path": "/receivables/transactions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`account.id\` you want to filter by.

ℹ️ We highly recommend adding either the \`link.id\` or the \`account.id\` filters in order to improve your performance.
",
              "name": "account",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions only for these \`account.id\`s.",
              "name": "account__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions for exactly this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions for after this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions for this date or later (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions for before this date (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions for this date or earlier (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return receivable transactions for this date range (\`YYYY-MM-DD\` or full ISO-8601 timestamp).",
              "name": "value_date__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListReceivableTransactionsResponse",
              "nameOverride": undefined,
              "schema": "ReceivablesTransactionsPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all receivable transactions",
          "tags": [
            "Receivable Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve all receivable transactions for an existing link.",
          "errorStatusCode": [
            400,
            401,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveReceivableTransactionsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveReceivableTransactions",
          "path": "/receivables/transactions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveReceivableTransactionsRequestBody",
              "nameOverride": undefined,
              "schema": "ReceivableTransactionRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveReceivableTransactionsResponse",
              "nameOverride": undefined,
              "schema": "ReceivablesTransaction",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve receivable transactions for a link",
          "tags": [
            "Receivable Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific receivable transaction.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailReceivableTransactionRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailReceivableTransaction",
          "path": "/receivables/transactions/{id}",
          "pathParameters": [
            {
              "description": "The \`transaction.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailReceivableTransactionResponse",
              "nameOverride": undefined,
              "schema": "ReceivablesTransaction",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a receivable transaction's details",
          "tags": [
            "Receivable Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific receivable transaction from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyReceivableTransactionRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyReceivableTransaction",
          "path": "/receivables/transactions/{id}",
          "pathParameters": [
            {
              "description": "The \`transaction.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a receivable transaction",
          "tags": [
            "Receivable Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all risk insight analyses in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListRiskInsightsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListRiskInsights",
          "path": "/api/risk-insights",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for this \`risk-insight.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`risk-insight.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListRiskInsightsResponse",
              "nameOverride": undefined,
              "schema": "RiskInsightsPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all risk insights",
          "tags": [
            "Risk Insights",
          ],
        },
        {
          "authed": true,
          "description": "Request the risk insights for a given link ID.

If you need to know the currency of the account, just do a GET Details to the accounts endpoint (using the ID you receive from the accounts response).",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveRiskInsightsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveRiskInsights",
          "path": "/api/risk-insights",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveRiskInsightsRequestBody",
              "nameOverride": undefined,
              "schema": "StandardRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when save_data=false)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RetrieveRiskInsightsResponseItem",
                "nameOverride": undefined,
                "schema": "RiskInsights",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve risk insights for a link",
          "tags": [
            "Risk Insights",
          ],
        },
        {
          "authed": true,
          "description": "Used to resume an Risk insights retrieve session that was paused because an MFA token was required by the institution.",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "PatchRiskInsightsRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchRiskInsights",
          "path": "/api/risk-insights",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchRiskInsightsRequestBody",
              "nameOverride": undefined,
              "schema": "PatchBody",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when save_data=false)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PatchRiskInsightsResponseItem",
                "nameOverride": undefined,
                "schema": "RiskInsights",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete a risk insights request",
          "tags": [
            "Risk Insights",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific risk insight.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailRiskInsightsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailRiskInsights",
          "path": "/api/risk-insights/{id}",
          "pathParameters": [
            {
              "description": "The \`risk-insights.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DetailRiskInsightsResponseItem",
                "nameOverride": undefined,
                "schema": "RiskInsights",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a risk insight's details",
          "tags": [
            "Risk Insights",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific risk insight from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyRiskInsightsRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyRiskInsights",
          "path": "/api/risk-insights/{id}",
          "pathParameters": [
            {
              "description": "The \`risk-insights.id\` that you want to delete",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a risk insight",
          "tags": [
            "Risk Insights",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing tax retentions in your Belvo account. We return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListTaxRetentionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListTaxRetentions",
          "path": "/api/tax-retentions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax retentions that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax retentions that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax retentions that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax retentions that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax retentions that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListTaxRetentionsResponse",
              "nameOverride": undefined,
              "schema": "TaxRetentionsPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all tax retentions",
          "tags": [
            "Tax retentions",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve tax retention information from a specific link. The maximum number of tax retentions that can be returned for a period is 500.",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "RetrieveTaxRetentionsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveTaxRetentions",
          "path": "/api/tax-retentions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveTaxRetentionsRequestBody",
              "nameOverride": undefined,
              "schema": "TaxRetentionsRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RetrieveTaxRetentionsResponseItem",
                "nameOverride": undefined,
                "schema": "TaxRetentions",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve tax retentions for a link",
          "tags": [
            "Tax retentions",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific tax retention.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailTaxRetentionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailTaxRetentions",
          "path": "/api/tax-retentions/{id}",
          "pathParameters": [
            {
              "description": "The \`tax-retention.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailTaxRetentionsResponse",
              "nameOverride": undefined,
              "schema": "TaxRetentions",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a tax retention's details",
          "tags": [
            "Tax retentions",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific tax retention from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyTaxRetentionRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyTaxRetention",
          "path": "/api/tax-retentions/{id}",
          "pathParameters": [
            {
              "description": "The \`tax-retention.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a tax retention",
          "tags": [
            "Tax retentions",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing tax declarations in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListTaxDeclarationsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListTaxDeclarations",
          "path": "/api/tax-declarations",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`link.id\` you want to filter by.

ℹ️ We highly recommend adding the \`link.id\` filter in order to improve your performance.
",
              "name": "link",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`link.id\`s.",
              "name": "link__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations that were last updated in Belvo's database after this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations that were last updated in Belvo's database after or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations that were last updated in Belvo's database before this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations that were last updated in Belvo's database before or on this date (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations that were last updated in Belvo's database between two dates (\`YYYY-MM-DD\` or full \`ISO-8601\` timestamp).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for this \`tax-declaration.id\`.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return information for these \`tax-declaration.id\`s.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations for this year (\`YYYY\`).",
              "name": "year",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations for after this year (\`YYYY\`).",
              "name": "year__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations for this year or after (\`YYYY\`).",
              "name": "year__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations for before this year (\`YYYY\`).",
              "name": "year__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations for this year or earlier (\`YYYY\`).",
              "name": "year__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return tax declarations between these two years (\`YYYY\`).",
              "name": "year__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "ListTaxDeclarationsResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ListTaxDeclarationsResponseListTaxDeclarationsResponse",
                    "nameOverride": undefined,
                    "schema": "TaxDeclarationIndividualPaginated",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ListTaxDeclarationsResponseListTaxDeclarationsResponse",
                    "nameOverride": undefined,
                    "schema": "TaxDeclarationBusinessPaginated",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all tax declarations",
          "tags": [
            "Tax declarations",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve tax declaration information for a specific fiscal link.",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "RetrieveTaxDeclarationsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveTaxDeclarations",
          "path": "/api/tax-declarations",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveTaxDeclarationsRequestBody",
              "nameOverride": undefined,
              "schema": "TaxDeclarationsRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok (when \`save_data=false\`)",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "RetrieveTaxDeclarationsResponseItem",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "RetrieveTaxDeclarationsResponseItemRetrieveTaxDeclarationsResponseItem",
                      "nameOverride": undefined,
                      "schema": "TaxDeclarationBusiness",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "RetrieveTaxDeclarationsResponseItemRetrieveTaxDeclarationsResponseItem",
                      "nameOverride": undefined,
                      "schema": "TaxDeclarationIndividual",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve tax declarations for a link",
          "tags": [
            "Tax declarations",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific Tax declaration.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailTaxDeclarationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailTaxDeclaration",
          "path": "/api/tax-declarations/{id}",
          "pathParameters": [
            {
              "description": "The \`tax-declaration.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "DetailTaxDeclarationResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailTaxDeclarationResponseDetailTaxDeclarationResponse",
                    "nameOverride": undefined,
                    "schema": "TaxDeclarationIndividual",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailTaxDeclarationResponseDetailTaxDeclarationResponse",
                    "nameOverride": undefined,
                    "schema": "TaxDeclarationBusiness",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get a tax declaration's details",
          "tags": [
            "Tax declarations",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific Tax declaration from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyTaxDeclarationRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyTaxDeclaration",
          "path": "/api/tax-declarations/{id}",
          "pathParameters": [
            {
              "description": "The \`tax-declration.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a tax declration",
          "tags": [
            "Tax declarations",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing employment records in your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListEmploymentRecordsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEmploymentRecords",
          "path": "/api/employment-records",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page. 

ℹ️ The minimum number of results returned per page is 1 and the maximum is 1000. If you enter a value greater than 1000, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListEmploymentRecordsResponse",
              "nameOverride": undefined,
              "schema": "EmploymentRecordsPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all employment records",
          "tags": [
            "Employment Records",
          ],
        },
        {
          "authed": true,
          "description": "Retrieve employment record details for an individual.
",
          "errorStatusCode": [
            400,
            401,
            408,
            428,
            500,
          ],
          "generatedRequestName": "RetrieveEmploymentRecordDetailsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RetrieveEmploymentRecordDetails",
          "path": "/api/employment-records",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RetrieveEmploymentRecordDetailsRequestBody",
              "nameOverride": undefined,
              "schema": "EmploymentRecordRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RetrieveEmploymentRecordDetailsResponseItem",
                "nameOverride": undefined,
                "schema": "EmploymentRecord",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Retrieve employment record details",
          "tags": [
            "Employment Records",
          ],
        },
        {
          "authed": true,
          "description": "Get the details of a specific employment record.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailEmploymentRecordRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailEmploymentRecord",
          "path": "/api/employment-records/{id}",
          "pathParameters": [
            {
              "description": "The \`employment-record.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Omit certain fields from being returned in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "omit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return only the specified fields in the response. For more information, see our [Filtering responses](https://developers.belvo.com/docs/searching-and-filtering) DevPortal article.",
              "name": "fields",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailEmploymentRecordResponse",
              "nameOverride": undefined,
              "schema": "EmploymentRecord",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get an employment record's details",
          "tags": [
            "Employment Records",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific employment record from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DestroyEmploymentRecordRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DestroyEmploymentRecord",
          "path": "/api/employment-records/{id}",
          "pathParameters": [
            {
              "description": "The \`employment-record.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete an employment record",
          "tags": [
            "Employment Records",
          ],
        },
        {
          "authed": true,
          "description": "Send through your raw data and receive enriched information for each of your user's income streams.

<div style="background-color:#f4f6f8; border-left: 6px solid #5bc0de;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
<strong>Note: </strong> Belvo can process up to 10,000 unique transactions per request.
</div>",
          "errorStatusCode": [
            400,
            401,
            403,
            500,
          ],
          "generatedRequestName": "VerifyIncomeRequest",
          "headers": [],
          "method": "POST",
          "operationId": "VerifyIncome",
          "path": "/api/enrich/incomes",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "VerifyIncomeRequest",
              "nameOverride": undefined,
              "schema": "EyodIncomeVerificationRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "VerifyIncomeResponseItem",
                "nameOverride": undefined,
                "schema": "Income",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Verify incomes",
          "tags": [
            "Income Verification",
          ],
        },
        {
          "authed": true,
          "description": "Send through your raw transaction data and receive enriched information for each of your transactions.

<div style="background-color:#f4f6f8; border-left: 6px solid #5bc0de;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px">
<strong>Note: </strong> Belvo can process up to 10,000 unique transactions per request.
</div>",
          "errorStatusCode": [
            400,
            401,
            403,
            500,
          ],
          "generatedRequestName": "CategorizeTransactionsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CategorizeTransactions",
          "path": "/api/categorization",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CategorizeTransactionsRequest",
              "nameOverride": undefined,
              "schema": "CategorizationRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CategorizeTransactionsResponse",
              "nameOverride": undefined,
              "schema": "Categorization",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Categorize transactions",
          "tags": [
            "Categorization",
          ],
        },
        {
          "authed": true,
          "description": "Get a paginated list of all existing secret keys in your Belvo account. We return up to 100 results per page.


  **Note**: We only return the ID of the secret keys.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListSecretKeysRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListSecretKeys",
          "path": "/payments/secret-keys",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListSecretKeysResponse",
              "nameOverride": undefined,
              "schema": "SecretKeysPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all secret keys",
          "tags": [
            "Secret Keys",
          ],
        },
        {
          "authed": true,
          "description": "Request API keys to use with Belvo's Payments API.

You will need to send through the username and password (in plain text) you use to login to the Belvo dashboard in the Authorization header.

For example:

  \`\`\`curl
  POST https://api.belvo.com/payments/secret-keys/
  Authorization: Basic username:password
  \`\`\`
",
          "errorStatusCode": [
            400,
            408,
          ],
          "generatedRequestName": "CreateSecretKeysRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateSecretKeys",
          "path": "/payments/secret-keys",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateSecretKeysResponseItem",
                "nameOverride": undefined,
                "schema": "SecretKeys",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Request API keys",
          "tags": [
            "Secret Keys",
          ],
        },
        {
          "authed": true,
          "description": "List all payment webhooks associated with your Belvo account.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListPaymentWebhooksRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListPaymentWebhooks",
          "path": "/payments/webhooks",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListPaymentWebhooksResponse",
              "nameOverride": undefined,
              "schema": "PaymentsWebhooksPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all payment webhooks",
          "tags": [
            "Payment Webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Register a new payments webhook for your Belvo account.
",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "RegisterPaymentWebhookRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RegisterPaymentWebhook",
          "path": "/payments/webhooks",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RegisterPaymentWebhookRequest",
              "nameOverride": undefined,
              "schema": "PaymentWebhookRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RegisterPaymentWebhookResponseItem",
                "nameOverride": undefined,
                "schema": "paymentWebhook",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Register a new payment webhook",
          "tags": [
            "Payment Webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Get the details about a specific payment webhook.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailPaymentWebhooksRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailPaymentWebhooks",
          "path": "/payments/webhooks/{id}",
          "pathParameters": [
            {
              "description": "The \`webhook.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailPaymentWebhooksResponse",
              "nameOverride": undefined,
              "schema": "paymentWebhook",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get details about a payment webhook",
          "tags": [
            "Payment Webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Delete a specific payment webhook from your Belvo account.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DeletePaymentWebhooksRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DeletePaymentWebhooks",
          "path": "/payments/webhooks/{id}",
          "pathParameters": [
            {
              "description": "The \`webhook.id\` that you want to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Delete a payment webhook",
          "tags": [
            "Payment Webhooks",
          ],
        },
        {
          "authed": true,
          "description": "List all available payment institutions.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListPaymentInstitutionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListPaymentInstitutions",
          "path": "/payments/institutions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions only for this country.",
              "name": "country",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return institutions only for one of these countries.",
              "name": "country__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only after this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only before this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results between this date range (in \`YYYY-MM-DD\` format).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListPaymentInstitutionsResponse",
              "nameOverride": undefined,
              "schema": "PaymentsInstitutionsPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all payment institutions",
          "tags": [
            "Payment Institutions",
          ],
        },
        {
          "authed": true,
          "description": "Get the details about a specific payment institution",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailPaymentInstitutionRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailPaymentInstitution",
          "path": "/payments/institutions/{id}",
          "pathParameters": [
            {
              "description": "The payment \`institution.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailPaymentInstitutionResponse",
              "nameOverride": undefined,
              "schema": "paymentInstitution",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get details about a payment institution",
          "tags": [
            "Payment Institutions",
          ],
        },
        {
          "authed": true,
          "description": "List all customers associated with your Belvo account.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListCustomersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListCustomers",
          "path": "/payments/customers",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "One or more \`customer.id\`s (comma separated) that you want to get results for.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only after this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only before this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results between this date range (in \`YYYY-MM-DD\` format).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this customer type (either \`INDIVIDUAL\` or \`BUSINESS\`).",
              "name": "customer__type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results for one or more customers that match either the name or email you searched for. 

**Note:** This filter supports both full and partial search queries, with a minimum of three characters required. For example, searching for \`car\` may match the following values:

  - \`Carlos Vives\`
  - \`Carmen Domínguez\` 
  - \`carlos.vives@musicacolombia.co\`",
              "name": "search",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListCustomersResponse",
              "nameOverride": undefined,
              "schema": "CustomerPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all customers",
          "tags": [
            "Customers",
          ],
        },
        {
          "authed": true,
          "description": "Create a new customer to send or request funds.",
          "errorStatusCode": [
            400,
            401,
            500,
          ],
          "generatedRequestName": "CreateCustomerRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateCustomer",
          "path": "/payments/customers",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "CreateCustomerRequest",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateCustomerRequestCreateCustomerRequest",
                    "nameOverride": undefined,
                    "schema": "CreateCustomerOfpi",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateCustomerRequestCreateCustomerRequest",
                    "nameOverride": undefined,
                    "schema": "CreateCustomerPse",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK (Created)",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "CreateCustomerResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateCustomerResponseCreateCustomerResponse",
                    "nameOverride": undefined,
                    "schema": "CustomerOfpi",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateCustomerResponseCreateCustomerResponse",
                    "nameOverride": undefined,
                    "schema": "CustomerPse",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Create a new customer",
          "tags": [
            "Customers",
          ],
        },
        {
          "authed": true,
          "description": "Get the details about a specific customer",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailCustomerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailCustomer",
          "path": "/payments/customers/{id}",
          "pathParameters": [
            {
              "description": "The \`customer.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "DetailCustomerResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailCustomerResponseDetailCustomerResponse",
                    "nameOverride": undefined,
                    "schema": "CustomerOfpi",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailCustomerResponseDetailCustomerResponse",
                    "nameOverride": undefined,
                    "schema": "CustomerPse",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get details about a customer",
          "tags": [
            "Customers",
          ],
        },
        {
          "authed": true,
          "description": "List all bank accounts associated with your Belvo account.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListBankAccountRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListBankAccount",
          "path": "/payments/bank-accounts",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "One or more \`bank-account.id\`s (comma separated) that you want to get results for.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only after this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only before this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results between this date range (in \`YYYY-MM-DD\` format).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results that exactly match a value.",
              "name": "number",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results for listed numbers.",
              "name": "number__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`customer.id\` you want to get results for.",
              "name": "customer",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`institution.id\` you want to get results for.",
              "name": "institution",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results for a matched value type.",
              "name": "holder__type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results for listed holder types.",
              "name": "holder__type__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this value.",
              "name": "providers",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListBankAccountResponse",
              "nameOverride": undefined,
              "schema": "BankAccountPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all bank accounts",
          "tags": [
            "Bank Accounts",
          ],
        },
        {
          "authed": true,
          "description": "Create a new bank account from which to send or request funds.",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "CreateBankAccountRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateBankAccount",
          "path": "/payments/bank-accounts",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "CreateBankAccountRequest",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateBankAccountRequestCreateBankAccountRequest",
                    "nameOverride": undefined,
                    "schema": "CreateBankAccountOfpi",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateBankAccountRequestCreateBankAccountRequest",
                    "nameOverride": undefined,
                    "schema": "CreateBankAccountPse",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK (Created)",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "CreateBankAccountResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateBankAccountResponseCreateBankAccountResponse",
                    "nameOverride": undefined,
                    "schema": "BankAccountOfpiResponse",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateBankAccountResponseCreateBankAccountResponse",
                    "nameOverride": undefined,
                    "schema": "BankAccountPseResponse",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Create a new bank account",
          "tags": [
            "Bank Accounts",
          ],
        },
        {
          "authed": true,
          "description": "Get the details about a specific bank account",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailBankAccountRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailBankAccount",
          "path": "/payments/bank-accounts/{id}",
          "pathParameters": [
            {
              "description": "The \`bank-account.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "DetailBankAccountResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailBankAccountResponseDetailBankAccountResponse",
                    "nameOverride": undefined,
                    "schema": "BankAccountOfpiResponse",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailBankAccountResponseDetailBankAccountResponse",
                    "nameOverride": undefined,
                    "schema": "BankAccountPseResponse",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get details about a bank account",
          "tags": [
            "Bank Accounts",
          ],
        },
        {
          "authed": true,
          "description": "List all payment links associated with your Belvo account. By default, we return up to 100 results per page.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListPaymentLinksRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListPaymentLinks",
          "path": "/payments/payment-links",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Indicates how many results to return per page. By default we return 100 results per page.

ℹ️ The minimum number of results returned per page is 1 and the maximum is 100. If you enter a value greater than 100, our API will default to the maximum value (1000).
",
              "name": "page_size",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only after this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only before this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results between this date range (in \`YYYY-MM-DD\` format).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return payment links with this status. Can be either \`ACTIVE\` or \`INACTIVE\`.",
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "generatedName": "ListPaymentLinksRequestStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ACTIVE",
                      "nameOverride": undefined,
                      "value": "ACTIVE",
                    },
                    {
                      "generatedName": "INACTIVE",
                      "nameOverride": undefined,
                      "value": "INACTIVE",
                    },
                  ],
                },
              },
            },
            {
              "description": "Return results in a specified time order. Can be either:

  - \`created_at\` returns payment links from newest to oldest (in ascending order).
  - \`-created_at\` returns payment links from oldest to newest (in descending order).",
              "name": "ordering",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "generatedName": "ListPaymentLinksRequestOrdering",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "created_at",
                      "nameOverride": "Ascending",
                      "value": "created_at",
                    },
                    {
                      "generatedName": "CreatedAt",
                      "nameOverride": "Descending",
                      "value": "-created_at",
                    },
                  ],
                },
              },
            },
            {
              "description": "Return results for one or more payment links that match the description you searched for. 

**Note:** This filter supports both full and partial search queries, with a minimum of three characters required. For example, searching for \`trai\` may match the following values:

  - \`Awesome training sneakers\` 
  - \`Training equipment\`",
              "name": "search",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListPaymentLinksResponse",
              "nameOverride": undefined,
              "schema": "PaymentLinkPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all payment links",
          "tags": [
            "Payment Links",
          ],
        },
        {
          "authed": true,
          "description": "Create a new payment link to start a hosted-widget payment.",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "CreatePaymentlinkRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreatePaymentlink",
          "path": "/payments/payment-links",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "CreatePaymentlinkRequest",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreatePaymentlinkRequestCreatePaymentlinkRequest",
                    "nameOverride": undefined,
                    "schema": "CreatePaymentLinkOfpi",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreatePaymentlinkRequestCreatePaymentlinkRequest",
                    "nameOverride": undefined,
                    "schema": "CreatePaymentLinkPse",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK (Created)",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "CreatePaymentlinkResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreatePaymentlinkResponseCreatePaymentlinkResponse",
                    "nameOverride": undefined,
                    "schema": "PaymentLinkOfpi",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreatePaymentlinkResponseCreatePaymentlinkResponse",
                    "nameOverride": undefined,
                    "schema": "PaymentLinkPse",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Create a payment link",
          "tags": [
            "Payment Links",
          ],
        },
        {
          "authed": true,
          "description": "Get the details about a payment link.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailCreatePaymentlinkRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailCreatePaymentlink",
          "path": "/payments/payment-links/{access_token}",
          "pathParameters": [
            {
              "description": "The \`access_token\` of the payment link you want to get detailed information about. 

**Note:** You can retrieve the \`access_token\` for a payment link by making a [GET List all payment links](https://developers.belvo.com/reference/listpaymentlinks) request.",
              "name": "access_token",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK (Created)",
            "schema": {
              "oneOf": {
                "description": undefined,
                "generatedName": "DetailCreatePaymentlinkResponse",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailCreatePaymentlinkResponseDetailCreatePaymentlinkResponse",
                    "nameOverride": undefined,
                    "schema": "PaymentLinkOfpi",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DetailCreatePaymentlinkResponseDetailCreatePaymentlinkResponse",
                    "nameOverride": undefined,
                    "schema": "PaymentLinkPse",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get details about a payment link",
          "tags": [
            "Payment Links",
          ],
        },
        {
          "authed": true,
          "description": "List all payment intents associated with your Belvo account.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListPaymentIntentsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListPaymentIntents",
          "path": "/payments/payment-intents",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "One or more \`payment-intent.id\`s (comma separated) that you want to get results for.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only after this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only before this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results between this date range (in \`YYYY-MM-DD\` format).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this value.",
              "name": "provider",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this value.",
              "name": "payment_method_type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`customer.id\` you want to get results for.",
              "name": "customer",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "One or more \`customer.id\`s (comma separated) that you want to get results for.",
              "name": "customer__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this value.",
              "name": "amount",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for more than this amount.",
              "name": "amount__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for and more than this amount.",
              "name": "amount__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for less than this amount.",
              "name": "amount__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this amount or less.",
              "name": "amount__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this value.",
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results for listed status.",
              "name": "status__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListPaymentIntentsResponse",
              "nameOverride": undefined,
              "schema": "PaymentIntentPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all payment intents",
          "tags": [
            "Payment Intents",
          ],
        },
        {
          "authed": true,
          "description": "Create a payment intent.",
          "errorStatusCode": [
            400,
            401,
            408,
            500,
          ],
          "generatedRequestName": "CreatePaymentIntentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreatePaymentIntent",
          "path": "/payments/payment-intents",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePaymentIntentRequest",
              "nameOverride": undefined,
              "schema": "CreatePaymentIntentPse",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK (Created)",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePaymentIntentResponse",
              "nameOverride": undefined,
              "schema": "PaymentIntentPse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Create a new payment intent",
          "tags": [
            "Payment Intents",
          ],
        },
        {
          "authed": true,
          "description": "Get the details about a specific payment intent.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailPaymentIntentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailPaymentIntent",
          "path": "/payments/payment-intents/{id}",
          "pathParameters": [
            {
              "description": "The \`payment-intent.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailPaymentIntentResponse",
              "nameOverride": undefined,
              "schema": "PaymentIntentPse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get details about a payment intent",
          "tags": [
            "Payment Intents",
          ],
        },
        {
          "authed": true,
          "description": "Complete a new payment intent.

During the payment intent flow, you need to fill in the payment intent with required information about your customer (their institution, bank account, and login credentials). This is done by sending PATCH requests with the information that Belvo asked you display in each \`next_step\` object. If you need more information on how to complete a payment intent, check our <a href="https://developers.belvo.com/docs/colombia-pse#payment-intents" target="_blank">PSE payment initiation</a> guides for  🇨🇴 Colombia.",
          "errorStatusCode": [
            400,
            404,
          ],
          "generatedRequestName": "PatchPaymentIntentRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "PatchPaymentIntent",
          "path": "/payments/payment-intents/{id}",
          "pathParameters": [
            {
              "description": "The \`payment-intent.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchPaymentIntentRequest",
              "nameOverride": undefined,
              "schema": "PatchPaymentIntentPse",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK (Created)",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PatchPaymentIntentResponse",
              "nameOverride": undefined,
              "schema": "PaymentIntentPse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Complete a payment intent",
          "tags": [
            "Payment Intents",
          ],
        },
        {
          "authed": true,
          "description": "List all payment transactions associated with your Belvo account.",
          "errorStatusCode": [
            401,
          ],
          "generatedRequestName": "ListPaymentTransactionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListPaymentTransactions",
          "path": "/payments/transactions",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "A page number within the paginated result set.",
              "name": "page",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "One or more payment \`transaction.id\`s (comma separated) that you want to get results for.",
              "name": "id__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only after this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and after (in \`YYYY-MM-DD\` format).",
              "name": "created_at__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only before this date (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this date and before (in \`YYYY-MM-DD\` format).",
              "name": "created_at__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results between this date range (in \`YYYY-MM-DD\` format).",
              "name": "created_at__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`charge.id\` you want to get results for.",
              "name": "charge",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "One or more \`charge.id\`s (comma separated) that you want to get results for.",
              "name": "charge__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The \`beneficiary.id\` you want to get results for.",
              "name": "beneficiary",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "One or more \`beneficiary.id\`s (comma separated) that you want to get results for.",
              "name": "beneficiary__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The payer's \`bank-account.id\` you want to get results for.",
              "name": "payer",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "One or more payer \`bank-account.id\`s (comma separated) that you want to get results for.",
              "name": "payer__in",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results for a matched value type.",
              "name": "transaction__type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results for a matched value type.",
              "name": "currency",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results for a matched value type.",
              "name": "description",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this value.",
              "name": "amount",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for more than this amount.",
              "name": "amount__gt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for and more than this amount.",
              "name": "amount__gte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for less than this amount.",
              "name": "amount__lt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results only for this amount or less.",
              "name": "amount__lte",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Return results between this amount range",
              "name": "amount__range",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListPaymentTransactionsResponse",
              "nameOverride": undefined,
              "schema": "PaymentsTransactionsPaginatedResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List all payment transactions",
          "tags": [
            "Payment Transactions",
          ],
        },
        {
          "authed": true,
          "description": "Get the details about a specific payment transaction.",
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "DetailPaymentTransactionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "DetailPaymentTransactions",
          "path": "/payments/transactions/{id}",
          "pathParameters": [
            {
              "description": "The \`transaction.id\` you want to get detailed information about.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DetailPaymentTransactionsResponse",
              "nameOverride": undefined,
              "schema": "paymentTransaction",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get details about a payment transaction",
          "tags": [
            "Payment Transactions",
          ],
        },
      ],
      "errors": {
        "400": {
          "description": undefined,
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "type": "array",
            "value": {
              "oneOf": {
                "description": undefined,
                "generatedName": "BadRequestErrorBodyItem",
                "nameOverride": undefined,
                "schemas": [
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "InvalidAccessMode",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "TooManySessionsError",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "LoginError",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "SessionExpiredError",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "ValidationError",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "InstitutionDownError",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "InstitutionUnavailableError",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "InstitutionInactiveError",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "UnsupportedOperationError",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "InvalidLinkError",
                    "type": "reference",
                  },
                  {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BadRequestErrorBodyItemBadRequestErrorBodyItem",
                    "nameOverride": undefined,
                    "schema": "UnconfirmedLinkError",
                    "type": "reference",
                  },
                ],
                "type": "undisciminated",
              },
              "type": "oneOf",
            },
          },
        },
        "401": {
          "description": undefined,
          "generatedName": "UnauthorizedError",
          "nameOverride": null,
          "schema": {
            "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
            "type": "array",
            "value": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UnauthorizedErrorBodyItem",
              "nameOverride": undefined,
              "schema": "UnauthorizedError",
              "type": "reference",
            },
          },
        },
        "403": {
          "description": undefined,
          "generatedName": "ForbiddenError",
          "nameOverride": null,
          "schema": {
            "description": "This error occurs when you try to access Belvo's resource without the correct permissions.",
            "type": "array",
            "value": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ForbiddenErrorBodyItem",
              "nameOverride": undefined,
              "schema": "AccessToResourceDenied",
              "type": "reference",
            },
          },
        },
        "404": {
          "description": undefined,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "description": "You made a request where you:

  - provided the wrong URL.
  - used an ID (for a link, account, transaction, and so on) that is not associated with your Belvo account.",
            "type": "array",
            "value": {
              "description": undefined,
              "file": undefined,
              "generatedName": "NotFoundErrorBodyItem",
              "nameOverride": undefined,
              "schema": "NotFoundError",
              "type": "reference",
            },
          },
        },
        "408": {
          "description": undefined,
          "generatedName": "RequestTimeoutError",
          "nameOverride": null,
          "schema": {
            "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.",
            "type": "array",
            "value": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RequestTimeoutErrorBodyItem",
              "nameOverride": undefined,
              "schema": "RequestTimeoutError",
              "type": "reference",
            },
          },
        },
        "428": {
          "description": undefined,
          "generatedName": "PreconditionError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "type": "array",
            "value": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PreconditionErrorBodyItem",
              "nameOverride": undefined,
              "schema": "TokenRequiredResponse",
              "type": "reference",
            },
          },
        },
        "500": {
          "description": undefined,
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.",
            "type": "array",
            "value": {
              "description": undefined,
              "file": undefined,
              "generatedName": "InternalServerErrorBodyItem",
              "nameOverride": undefined,
              "schema": "UnexpectedError",
              "type": "reference",
            },
          },
        },
      },
      "nonRequestReferencedSchemas": [
        "UnauthorizedError",
        "PaginatedResponseLink",
        "InvalidAccessMode",
        "TooManySessionsError",
        "LoginError",
        "SessionExpiredError",
        "ValidationError",
        "InstitutionDownError",
        "InstitutionUnavailableError",
        "InstitutionInactiveError",
        "UnsupportedOperationError",
        "InvalidLinkError",
        "UnconfirmedLinkError",
        "TokenRequiredResponse",
        "UnexpectedError",
        "Link",
        "NotFoundError",
        "AccountsPaginatedResponse",
        "RequestTimeoutError",
        "Account",
        "TransactionsPaginatedResponse",
        "Transaction",
        "AsynchronousAccepted202",
        "BalancesPaginatedResponse",
        "Balance",
        "InstitutionsPaginatedResponse",
        "Institution",
        "OwnersPaginatedResponse",
        "Owner",
        "InvoicesResponsePaginatedResponse",
        "InvoiceWithIdSat",
        "InvoiceDian",
        "TaxReturnsPersonalPaginated",
        "TaxReturnsPersonalMonthlyPaginated",
        "TaxReturnsBusinessPaginated",
        "TaxReturnsBusinessMonthlyPaginated",
        "TaxReturnsMonthlyRequest",
        "TaxReturnsYearlyRequest",
        "TaxReturnPersonal",
        "TaxReturnPersonalMonthly",
        "TaxReturnBusiness",
        "TaxReturnBusinessMonthly",
        "TaxStatusPaginatedResponse",
        "TaxStatusSat",
        "TaxStatusDian",
        "TaxComplianceStatusPaginatedResponse",
        "TaxComplianceStatus",
        "IncomesPaginatedResponse",
        "Income",
        "RecurringExpensesPaginatedResponse",
        "RecurringExpenses",
        "InvestmentsPortfoliosPaginatedResponse",
        "InvestmentsPortfolio",
        "ReceivablesTransactionsPaginatedResponse",
        "ReceivablesTransaction",
        "RiskInsightsPaginatedResponse",
        "RiskInsights",
        "TaxRetentionsPaginatedResponse",
        "TaxRetentions",
        "TaxDeclarationIndividualPaginated",
        "TaxDeclarationBusinessPaginated",
        "TaxDeclarationBusiness",
        "TaxDeclarationIndividual",
        "EmploymentRecordsPaginatedResponse",
        "EmploymentRecord",
        "AccessToResourceDenied",
        "Categorization",
        "SecretKeysPaginatedResponse",
        "SecretKeys",
        "PaymentsWebhooksPaginatedResponse",
        "paymentWebhook",
        "PaymentsInstitutionsPaginatedResponse",
        "paymentInstitution",
        "CustomerPaginatedResponse",
        "CreateCustomerOfpi",
        "CreateCustomerPse",
        "CustomerOfpi",
        "CustomerPse",
        "BankAccountPaginatedResponse",
        "CreateBankAccountOfpi",
        "CreateBankAccountPse",
        "BankAccountOfpiResponse",
        "BankAccountPseResponse",
        "PaymentLinkPaginatedResponse",
        "CreatePaymentLinkOfpi",
        "CreatePaymentLinkPse",
        "PaymentLinkOfpi",
        "PaymentLinkPse",
        "PaymentIntentPaginatedResponse",
        "CreatePaymentIntentPse",
        "PaymentIntentPse",
        "PaymentsTransactionsPaginatedResponse",
        "paymentTransaction",
        "EnumLinkAccessModeResponse",
        "EnumLinkStatus",
        "EnumLinkRefreshRate",
        "EnumLinkAccessModeRequest",
        "TokenRequiredResponseTokenGenerationData",
        "EnumInstitutionType",
        "EnumLoanDataInterestRateType",
        "EnumLoanDataFeeType",
        "AccountsLoanDataInterestRate",
        "AccountsLoanDataFees",
        "AccountsFundsDataPublicIdentifications",
        "InstitutionAccount",
        "EnumAccountCategory",
        "AccountsBalance",
        "AccountsCreditData",
        "AccountsLoanData",
        "AccountsFundsData",
        "AccountsReceivablesData",
        "EnumTransactionBillStatus",
        "TransactionMerchantData",
        "EnumTransactionCategory",
        "EnumTransactionSubcategory",
        "EnumTransactionType",
        "EnumTransactionStatus",
        "TransactionCreditCardData",
        "InstitutionsFormFieldValues",
        "InstitutionsFormField",
        "InstitutionsFeature",
        "EnumInstitutionIntegrationType",
        "EnumInstitutionStatus",
        "OwnerDocumentId",
        "InvoiceDetailRetainedTaxSat",
        "InvoicesPaymentsRelatedDocumentsSat",
        "EnumInvoiceSatInvoiceType",
        "EnumInvoiceType",
        "EnumInvoiceSatPaymentMethod",
        "InvoiceDetailSat",
        "InvoicesPaymentsSat",
        "InvoicesPayrollSat",
        "InvoiceWarningsSat",
        "InvoicesPaymentsRelatedDocumentsDian",
        "EnumInvoiceDianInvoiceType",
        "InvoiceSenderDetailsDian",
        "InvoicesReceiverDetailsDian",
        "EnumInvoiceDianPaymentMethod",
        "InvoiceDetailDian",
        "InvoicesPaymentsDian",
        "InvoicesPayrollDian",
        "InvoiceWarningsDian",
        "TaxStatusAddressBetweenStreetSat",
        "TaxStatusTaxPayerInformationSat",
        "TaxStatusAddressSat",
        "TaxStatusEconomicActivitySat",
        "TaxStatusRegimensSat",
        "TaxStatusObligationsSat",
        "TaxStatusAddressBetweenStreetDian",
        "TaxStatusTaxPayerInformationDian",
        "TaxStatusAddressDian",
        "TaxStatusEconomicActivityDian",
        "TaxStatusRegimensDian",
        "TaxStatusObligationsDian",
        "EnumTaxComplianceStatusOutcome",
        "EnumIncomeStreamType",
        "EnumIncomeStreamFrequency",
        "EnumIncomeStreamConfidence",
        "IncomeStreamsBody",
        "EnumIncomeSourceType",
        "EnumInvoiceAllowedIncomeTypesRequest",
        "EnumIncomeMinimumConfidenceLevelRequest",
        "RecurringExpenseSourceTransaction",
        "EnumRecurringExpenseFrequency",
        "EnumRecurringExpenseCategory",
        "EnumRecurringExpensePaymentType",
        "InvestmentsPortfolioInstrumentPublicId",
        "EnumInvestmentPortfolioInstrumentType",
        "InvestmentsPortfolioInstrumentRedemptionConditions",
        "InvestmentsPortfolioInstrumentFees",
        "InvestmentsPortfolioInstrumentInterestRate",
        "EnumInvestmentPortfolioType",
        "InvestmentsPortfolioInstrument",
        "EnumReceivableTransactionFeeType",
        "ReceivablesTransactionAccount",
        "EnumReceivableTransactionType",
        "RecevablesTransactionFees",
        "EnumReceivableTransactionStatus",
        "ReceivablesTransactionNumberOfInstallments",
        "RiskInsightsTransactionMetrics",
        "RiskInsightsBalanceMetrics",
        "RiskInsightsCashflowMetrics",
        "RiskInsightsCreditCardMetrics",
        "RiskInsightsLoansMetrics",
        "EnumTaxRetentionPaymentStatus",
        "EnumTaxRetentionReceiverNationality",
        "RetentionBreakdown",
        "EnumTaxRetentionType",
        "DocumentIdIndividual",
        "ReportingId",
        "GrossIncomeIndividual",
        "NonTaxableIncomeIndividual",
        "NetIncomeIndividual",
        "AnnualTotalsIndividual",
        "DocumentInformationIndividual",
        "TaxPayerInformationIndividual",
        "EquityStatementIndividual",
        "AnnualIncomeStatementIndividual",
        "PensionIncomeStatementIndividual",
        "TaxAssessmentIndividual",
        "DocumentIdBusiness",
        "DocumentInformationBusiness",
        "TaxPayerInformationBusiness",
        "EquityStatementBusiness",
        "AnnualIncomeStatementBusiness",
        "AnnualCostsAndDeductionsStatementBusiness",
        "TaxAssessmentBusiness",
        "EnumEmploymentRecordStatus",
        "EnumEmploymentRecordDocumentType",
        "EmploymentRecordEntitlement",
        "EmploymentRecordDocumentId",
        "EnumEmploymentRecordStatusUpdateEvents",
        "EmploymentRecordEmploymentStatusUpdates",
        "EmploymentRecordPersonalData",
        "EmploymentRecordSocialSecuritySummary",
        "EmploymentRecordDetail",
        "EmploymentRecordFile",
        "EnumIncomeVerificationAccountHolderType",
        "EnumIncomeVerificationAccountCategory",
        "EnumIncomeVerificationType",
        "EyodIncomeVerificationBodyRequest",
        "EnumCategorizationAccountHolderType",
        "EnumCategorizationAccountCategory",
        "EnumCategorizationTransactionType",
        "CategorizationBodyRequest",
        "EnumCategorizationTransactionCategory",
        "EnumCategorizationTransactionSubcategory",
        "CategorizationMerchantData",
        "CategorizationBody",
        "EnumPaymentsCountry",
        "InstitutionFormField",
        "EnumCustomerType",
        "EnumCustomerIdentifierTypeOfpi",
        "EnumCustomerIdentifierTypePse",
        "EnumBankAccountPixAccountTypeOfpi",
        "EnumBankAccountHolderTypeOfpi",
        "HolderInformationBusinessOfpiResponse",
        "HolderInformationIndividualOfpiResponse",
        "BankAccountDetailsOfpi",
        "BankAccountDetailsOfpiPix",
        "HolderResponseOfpi",
        "EnumBankAccountHolderTypePse",
        "HolderInformationBusinessPseResponse",
        "HolderBusinessResponsePse",
        "BankAccountBusinessPse",
        "HolderInformationBusinessOfpi",
        "HolderInformationIndividualOfpi",
        "BankAccountHolderRequestOfpi",
        "HolderInformationBusinessPse",
        "PaymentsWay",
        "HolderBusinessPse",
        "ProvidersPse",
        "PaymentLinkCallbackUrlsResponse",
        "EnumPaymentLinksStatus",
        "PaymentLinkListOfpi",
        "PaymentLinkListPse",
        "PaymentLinksPaymentMethodDetailsBodyOfpi",
        "EnumPaymentLinkAllowedPaymentMethod",
        "EnumPaymentLinkProvider",
        "PaymentMethodDetailsOfpi",
        "PaymentLinkCallbackUrls",
        "PaymentLinksPaymentMethodDetailsBodyPse",
        "PaymentMethodDetailsPse",
        "DisplayPaymentMethodInformationContentOfpi",
        "NeedsRedirectContent",
        "BankAccountDetailsOpenFinance",
        "BankAccountDetailsOpenFinancePix",
        "BeneficiaryBankAccountOfpi",
        "DisplayConfirmationRequiredOfpi",
        "DisplayPaymentProcessing",
        "DisplayPaymentSucceeded",
        "DisplayPaymentFailed",
        "PaymentIntentPaymentMethodDetailsBodyIndividualOfpi",
        "PaymentIntentPaymentMethodDetailsBodyBusinessOfpi",
        "PaymentMethodInformationBodyOfpi",
        "ChargePaymentMethodDetailsPseContent",
        "ChargePaymentMethodDetailsOfpiContent",
        "PaymentMethodInformationBodyPse",
        "BankAccountInformationContentPse",
        "TransactionBankAccountBodyPse",
        "BankAccountInformationPse",
        "EnumPaymentsCurrency",
        "EnumPaymentTransactionType",
        "TransactionBankAccountOfpi",
        "TransactionBankAccountPse",
        "ChargePaymentMethodDetailsPse",
        "ChargePaymentMethodDetailsOfpi",
        "PaymentMethodInformationPse",
        "NextStepDisplayPaymentMethodInformation",
        "NextStepNeedsRedirect",
        "NextStepDisplayConfirmationRequiredOfpi",
        "NextStepDisplayPaymentProcessing",
        "NextStepDisplayPaymentSucceeded",
        "NextStepDisplayPaymentFailed",
        "LastErrorPaymentError",
        "PaymentIntentPaymentMethodDetailsIndividualOfpi",
        "PaymentIntentPaymentMethodDetailsBusinessOfpi",
        "PaymentMethodInformationOfpi",
        "Charge",
        "EnumPaymentIntentStatus",
        "PaymentIntentOfpi",
        "EnumPaymentIntentHolderTypePse",
        "HolderBankAccountInformationPse",
        "HolderBankAccountPse",
        "PaymentMethodInformationDetailsPse",
        "PaymentMethodInfoCustomerBankAccountsPse",
        "DisplayPaymentMethodInformationContentPse",
        "DisplayCredentialsRequiredContentPse",
        "NeedsRedirectContentPse",
        "DisplayTokenRequiredContentPse",
        "BeneficiaryBankAccountPse",
        "DisplayCustomerBankAccountsContentPse",
        "DisplayConfirmationRequiredContentPse",
        "PaymentIntentPaymentMethodDetailsBodyPse",
        "NextStepDisplayPaymentMethodInformationPse",
        "NextStepDisplayCredentialsRequiredPse",
        "NextStepDisplayNeedsRedirectPse",
        "NextStepDisplayTokenRequiredPse",
        "NextStepDisplayCustomerBankAccountsPse",
        "NextStepDisplayConfirmationRequiredPse",
        "LastErrorInvalidCredentials",
        "LastErrorInvalidToken",
        "LastErrorLoginError",
        "LastErrorTwoFactor",
        "LastErrorSessionExpired",
        "PaymentIntentPaymentMethodDetailsPse",
        "PaymentIntentsPaymentMethodDetailsBodyPse",
        "PaymentIntentsPaymentMethodDetailsPse",
        "PatchPaymentMethodDetailsPse",
        "PatchPaymentIntentsBodyPse",
        "TransactionsRequest",
        "PatchBody",
        "StandardRequest",
        "PatchBodyWithoutSaveData",
      ],
      "schemas": {
        "AccessToResourceDenied": {
          "allOf": [],
          "description": "This error occurs when you try to access Belvo's resource without the correct permissions.",
          "generatedName": "AccessToResourceDenied",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`access_to_resource_denied\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#403-access_to_resource_denied" target="_blank">403 access_to_resource_denied</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`access_to_resource_denied\` errors, the description is:
  
  - \`You don't have access to this resource.\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Account": {
          "description": "Details regarding the account.

**Note**: For our recurring expenses resource, this account relates to the account that was analyzed to generate the recurring expenses report.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Details regarding the account.

**Note**: For our recurring expenses resource, this account relates to the account that was analyzed to generate the recurring expenses report.
",
            "generatedName": "Account",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "id",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The unique identifier created by Belvo used to reference the current account.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "link",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The \`link.id\` the account belongs to.",
                    "type": "nullable",
                    "value": {
                      "description": "The \`link.id\` the account belongs to.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "institution",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AccountInstitution",
                    "nameOverride": undefined,
                    "schema": "InstitutionAccount",
                    "type": "reference",
                  },
                },
              },
              {
                "conflict": [],
                "key": "collected_at",
                "schema": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "created_at",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "category",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AccountCategory",
                  "nameOverride": undefined,
                  "schema": "EnumAccountCategory",
                  "type": "reference",
                },
              },
              {
                "conflict": [],
                "key": "balance_type",
                "schema": {
                  "description": "Indicates whether this account is either an \`ASSET\` or a \`LIABILITY\`. You can consider the balance of an \`ASSET\` as being positive, while the balance of a \`LIABILITY\` as negative.
",
                  "type": "nullable",
                  "value": {
                    "description": "Indicates whether this account is either an \`ASSET\` or a \`LIABILITY\`. You can consider the balance of an \`ASSET\` as being positive, while the balance of a \`LIABILITY\` as negative.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "type",
                "schema": {
                  "description": "The account type, as designated by the institution.",
                  "type": "nullable",
                  "value": {
                    "description": "The account type, as designated by the institution.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "name",
                "schema": {
                  "description": "The account name, as given by the institution.",
                  "type": "nullable",
                  "value": {
                    "description": "The account name, as given by the institution.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "number",
                "schema": {
                  "description": "The account number, as designated by the institution.",
                  "type": "nullable",
                  "value": {
                    "description": "The account number, as designated by the institution.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "balance",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AccountBalance",
                  "nameOverride": undefined,
                  "schema": "AccountsBalance",
                  "type": "reference",
                },
              },
              {
                "conflict": [],
                "key": "currency",
                "schema": {
                  "description": "The currency of the account. For example:
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)

 Please note that other currencies other than in the list above may be returned.",
                  "type": "nullable",
                  "value": {
                    "description": "The currency of the account. For example:
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)

 Please note that other currencies other than in the list above may be returned.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "public_identification_name",
                "schema": {
                  "description": "The public name for the type of identification. For example: \`"CLABE"\`.

ℹ️ For 🇧🇷 Brazilian savings and checking accounts, this field will be \`AGENCY/ACCOUNT\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "The public name for the type of identification. For example: \`"CLABE"\`.

ℹ️ For 🇧🇷 Brazilian savings and checking accounts, this field will be \`AGENCY/ACCOUNT\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "public_identification_value",
                "schema": {
                  "description": "The value for the \`public_identification_name\`.

ℹ️ For 🇧🇷 Brazilian savings and checking accounts, this field will be the agency and bank account number, separated by a slash.
For example: \`0444/45722-0\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "The value for the \`public_identification_name\`.

ℹ️ For 🇧🇷 Brazilian savings and checking accounts, this field will be the agency and bank account number, separated by a slash.
For example: \`0444/45722-0\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "last_accessed_at",
                "schema": {
                  "description": "The ISO-8601 timestamp of Belvo's most recent successful access to the institution for the given link.",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp of Belvo's most recent successful access to the institution for the given link.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "credit_data",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AccountCreditData",
                  "nameOverride": undefined,
                  "schema": "AccountsCreditData",
                  "type": "reference",
                },
              },
              {
                "conflict": [],
                "key": "loan_data",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AccountLoanData",
                  "nameOverride": undefined,
                  "schema": "AccountsLoanData",
                  "type": "reference",
                },
              },
              {
                "conflict": [],
                "key": "funds_data",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "One or more funds that contribute to the the pension account.",
                    "type": "nullable",
                    "value": {
                      "description": "One or more funds that contribute to the the pension account.",
                      "type": "array",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "AccountFundsDataItem",
                        "nameOverride": undefined,
                        "schema": "AccountsFundsData",
                        "type": "reference",
                      },
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "receivables_data",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AccountReceivablesData",
                    "nameOverride": undefined,
                    "schema": "AccountsReceivablesData",
                    "type": "reference",
                  },
                },
              },
              {
                "conflict": [],
                "key": "bank_product_id",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "*This field has been deprecated.*

*The institution's product ID for the account type.*
",
                    "type": "nullable",
                    "value": {
                      "description": "*This field has been deprecated.*

*The institution's product ID for the account type.*
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "internal_identification",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "*This field has been deprecated.*

*The institution's internal identification for the account.*
",
                    "type": "nullable",
                    "value": {
                      "description": "*This field has been deprecated.*

*The institution's internal identification for the account.*
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "AccountsBalance": {
          "allOf": [],
          "description": "Details regarding the current and available balances for the account.
",
          "generatedName": "AccountsBalance",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "current",
              "schema": {
                "description": "The current balance is calculated differently according to the type of account.

- **💰 Checking and saving accounts**:

The user's account balance at the \`collected_at\` timestamp.
- **💳 Credit cards**:

The amount the user has spent in the current card billing period (see \`credit_data.cutting_date\` for information on when the current billing period finishes).
- **🏡 Loan accounts**:

The amount remaining to pay on the users's loan (same as \`loan_data.outstanding_balance\`).",
                "type": "nullable",
                "value": {
                  "description": "The current balance is calculated differently according to the type of account.

- **💰 Checking and saving accounts**:

The user's account balance at the \`collected_at\` timestamp.
- **💳 Credit cards**:

The amount the user has spent in the current card billing period (see \`credit_data.cutting_date\` for information on when the current billing period finishes).
- **🏡 Loan accounts**:

The amount remaining to pay on the users's loan (same as \`loan_data.outstanding_balance\`).",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "available",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The balance that the account owner can use.
- **💰 Checking and saving accounts**:

The available balance may be different to the \`current\` balance due to pending transactions.
- **💳 Credit cards**:

The credit amount the user still has available for the current period. The \`available\` balance may be different to the \`current\` balance due to pending transactions or future instalments.
- **🏡 Loan accounts**:

The present value required to pay off the loan, as provided by the institution.

**Note:** If the institution does not provide this value, we return \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The balance that the account owner can use.
- **💰 Checking and saving accounts**:

The available balance may be different to the \`current\` balance due to pending transactions.
- **💳 Credit cards**:

The credit amount the user still has available for the current period. The \`available\` balance may be different to the \`current\` balance due to pending transactions or future instalments.
- **🏡 Loan accounts**:

The present value required to pay off the loan, as provided by the institution.

**Note:** If the institution does not provide this value, we return \`null\`.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AccountsCreditData": {
          "description": "The credit options associated with this account.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "The credit options associated with this account.",
            "generatedName": "AccountsCreditData",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "credit_limit",
                "schema": {
                  "description": "The maximum amount of credit the owner can receive.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum amount of credit the owner can receive.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "collected_at",
                "schema": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp when the data point was collected.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "cutting_date",
                "schema": {
                  "description": "The closing date of the credit period.",
                  "type": "nullable",
                  "value": {
                    "description": "The closing date of the credit period.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "next_payment_date",
                "schema": {
                  "description": "The due date for the next payment (\`YYYY-MM-DD\`).",
                  "type": "nullable",
                  "value": {
                    "description": "The due date for the next payment (\`YYYY-MM-DD\`).",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "minimum_payment",
                "schema": {
                  "description": "The minimum amount to be paid on the \`next_payment_date\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum amount to be paid on the \`next_payment_date\`.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "no_interest_payment",
                "schema": {
                  "description": "The minimum amount required to pay to avoid generating interest.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum amount required to pay to avoid generating interest.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "interest_rate",
                "schema": {
                  "description": "The annualized interest rate of the credit.",
                  "type": "nullable",
                  "value": {
                    "description": "The annualized interest rate of the credit.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "end_date",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "*This field has been deprecated.*
",
                    "type": "nullable",
                    "value": {
                      "description": "*This field has been deprecated.*
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "monthly_payment",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "*This field has been deprecated.*

*The recurrent monthly payment, if applicable.*
",
                    "type": "nullable",
                    "value": {
                      "description": "*This field has been deprecated.*

*The recurrent monthly payment, if applicable.*
",
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "last_payment_date",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "*This field has been deprecated.*


*The date when the last credit payment was made.*
",
                    "type": "nullable",
                    "value": {
                      "description": "*This field has been deprecated.*


*The date when the last credit payment was made.*
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "AccountsFundsData": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AccountsFundsData",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The pension fund name.",
                  "type": "nullable",
                  "value": {
                    "description": "The pension fund name.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Type of pension fund.",
                  "type": "nullable",
                  "value": {
                    "description": "Type of pension fund.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "public_identifications",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The fund's public IDs.",
                  "type": "nullable",
                  "value": {
                    "description": "The fund's public IDs.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "AccountsFundsDataPublicIdentificationsItem",
                      "nameOverride": undefined,
                      "schema": "AccountsFundsDataPublicIdentifications",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "balance",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount in the fund.",
                  "type": "nullable",
                  "value": {
                    "description": "The amount in the fund.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "percentage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "How much this fund, as a percentage, contributes to the pension account's total.",
                  "type": "nullable",
                  "value": {
                    "description": "How much this fund, as a percentage, contributes to the pension account's total.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AccountsFundsDataPublicIdentifications": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AccountsFundsDataPublicIdentifications",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The type of identification number for the fund.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": "The fund's identification number.",
                "type": "nullable",
                "value": {
                  "description": "The fund's identification number.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AccountsLoanData": {
          "description": "The loan options associated with this account.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "The loan options associated with this account.",
            "generatedName": "AccountsLoanData",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "collected_at",
                "schema": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "contract_amount",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The initial total loan amount, calculated by the institution, when the contract was signed. This amount includes the principal + interest + taxes + fees.",
                    "type": "nullable",
                    "value": {
                      "description": "The initial total loan amount, calculated by the institution, when the contract was signed. This amount includes the principal + interest + taxes + fees.",
                      "schema": {
                        "type": "float",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "principal",
                "schema": {
                  "description": "Total amount of the loan (the amount the user receives).",
                  "type": "nullable",
                  "value": {
                    "description": "Total amount of the loan (the amount the user receives).",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "loan_type",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The type of the loan, according to the institution.",
                    "type": "nullable",
                    "value": {
                      "description": "The type of the loan, according to the institution.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "payment_day",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The day of the month by which the owner needs to pay the loan (\`YYYY-MM-DD\`).",
                    "type": "nullable",
                    "value": {
                      "description": "The day of the month by which the owner needs to pay the loan (\`YYYY-MM-DD\`).",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "outstanding_principal",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Outstanding loan amount, that is, how much remains to pay on the principal (not including interest).
",
                    "type": "nullable",
                    "value": {
                      "description": "Outstanding loan amount, that is, how much remains to pay on the principal (not including interest).
",
                      "schema": {
                        "type": "float",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "outstanding_balance",
                "schema": {
                  "description": "The amount remaining to pay in total, including interest.",
                  "type": "nullable",
                  "value": {
                    "description": "The amount remaining to pay in total, including interest.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "monthly_payment",
                "schema": {
                  "description": "The recurrent monthly payment, if applicable.",
                  "type": "nullable",
                  "value": {
                    "description": "The recurrent monthly payment, if applicable.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "interest_rates",
                "schema": {
                  "description": "Breakdown of the interest applied to the loan.",
                  "type": "nullable",
                  "value": {
                    "description": "Breakdown of the interest applied to the loan.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "AccountsLoanDataInterestRatesItem",
                      "nameOverride": undefined,
                      "schema": "AccountsLoanDataInterestRate",
                      "type": "reference",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "fees",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Breakdown of the fees applied to the loan.",
                    "type": "nullable",
                    "value": {
                      "description": "Breakdown of the fees applied to the loan.",
                      "type": "array",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "AccountsLoanDataFeesItem",
                        "nameOverride": undefined,
                        "schema": "AccountsLoanDataFees",
                        "type": "reference",
                      },
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "number_of_installments_total",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The total number of installments required to pay the loan.",
                    "type": "nullable",
                    "value": {
                      "description": "The total number of installments required to pay the loan.",
                      "schema": {
                        "type": "int",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "number_of_installments_outstanding",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The number of installments left to pay.",
                    "type": "nullable",
                    "value": {
                      "description": "The number of installments left to pay.",
                      "schema": {
                        "type": "int",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "contract_start_date",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The date when the loan contract was signed (\`YYYY-MM-DD\`).",
                    "type": "nullable",
                    "value": {
                      "description": "The date when the loan contract was signed (\`YYYY-MM-DD\`).",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "contract_end_date",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The date when the loan is expected to be completed.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "contract_number",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The contract number of the loan, as given by the institution.",
                    "type": "nullable",
                    "value": {
                      "description": "The contract number of the loan, as given by the institution.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "credit_limit",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "This field has been deprecated.

Please see \`principal\` instead.
",
                    "type": "nullable",
                    "value": {
                      "description": "This field has been deprecated.

Please see \`principal\` instead.
",
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "last_period_balance",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "This field has been deprecated.

Please see \`outstanding_balance\` instead.
",
                    "type": "nullable",
                    "value": {
                      "description": "This field has been deprecated.

Please see \`outstanding_balance\` instead.
",
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "interest_rate",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "This field has been deprecated.

Please see the \`interest_rates\` object instead.
",
                    "type": "nullable",
                    "value": {
                      "description": "This field has been deprecated.

Please see the \`interest_rates\` object instead.
",
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "limit_day",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "This field has been deprecated.

Please see \`payment_day\` instead.
",
                    "type": "nullable",
                    "value": {
                      "description": "This field has been deprecated.

Please see \`payment_day\` instead.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "cutting_day",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "This field has been deprecated.

The closing day of the month for the loan.
",
                    "type": "nullable",
                    "value": {
                      "description": "This field has been deprecated.

The closing day of the month for the loan.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "cutting_date",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "This field has been deprecated.

The closing date of the loan period.
",
                    "type": "nullable",
                    "value": {
                      "description": "This field has been deprecated.

The closing date of the loan period.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "last_payment_date",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "This field has been deprecated.

The date when the last loan payment was made.
",
                    "type": "nullable",
                    "value": {
                      "description": "This field has been deprecated.

The date when the last loan payment was made.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "no_interest_payment",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "This field has been deprecated.

The minimum amount required to pay to avoid generating interest.
",
                    "type": "nullable",
                    "value": {
                      "description": "This field has been deprecated.

The minimum amount required to pay to avoid generating interest.
",
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "AccountsLoanDataFees": {
          "description": "Breakdown of the fees applied to the loan.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Breakdown of the fees applied to the loan.",
            "generatedName": "AccountsLoanDataFees",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AccountsLoanDataFeesType",
                  "nameOverride": undefined,
                  "schema": "EnumLoanDataFeeType",
                  "type": "reference",
                },
              },
              {
                "conflict": [],
                "key": "value",
                "schema": {
                  "description": "The total value of the fee. Same currency of the Loan.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            ],
            "type": "object",
          },
        },
        "AccountsLoanDataInterestRate": {
          "allOf": [],
          "description": "Breakdown of the interest applied to the loan.",
          "generatedName": "AccountsLoanDataInterestRate",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the type of interest rate applied to the loan.",
                "type": "nullable",
                "value": {
                  "description": "The name of the type of interest rate applied to the loan.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AccountsLoanDataInterestRateType",
                "nameOverride": undefined,
                "schema": "EnumLoanDataInterestRateType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": "The interest rate (in percent or currency value).",
                "type": "nullable",
                "value": {
                  "description": "The interest rate (in percent or currency value).",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AccountsPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AccountsPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An array of Account objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AccountsPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "Account",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AccountsReceivablesData": {
          "description": "Additional details regarding the receivables account, if applicable.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Additional details regarding the receivables account, if applicable.",
            "generatedName": "AccountsReceivablesData",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "current",
                "schema": {
                  "description": "The total sum of all receivables (\`available\` + \`anticipated\`)",
                  "type": "nullable",
                  "value": {
                    "description": "The total sum of all receivables (\`available\` + \`anticipated\`)",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "available",
                "schema": {
                  "description": "The amount that the owner of the account will receive according to an established date.",
                  "type": "nullable",
                  "value": {
                    "description": "The amount that the owner of the account will receive according to an established date.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "anticipated",
                "schema": {
                  "description": "The amount that the owner of the account received earlier than contracted.",
                  "type": "nullable",
                  "value": {
                    "description": "The amount that the owner of the account received earlier than contracted.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "collected_at",
                "schema": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "type": "object",
          },
        },
        "AnnualCostsAndDeductionsStatementBusiness": {
          "allOf": [],
          "description": "Object containing the reported annual costs and applicable deductions.",
          "generatedName": "AnnualCostsAndDeductionsStatementBusiness",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "costs",
              "schema": {
                "description": "Total costs for the company to operate.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "administration_expenses",
              "schema": {
                "description": "Total costs of the company related to training, company offsites, or similar.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "distribution_and_sales_expenses",
              "schema": {
                "description": "Total costs the company incurred in order to distribute or sell their product.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "financial_expenses",
              "schema": {
                "description": "Total value of any fees incurred by the company to operate (such as bank fees).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_costs_and_deductible_expenses",
              "schema": {
                "description": "Total value of all costs and dedictible expenses.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AnnualIncomeStatementBusiness": {
          "allOf": [],
          "description": "Object containing the reported annual incomes, deductions, and final balances of the tax payer.",
          "generatedName": "AnnualIncomeStatementBusiness",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "gross_income_from_ordinary_activities",
              "schema": {
                "description": "Total gross income that the company generated from their main economic activity.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "dividends",
              "schema": {
                "description": "Total income that the company generated from dividends.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "other_income",
              "schema": {
                "description": "Total income that the company generated from activities not associated with their main economic activity.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_gross_income",
              "schema": {
                "description": "Total gross income the company generated.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "returns_rebates_and_discounts_on_sales",
              "schema": {
                "description": "Total value of cancelled orders, corrected invoices, or similar, that can be discounted from the \`total_gross_income\`.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_net_income",
              "schema": {
                "description": "Total net income of the company, taking into account \`returns_rebates_and_discounts_on_sales\`.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AnnualIncomeStatementIndividual": {
          "allOf": [],
          "description": "Object containing the reported annual incomes, deductions, and final balances of the tax payer.",
          "generatedName": "AnnualIncomeStatementIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "gross_income",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AnnualIncomeStatementIndividualGrossIncome",
                "nameOverride": undefined,
                "schema": "GrossIncomeIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "non_taxable_income",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AnnualIncomeStatementIndividualNonTaxableIncome",
                "nameOverride": undefined,
                "schema": "NonTaxableIncomeIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "net_income",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AnnualIncomeStatementIndividualNetIncome",
                "nameOverride": undefined,
                "schema": "NetIncomeIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "annual_totals",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AnnualIncomeStatementIndividualAnnualTotals",
                "nameOverride": undefined,
                "schema": "AnnualTotalsIndividual",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "AnnualTotalsIndividual": {
          "allOf": [],
          "description": "Object containing the tax payers total exempt, deducted, and ordinary net incomes.",
          "generatedName": "AnnualTotalsIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "total_exempt_income",
              "schema": {
                "description": "Total income that is not taxable, according to the institution.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_applicable_deductions",
              "schema": {
                "description": "Total deductions that the taxpayer can apply to their income, according to the institution.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_exemptions_and_deductions",
              "schema": {
                "description": "Sum total of all exempt and deductions that can be applied to the taxpayer's income.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_ordinary_net_income",
              "schema": {
                "description": "Sum total of the taxpayer's income (gross income - exemptions - deductions).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AsynchronousAccepted202": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AsynchronousAccepted202",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique ID for this request. We recommend you store this value to later identify which webhook event relates to an asynchronous request.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Balance": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Balance",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the balance request.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BalanceAccount",
                  "nameOverride": undefined,
                  "schema": "Account",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "value_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date when the \`balance\` was available, in \`YYYY-MM-DD\` format.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "balance",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The funds available in the account by the end of the \`value_date\`.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "current_balance",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "*This field has been deprecated. Please use the \`balance\` field instead.*
",
                  "type": "nullable",
                  "value": {
                    "description": "*This field has been deprecated. Please use the \`balance\` field instead.*
",
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "statement",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "*This field has been deprecated.*

*The ID of the banking statement used to extract the \`balance\`.*
",
                  "type": "nullable",
                  "value": {
                    "description": "*This field has been deprecated.*

*The ID of the banking statement used to extract the \`balance\`.*
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "This field has been deprecated.

The ISO-8601 timestamp when the data point was collected.
",
                  "type": "nullable",
                  "value": {
                    "description": "This field has been deprecated.

The ISO-8601 timestamp when the data point was collected.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "BalancesPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BalancesPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of balance objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BalancesPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "Balance",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "BalancesRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BalancesRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` that you want to get information for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "If provided, only balances matching this \`account.id\` are returned.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "date_from",
              "schema": {
                "description": "Date from which you want to start receiving balances, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_to",
              "schema": {
                "description": "Date that you want to stop receiving balances, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The OTP token generated by the bank.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BankAccountBusinessPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BankAccountBusinessPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was first created in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": "Belvo's unique ID for the customer associated with the bank account.
For \`BUSINESS\` bank accounts, this field is \`null\`.",
                "type": "nullable",
                "value": {
                  "description": "Belvo's unique ID for the customer associated with the bank account.
For \`BUSINESS\` bank accounts, this field is \`null\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": "Belvo's unique ID for the institution that the bank account is created in.
For \`BUSINESS\` bank accounts that Belvo creates for organizations, this field is \`null\`.",
                "type": "nullable",
                "value": {
                  "description": "Belvo's unique ID for the institution that the bank account is created in.
For \`BUSINESS\` bank accounts that Belvo creates for organizations, this field is \`null\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "number",
              "schema": {
                "description": "The bank account number of the payment beneficiary.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "holder",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BankAccountBusinessPseHolder",
                "nameOverride": undefined,
                "schema": "HolderBusinessResponsePse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "details",
              "schema": {
                "description": "For PSE, this field will return an empty object.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment intent.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "BankAccountDetailsOfpi": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BankAccountDetailsOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BankAccountDetailsOfpiCountry",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCountry",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "account_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BankAccountDetailsOfpiAccountType",
                "nameOverride": undefined,
                "schema": "EnumBankAccountPixAccountTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "agency",
              "schema": {
                "description": "The agency (branch number) of the institution where the account was created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "number",
              "schema": {
                "description": "The bank account number.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "BankAccountDetailsOfpiPix": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BankAccountDetailsOfpiPix",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BankAccountDetailsOfpiPixCountry",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCountry",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "pix_key",
              "schema": {
                "description": "The PIX key identifier of the bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "BankAccountDetailsOpenFinance": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BankAccountDetailsOpenFinance",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BankAccountDetailsOpenFinanceCountry",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCountry",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "account_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BankAccountDetailsOpenFinanceAccountType",
                "nameOverride": undefined,
                "schema": "EnumBankAccountPixAccountTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "agency",
              "schema": {
                "description": "The agency (branch number) of the institution where the account was created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "number",
              "schema": {
                "description": "The bank account number.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "BankAccountDetailsOpenFinancePix": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BankAccountDetailsOpenFinancePix",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BankAccountDetailsOpenFinancePixCountry",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCountry",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "pix_key",
              "schema": {
                "description": "The PIX key identifier of the bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "BankAccountHolderRequestOfpi": {
          "allOf": [],
          "description": "Details regarding the business bank account holder.",
          "generatedName": "BankAccountHolderRequestOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BankAccountHolderRequestOfpiType",
                "nameOverride": undefined,
                "schema": "EnumBankAccountHolderTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "information",
              "schema": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "BankAccountHolderRequestOfpiInformation",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "BankAccountHolderRequestOfpiInformationBankAccountHolderRequestOfpiInformation",
                      "nameOverride": undefined,
                      "schema": "HolderInformationBusinessOfpi",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "BankAccountHolderRequestOfpiInformationBankAccountHolderRequestOfpiInformation",
                      "nameOverride": undefined,
                      "schema": "HolderInformationIndividualOfpi",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
          ],
          "type": "object",
        },
        "BankAccountInformationContentPse": {
          "allOf": [],
          "description": "Information about the payer's institution",
          "generatedName": "BankAccountInformationContentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier for the payer’s institution.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BankAccountInformationPse": {
          "allOf": [],
          "description": "Information about the payer's bank account. Belvo returns this object when the payer's bank account information is not saved in the Belvo database.",
          "generatedName": "BankAccountInformationPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "bank_account_information",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BankAccountInformationPseBankAccountInformation",
                  "nameOverride": undefined,
                  "schema": "BankAccountInformationContentPse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "BankAccountOfpiResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BankAccountOfpiResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": "Belvo's unique ID for the customer associated with the bank account.
For \`BUSINESS\` bank accounts, this field is \`null\`.",
                "type": "nullable",
                "value": {
                  "description": "Belvo's unique ID for the customer associated with the bank account.
For \`BUSINESS\` bank accounts, this field is \`null\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": "Belvo's unique ID for the institution that the bank account is created in.
For \`BUSINESS\` bank accounts that Belvo creates for organizations, this field is \`null\`.",
                "type": "nullable",
                "value": {
                  "description": "Belvo's unique ID for the institution that the bank account is created in.
For \`BUSINESS\` bank accounts that Belvo creates for organizations, this field is \`null\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "details",
              "schema": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "BankAccountOfpiResponseDetails",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "BankAccountOfpiResponseDetailsBankAccountOfpiResponseDetails",
                      "nameOverride": undefined,
                      "schema": "BankAccountDetailsOfpi",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "BankAccountOfpiResponseDetailsBankAccountOfpiResponseDetails",
                      "nameOverride": undefined,
                      "schema": "BankAccountDetailsOfpiPix",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "holder",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BankAccountOfpiResponseHolder",
                "nameOverride": undefined,
                "schema": "HolderResponseOfpi",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "BankAccountPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BankAccountPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of bank account objects.",
                  "type": "array",
                  "value": {
                    "oneOf": {
                      "description": undefined,
                      "generatedName": "BankAccountPaginatedResponseResultsItem",
                      "nameOverride": undefined,
                      "schemas": [
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "BankAccountPaginatedResponseResultsItemBankAccountPaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "BankAccountOfpiResponse",
                          "type": "reference",
                        },
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "BankAccountPaginatedResponseResultsItemBankAccountPaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "BankAccountPseResponse",
                          "type": "reference",
                        },
                      ],
                      "type": "undisciminated",
                    },
                    "type": "oneOf",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "BankAccountPseResponse": {
          "description": undefined,
          "file": undefined,
          "generatedName": "BankAccountPseResponse",
          "nameOverride": undefined,
          "schema": "BankAccountBusinessPse",
          "type": "reference",
        },
        "BeneficiaryBankAccountOfpi": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BeneficiaryBankAccountOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the beneficiary bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BeneficiaryBankAccountOfpiInstitution",
                "nameOverride": undefined,
                "schema": "paymentInstitution",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "details",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "oneOf": {
                    "description": undefined,
                    "generatedName": "BeneficiaryBankAccountOfpiDetails",
                    "nameOverride": undefined,
                    "schemas": [
                      {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "BeneficiaryBankAccountOfpiDetailsBeneficiaryBankAccountOfpiDetails",
                        "nameOverride": undefined,
                        "schema": "BankAccountDetailsOpenFinance",
                        "type": "reference",
                      },
                      {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "BeneficiaryBankAccountOfpiDetailsBeneficiaryBankAccountOfpiDetails",
                        "nameOverride": undefined,
                        "schema": "BankAccountDetailsOpenFinancePix",
                        "type": "reference",
                      },
                    ],
                    "type": "undisciminated",
                  },
                  "type": "oneOf",
                },
              },
            },
            {
              "conflict": [],
              "key": "holder",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BeneficiaryBankAccountOfpiHolder",
                "nameOverride": undefined,
                "schema": "HolderResponseOfpi",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "BeneficiaryBankAccountPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BeneficiaryBankAccountPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the beneficiary bank account.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the institution that the bank account is created in.",
                  "type": "nullable",
                  "value": {
                    "description": "Belvo's unique ID for the institution that the bank account is created in.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "number",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The bank account number.",
                  "type": "nullable",
                  "value": {
                    "description": "The bank account number.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "holder",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BeneficiaryBankAccountPseHolder",
                  "nameOverride": undefined,
                  "schema": "HolderBusinessResponsePse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Categorization": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Categorization",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "transactions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An array of enriched transaction objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CategorizationTransactionsItem",
                    "nameOverride": undefined,
                    "schema": "CategorizationBody",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CategorizationBody": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CategorizationBody",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "transaction_id",
              "schema": {
                "description": "The unique ID for the transaction in your system.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account_holder_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CategorizationBodyAccountHolderType",
                "nameOverride": undefined,
                "schema": "EnumCategorizationAccountHolderType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "account_holder_id",
              "schema": {
                "description": "The unique ID for the account holder in your system.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account_id",
              "schema": {
                "description": "The unique ID for the account where the transaction occurred in your system.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account_category",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CategorizationBodyAccountCategory",
                "nameOverride": undefined,
                "schema": "EnumCategorizationAccountCategory",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "value_date",
              "schema": {
                "description": "The date when the transaction occurred, in \`YYYY-MM-DD\` format.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the transaction.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CategorizationBodyType",
                "nameOverride": undefined,
                "schema": "EnumCategorizationTransactionType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "The transaction amount.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The currency of the account, in ISO-4217 format. For example:
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": "The institution where the account is registered.

>**Note:** This is the name that you use in your system to identify an institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "mcc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The four-digit ISO 18245 Merchant Category Code (MCC). We only return this value when \`account_type\` = \`CREDIT_CARD\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The four-digit ISO 18245 Merchant Category Code (MCC). We only return this value when \`account_type\` = \`CREDIT_CARD\`.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "category",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CategorizationBodyCategory",
                "nameOverride": undefined,
                "schema": "EnumCategorizationTransactionCategory",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "subcategory",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CategorizationBodySubcategory",
                  "nameOverride": undefined,
                  "schema": "EnumCategorizationTransactionSubcategory",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "merchant",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CategorizationBodyMerchant",
                "nameOverride": undefined,
                "schema": "CategorizationMerchantData",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "CategorizationBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CategorizationBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "transaction_id",
              "schema": {
                "description": "Your unique ID for the transaction.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account_holder_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CategorizationBodyRequestAccountHolderType",
                "nameOverride": undefined,
                "schema": "EnumCategorizationAccountHolderType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "account_holder_id",
              "schema": {
                "description": "Your unique ID for the account holder.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account_id",
              "schema": {
                "description": "Your unique ID for the account where the transaction occurred.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account_category",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CategorizationBodyRequestAccountCategory",
                "nameOverride": undefined,
                "schema": "EnumCategorizationAccountCategory",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "value_date",
              "schema": {
                "description": "The date when the transaction occurred, in \`YYYY-MM-DD\` format.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the transaction.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CategorizationBodyRequestType",
                "nameOverride": undefined,
                "schema": "EnumCategorizationTransactionType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "The transaction amount.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The currency of the account, in ISO-4217 format. For example: - 🇧🇷 BRL (Brazilian Real) - 🇨🇴 COP (Colombian Peso) - 🇲🇽 MXN (Mexican Peso)",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": "The institution where the account is registered.

>**Note:** This is the name that you use in your system to identify an institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "mcc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The four-digit ISO 18245 Merchant Category Code (MCC). Only required when \`account_category\` = \`CREDIT_CARD\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The four-digit ISO 18245 Merchant Category Code (MCC). Only required when \`account_category\` = \`CREDIT_CARD\`.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CategorizationMerchantData": {
          "description": "Additional data regarding the merchant involved in the transaction.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Additional data regarding the merchant involved in the transaction.
",
            "generatedName": "CategorizationMerchantData",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "logo",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The URL to the merchant's logo.",
                    "type": "nullable",
                    "value": {
                      "description": "The URL to the merchant's logo.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "website",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The URL to the merchant's website.",
                    "type": "nullable",
                    "value": {
                      "description": "The URL to the merchant's website.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "merchant_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The name of the merchant.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "CategorizationRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CategorizationRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "language",
              "schema": {
                "description": "Two-letter ISO 639-1 code for the language of the transaction.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "transactions",
              "schema": {
                "description": "An array of transaction objects that you want categorized.

**Note:** Each object corresponds to one, unique transaction and you can send through up to 10,000 transactions per request.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CategorizationRequestTransactionsItem",
                  "nameOverride": undefined,
                  "schema": "CategorizationBodyRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ChangeAccessMode": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ChangeAccessMode",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "access_mode",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ChangeAccessModeAccessMode",
                "nameOverride": undefined,
                "schema": "EnumLinkAccessModeRequest",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "Charge": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Charge",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current charge.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the user that created the charge.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the customer that the charge was created for.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "failure_code",
              "schema": {
                "description": "Error code that explains the reason behind a payment being unsuccessful (if applicable).
",
                "type": "nullable",
                "value": {
                  "description": "Error code that explains the reason behind a payment being unsuccessful (if applicable).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "failure_message",
              "schema": {
                "description": "Further information regarding the \`failure_code\`.
",
                "type": "nullable",
                "value": {
                  "description": "Further information regarding the \`failure_code\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": "The current status of the charge.
",
                "generatedName": "ChargeStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "PENDING",
                    "nameOverride": undefined,
                    "value": "PENDING",
                  },
                  {
                    "generatedName": "SUCCEEDED",
                    "nameOverride": undefined,
                    "value": "SUCCEEDED",
                  },
                  {
                    "generatedName": "FAILED",
                    "nameOverride": undefined,
                    "value": "FAILED",
                  },
                ],
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "The amount of the charge.
",
                "type": "nullable",
                "value": {
                  "description": "The amount of the charge.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ChargeCurrency",
                  "nameOverride": undefined,
                  "schema": "EnumPaymentsCurrency",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The description of the payment.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiary",
              "schema": {
                "description": "Belvo's unique ID used to identify the beneficiary’s bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "provider",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ChargeProvider",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinkProvider",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_method_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ChargePaymentMethodType",
                  "nameOverride": undefined,
                  "schema": "EnumPaymentLinkAllowedPaymentMethod",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_method_details",
              "schema": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "ChargePaymentMethodDetails",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "ChargePaymentMethodDetailsChargePaymentMethodDetails",
                      "nameOverride": undefined,
                      "schema": "ChargePaymentMethodDetailsPse",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "ChargePaymentMethodDetailsChargePaymentMethodDetails",
                      "nameOverride": undefined,
                      "schema": "ChargePaymentMethodDetailsOfpi",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "payment_method_information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ChargePaymentMethodInformation",
                "nameOverride": undefined,
                "schema": "PaymentMethodInformationPse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_intent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The \`payment_intent.id\` associated with this charge.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "transactions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An array of Transaction objects relating to the charge.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ChargeTransactionsItem",
                    "nameOverride": undefined,
                    "schema": "paymentTransaction",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "updated_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the status of the charge was last updated.
",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp of when the status of the charge was last updated.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ChargePaymentMethodDetailsOfpi": {
          "allOf": [],
          "description": "Details about the payment method.",
          "generatedName": "ChargePaymentMethodDetailsOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "open_finance",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ChargePaymentMethodDetailsOfpiOpenFinance",
                  "nameOverride": undefined,
                  "schema": "ChargePaymentMethodDetailsOfpiContent",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ChargePaymentMethodDetailsOfpiContent": {
          "allOf": [],
          "description": "Information about the payer of a PSE payment.",
          "generatedName": "ChargePaymentMethodDetailsOfpiContent",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier for the payer’s institution.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiary_bank_account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID used to identify the beneficiary's bank account.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ChargePaymentMethodDetailsPse": {
          "allOf": [],
          "description": "Details about the payment method.",
          "generatedName": "ChargePaymentMethodDetailsPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "pse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ChargePaymentMethodDetailsPsePse",
                  "nameOverride": undefined,
                  "schema": "ChargePaymentMethodDetailsPseContent",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ChargePaymentMethodDetailsPseContent": {
          "allOf": [],
          "description": "Information about the payer of a PSE payment.",
          "generatedName": "ChargePaymentMethodDetailsPseContent",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier for the payer’s institution.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_bank_account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID used to identify the customer’s bank account.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CreateBankAccountOfpi": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateBankAccountOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": "Belvo's unique ID for the institution that the bank account is created in.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "holder",
              "schema": {
                "description": "Information regarding the individual bank account holder.",
                "file": undefined,
                "generatedName": "CreateBankAccountOfpiHolder",
                "nameOverride": undefined,
                "schema": "BankAccountHolderRequestOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "details",
              "schema": {
                "oneOf": {
                  "description": "Information regarding the bank account.",
                  "generatedName": "CreateBankAccountOfpiDetails",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "CreateBankAccountOfpiDetailsCreateBankAccountOfpiDetails",
                      "nameOverride": undefined,
                      "schema": "BankAccountDetailsOfpi",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "CreateBankAccountOfpiDetailsCreateBankAccountOfpiDetails",
                      "nameOverride": undefined,
                      "schema": "BankAccountDetailsOfpiPix",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
          ],
          "type": "object",
        },
        "CreateBankAccountPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateBankAccountPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "holder",
              "schema": {
                "description": "Information regarding the business bank account holder.",
                "file": undefined,
                "generatedName": "CreateBankAccountPseHolder",
                "nameOverride": undefined,
                "schema": "HolderBusinessPse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "providers",
              "schema": {
                "description": "Information about the payment service provider, required in order to establish a connection and process requests. For PSE, the value must be \`payments_way\`.",
                "file": undefined,
                "generatedName": "CreateBankAccountPseProviders",
                "nameOverride": undefined,
                "schema": "ProvidersPse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "number",
              "schema": {
                "description": "The bank account number of the payment beneficiary.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment intent.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CreateCustomerOfpi": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateCustomerOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "customer_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateCustomerOfpiCustomerType",
                "nameOverride": undefined,
                "schema": "EnumCustomerType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The full name of the customer you want to create.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateCustomerOfpiCountry",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCountry",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": "The customer's email address.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier",
              "schema": {
                "description": "The document number of the customer's ID.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateCustomerOfpiIdentifierType",
                "nameOverride": undefined,
                "schema": "EnumCustomerIdentifierTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "address",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer's physical address.
",
                  "type": "nullable",
                  "value": {
                    "description": "The customer's physical address.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "phone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer's phone number.
",
                  "type": "nullable",
                  "value": {
                    "description": "The customer's phone number.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CreateCustomerPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateCustomerPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "customer_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateCustomerPseCustomerType",
                "nameOverride": undefined,
                "schema": "EnumCustomerType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The full name of the customer you want to create.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateCustomerPseCountry",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCountry",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": "The customer's email address.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier",
              "schema": {
                "description": "The document number of the customer's ID.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateCustomerPseIdentifierType",
                "nameOverride": undefined,
                "schema": "EnumCustomerIdentifierTypePse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "address",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer's physical address.
",
                  "type": "nullable",
                  "value": {
                    "description": "The customer's physical address.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "phone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer's phone number.
",
                  "type": "nullable",
                  "value": {
                    "description": "The customer's phone number.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CreatePaymentIntentPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreatePaymentIntentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "oneOf": {
                  "description": "Amount to be paid by your customer. For PSE, you can only send whole numbers. For example: \`350000\`.

**Note:** You can send through this value either as a string or an integer. Regardless of the type you choose to send the \`amount\` as, Belvo returns a string with two decimal points, separated by a period ( \`.\`). For example, \`350000.00\`.
",
                  "generatedName": "CreatePaymentIntentPseAmount",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    {
                      "description": undefined,
                      "schema": {
                        "type": "int",
                      },
                      "type": "primitive",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": "Belvo's unique ID to reference the customer.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the payment.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowed_payment_method_types",
              "schema": {
                "description": "A list of payment method types allowed in this payment intent. For PSE, this value must be set to \`pse\`.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePaymentIntentPseAllowedPaymentMethodTypesItem",
                  "nameOverride": undefined,
                  "schema": "EnumPaymentLinkAllowedPaymentMethod",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_method_details",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePaymentIntentPsePaymentMethodDetails",
                "nameOverride": undefined,
                "schema": "PaymentIntentsPaymentMethodDetailsPse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "provider",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePaymentIntentPseProvider",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinkProvider",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number for the payment intent.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CreatePaymentLinkOfpi": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreatePaymentLinkOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "oneOf": {
                  "description": "Amount to be paid by your customer. For OFPI, you can send through numbers with up to two decimal points, separated by a \`.\` period. For example: \`1234.12\`

**Note:** You can send through this value either as a string or an float. Regardless of the type you choose to send the \`amount\` as, Belvo returns a string with two decimal points, separated by a period ( \`.\`). For example, \`1234.12\`.
",
                  "generatedName": "CreatePaymentLinkOfpiAmount",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    {
                      "description": undefined,
                      "schema": {
                        "type": "float",
                      },
                      "type": "primitive",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": "Belvo's unique ID to reference the customer.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the payment.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowed_payment_method_types",
              "schema": {
                "description": "A list of payment method types allowed in this payment intent. For OFPI, this value must be set to \`open_finance\`.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePaymentLinkOfpiAllowedPaymentMethodTypesItem",
                  "nameOverride": undefined,
                  "schema": "EnumPaymentLinkAllowedPaymentMethod",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "provider",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePaymentLinkOfpiProvider",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinkProvider",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_method_details",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePaymentLinkOfpiPaymentMethodDetails",
                "nameOverride": undefined,
                "schema": "PaymentMethodDetailsOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "callback_urls",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePaymentLinkOfpiCallbackUrls",
                  "nameOverride": undefined,
                  "schema": "PaymentLinkCallbackUrls",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The payment link expiration time. It allows the following formats to be sent through:

  - whole number + \`m\` for x amount of minutes. For example: \`15m\` for 15 minutes.
  - whole number + \`h\` for x amount of hours. For example: \`12h\` for 12 hours.
  - whole number + \`d\` for x amount of days. For example: \`30d\` for 30 days.

  ℹ️ The minimum expiration time allowed for a payment link is \`1m\` (1 minute) and the maximum is \`90d\` (90 days).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CreatePaymentLinkPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreatePaymentLinkPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "oneOf": {
                  "description": "Amount to be paid by your customer. For PSE, you can only send whole numbers. For example: \`350000\`.

**Note:** You can send this value either as a string or an integer. Regardless of the type you choose to send the \`amount\` as, Belvo returns a string with two decimal points, separated by a period ( \`.\`). For example, \`350000.00\`.
",
                  "generatedName": "CreatePaymentLinkPseAmount",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    {
                      "description": undefined,
                      "schema": {
                        "type": "int",
                      },
                      "type": "primitive",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": "Belvo's unique ID to reference the customer.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the payment.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowed_payment_method_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A list of payment method types allowed in this payment intent. For PSE, this value must be set to \`pse\`.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreatePaymentLinkPseAllowedPaymentMethodTypesItem",
                    "nameOverride": undefined,
                    "schema": "EnumPaymentLinkAllowedPaymentMethod",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "provider",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePaymentLinkPseProvider",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinkProvider",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_method_details",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePaymentLinkPsePaymentMethodDetails",
                "nameOverride": undefined,
                "schema": "PaymentMethodDetailsPse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "callback_urls",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePaymentLinkPseCallbackUrls",
                  "nameOverride": undefined,
                  "schema": "PaymentLinkCallbackUrls",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The payment link expiration time. It allows the following formats to be sent through:

  - whole number + \`m\` for x amount of minutes. For example: \`15m\` for 15 minutes.
  - whole number + \`h\` for x amount of hours. For example: \`12h\` for 12 hours.
  - whole number + \`d\` for x amount of days. For example: \`30d\` for 30 days.

  ℹ️ The minimum expiration time allowed for a payment link is \`1m\` (1 minute) and the maximum is \`90d\` (90 days).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CustomerOfpi": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CustomerOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current customer.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the customer.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "customer_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CustomerOfpiCustomerType",
                "nameOverride": undefined,
                "schema": "EnumCustomerType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The full name of the customer.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CustomerOfpiCountry",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCountry",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": "The customer's email address.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier",
              "schema": {
                "description": "The document number of the customer's ID.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CustomerOfpiIdentifierType",
                "nameOverride": undefined,
                "schema": "EnumCustomerIdentifierTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "address",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customers physical address.
",
                  "type": "nullable",
                  "value": {
                    "description": "The customers physical address.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "phone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer's phone number.
",
                  "type": "nullable",
                  "value": {
                    "description": "The customer's phone number.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CustomerPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CustomerPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of customer objects.",
                  "type": "array",
                  "value": {
                    "oneOf": {
                      "description": undefined,
                      "generatedName": "CustomerPaginatedResponseResultsItem",
                      "nameOverride": undefined,
                      "schemas": [
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "CustomerPaginatedResponseResultsItemCustomerPaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "CustomerOfpi",
                          "type": "reference",
                        },
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "CustomerPaginatedResponseResultsItemCustomerPaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "CustomerPse",
                          "type": "reference",
                        },
                      ],
                      "type": "undisciminated",
                    },
                    "type": "oneOf",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CustomerPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CustomerPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current customer.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the customer.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "customer_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CustomerPseCustomerType",
                "nameOverride": undefined,
                "schema": "EnumCustomerType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The full name of the customer.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CustomerPseCountry",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCountry",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": "The customer's email address.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier",
              "schema": {
                "description": "The document number of the customer's ID.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CustomerPseIdentifierType",
                "nameOverride": undefined,
                "schema": "EnumCustomerIdentifierTypePse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "address",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customers physical address.


**Note:** Apart from the first two and last two characters, all the rest of the characters are masked.
",
                  "type": "nullable",
                  "value": {
                    "description": "The customers physical address.


**Note:** Apart from the first two and last two characters, all the rest of the characters are masked.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "phone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer's phone number.


**Note:** Apart from the first two and last two characters, all the rest of the characters are masked.
",
                  "type": "nullable",
                  "value": {
                    "description": "The customer's phone number.


**Note:** Apart from the first two and last two characters, all the rest of the characters are masked.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayConfirmationRequiredContentPse": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "DisplayConfirmationRequiredContentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DisplayConfirmationRequiredContentPsePayerInstitution",
                  "nameOverride": undefined,
                  "schema": "paymentInstitution",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayConfirmationRequiredOfpi": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "DisplayConfirmationRequiredOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "beneficiary_bank_account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DisplayConfirmationRequiredOfpiBeneficiaryBankAccount",
                  "nameOverride": undefined,
                  "schema": "BeneficiaryBankAccountOfpi",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the payer.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_identifier",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The payer's ID.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DisplayConfirmationRequiredOfpiPayerInstitution",
                  "nameOverride": undefined,
                  "schema": "paymentInstitution",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayCredentialsRequiredContentPse": {
          "allOf": [],
          "description": "Object containing form fields for the required credentials (for example, \`username\` or \`password\`) in this step.",
          "generatedName": "DisplayCredentialsRequiredContentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DisplayCredentialsRequiredContentPsePayerInstitution",
                  "nameOverride": undefined,
                  "schema": "paymentInstitution",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayCustomerBankAccountsContentPse": {
          "allOf": [],
          "description": "Object detailing what payment method information you need to display.",
          "generatedName": "DisplayCustomerBankAccountsContentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "customer_bank_accounts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of customer bank account objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DisplayCustomerBankAccountsContentPseCustomerBankAccountsItem",
                    "nameOverride": undefined,
                    "schema": "PaymentMethodInfoCustomerBankAccountsPse",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiary_bank_account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DisplayCustomerBankAccountsContentPseBeneficiaryBankAccount",
                  "nameOverride": undefined,
                  "schema": "BeneficiaryBankAccountPse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayPaymentFailed": {
          "allOf": [],
          "description": "Details regarding the payer institution.",
          "generatedName": "DisplayPaymentFailed",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DisplayPaymentFailedPayerInstitution",
                  "nameOverride": undefined,
                  "schema": "paymentInstitution",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayPaymentMethodInformationContentOfpi": {
          "allOf": [],
          "description": "Object detailing what payment method information you need to display.",
          "generatedName": "DisplayPaymentMethodInformationContentOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "institutions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An array of institution objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DisplayPaymentMethodInformationContentOfpiInstitutionsItem",
                    "nameOverride": undefined,
                    "schema": "paymentInstitution",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayPaymentMethodInformationContentPse": {
          "allOf": [],
          "description": "Object detailing what payment method information you need to display.",
          "generatedName": "DisplayPaymentMethodInformationContentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "customer_bank_accounts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of bank account objects.

**Note**: If there are no customer accounts saved in the Belvo database, we return an empty array.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DisplayPaymentMethodInformationContentPseCustomerBankAccountsItem",
                    "nameOverride": undefined,
                    "schema": "PaymentMethodInfoCustomerBankAccountsPse",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "institutions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An array of institution objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DisplayPaymentMethodInformationContentPseInstitutionsItem",
                    "nameOverride": undefined,
                    "schema": "paymentInstitution",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayPaymentProcessing": {
          "allOf": [],
          "description": "Details regarding the payer institution.",
          "generatedName": "DisplayPaymentProcessing",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DisplayPaymentProcessingPayerInstitution",
                  "nameOverride": undefined,
                  "schema": "paymentInstitution",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayPaymentSucceeded": {
          "allOf": [],
          "description": "Details regarding the payer institution.",
          "generatedName": "DisplayPaymentSucceeded",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DisplayPaymentSucceededPayerInstitution",
                  "nameOverride": undefined,
                  "schema": "paymentInstitution",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DisplayTokenRequiredContentPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DisplayTokenRequiredContentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DisplayTokenRequiredContentPsePayerInstitution",
                  "nameOverride": undefined,
                  "schema": "paymentInstitution",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DocumentIdBusiness": {
          "allOf": [],
          "description": "Object containing information about the ID document of the tax payer.",
          "generatedName": "DocumentIdBusiness",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "document_type",
              "schema": {
                "description": "The type of ID document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document_number",
              "schema": {
                "description": "The number of the ID document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DocumentIdIndividual": {
          "allOf": [],
          "description": "Object containing information about the ID document of the tax payer.",
          "generatedName": "DocumentIdIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "document_type",
              "schema": {
                "description": "The type of ID document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document_number",
              "schema": {
                "description": "The number of the ID document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DocumentInformationBusiness": {
          "allOf": [],
          "description": "Object containing detailed information about the fiscal document.",
          "generatedName": "DocumentInformationBusiness",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the tax document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": "The type of tax declaration form. For DIAN, this will be either \`110\` or \`210\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "form_number",
              "schema": {
                "description": "The institution-provided identifier for the tax declaration.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "year",
              "schema": {
                "description": "The year of this tax declaration.
",
                "type": "nullable",
                "value": {
                  "description": "The year of this tax declaration.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "DocumentInformationIndividual": {
          "allOf": [],
          "description": "Object containing detailed information about the fiscal document.",
          "generatedName": "DocumentInformationIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the tax document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": "The type of tax declaration form. For DIAN, this will be either \`110\` or \`210\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "form_number",
              "schema": {
                "description": "Institution-provided identifier for the tax declaration.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "year",
              "schema": {
                "description": "The year of this tax declaration.
",
                "type": "nullable",
                "value": {
                  "description": "The year of this tax declaration.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecord": {
          "allOf": [],
          "description": "Emploment record response payload",
          "generatedName": "EmploymentRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique identifier created by Belvo for the current IMSS statement.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique identifier created by Belvo for the current user.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was initially created in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "report_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date when the employment record report was generated, in \`YYYY-MM-DD\` format.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "internal_identification",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique ID for user according to the institution. For IMSS Mexico, this is the CURP.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "personal_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EmploymentRecordPersonalData",
                  "nameOverride": undefined,
                  "schema": "EmploymentRecordPersonalData",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "social_security_summary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EmploymentRecordSocialSecuritySummary",
                  "nameOverride": undefined,
                  "schema": "EmploymentRecordSocialSecuritySummary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "employment_records",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Details regarding the individual's employment history.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "EmploymentRecordEmploymentRecordsItem",
                    "nameOverride": undefined,
                    "schema": "EmploymentRecordDetail",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "files",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Additional PDF binary files relating to the individual's employment.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "EmploymentRecordFilesItem",
                    "nameOverride": undefined,
                    "schema": "EmploymentRecordFile",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecordDetail": {
          "allOf": [],
          "description": "Details regarding the individual's employment history.",
          "generatedName": "EmploymentRecordDetail",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "employer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The official name of the employer.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "employer_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The official ID of the employer, according to the country.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "start_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Date when employment started, in \`YYYY-MM-DD\` format.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "end_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Date when employment finished, in \`YYYY-MM-DD\` format.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "weeks_employed",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Number of weeks that the individual was employed.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "In what geographical state the individual was employed, according to the country.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "most_recent_base_salary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The most recent base salary the individual earned.

For Mexico, this is the *daily* rate that the individual earned, including the perks that the individual is entitled to throughout the year.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "monthly_salary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The monthly salary of the individual, including any additional perks.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The three-letter currency code in which the salary is paid.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "employment_status_updates",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Details regarding any employment changes of the individual.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "EmploymentRecordDetailEmploymentStatusUpdatesItem",
                    "nameOverride": undefined,
                    "schema": "EmploymentRecordEmploymentStatusUpdates",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecordDocumentId": {
          "allOf": [],
          "description": "Details regarding the individual's ID documents.",
          "generatedName": "EmploymentRecordDocumentId",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "document_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EmploymentRecordDocumentIdDocumentType",
                  "nameOverride": undefined,
                  "schema": "EnumEmploymentRecordDocumentType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "document_number",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID document's number (as a string).
",
                  "type": "nullable",
                  "value": {
                    "description": "The ID document's number (as a string).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecordEmploymentStatusUpdates": {
          "allOf": [],
          "description": "Details regarding any employment changes of the individual.",
          "generatedName": "EmploymentRecordEmploymentStatusUpdates",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "event",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EmploymentRecordEmploymentStatusUpdatesEvent",
                  "nameOverride": undefined,
                  "schema": "EnumEmploymentRecordStatusUpdateEvents",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "base_salary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The base salary of the individual, current as of the \`update_date\`.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "update_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date that the employment event occured, in \`YYYY-MM-DD\` format.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecordEntitlement": {
          "allOf": [],
          "description": "Details regarding the benefits the individual is entitled to.",
          "generatedName": "EmploymentRecordEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "entitled_to_health_insurance",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicated whether or not the individual is entitled to health insurance.
",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitled_to_company_benefits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not the individual is entitled to company benefits.
",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "valid_until",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Date until when the individual is covered by health insurance and/or company benefits. If \`null\` the employee is currently working and no end date is required.
",
                  "type": "nullable",
                  "value": {
                    "description": "Date until when the individual is covered by health insurance and/or company benefits. If \`null\` the employee is currently working and no end date is required.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EmploymentRecordEntitlementStatus",
                  "nameOverride": undefined,
                  "schema": "EnumEmploymentRecordStatus",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecordFile": {
          "allOf": [],
          "description": "Additional PDF binary files relating to the individual's employment.",
          "generatedName": "EmploymentRecordFile",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The title of the document.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The PDF binary of the file (as a string).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecordPersonalData": {
          "allOf": [],
          "description": "Details regarding the personal information of the individual.",
          "generatedName": "EmploymentRecordPersonalData",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "official_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The legal name of the individual
",
                  "type": "nullable",
                  "value": {
                    "description": "The legal name of the individual
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "first_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The first name of the individual.
",
                  "type": "nullable",
                  "value": {
                    "description": "The first name of the individual.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "last_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The last name of the individual.
",
                  "type": "nullable",
                  "value": {
                    "description": "The last name of the individual.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The email address of the individual (as provided in the initial POST request).
",
                  "type": "nullable",
                  "value": {
                    "description": "The email address of the individual (as provided in the initial POST request).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "birth_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date of the birth of the individual, in \`YYYY-MM-DD\` format.
",
                  "type": "nullable",
                  "value": {
                    "description": "The date of the birth of the individual, in \`YYYY-MM-DD\` format.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlements",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EmploymentRecordPersonalDataEntitlements",
                  "nameOverride": undefined,
                  "schema": "EmploymentRecordEntitlement",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "document_ids",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Details regarding the individual's ID documents.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "EmploymentRecordPersonalDataDocumentIdsItem",
                    "nameOverride": undefined,
                    "schema": "EmploymentRecordDocumentId",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecordRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EmploymentRecordRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` you want to retrieve employment records for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "attach_pdf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "When set to \`true\`, you will receive the PDF in binary format in the response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecordSocialSecuritySummary": {
          "allOf": [],
          "description": "Details regarding the individual's social security contributions.",
          "generatedName": "EmploymentRecordSocialSecuritySummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "weeks_redeemed",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Number of weeks the individual needed to take out of their pension.
",
                  "type": "nullable",
                  "value": {
                    "description": "Number of weeks the individual needed to take out of their pension.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "weeks_reinstated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Number of weeks the individual has paid back into their pension (*AFORE*), after having redeemed them previously.
",
                  "type": "nullable",
                  "value": {
                    "description": "Number of weeks the individual has paid back into their pension (*AFORE*), after having redeemed them previously.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "weeks_contributed",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Number of weeks the individual has contributed to their social security, based on the number of weeks the individual has worked according to IMSS.
",
                  "type": "nullable",
                  "value": {
                    "description": "Number of weeks the individual has contributed to their social security, based on the number of weeks the individual has worked according to IMSS.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "EmploymentRecordsPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EmploymentRecordsPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of employment record objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "EmploymentRecordsPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "EmploymentRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "EnumAccountCategory": {
          "description": "The type of account.
We return one of the following enum values:
  - \`CHECKING_ACCOUNT\`
  - \`CREDIT_CARD\`
  - \`INVESTMENT_ACCOUNT\`
  - \`LOAN_ACCOUNT\`
  - \`PENSION_FUND_ACCOUNT\`
  - \`RECEIVABLES_ACCOUNT\`
  - \`SAVINGS_ACCOUNT\`
  - \`UNCATEGORIZED\`
  - \`null\`
",
          "type": "nullable",
          "value": {
            "description": "The type of account.
We return one of the following enum values:
  - \`CHECKING_ACCOUNT\`
  - \`CREDIT_CARD\`
  - \`INVESTMENT_ACCOUNT\`
  - \`LOAN_ACCOUNT\`
  - \`PENSION_FUND_ACCOUNT\`
  - \`RECEIVABLES_ACCOUNT\`
  - \`SAVINGS_ACCOUNT\`
  - \`UNCATEGORIZED\`
  - \`null\`
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumBankAccountHolderTypeOfpi": {
          "description": "The type of bank account. Can be either \`INDIVIDUAL\` or \`BUSINESS\`.",
          "generatedName": "EnumBankAccountHolderTypeOfpi",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "INDIVIDUAL",
              "nameOverride": undefined,
              "value": "INDIVIDUAL",
            },
            {
              "generatedName": "BUSINESS",
              "nameOverride": undefined,
              "value": "BUSINESS",
            },
          ],
        },
        "EnumBankAccountHolderTypePse": {
          "description": "The type of bank account to create in Belvo. For business bank accounts, this field must the set to \`BUSINESS\`.",
          "generatedName": "EnumBankAccountHolderTypePse",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "BUSINESS",
              "nameOverride": undefined,
              "value": "BUSINESS",
            },
          ],
        },
        "EnumBankAccountPixAccountTypeOfpi": {
          "description": "The type of bank account. Can be either:

  - \`CHECKINGS\`
  - \`SAVINGS\`
  - \`SALARY\`",
          "generatedName": "EnumBankAccountPixAccountTypeOfpi",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "CHECKINGS",
              "nameOverride": undefined,
              "value": "CHECKINGS",
            },
            {
              "generatedName": "SAVINGS",
              "nameOverride": undefined,
              "value": "SAVINGS",
            },
            {
              "generatedName": "SALARY",
              "nameOverride": undefined,
              "value": "SALARY",
            },
          ],
        },
        "EnumCategorizationAccountCategory": {
          "description": "The type of account.
Can be either:
  - \`CHECKING_ACCOUNT\`
  - \`CREDIT_CARD\`
  - \`LOAN_ACCOUNT\`
  - \`SAVINGS_ACCOUNT\`",
          "generatedName": "EnumCategorizationAccountCategory",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "CHECKING_ACCOUNT",
              "nameOverride": undefined,
              "value": "CHECKING_ACCOUNT",
            },
            {
              "generatedName": "CREDIT_CARD",
              "nameOverride": undefined,
              "value": "CREDIT_CARD",
            },
            {
              "generatedName": "LOAN_ACCOUNT",
              "nameOverride": undefined,
              "value": "LOAN_ACCOUNT",
            },
            {
              "generatedName": "SAVINGS_ACCOUNT",
              "nameOverride": undefined,
              "value": "SAVINGS_ACCOUNT",
            },
          ],
        },
        "EnumCategorizationAccountHolderType": {
          "description": "The type of account holder.
Can be either:

  - \`INDIVIDUAL\`
  - \`BUSINESS\`",
          "generatedName": "EnumCategorizationAccountHolderType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "INDIVIDUAL",
              "nameOverride": undefined,
              "value": "INDIVIDUAL",
            },
            {
              "generatedName": "BUSINESS",
              "nameOverride": undefined,
              "value": "BUSINESS",
            },
          ],
        },
        "EnumCategorizationTransactionCategory": {
          "description": "The name of the category to which this transaction belongs. For more info about this feature, check our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions) article. 

We return one of the following enum values:

  - \`Bills & Utilities\`
  - \`Credits & Loans\`
  - \`Deposits\`
  - \`Fees & Charges\`
  - \`Food & Groceries\`
  - \`Home & Life\`
  - \`Income & Payments\`
  - \`Insurance\`
  - \`Investments & Savings\`
  - \`Online Platforms & Leisure\`
  - \`Personal Shopping\`
  - \`Taxes\`
  - \`Transfers\`
  - \`Transport & Travel\`
  - \`Unknown\`
  - \`Withdrawal & ATM\`
  - \`null\`
",
          "type": "nullable",
          "value": {
            "description": "The name of the category to which this transaction belongs. For more info about this feature, check our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions) article. 

We return one of the following enum values:

  - \`Bills & Utilities\`
  - \`Credits & Loans\`
  - \`Deposits\`
  - \`Fees & Charges\`
  - \`Food & Groceries\`
  - \`Home & Life\`
  - \`Income & Payments\`
  - \`Insurance\`
  - \`Investments & Savings\`
  - \`Online Platforms & Leisure\`
  - \`Personal Shopping\`
  - \`Taxes\`
  - \`Transfers\`
  - \`Transport & Travel\`
  - \`Unknown\`
  - \`Withdrawal & ATM\`
  - \`null\`
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumCategorizationTransactionSubcategory": {
          "description": "The transactions subcategory. For more info about this feature, check our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions) article. 

We return one of the following enum values:

  - \`Electricity & Energy\`
  - \`Rent\`
  - \`Telecommunications\`
  - \`Water\`
  - \`Auto\`
  - \`Credit Card\`
  - \`Instalment\`
  - \`Interest & Charges\`
  - \`Mortgage\`
  - \`Pay Advance\`
  - \`Personal\`
  - \`Adjustments\`
  - \`Bank Fees\`
  - \`Chargeback\`
  - \`Refund\`
  - \`Blocked Balances\`
  - \`Alimony\`
  - \`Alcohol & Tobacco\`
  - \`Bakery & Coffee\`
  - \`Bars & Nightclubs\`
  - \`Convenience Store\`
  - \`Delivery\`
  - \`Groceries\`
  - \`Restaurants\`
  - \`Education\`
  - \`Gyms & Fitness\`
  - \`Hair & Beauty\`
  - \`Health\`
  - \`Home Decor & Appliances\`
  - \`Laundry & Dry Cleaning\`
  - \`Pharmacies\`
  - \`Professional Services\`
  - \`Veterinary Services\`
  - \`Freelance\`
  - \`Interest\`
  - \`Retirement\`
  - \`Salary\`
  - \`Government\`
  - \`Home Insurance\`
  - \`Auto Insurance\`
  - \`Health & Life Insurance\`
  - \`Savings\`
  - \`Fixed income\`
  - \`Equity\`
  - \`Investment Funds\`
  - \`Derivatives\`
  - \`Cryptocurrencies\`
  - \`Apps, Software and Cloud Services\`
  - \`Events, Parks and Museums\`
  - \`Gambling\`
  - \`Gaming\`
  - \`Lottery\`
  - \`Movie & Audio\`
  - \`Books & News\`
  - \`Clothing & Accessories\`
  - \`Department Store\`
  - \`Electronics\`
  - \`E-commerce\`
  - \`Gifts\`
  - \`Office Supplies\`
  - \`Pet Supplies\`
  - \`Auto Tax & Fees\`
  - \`Donation\`
  - \`Government Fees\`
  - \`Income Tax\`
  - \`Real Estate Tax & Fees\`
  - \`Tax Return\`
  - \`Accommodation\`
  - \`Auto Expenses\`
  - \`Auto Rental\`
  - \`Flights\`
  - \`Gas\`
  - \`Mileage Programs\`
  - \`Parking & Tolls\`
  - \`Public Transit\`
  - \`Taxis & Rideshares\`
  - \`Other\`
  - \`null\`",
          "type": "nullable",
          "value": {
            "description": "The transactions subcategory. For more info about this feature, check our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions) article. 

We return one of the following enum values:

  - \`Electricity & Energy\`
  - \`Rent\`
  - \`Telecommunications\`
  - \`Water\`
  - \`Auto\`
  - \`Credit Card\`
  - \`Instalment\`
  - \`Interest & Charges\`
  - \`Mortgage\`
  - \`Pay Advance\`
  - \`Personal\`
  - \`Adjustments\`
  - \`Bank Fees\`
  - \`Chargeback\`
  - \`Refund\`
  - \`Blocked Balances\`
  - \`Alimony\`
  - \`Alcohol & Tobacco\`
  - \`Bakery & Coffee\`
  - \`Bars & Nightclubs\`
  - \`Convenience Store\`
  - \`Delivery\`
  - \`Groceries\`
  - \`Restaurants\`
  - \`Education\`
  - \`Gyms & Fitness\`
  - \`Hair & Beauty\`
  - \`Health\`
  - \`Home Decor & Appliances\`
  - \`Laundry & Dry Cleaning\`
  - \`Pharmacies\`
  - \`Professional Services\`
  - \`Veterinary Services\`
  - \`Freelance\`
  - \`Interest\`
  - \`Retirement\`
  - \`Salary\`
  - \`Government\`
  - \`Home Insurance\`
  - \`Auto Insurance\`
  - \`Health & Life Insurance\`
  - \`Savings\`
  - \`Fixed income\`
  - \`Equity\`
  - \`Investment Funds\`
  - \`Derivatives\`
  - \`Cryptocurrencies\`
  - \`Apps, Software and Cloud Services\`
  - \`Events, Parks and Museums\`
  - \`Gambling\`
  - \`Gaming\`
  - \`Lottery\`
  - \`Movie & Audio\`
  - \`Books & News\`
  - \`Clothing & Accessories\`
  - \`Department Store\`
  - \`Electronics\`
  - \`E-commerce\`
  - \`Gifts\`
  - \`Office Supplies\`
  - \`Pet Supplies\`
  - \`Auto Tax & Fees\`
  - \`Donation\`
  - \`Government Fees\`
  - \`Income Tax\`
  - \`Real Estate Tax & Fees\`
  - \`Tax Return\`
  - \`Accommodation\`
  - \`Auto Expenses\`
  - \`Auto Rental\`
  - \`Flights\`
  - \`Gas\`
  - \`Mileage Programs\`
  - \`Parking & Tolls\`
  - \`Public Transit\`
  - \`Taxis & Rideshares\`
  - \`Other\`
  - \`null\`",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumCategorizationTransactionType": {
          "description": "The direction of the transaction.
Can be either:

  - \`INFLOW\` indicates a received transaction.
  - \`OUTFLOW\` indicates a sent transaction.",
          "generatedName": "EnumCategorizationTransactionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "INFLOW",
              "nameOverride": undefined,
              "value": "INFLOW",
            },
            {
              "generatedName": "OUTFLOW",
              "nameOverride": undefined,
              "value": "OUTFLOW",
            },
          ],
        },
        "EnumCustomerIdentifierTypeOfpi": {
          "description": "The customer's ID document type.

- 🇧🇷 Brazil options: \`CPF\` or \`CNPJ\`.
",
          "generatedName": "EnumCustomerIdentifierTypeOfpi",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "CPF",
              "nameOverride": undefined,
              "value": "CPF",
            },
            {
              "generatedName": "CNPJ",
              "nameOverride": undefined,
              "value": "CNPJ",
            },
          ],
        },
        "EnumCustomerIdentifierTypePse": {
          "description": "The customer's ID document type.

- 🇨🇴 Colombia options: \`CC\`, \`PP\`, \`CE\`, \`TI\`, or \`NIT\`.
",
          "generatedName": "EnumCustomerIdentifierTypePse",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "CC",
              "nameOverride": undefined,
              "value": "CC",
            },
            {
              "generatedName": "PP",
              "nameOverride": undefined,
              "value": "PP",
            },
            {
              "generatedName": "CE",
              "nameOverride": undefined,
              "value": "CE",
            },
            {
              "generatedName": "TI",
              "nameOverride": undefined,
              "value": "TI",
            },
            {
              "generatedName": "NIT",
              "nameOverride": undefined,
              "value": "NIT",
            },
          ],
        },
        "EnumCustomerType": {
          "description": "The type of customer. Can be either:

  - \`INDIVIDUAL\`
  - \`BUSINESS\`
    

**Notes:** For 🇨🇴 Colombia's PSE, you can only create customers of type \`INDIVIDUAL\`.
",
          "generatedName": "EnumCustomerType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "INDIVIDUAL",
              "nameOverride": undefined,
              "value": "INDIVIDUAL",
            },
            {
              "generatedName": "BUSINESS",
              "nameOverride": undefined,
              "value": "BUSINESS",
            },
          ],
        },
        "EnumEmploymentRecordDocumentType": {
          "description": "The type of document related to the individual. We return one of the following values:

  - \`NSS\`
  - \`CURP\`
",
          "type": "nullable",
          "value": {
            "description": "The type of document related to the individual. We return one of the following values:

  - \`NSS\`
  - \`CURP\`
",
            "generatedName": "EnumEmploymentRecordDocumentType",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "NSS",
                "nameOverride": undefined,
                "value": "NSS",
              },
              {
                "generatedName": "CURP",
                "nameOverride": undefined,
                "value": "CURP",
              },
            ],
          },
        },
        "EnumEmploymentRecordStatus": {
          "description": "Indicates whether or not the individual is currently \`EMPLOYED\` or \`UNEMPLOYED\`.
",
          "type": "nullable",
          "value": {
            "description": "Indicates whether or not the individual is currently \`EMPLOYED\` or \`UNEMPLOYED\`.
",
            "generatedName": "EnumEmploymentRecordStatus",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "EMPLOYED",
                "nameOverride": undefined,
                "value": "EMPLOYED",
              },
              {
                "generatedName": "UNEMPLOYED",
                "nameOverride": undefined,
                "value": "UNEMPLOYED",
              },
            ],
          },
        },
        "EnumEmploymentRecordStatusUpdateEvents": {
          "description": "The event that caused the change in employment status or salary. We return one of the following values:
  
  - \`DISMISSED_RESIGNED\`
  - \`SALARY_MODIFICATION\`
  - \`HIRED\`
  - \`VOLUNTARY_CONTRIBUTION\`
  - \`ABSENCE\`
  - \`SICK_LEAVE\`
",
          "generatedName": "EnumEmploymentRecordStatusUpdateEvents",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "DISMISSED_RESIGNED",
              "nameOverride": undefined,
              "value": "DISMISSED_RESIGNED",
            },
            {
              "generatedName": "SALARY_MODIFICATION",
              "nameOverride": undefined,
              "value": "SALARY_MODIFICATION",
            },
            {
              "generatedName": "HIRED",
              "nameOverride": undefined,
              "value": "HIRED",
            },
            {
              "generatedName": "VOLUNTARY_CONTRIBUTION",
              "nameOverride": undefined,
              "value": "VOLUNTARY_CONTRIBUTION",
            },
            {
              "generatedName": "ABSENCE",
              "nameOverride": undefined,
              "value": "ABSENCE",
            },
            {
              "generatedName": "SICK_LEAVE",
              "nameOverride": undefined,
              "value": "SICK_LEAVE",
            },
          ],
        },
        "EnumIncomeMinimumConfidenceLevelRequest": {
          "description": "The minimum confidence level of the incomes you want to get information for.

You can send through one of the following values:

  - \`HIGH\`
  - \`MEDIUM\`
  - \`LOW\`
",
          "generatedName": "EnumIncomeMinimumConfidenceLevelRequest",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "HIGH",
              "nameOverride": undefined,
              "value": "HIGH",
            },
            {
              "generatedName": "MEDIUM",
              "nameOverride": undefined,
              "value": "MEDIUM",
            },
            {
              "generatedName": "LOW",
              "nameOverride": undefined,
              "value": "LOW",
            },
          ],
        },
        "EnumIncomeSourceType": {
          "description": "The type of source we generate income insights from.
We return one of the following enum values:

  - \`BANK\`
",
          "generatedName": "EnumIncomeSourceType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "BANK",
              "nameOverride": undefined,
              "value": "BANK",
            },
          ],
        },
        "EnumIncomeStreamConfidence": {
          "description": "Belvo's level of confidence for future incomes.

We return one of the following enum values:

  - \`HIGH\`
  - \`MEDIUM\`
  - \`LOW\`
",
          "generatedName": "EnumIncomeStreamConfidence",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "HIGH",
              "nameOverride": undefined,
              "value": "HIGH",
            },
            {
              "generatedName": "MEDIUM",
              "nameOverride": undefined,
              "value": "MEDIUM",
            },
            {
              "generatedName": "LOW",
              "nameOverride": undefined,
              "value": "LOW",
            },
          ],
        },
        "EnumIncomeStreamFrequency": {
          "description": "How often the income is received.

We return one of the following enum values:

  - \`MONTHLY\` - For transactions that occur once per month.
  - \`FORTNIGHTLY\` - For transactions that occur once every two weeks.
  - \`WEEKLY\` - For transactions that occur once per week.
  - \`IRREGULAR\` - For transactions that do not occur on a defined frequency pattern.
  - \`SINGLE\` - For transactions that occur only once and do not repeat.
",
          "generatedName": "EnumIncomeStreamFrequency",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "MONTHLY",
              "nameOverride": undefined,
              "value": "MONTHLY",
            },
            {
              "generatedName": "FORTNIGHTLY",
              "nameOverride": undefined,
              "value": "FORTNIGHTLY",
            },
            {
              "generatedName": "WEEKLY",
              "nameOverride": undefined,
              "value": "WEEKLY",
            },
            {
              "generatedName": "IRREGULAR",
              "nameOverride": undefined,
              "value": "IRREGULAR",
            },
            {
              "generatedName": "SINGLE",
              "nameOverride": undefined,
              "value": "SINGLE",
            },
          ],
        },
        "EnumIncomeStreamType": {
          "description": "The type of income used in the calculations.

We return one of the following enum values:

  - \`SALARY\`
  - \`GOVERNMENT\`
  - \`INTEREST\`
  - \`RENT\`
  - \`RETIREMENT\`
  - \`FREELANCE\`
  - \`ALTERNATIVE_INCOME\`
  - \`TRANSFER\`
  - \`DEPOSIT\`
  - \`UNKNOWN\`
",
          "generatedName": "EnumIncomeStreamType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "SALARY",
              "nameOverride": undefined,
              "value": "SALARY",
            },
            {
              "generatedName": "GOVERNMENT",
              "nameOverride": undefined,
              "value": "GOVERNMENT",
            },
            {
              "generatedName": "INTEREST",
              "nameOverride": undefined,
              "value": "INTEREST",
            },
            {
              "generatedName": "RENT",
              "nameOverride": undefined,
              "value": "RENT",
            },
            {
              "generatedName": "RETIREMENT",
              "nameOverride": undefined,
              "value": "RETIREMENT",
            },
            {
              "generatedName": "FREELANCE",
              "nameOverride": undefined,
              "value": "FREELANCE",
            },
            {
              "generatedName": "ALTERNATIVE_INCOME",
              "nameOverride": undefined,
              "value": "ALTERNATIVE_INCOME",
            },
            {
              "generatedName": "TRANSFER",
              "nameOverride": undefined,
              "value": "TRANSFER",
            },
            {
              "generatedName": "DEPOSIT",
              "nameOverride": undefined,
              "value": "DEPOSIT",
            },
            {
              "generatedName": "UNKNOWN",
              "nameOverride": undefined,
              "value": "UNKNOWN",
            },
          ],
        },
        "EnumIncomeVerificationAccountCategory": {
          "description": "The type of account.
Can be either:
  - \`CHECKING_ACCOUNT\`
  - \`SAVINGS_ACCOUNT\`",
          "generatedName": "EnumIncomeVerificationAccountCategory",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "CHECKING_ACCOUNT",
              "nameOverride": undefined,
              "value": "CHECKING_ACCOUNT",
            },
            {
              "generatedName": "SAVINGS_ACCOUNT",
              "nameOverride": undefined,
              "value": "SAVINGS_ACCOUNT",
            },
          ],
        },
        "EnumIncomeVerificationAccountHolderType": {
          "description": "The type of account holder. Can be:

  - \`INDIVIDUAL\`",
          "generatedName": "EnumIncomeVerificationAccountHolderType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "INDIVIDUAL",
              "nameOverride": undefined,
              "value": "INDIVIDUAL",
            },
          ],
        },
        "EnumIncomeVerificationType": {
          "description": "The direction of the transaction:
  
- \`INFLOW\` indicates money coming into the account.
",
          "type": "nullable",
          "value": {
            "description": "The direction of the transaction:
  
- \`INFLOW\` indicates money coming into the account.
",
            "generatedName": "EnumIncomeVerificationType",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "INFLOW",
                "nameOverride": undefined,
                "value": "INFLOW",
              },
            ],
          },
        },
        "EnumInstitutionIntegrationType": {
          "description": "The type of technology used to access the institution. We return one of the following values:

- \`credentials\`: Uses Belvo's scraping technology, combined with user credentials, to perform requests.
- \`openbanking\`: Uses the bank's openbanking API to perform requests.
",
          "generatedName": "EnumInstitutionIntegrationType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "credentials",
              "nameOverride": undefined,
              "value": "credentials",
            },
            {
              "generatedName": "openbanking",
              "nameOverride": undefined,
              "value": "openbanking",
            },
          ],
        },
        "EnumInstitutionStatus": {
          "description": "Indicates whether Belvo's integration with the institution is currently active (\`healthy\`) or undergoing maintenance (\`down\`).
",
          "generatedName": "EnumInstitutionStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "healthy",
              "nameOverride": undefined,
              "value": "healthy",
            },
            {
              "generatedName": "down",
              "nameOverride": undefined,
              "value": "down",
            },
          ],
        },
        "EnumInstitutionType": {
          "description": "The type of institution. We return one of the following values:

  - \`bank\`
  - \`fiscal\`
  - \`employment\`
",
          "generatedName": "EnumInstitutionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "bank",
              "nameOverride": undefined,
              "value": "bank",
            },
            {
              "generatedName": "fiscal",
              "nameOverride": undefined,
              "value": "fiscal",
            },
            {
              "generatedName": "employment",
              "nameOverride": undefined,
              "value": "employment",
            },
          ],
        },
        "EnumInvestmentPortfolioInstrumentType": {
          "description": "The instrument type. For more information about instruments, please see our [Investments DevPortal article](https://developers.belvo.com/docs/investments#instruments).

We return one of the following values:

  - \`BOND\`
  - \`DEPOSIT\`
  - \`ETF\`
  - \`FUND\`
  - \`OTHER\`
  - \`PENSION\`
  - \`STOCK\`
",
          "generatedName": "EnumInvestmentPortfolioInstrumentType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "BOND",
              "nameOverride": undefined,
              "value": "BOND",
            },
            {
              "generatedName": "DEPOSIT",
              "nameOverride": undefined,
              "value": "DEPOSIT",
            },
            {
              "generatedName": "ETF",
              "nameOverride": undefined,
              "value": "ETF",
            },
            {
              "generatedName": "FUND",
              "nameOverride": undefined,
              "value": "FUND",
            },
            {
              "generatedName": "OTHER",
              "nameOverride": undefined,
              "value": "OTHER",
            },
            {
              "generatedName": "PENSION",
              "nameOverride": undefined,
              "value": "PENSION",
            },
            {
              "generatedName": "STOCK",
              "nameOverride": undefined,
              "value": "STOCK",
            },
          ],
        },
        "EnumInvestmentPortfolioType": {
          "description": "The portfolio type.

We return one of the following values:

  - \`FIXED_INCOME\`
  - \`OTHER\`
  - \`PENSION\`
  - \`VARIABLE_INCOME\`
",
          "generatedName": "EnumInvestmentPortfolioType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "FIXED_INCOME",
              "nameOverride": undefined,
              "value": "FIXED_INCOME",
            },
            {
              "generatedName": "OTHER",
              "nameOverride": undefined,
              "value": "OTHER",
            },
            {
              "generatedName": "PENSION",
              "nameOverride": undefined,
              "value": "PENSION",
            },
            {
              "generatedName": "VARIABLE_INCOME",
              "nameOverride": undefined,
              "value": "VARIABLE_INCOME",
            },
          ],
        },
        "EnumInvoiceAllowedIncomeTypesRequest": {
          "description": "The categories of the incomes you want to get information for. 
You can send through one or more of the following values:
  - \`SALARY\`
  - \`GOVERNMENT\`
  - \`INTEREST\`
  - \`RENT\`
  - \`RETIREMENT\`
  - \`FREELANCE\`
  - \`ALTERNATIVE_INCOME\`
  - \`TRANSFER\`
  - \`DEPOSIT\`
  - \`UNKNOWN\`",
          "generatedName": "EnumInvoiceAllowedIncomeTypesRequest",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "SALARY",
              "nameOverride": undefined,
              "value": "SALARY",
            },
            {
              "generatedName": "GOVERNMENT",
              "nameOverride": undefined,
              "value": "GOVERNMENT",
            },
            {
              "generatedName": "INTEREST",
              "nameOverride": undefined,
              "value": "INTEREST",
            },
            {
              "generatedName": "RENT",
              "nameOverride": undefined,
              "value": "RENT",
            },
            {
              "generatedName": "RETIREMENT",
              "nameOverride": undefined,
              "value": "RETIREMENT",
            },
            {
              "generatedName": "FREELANCE",
              "nameOverride": undefined,
              "value": "FREELANCE",
            },
            {
              "generatedName": "ALTERNATIVE_INCOME",
              "nameOverride": undefined,
              "value": "ALTERNATIVE_INCOME",
            },
            {
              "generatedName": "TRANSFER",
              "nameOverride": undefined,
              "value": "TRANSFER",
            },
            {
              "generatedName": "DEPOSIT",
              "nameOverride": undefined,
              "value": "DEPOSIT",
            },
            {
              "generatedName": "UNKNOWN",
              "nameOverride": undefined,
              "value": "UNKNOWN",
            },
          ],
        },
        "EnumInvoiceDianInvoiceType": {
          "description": "The fiscal institution's classification of the invoice.

For Colombia's DIAN, we return one of the following values:

  - \`Factura Electrónica de Venta\`
",
          "type": "nullable",
          "value": {
            "description": "The fiscal institution's classification of the invoice.

For Colombia's DIAN, we return one of the following values:

  - \`Factura Electrónica de Venta\`
",
            "generatedName": "EnumInvoiceDianInvoiceType",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "FacturaElectronicaDeVenta",
                "nameOverride": undefined,
                "value": "Factura Electrónica de Venta",
              },
            ],
          },
        },
        "EnumInvoiceDianPaymentMethod": {
          "description": "The payment method used for this invoice, as defined by the legal entity of the country.

For DIAN Colombia, we return one of the following values:

  - \`Contado\`
  - \`Crédito\`
  - \`null\`
",
          "type": "nullable",
          "value": {
            "description": "The payment method used for this invoice, as defined by the legal entity of the country.

For DIAN Colombia, we return one of the following values:

  - \`Contado\`
  - \`Crédito\`
  - \`null\`
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumInvoiceSatInvoiceType": {
          "description": "The fiscal institution's classification of the invoice.

For Mexico's SAT, we return one of the following values:

  - \`Egreso\`
  - \`Ingreso\`
  - \`Nómina\`
  - \`Pago\`
  - \`Traslado\`
",
          "type": "nullable",
          "value": {
            "description": "The fiscal institution's classification of the invoice.

For Mexico's SAT, we return one of the following values:

  - \`Egreso\`
  - \`Ingreso\`
  - \`Nómina\`
  - \`Pago\`
  - \`Traslado\`
",
            "generatedName": "EnumInvoiceSatInvoiceType",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "Egreso",
                "nameOverride": undefined,
                "value": "Egreso",
              },
              {
                "generatedName": "Ingreso",
                "nameOverride": undefined,
                "value": "Ingreso",
              },
              {
                "generatedName": "Nomina",
                "nameOverride": undefined,
                "value": "Nómina",
              },
              {
                "generatedName": "Pago",
                "nameOverride": undefined,
                "value": "Pago",
              },
              {
                "generatedName": "Traslado",
                "nameOverride": undefined,
                "value": "Traslado",
              },
            ],
          },
        },
        "EnumInvoiceSatPaymentMethod": {
          "description": "The payment method code used for this invoice, as defined by the legal entity of the country.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-method). For Mexico, we return \`PUE\`, \`PIP\`, \`PPD\`, or \`null\`.
",
          "type": "nullable",
          "value": {
            "description": "The payment method code used for this invoice, as defined by the legal entity of the country.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-method). For Mexico, we return \`PUE\`, \`PIP\`, \`PPD\`, or \`null\`.
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumInvoiceType": {
          "description": "The direction of the invoice (from the perspective of the Link owner).
- \`OUTFLOW\` indicates a sent invoice. - \`INFLOW\` indicates a received invoice.
",
          "type": "nullable",
          "value": {
            "description": "The direction of the invoice (from the perspective of the Link owner).
- \`OUTFLOW\` indicates a sent invoice. - \`INFLOW\` indicates a received invoice.
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumLinkAccessModeRequest": {
          "description": "The type of link to create.

- Use \`single\` to do ad hoc one-time POST requests for accounts, owners, and transactions.
- Use \`recurrent\` to have Belvo access information on a recurrent basis so you always have fresh account, owner, balance, and transaction data.

For more information, see our [Links](https://developers.belvo.com/docs/links-and-institutions#links) article.
",
          "generatedName": "EnumLinkAccessModeRequest",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "single",
              "nameOverride": undefined,
              "value": "single",
            },
            {
              "generatedName": "recurrent",
              "nameOverride": undefined,
              "value": "recurrent",
            },
          ],
        },
        "EnumLinkAccessModeResponse": {
          "description": "The link type.
For more information, see our [Links](https://developers.belvo.com/docs/links-and-institutions#links) article.
We return one of the following enum values:
  - \`single\`
  - \`recurrent\`
  - \`null\`
",
          "type": "nullable",
          "value": {
            "description": "The link type.
For more information, see our [Links](https://developers.belvo.com/docs/links-and-institutions#links) article.
We return one of the following enum values:
  - \`single\`
  - \`recurrent\`
  - \`null\`
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumLinkRefreshRate": {
          "description": "The update refresh rate for the recurrent link. For more information, check out our [recurrent link documentation](https://developers.belvo.com/docs/links-and-institutions#recurrent-links) in our DevPortal.
We return one of the following enum values:
  - \`6h\`
  - \`12h\`
  - \`24h\`
  - \`7d\` (default)
  - \`30d\` (once a month)
  - \`null\` (for single links)
",
          "type": "nullable",
          "value": {
            "description": "The update refresh rate for the recurrent link. For more information, check out our [recurrent link documentation](https://developers.belvo.com/docs/links-and-institutions#recurrent-links) in our DevPortal.
We return one of the following enum values:
  - \`6h\`
  - \`12h\`
  - \`24h\`
  - \`7d\` (default)
  - \`30d\` (once a month)
  - \`null\` (for single links)
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumLinkStatus": {
          "description": "The current status of the link. For more information, see our [Link](https://developers.belvo.com/docs/links-and-institutions#links) article in the devportal.
We return one of the following values:
  - \`valid\`
  - \`invalid\`
  - \`unconfirmed\`
  - \`token_required\`
",
          "generatedName": "EnumLinkStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "valid",
              "nameOverride": undefined,
              "value": "valid",
            },
            {
              "generatedName": "invalid",
              "nameOverride": undefined,
              "value": "invalid",
            },
            {
              "generatedName": "unconfirmed",
              "nameOverride": undefined,
              "value": "unconfirmed",
            },
            {
              "generatedName": "token_required",
              "nameOverride": undefined,
              "value": "token_required",
            },
          ],
        },
        "EnumLoanDataFeeType": {
          "description": "The type of fee. We return one of the following values:

  - \`OPERATION_FEE\`
  - \`INSURANCE_FEE\`
  - \`OTHERS\`
",
          "generatedName": "EnumLoanDataFeeType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "OPERATION_FEE",
              "nameOverride": undefined,
              "value": "OPERATION_FEE",
            },
            {
              "generatedName": "INSURANCE_FEE",
              "nameOverride": undefined,
              "value": "INSURANCE_FEE",
            },
            {
              "generatedName": "OTHERS",
              "nameOverride": undefined,
              "value": "OTHERS",
            },
          ],
        },
        "EnumLoanDataInterestRateType": {
          "description": "The period that the interest is applied to the loan. We return one of the following values:

  - \`MONTHLY\`
  - \`YEARLY\`
",
          "type": "nullable",
          "value": {
            "description": "The period that the interest is applied to the loan. We return one of the following values:

  - \`MONTHLY\`
  - \`YEARLY\`
",
            "generatedName": "EnumLoanDataInterestRateType",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "MONTHLY",
                "nameOverride": undefined,
                "value": "MONTHLY",
              },
              {
                "generatedName": "YEARLY",
                "nameOverride": undefined,
                "value": "YEARLY",
              },
            ],
          },
        },
        "EnumPaymentIntentHolderTypePse": {
          "description": "Type of bank account holder. For PSE, this value must be \`INDIVIDUAL\`.",
          "generatedName": "EnumPaymentIntentHolderTypePse",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "INDIVIDUAL",
              "nameOverride": undefined,
              "value": "INDIVIDUAL",
            },
            {
              "generatedName": "BUSINESS",
              "nameOverride": undefined,
              "value": "BUSINESS",
            },
          ],
        },
        "EnumPaymentIntentStatus": {
          "description": "The current status of the payment intent.
",
          "generatedName": "EnumPaymentIntentStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "REQUIRES_PAYMENT_METHOD",
              "nameOverride": undefined,
              "value": "REQUIRES_PAYMENT_METHOD",
            },
            {
              "generatedName": "REQUIRES_ACTION",
              "nameOverride": undefined,
              "value": "REQUIRES_ACTION",
            },
            {
              "generatedName": "SUCCEEDED",
              "nameOverride": undefined,
              "value": "SUCCEEDED",
            },
            {
              "generatedName": "PROCESSING",
              "nameOverride": undefined,
              "value": "PROCESSING",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "EnumPaymentLinkAllowedPaymentMethod": {
          "description": "Selected payment method type.

  - For 🇧🇷 Brazil's OFPI, the value must be \`open_finance\`.  
  - For 🇨🇴 Colombia's PSE, the value must be \`pse\`.",
          "generatedName": "EnumPaymentLinkAllowedPaymentMethod",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "open_finance",
              "nameOverride": undefined,
              "value": "open_finance",
            },
            {
              "generatedName": "pse",
              "nameOverride": undefined,
              "value": "pse",
            },
          ],
        },
        "EnumPaymentLinkProvider": {
          "description": "The provider used for the payment link. 


- For 🇧🇷 Brazil's OFPI, the value must be \`belvo\`.  
- For 🇨🇴 Colombia's PSE, the value must be \`payments_way\`.
",
          "generatedName": "EnumPaymentLinkProvider",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "belvo",
              "nameOverride": undefined,
              "value": "belvo",
            },
            {
              "generatedName": "payments_way",
              "nameOverride": undefined,
              "value": "payments_way",
            },
          ],
        },
        "EnumPaymentLinksStatus": {
          "description": "The current status of the payment link. Can be either:

  - \`ACTIVE\` meaning that the payment intent's status is either \`REQUIRES_PAYMENT_METHOD\`, \`REQUIRES_ACTION\`, or \`PROCESSING\`.
  - \`INACTIVE\` meaning that the payment intent's status is either \`SUCCEEDED\` or \`FAILED\`.

**Note:** You can retrieve the complete payment intent by using our [Get details of a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) request.",
          "generatedName": "EnumPaymentLinksStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACTIVE",
              "nameOverride": undefined,
              "value": "ACTIVE",
            },
            {
              "generatedName": "INACTIVE",
              "nameOverride": undefined,
              "value": "INACTIVE",
            },
          ],
        },
        "EnumPaymentTransactionType": {
          "description": "The direction of the transaction.

  - \`INFLOW\` indicates money coming into the account.
  - \`OUTFLOW\` indicates money coming out of the account.",
          "generatedName": "EnumPaymentTransactionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "INFLOW",
              "nameOverride": undefined,
              "value": "INFLOW",
            },
            {
              "generatedName": "OUTFLOW",
              "nameOverride": undefined,
              "value": "OUTFLOW",
            },
          ],
        },
        "EnumPaymentsCountry": {
          "description": "The customer's country of residence.


-  BRA (🇧🇷 Brazil)
-  COL (🇨🇴 Colombia)
",
          "generatedName": "EnumPaymentsCountry",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "BRA",
              "nameOverride": undefined,
              "value": "BRA",
            },
            {
              "generatedName": "COL",
              "nameOverride": undefined,
              "value": "COL",
            },
          ],
        },
        "EnumPaymentsCurrency": {
          "description": "The currency of the amount paid.


  - 🇧🇷 BRL (Brazilian Real)
  - 🇨🇴 COP (Colombian Peso)",
          "generatedName": "EnumPaymentsCurrency",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "BRL",
              "nameOverride": undefined,
              "value": "BRL",
            },
            {
              "generatedName": "COP",
              "nameOverride": undefined,
              "value": "COP",
            },
          ],
        },
        "EnumReceivableTransactionFeeType": {
          "description": "The type of fee applied to the transaction. We return one of the following values:

  - \`TRANSACTION_FEE\`",
          "type": "nullable",
          "value": {
            "description": "The type of fee applied to the transaction. We return one of the following values:

  - \`TRANSACTION_FEE\`",
            "generatedName": "EnumReceivableTransactionFeeType",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "TRANSACTION_FEE",
                "nameOverride": undefined,
                "value": "TRANSACTION_FEE",
              },
            ],
          },
        },
        "EnumReceivableTransactionStatus": {
          "description": "The status of the transaction. Can be either:

  - \`APPROVED\`
  - \`CANCELLED\`
  - \`REVERTED\`
  - \`UNCATEGORIZED\`",
          "type": "nullable",
          "value": {
            "description": "The status of the transaction. Can be either:

  - \`APPROVED\`
  - \`CANCELLED\`
  - \`REVERTED\`
  - \`UNCATEGORIZED\`",
            "generatedName": "EnumReceivableTransactionStatus",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "APPROVED",
                "nameOverride": undefined,
                "value": "APPROVED",
              },
              {
                "generatedName": "CANCELLED",
                "nameOverride": undefined,
                "value": "CANCELLED",
              },
              {
                "generatedName": "REVERTED",
                "nameOverride": undefined,
                "value": "REVERTED",
              },
              {
                "generatedName": "UNCATEGORIZED",
                "nameOverride": undefined,
                "value": "UNCATEGORIZED",
              },
            ],
          },
        },
        "EnumReceivableTransactionType": {
          "description": "The type of transaction. For example, whether the transaction was a \`VISA_DEBIT\` or a \`MASTERCARD_CREDIT\`.

We return one of the following values:

  - \`VISA_CREDIT\`
  - \`VISA_DEBIT\`
  - \`MASTERCARD_CREDIT\`
  - \`MASTERCARD_DEBIT\`
  - \`ELO_CREDIT\`
  - \`ELO_DEBIT\`
  - \`null\`
",
          "type": "nullable",
          "value": {
            "description": "The type of transaction. For example, whether the transaction was a \`VISA_DEBIT\` or a \`MASTERCARD_CREDIT\`.

We return one of the following values:

  - \`VISA_CREDIT\`
  - \`VISA_DEBIT\`
  - \`MASTERCARD_CREDIT\`
  - \`MASTERCARD_DEBIT\`
  - \`ELO_CREDIT\`
  - \`ELO_DEBIT\`
  - \`null\`
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumRecurringExpenseCategory": {
          "description": "The transaction category for the recurring expense. For more information on the available categories, please see our [Transaction categorization documentation](https://developers.belvo.com/docs/banking#categorizing-transactions).

- \`Online Platforms & Leisure\` (Netflix, Spotify, Gym Memberships)
- \`Bills & Utilities\` (electricity, telephone, internet)
- \`Credits & Loans\` (credit card cash advances, student loan, watercraft lease)
- \`Insurance\` (home, car, and health & life insurance)
- \`Transport & Travel\` (Uber trip, airbnb, parking)
- \`Taxes\` (service fee, donation, court taxes)
",
          "generatedName": "EnumRecurringExpenseCategory",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "BillsUtilities",
              "nameOverride": undefined,
              "value": "Bills & Utilities",
            },
            {
              "generatedName": "CreditsLoans",
              "nameOverride": undefined,
              "value": "Credits & Loans",
            },
            {
              "generatedName": "Insurance",
              "nameOverride": undefined,
              "value": "Insurance",
            },
            {
              "generatedName": "OnlinePlatformsLeisure",
              "nameOverride": undefined,
              "value": "Online Platforms & Leisure",
            },
            {
              "generatedName": "TransportTravel",
              "nameOverride": undefined,
              "value": "Transport & Travel",
            },
            {
              "generatedName": "Taxes",
              "nameOverride": undefined,
              "value": "Taxes",
            },
          ],
        },
        "EnumRecurringExpenseFrequency": {
          "description": "The frequency at which this recurring expense occurs.


ℹ️ **Note:** Belvo only identifies \`MONTHLY\` frequencies.
",
          "generatedName": "EnumRecurringExpenseFrequency",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "MONTHLY",
              "nameOverride": undefined,
              "value": "MONTHLY",
            },
          ],
        },
        "EnumRecurringExpensePaymentType": {
          "description": "The type of recurring expense. We return one of the following values:

  - \`SUBSCRIPTION\`
  - \`REGULAR\`
",
          "type": "nullable",
          "value": {
            "description": "The type of recurring expense. We return one of the following values:

  - \`SUBSCRIPTION\`
  - \`REGULAR\`
",
            "generatedName": "EnumRecurringExpensePaymentType",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "SUBSCRIPTION",
                "nameOverride": undefined,
                "value": "SUBSCRIPTION",
              },
              {
                "generatedName": "REGULAR",
                "nameOverride": undefined,
                "value": "REGULAR",
              },
            ],
          },
        },
        "EnumTaxComplianceStatusOutcome": {
          "description": "Indicates whether the taxpayer is complying to all their tax obligations (\`POSITIVE\`), if they are not (\`NEGATIVE\`), or have none to comply to (\`NO_OBLIGATIONS\`).",
          "type": "nullable",
          "value": {
            "description": "Indicates whether the taxpayer is complying to all their tax obligations (\`POSITIVE\`), if they are not (\`NEGATIVE\`), or have none to comply to (\`NO_OBLIGATIONS\`).",
            "generatedName": "EnumTaxComplianceStatusOutcome",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "POSITIVE",
                "nameOverride": undefined,
                "value": "POSITIVE",
              },
              {
                "generatedName": "NEGATIVE",
                "nameOverride": undefined,
                "value": "NEGATIVE",
              },
              {
                "generatedName": "NO_OBLIGATIONS",
                "nameOverride": undefined,
                "value": "NO_OBLIGATIONS",
              },
            ],
          },
        },
        "EnumTaxRetentionPaymentStatus": {
          "description": "Indicates whether or not the tax has been paid or not. Can be either:
  - \`PAID\`
  - \`PROVISIONED\`
",
          "type": "nullable",
          "value": {
            "description": "Indicates whether or not the tax has been paid or not. Can be either:
  - \`PAID\`
  - \`PROVISIONED\`
",
            "generatedName": "EnumTaxRetentionPaymentStatus",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "PAID",
                "nameOverride": undefined,
                "value": "PAID",
              },
              {
                "generatedName": "PROVISIONED",
                "nameOverride": undefined,
                "value": "PROVISIONED",
              },
            ],
          },
        },
        "EnumTaxRetentionReceiverNationality": {
          "description": "Whether the invoice receiver is a Mexican national or not. If the receiver is not considered a Mexican national, the retained taxes can be calculated differently. Possible values:
  - \`NATIONAL\`
  - \`FOREIGN\`
",
          "type": "nullable",
          "value": {
            "description": "Whether the invoice receiver is a Mexican national or not. If the receiver is not considered a Mexican national, the retained taxes can be calculated differently. Possible values:
  - \`NATIONAL\`
  - \`FOREIGN\`
",
            "generatedName": "EnumTaxRetentionReceiverNationality",
            "nameOverride": undefined,
            "type": "enum",
            "values": [
              {
                "generatedName": "NATIONAL",
                "nameOverride": undefined,
                "value": "NATIONAL",
              },
              {
                "generatedName": "FOREIGN",
                "nameOverride": undefined,
                "value": "FOREIGN",
              },
            ],
          },
        },
        "EnumTaxRetentionType": {
          "description": "The type of tax retention in relation to the invoice (from the perspective of the Link owner).

- \`OUTFLOW\` relates to a tax retention for a sent invoice.
- \`INFLOW\` related to a tax retention for a received invoice.
",
          "generatedName": "EnumTaxRetentionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "OUTFLOW",
              "nameOverride": undefined,
              "value": "OUTFLOW",
            },
            {
              "generatedName": "INFLOW",
              "nameOverride": undefined,
              "value": "INFLOW",
            },
          ],
        },
        "EnumTransactionBillStatus": {
          "description": "The status of the bill that the transaction appears on. Can be one of:

  - \`PAID\`: The bill has been paid in full.
  - \`CLOSED\`: The bill has been closed by the institution.
  - \`OPEN\`: The bill is currently open. (Note: This is the main bill that Belvo retrieves balance data from).
  - \`FUTURE\`: The bill is pending.
  - \`null\`: No bill status was identified.
  
ℹ️ Note: Some banks consider CLOSED as PAID.",
          "type": "nullable",
          "value": {
            "description": "The status of the bill that the transaction appears on. Can be one of:

  - \`PAID\`: The bill has been paid in full.
  - \`CLOSED\`: The bill has been closed by the institution.
  - \`OPEN\`: The bill is currently open. (Note: This is the main bill that Belvo retrieves balance data from).
  - \`FUTURE\`: The bill is pending.
  - \`null\`: No bill status was identified.
  
ℹ️ Note: Some banks consider CLOSED as PAID.",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumTransactionCategory": {
          "description": "The name of the category to which this transaction belongs.

> **Get transaction categorization**
With [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions), we clean and categorize transactions for you, turning raw data into actionable insights. To enable this feature, just [reach out](https://belvo.com/contact/?utm_source=documentation) to us, and we'll get right to it.

We return one of the following enum values:

  - \`Bills & Utilities\`
  - \`Credits & Loans\`
  - \`Deposits\`
  - \`Fees & Charges\`
  - \`Food & Groceries\`
  - \`Home & Life\`
  - \`Income & Payments\`
  - \`Insurance\`
  - \`Investments & Savings\`
  - \`Online Platforms & Leisure\`
  - \`Personal Shopping\`
  - \`Taxes\`
  - \`Transfers\`
  - \`Transport & Travel\`
  - \`Unknown\`*
  - \`Withdrawal & ATM\`
  - \`null\`


  \\* For clients not using our Transaction Categorization product, we return \`null\` instead.
",
          "type": "nullable",
          "value": {
            "description": "The name of the category to which this transaction belongs.

> **Get transaction categorization**
With [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions), we clean and categorize transactions for you, turning raw data into actionable insights. To enable this feature, just [reach out](https://belvo.com/contact/?utm_source=documentation) to us, and we'll get right to it.

We return one of the following enum values:

  - \`Bills & Utilities\`
  - \`Credits & Loans\`
  - \`Deposits\`
  - \`Fees & Charges\`
  - \`Food & Groceries\`
  - \`Home & Life\`
  - \`Income & Payments\`
  - \`Insurance\`
  - \`Investments & Savings\`
  - \`Online Platforms & Leisure\`
  - \`Personal Shopping\`
  - \`Taxes\`
  - \`Transfers\`
  - \`Transport & Travel\`
  - \`Unknown\`*
  - \`Withdrawal & ATM\`
  - \`null\`


  \\* For clients not using our Transaction Categorization product, we return \`null\` instead.
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumTransactionStatus": {
          "description": "The status of the transaction. We return one of the following values:

  - \`PENDING\`
  - \`PROCESSED\`
  - \`UNCATEGORIZED\`
  - \`null\`
",
          "type": "nullable",
          "value": {
            "description": "The status of the transaction. We return one of the following values:

  - \`PENDING\`
  - \`PROCESSED\`
  - \`UNCATEGORIZED\`
  - \`null\`
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumTransactionSubcategory": {
          "description": "The transactions subcategory.

  > **Get transaction categorization**
  For clients not using our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions), we return \`null\` instead. To enable this feature, just [reach out](https://belvo.com/contact/?utm_source=documentation) to us, and we'll get right to it.


We return one of the following enum values:

  - \`Electricity & Energy\`
  - \`Rent\`
  - \`Telecommunications\`
  - \`Water\`
  - \`Auto\`
  - \`Credit Card\`
  - \`Instalment\`
  - \`Interest & Charges\`
  - \`Mortgage\`
  - \`Pay Advance\`
  - \`Personal\`
  - \`Adjustments\`
  - \`Bank Fees\`
  - \`Chargeback\`
  - \`Refund\`
  - \`Blocked Balances\`
  - \`Alimony\`
  - \`Alcohol & Tobacco\`
  - \`Bakery & Coffee\`
  - \`Bars & Nightclubs\`
  - \`Convenience Store\`
  - \`Delivery\`
  - \`Groceries\`
  - \`Restaurants\`
  - \`Education\`
  - \`Gyms & Fitness\`
  - \`Hair & Beauty\`
  - \`Health\`
  - \`Home Decor & Appliances\`
  - \`Laundry & Dry Cleaning\`
  - \`Pharmacies\`
  - \`Professional Services\`
  - \`Veterinary Services\`
  - \`Freelance\`
  - \`Interest\`
  - \`Retirement\`
  - \`Salary\`
  - \`Government\`
  - \`Home Insurance\`
  - \`Auto Insurance\`
  - \`Health & Life Insurance\`
  - \`Savings\`
  - \`Fixed income\`
  - \`Equity\`
  - \`Investment Funds\`
  - \`Derivatives\`
  - \`Cryptocurrencies\`
  - \`Apps, Software and Cloud Services\`
  - \`Events, Parks and Museums\`
  - \`Gambling\`
  - \`Gaming\`
  - \`Lottery\`
  - \`Movie & Audio\`
  - \`Books & News\`
  - \`Clothing & Accessories\`
  - \`Department Store\`
  - \`Electronics\`
  - \`E-commerce\`
  - \`Gifts\`
  - \`Office Supplies\`
  - \`Pet Supplies\`
  - \`Auto Tax & Fees\`
  - \`Donation\`
  - \`Government Fees\`
  - \`Income Tax\`
  - \`Real Estate Tax & Fees\`
  - \`Tax Return\`
  - \`Accommodation\`
  - \`Auto Expenses\`
  - \`Auto Rental\`
  - \`Flights\`
  - \`Gas\`
  - \`Mileage Programs\`
  - \`Parking & Tolls\`
  - \`Public Transit\`
  - \`Taxis & Rideshares\`
  - \`Other\`
  - \`null\`",
          "type": "nullable",
          "value": {
            "description": "The transactions subcategory.

  > **Get transaction categorization**
  For clients not using our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions), we return \`null\` instead. To enable this feature, just [reach out](https://belvo.com/contact/?utm_source=documentation) to us, and we'll get right to it.


We return one of the following enum values:

  - \`Electricity & Energy\`
  - \`Rent\`
  - \`Telecommunications\`
  - \`Water\`
  - \`Auto\`
  - \`Credit Card\`
  - \`Instalment\`
  - \`Interest & Charges\`
  - \`Mortgage\`
  - \`Pay Advance\`
  - \`Personal\`
  - \`Adjustments\`
  - \`Bank Fees\`
  - \`Chargeback\`
  - \`Refund\`
  - \`Blocked Balances\`
  - \`Alimony\`
  - \`Alcohol & Tobacco\`
  - \`Bakery & Coffee\`
  - \`Bars & Nightclubs\`
  - \`Convenience Store\`
  - \`Delivery\`
  - \`Groceries\`
  - \`Restaurants\`
  - \`Education\`
  - \`Gyms & Fitness\`
  - \`Hair & Beauty\`
  - \`Health\`
  - \`Home Decor & Appliances\`
  - \`Laundry & Dry Cleaning\`
  - \`Pharmacies\`
  - \`Professional Services\`
  - \`Veterinary Services\`
  - \`Freelance\`
  - \`Interest\`
  - \`Retirement\`
  - \`Salary\`
  - \`Government\`
  - \`Home Insurance\`
  - \`Auto Insurance\`
  - \`Health & Life Insurance\`
  - \`Savings\`
  - \`Fixed income\`
  - \`Equity\`
  - \`Investment Funds\`
  - \`Derivatives\`
  - \`Cryptocurrencies\`
  - \`Apps, Software and Cloud Services\`
  - \`Events, Parks and Museums\`
  - \`Gambling\`
  - \`Gaming\`
  - \`Lottery\`
  - \`Movie & Audio\`
  - \`Books & News\`
  - \`Clothing & Accessories\`
  - \`Department Store\`
  - \`Electronics\`
  - \`E-commerce\`
  - \`Gifts\`
  - \`Office Supplies\`
  - \`Pet Supplies\`
  - \`Auto Tax & Fees\`
  - \`Donation\`
  - \`Government Fees\`
  - \`Income Tax\`
  - \`Real Estate Tax & Fees\`
  - \`Tax Return\`
  - \`Accommodation\`
  - \`Auto Expenses\`
  - \`Auto Rental\`
  - \`Flights\`
  - \`Gas\`
  - \`Mileage Programs\`
  - \`Parking & Tolls\`
  - \`Public Transit\`
  - \`Taxis & Rideshares\`
  - \`Other\`
  - \`null\`",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EnumTransactionType": {
          "description": "The direction of the transaction:
- \`INFLOW\` indicates money coming into the account.
- \`OUTFLOW\` indicates money going out of the account.
- \`null\` when no information was present regarding the direction of the transaction.
",
          "type": "nullable",
          "value": {
            "description": "The direction of the transaction:
- \`INFLOW\` indicates money coming into the account.
- \`OUTFLOW\` indicates money going out of the account.
- \`null\` when no information was present regarding the direction of the transaction.
",
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "EquityStatementBusiness": {
          "allOf": [],
          "description": "Object containing the general fiscal situation of the taxpayer.",
          "generatedName": "EquityStatementBusiness",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "cash_and_cash_equivalents",
              "schema": {
                "description": "Total cash (or cash equivalents) that the business currently holds at the end of the fiscal year.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "investments_and_derivative_financial_instruments",
              "schema": {
                "description": "Total value of all investments, stocks, or similar, that the company has.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "accounts_documents_and_finance_leases_receivable",
              "schema": {
                "description": "Total of all payments the company expects to receive (for example, from partial invoices that have not been paid yet).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "inventory",
              "schema": {
                "description": "Total financial value of the company's sellable inventory.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "property_plant_and_equipment_investment_properties",
              "schema": {
                "description": "Total value of real estate, plant infrastructure, or equipment that has been purchased.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_gross_equity",
              "schema": {
                "description": "Total gross equity.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "debts",
              "schema": {
                "description": "Total debts that the company currently has.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_net_equity",
              "schema": {
                "description": "The total net equity of the company (\`total_gross_equity\` - \`debts\`).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "EquityStatementIndividual": {
          "allOf": [],
          "description": "Object containing the general fiscal situation of the taxpayer.",
          "generatedName": "EquityStatementIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "total_gross_equity",
              "schema": {
                "description": "The total gross equity of the tax payer.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_debts",
              "schema": {
                "description": "The total debts of the tax_payer",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_net_equity",
              "schema": {
                "description": "The total net equity value of the taxpayer.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "EyodIncomeVerificationBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EyodIncomeVerificationBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "transaction_id",
              "schema": {
                "description": "Your unique ID for the income.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account_holder_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EyodIncomeVerificationBodyRequestAccountHolderType",
                "nameOverride": undefined,
                "schema": "EnumIncomeVerificationAccountHolderType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "account_holder_id",
              "schema": {
                "description": "Your unique ID for the account holder, in UUID format.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account_id",
              "schema": {
                "description": "Your unique ID for the account where the transaction occurred.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account_category",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EyodIncomeVerificationBodyRequestAccountCategory",
                "nameOverride": undefined,
                "schema": "EnumIncomeVerificationAccountCategory",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "value_date",
              "schema": {
                "description": "The date when the income transaction occurred, in \`YYYY-MM-DD\` format.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the income.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EyodIncomeVerificationBodyRequestType",
                "nameOverride": undefined,
                "schema": "EnumIncomeVerificationType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "The income amount.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The three-letter currency code of the income. For example:

  • 🇧🇷 BRL (Brazilian Real)
  • 🇨🇴 COP (Colombian Peso)
  • 🇲🇽 MXN (Mexican Peso)",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": "The institution where the account is registered.

**Note:** This is the name that you use in your system to identify the institution. For example BBVA Retail.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "EyodIncomeVerificationRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EyodIncomeVerificationRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "language",
              "schema": {
                "description": "Two-letter ISO 639-1 code for the language of the transaction.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "transactions",
              "schema": {
                "description": "An array of transaction objects that you want enriched.

**Note:** Each object corresponds to one, unique transaction and you can send through up to 10,000 transactions per request.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EyodIncomeVerificationRequestTransactionsItem",
                  "nameOverride": undefined,
                  "schema": "EyodIncomeVerificationBodyRequest",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "date_from",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date from which you want to start getting incomes for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_to\`.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "date_to",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date you want to stop getting incomes for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_from\`.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "allowed_income_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "EyodIncomeVerificationRequestAllowedIncomeTypesItem",
                    "nameOverride": undefined,
                    "schema": "EnumInvoiceAllowedIncomeTypesRequest",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minimum_confidence_level",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EyodIncomeVerificationRequestMinimumConfidenceLevel",
                  "nameOverride": undefined,
                  "schema": "EnumIncomeMinimumConfidenceLevelRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GrossIncomeIndividual": {
          "allOf": [],
          "description": "Object containing the declared gross income of the tax payer.",
          "generatedName": "GrossIncomeIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "earned_income",
              "schema": {
                "description": "Income received from employment.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "fee_based_income",
              "schema": {
                "description": "Income received from emitted invoices (for example, income that independent contractors or freelancers receive).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "capital_income",
              "schema": {
                "description": "Income received from an investment (such as dividends or from renting a property).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "non_labor_income",
              "schema": {
                "description": "Income that cannot be classified into the other three fields (such as income from cryptocurrencies or regular transfers from parents).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "HolderBankAccountInformationPse": {
          "allOf": [],
          "description": "Object with additional information about the individual that holds the bank account.",
          "generatedName": "HolderBankAccountInformationPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "first_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The account holder's first name.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "last_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The account holder's last name.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "HolderBankAccountPse": {
          "allOf": [],
          "description": "Details regarding the bank account holder.",
          "generatedName": "HolderBankAccountPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "HolderBankAccountPseType",
                  "nameOverride": undefined,
                  "schema": "EnumPaymentIntentHolderTypePse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "information",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "HolderBankAccountPseInformation",
                  "nameOverride": undefined,
                  "schema": "HolderBankAccountInformationPse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "HolderBusinessPse": {
          "allOf": [],
          "description": "Details regarding the business bank account holder.",
          "generatedName": "HolderBusinessPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HolderBusinessPseType",
                "nameOverride": undefined,
                "schema": "EnumBankAccountHolderTypePse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HolderBusinessPseInformation",
                "nameOverride": undefined,
                "schema": "HolderInformationBusinessPse",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "HolderBusinessResponsePse": {
          "allOf": [],
          "description": "Details regarding the business bank account holder.",
          "generatedName": "HolderBusinessResponsePse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HolderBusinessResponsePseType",
                "nameOverride": undefined,
                "schema": "EnumBankAccountHolderTypePse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "Information",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "HolderBusinessResponsePseInformation",
                  "nameOverride": undefined,
                  "schema": "HolderInformationBusinessPseResponse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "HolderInformationBusinessOfpi": {
          "allOf": [],
          "description": "Additional information about the bank account holder required in order to create the account for OFPI.",
          "generatedName": "HolderInformationBusinessOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The bank account holder's first name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HolderInformationBusinessOfpiIdentifierType",
                "nameOverride": undefined,
                "schema": "EnumCustomerIdentifierTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "identifier",
              "schema": {
                "description": "The document number of the company's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "HolderInformationBusinessOfpiResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "HolderInformationBusinessOfpiResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The bank account holder's first name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HolderInformationBusinessOfpiResponseIdentifierType",
                "nameOverride": undefined,
                "schema": "EnumCustomerIdentifierTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "identifier",
              "schema": {
                "description": "The document number of the company's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "HolderInformationBusinessPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "HolderInformationBusinessPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The business name.

Note, this is only applicable if the \`holder.type\` is set to \`BUSINESS\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "HolderInformationBusinessPseResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "HolderInformationBusinessPseResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The business name. This value is obfuscated.

Note, this is only applicable if the \`holder.type\` is set to \`BUSINESS\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "HolderInformationIndividualOfpi": {
          "allOf": [],
          "description": "Additional information about the bank account holder required in order to create the account for OFPI.",
          "generatedName": "HolderInformationIndividualOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "first_name",
              "schema": {
                "description": "The bank account holder's first name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "last_name",
              "schema": {
                "description": "The bank account holder's last name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HolderInformationIndividualOfpiIdentifierType",
                "nameOverride": undefined,
                "schema": "EnumCustomerIdentifierTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "identifier",
              "schema": {
                "description": "The document number of the customer's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "HolderInformationIndividualOfpiResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "HolderInformationIndividualOfpiResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "first_name",
              "schema": {
                "description": "The bank account holder's first name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "last_name",
              "schema": {
                "description": "The bank account holder's last name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "identifier_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HolderInformationIndividualOfpiResponseIdentifierType",
                "nameOverride": undefined,
                "schema": "EnumCustomerIdentifierTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "identifier",
              "schema": {
                "description": "The document number of the customer's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "HolderResponseOfpi": {
          "allOf": [],
          "description": "Details regarding the bank account holder.",
          "generatedName": "HolderResponseOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HolderResponseOfpiType",
                "nameOverride": undefined,
                "schema": "EnumBankAccountHolderTypeOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "information",
              "schema": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "HolderResponseOfpiInformation",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "HolderResponseOfpiInformationHolderResponseOfpiInformation",
                      "nameOverride": undefined,
                      "schema": "HolderInformationBusinessOfpiResponse",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "HolderResponseOfpiInformationHolderResponseOfpiInformation",
                      "nameOverride": undefined,
                      "schema": "HolderInformationIndividualOfpiResponse",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
          ],
          "type": "object",
        },
        "Income": {
          "allOf": [],
          "description": "Income insights",
          "generatedName": "Income",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique identifier for the current income.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` the account belongs to.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was created in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "income_streams",
              "schema": {
                "description": "An array of enriched income stream objects.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "IncomeIncomeStreamsItem",
                  "nameOverride": undefined,
                  "schema": "IncomeStreamsBody",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "income_source_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "IncomeIncomeSourceType",
                "nameOverride": undefined,
                "schema": "EnumIncomeSourceType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "first_transaction_date",
              "schema": {
                "description": "The date when the first transaction occurred, in \`YYYY-MM-DD\` format.
",
                "type": "nullable",
                "value": {
                  "description": "The date when the first transaction occurred, in \`YYYY-MM-DD\` format.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "last_transaction_date",
              "schema": {
                "description": "The date when when the last transaction occurred, in \`YYYY-MM-DD\` format.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "number_of_income_streams",
              "schema": {
                "description": "Number of total income streams analized.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "monthly_average",
              "schema": {
                "description": "Average amount of income received per month across all the accounts for the specific user.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "monthly_average_regular",
              "schema": {
                "description": "Average amount of regular income (with a frequency of \`MONTHLY\`, \`FORTNIGHTLY\`, or \`WEEKLY\`) received per month for the specific user.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "monthly_average_irregular",
              "schema": {
                "description": "Average amount of irregular income (with a frequency of \`SINGLE\` or \`IRREGULAR\`) received per month for the specific user.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "monthly_average_low_confidence",
              "schema": {
                "description": "Average amount of income received per month for the specific user with \`LOW\` confidence.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "monthly_average_medium_confidence",
              "schema": {
                "description": "Average amount of income received per month for the specific user with \`MEDIUM\` confidence.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "monthly_average_high_confidence",
              "schema": {
                "description": "Average amount of income received per month for the specific user with \`HIGH\` confidence.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_income_amount",
              "schema": {
                "description": "Total amount of all income received for the specific user.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_regular_income_amount",
              "schema": {
                "description": "Total amount of regular income (with a frequency of \`MONTHLY\`, \`FORTNIGHTLY\`, \`WEEKLY\`) for the specific user.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_irregular_income_amount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Total amount of irregular income (with a frequency of \`SINGLE\` or \`IRREGULAR\`) for the specific user.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "total_low_confidence",
              "schema": {
                "description": "Total amount of income for the specific user with \`LOW\` confidence.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_medium_confidence",
              "schema": {
                "description": "Total amount of income for the specific user with \`MEDIUM\` confidence.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_high_confidence",
              "schema": {
                "description": "Total amount of income for the specific user with \`HIGH\` confidence.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "IncomeStreamsBody": {
          "allOf": [],
          "description": "A list of income streams for the account.

For each income stream, we provide additional insights such as:
- Frequency, stability, and confidence level of the income transactions.
- Key metrics about the transaction amounts.
ℹ️ If no income sources are found, we return an empty array.
",
          "generatedName": "IncomeStreamsBody",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "account_id",
              "schema": {
                "description": "Unique ID for the bank account to be verified for income streams.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "income_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "IncomeStreamsBodyIncomeType",
                "nameOverride": undefined,
                "schema": "EnumIncomeStreamType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "frequency",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "IncomeStreamsBodyFrequency",
                "nameOverride": undefined,
                "schema": "EnumIncomeStreamFrequency",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "monthly_average",
              "schema": {
                "description": "The average amount of income received from the source over \`lookback_periods\`.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "average_income_amount",
              "schema": {
                "description": "The average income transaction amount from the source.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "last_income_amount",
              "schema": {
                "description": "The amount of the most recent income received from the source.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The three-letter currency code of the income. For example:

  • 🇧🇷 BRL (Brazilian Real)
  • 🇨🇴 COP (Colombian Peso)
  • 🇲🇽 MXN (Mexican Peso)",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "last_income_description",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "conflict": [],
              "key": "last_income_date",
              "schema": {
                "description": "The date when the most recent income from the stream was received, in \`YYYY-MM-DD\` format.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "stability",
              "schema": {
                "description": "The stability of the income based on its amount, with a range from 0 to 1, where 1 represents perfect stability.

**Note:** For transactions with \`frequency\`=\`SINGLE\`, this value returns \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "The stability of the income based on its amount, with a range from 0 to 1, where 1 represents perfect stability.

**Note:** For transactions with \`frequency\`=\`SINGLE\`, this value returns \`null\`.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "regularity",
              "schema": {
                "description": "The regularity of the income basde in its frequency, with a range from 0 to 1, where 1 represents perfect regularity.

**Note:** For transactions with \`frequency\`=\`SINGLE\`, this value returns \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "The regularity of the income basde in its frequency, with a range from 0 to 1, where 1 represents perfect regularity.

**Note:** For transactions with \`frequency\`=\`SINGLE\`, this value returns \`null\`.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "trend",
              "schema": {
                "description": "The income trend during a period of time calculated between last income and first income received, where:
  - a negative float means that the income trend is decreasing during the time period.
  - a positive float means that the income trend is increasing during the time period.

**Note:** For transactions with \`frequency\`=\`SINGLE\`, this value returns \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "The income trend during a period of time calculated between last income and first income received, where:
  - a negative float means that the income trend is decreasing during the time period.
  - a positive float means that the income trend is increasing during the time period.

**Note:** For transactions with \`frequency\`=\`SINGLE\`, this value returns \`null\`.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "lookback_periods",
              "schema": {
                "description": "Number of period units (based on *rolling months*) used to generate insights and calculations.

**Note:** A *rolling month* is a period of 30 days. For example, 2023-01-15 to 2023-02-2023.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "full_periods",
              "schema": {
                "description": "Number of period units (based on *rolling months*) with data to perform calculations.

**Note:** A *rolling month* is a period of 30 days. For example, 2023-01-15 to 2023-02-2023.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "periods_with_income",
              "schema": {
                "description": "Number of period units (based on *rolling months*) with at least one income available.

**Note:** A *rolling month* is a period of 30 days. For example, 2023-01-15 to 2023-02-2023.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "number_of_incomes",
              "schema": {
                "description": "Number of income transactions over the \`lookback_periods\`.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "confidence",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "IncomeStreamsBodyConfidence",
                "nameOverride": undefined,
                "schema": "EnumIncomeStreamConfidence",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "IncomesPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "IncomesPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of income objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "IncomesPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "Income",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "IncomesRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "IncomesRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` that you want to get information for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowed_income_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "IncomesRequestAllowedIncomeTypesItem",
                    "nameOverride": undefined,
                    "schema": "EnumInvoiceAllowedIncomeTypesRequest",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minimum_confidence_level",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "IncomesRequestMinimumConfidenceLevel",
                  "nameOverride": undefined,
                  "schema": "EnumIncomeMinimumConfidenceLevelRequest",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "date_from",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date from which you want to start getting incomes for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_to\`.

⚠️ You must have at least 90 days between \`date_from\` and \`date_to\`.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "date_to",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date you want to stop getting incomes for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_from\`.

⚠️ You must have at least 90 days between \`date_from\` and \`date_to\`.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The OTP token generated by the bank.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Institution": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Institution",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the institution as designated by Belvo.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the institution, as designated by Belvo.
Please see our [Institutions](https://developers.belvo.com/docs/institution) DevPortal article for a detailed list of institution names.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InstitutionType",
                  "nameOverride": undefined,
                  "schema": "EnumInstitutionType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "website",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL of the institution's website.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL of the institution's website.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer-facing name of the institution.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "country_codes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The country codes where the institution is available, for example:
- 🇧🇷 BR (Brazil)
- 🇨🇴 CO (Colombia)
- 🇲🇽 MX (Mexico)
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "primary_color",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The primary color on the institution's website.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "logo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL of the institution's logo.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL of the institution's logo.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "icon_logo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL of the institution's icon logo.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL of the institution's icon logo.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "text_logo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL of the institution's text logo.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL of the institution's text logo.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "form_fields",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "InstitutionFormFieldsItem",
                    "nameOverride": undefined,
                    "schema": "InstitutionsFormField",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "features",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The features that the institution supports. If the institution has no special features, then Belvo returns an empty array.

Here is a list of the available features:
- \`token_required\` indicates that the institution may require a token during link creation or when making any other requests.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "InstitutionFeaturesItem",
                    "nameOverride": undefined,
                    "schema": "InstitutionsFeature",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "resources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A list of Belvo resources that you can use with the institution. This list includes one or more of the following resources:

  - \`ACCOUNTS\`
  - \`BALANCES\`
  - \`INCOMES\`
  - \`INVESTMENTS_PORTFOLIOS\` 
  - \`INVESTMENTS_TRANSACTIONS\` *This field has been deprecated.*
  - \`INVOICES\`
  - \`OWNERS\`
  - \`RECURRING_EXPENSES\`
  - \`RISK_INSIGHTS\`
  - \`TRANSACTIONS\`
  - \`TAX_COMPLIANCE_STATUS\`
  - \`TAX_STATUS\`
  - \`TAX_RETURNS\`
",
                  "type": "array",
                  "value": {
                    "description": "A Belvo resource that the institution supports.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "integration_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InstitutionIntegrationType",
                  "nameOverride": undefined,
                  "schema": "EnumInstitutionIntegrationType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InstitutionStatus",
                  "nameOverride": undefined,
                  "schema": "EnumInstitutionStatus",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "InstitutionAccount": {
          "allOf": [],
          "description": "Details regarding the institution.",
          "generatedName": "InstitutionAccount",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the institution, as designated by Belvo.
Please see our [Institutions](https://developers.belvo.com/docs/institution) DevPortal article for a detailed list of institution names.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InstitutionAccountType",
                  "nameOverride": undefined,
                  "schema": "EnumInstitutionType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "InstitutionDownError": {
          "allOf": [],
          "description": "This error occurs when the institution's website that you're trying to access is down due to maintenance or other issues, which means Belvo is unable to create new links or retrieve new data.",
          "generatedName": "InstitutionDownError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`institution_down\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-institution_down" target="_blank">400 institution_down errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`institution_down\` errors, the description is:
  
  - \`The financial institution is down, try again later\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InstitutionFormField": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InstitutionFormField",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The username, password, or username type field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The input type for the form field. For example, string.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The label of the form field. For example:
- Document
- Clave
- Token
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "validation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of input validation used for the field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "placeholder",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The placeholder text in the form field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "validation_message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The message displayed when an invalid input is provided in the form field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of additional form field values.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "InstitutionFormFieldValuesItem",
                    "nameOverride": undefined,
                    "schema": "InstitutionsFormFieldValues",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "length",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Number of digits allowed when the type is \`token\`.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "optional",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "It indicates whether this form field is optional.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InstitutionInactiveError": {
          "allOf": [],
          "description": "This error occurs when we (Belvo) have deactivated the institution in our API.",
          "generatedName": "InstitutionInactiveError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`institution_inactive\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-institution_inactive" target="_blank">400 institution_inactive errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`institution_inactive\` errors, the description is:
  
  - \`The institution has been temporarily deactivated\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InstitutionUnavailableError": {
          "allOf": [],
          "description": "This error occurs when the institution's website that you're trying to access is down due to maintenance or other issues, which means Belvo is unable to create new links or retrieve new data.",
          "generatedName": "InstitutionUnavailableError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`institution_unavailable\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-institution_unavailable" target="_blank">400 institution_unavailable errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error.

For \`institution_unavailable\` errors, the description is:
  
  - \`The financial institution is unavailable\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InstitutionsFeature": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InstitutionsFeature",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the feature.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The description of the feature.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InstitutionsFormField": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InstitutionsFormField",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The username, password, or username type field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The input type for the form field. For example, string.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The label of the form field. For example:
- Client number
- Key Bancanet
- Document
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "validation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of input validation used for the field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "placeholder",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The placeholder text in the form field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "validation_message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The message displayed when an invalid input is provided in the form field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "If the form field is for documents, the institution may require additional input regarding the document type.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "InstitutionsFormFieldValuesItem",
                    "nameOverride": undefined,
                    "schema": "InstitutionsFormFieldValues",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "InstitutionsFormFieldValues": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InstitutionsFormFieldValues",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The code of the document.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The label for the field. For example:
- Cédula de Ciudadanía
- Cédula de Extranjería
- Pasaporte
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "validation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of input validation used for the field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "validation_message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The message displayed when an invalid input is provided in the form field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "placeholder",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The placeholder text in the form field.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InstitutionsPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InstitutionsPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of institution objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "InstitutionsPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "Institution",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "InvalidAccessMode": {
          "allOf": [],
          "description": "This error occurs when you try to update a link from single to recurrent, but there are no login credentials stored for the user.",
          "generatedName": "InvalidAccessMode",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`invalid_access_mode_switch\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-invalid_access_mode_switch" target="_blank">400 invalid_access_mode_switch errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`invalid_access_mode_switch\` errors, the description is:
  
  - \`This link doesn't have stored credentials hence it can't be switched to recurrent mode"\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvalidLinkError": {
          "allOf": [],
          "description": "This error occurs when you try to access an account but the user credentials are no longer valid, prompting an error from the institution.",
          "generatedName": "InvalidLinkError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`invalid_link\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-invalid_link" target="_blank">400 invalid_link errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`invalid_link\` errors, the description is:
  
  - \`The link has been invalidated. You may need to update link credentials\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvalidPeriodError": {
          "allOf": [],
          "description": "This error occurs when you request incomes for a link within a given date range, however, the period between \`date_from\` and \`date_to\` is less than 90 days.",
          "generatedName": "InvalidPeriodError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`invalid_period\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-invalid_period" target="_blank">400 invalid_period errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`invalid_period\` errors, the description is:
  
  - \`The number of days between date_from and date_to must be at least 90 days\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvestmentsPortfolio": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvestmentsPortfolio",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the current portfolio.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the portfolio, as given in the institution.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "InvestmentsPortfolioType",
                "nameOverride": undefined,
                "schema": "EnumInvestmentPortfolioType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "balance_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether this account is either an \`ASSET\` or a \`LIABILITY\`. You can consider the balance of an \`ASSET\` as being positive, while the balance of a \`LIABILITY\` as negative.
",
                  "type": "nullable",
                  "value": {
                    "description": "Indicates whether this account is either an \`ASSET\` or a \`LIABILITY\`. You can consider the balance of an \`ASSET\` as being positive, while the balance of a \`LIABILITY\` as negative.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "balance_gross",
              "schema": {
                "description": "The current gross total value of the entire portfolio and all its underlying instruments, as given by the institution.
",
                "type": "nullable",
                "value": {
                  "description": "The current gross total value of the entire portfolio and all its underlying instruments, as given by the institution.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "balance_net",
              "schema": {
                "description": "The total current value of the entire portfolio and all its underlying instruments, as given by the institution.

ℹ️ **Note:** In Brazil, this is usually calculated based on the net value (that is, not including tax).
",
                "type": "nullable",
                "value": {
                  "description": "The total current value of the entire portfolio and all its underlying instruments, as given by the institution.

ℹ️ **Note:** In Brazil, this is usually calculated based on the net value (that is, not including tax).
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The currency of the portfolio. For example:


- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)


Please note that other currencies other than in the list above may be returned.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "instruments",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An array of instruments that fall into the investment portfolio.",
                  "type": "nullable",
                  "value": {
                    "description": "An array of instruments that fall into the investment portfolio.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "InvestmentsPortfolioInstrumentsItem",
                      "nameOverride": undefined,
                      "schema": "InvestmentsPortfolioInstrument",
                      "type": "reference",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "InvestmentsPortfolioInstrument": {
          "description": undefined,
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": undefined,
            "generatedName": "InvestmentsPortfolioInstrument",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "id",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Belvo's unique ID for the current instrument.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "public_id",
                "schema": {
                  "description": "The public identifiers for the instrument.",
                  "type": "nullable",
                  "value": {
                    "description": "The public identifiers for the instrument.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "InvestmentsPortfolioInstrumentPublicIdItem",
                      "nameOverride": undefined,
                      "schema": "InvestmentsPortfolioInstrumentPublicId",
                      "type": "reference",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvestmentsPortfolioInstrumentType",
                  "nameOverride": undefined,
                  "schema": "EnumInvestmentPortfolioInstrumentType",
                  "type": "reference",
                },
              },
              {
                "conflict": [],
                "key": "subtype",
                "schema": {
                  "description": "The subtype for the instrument, as given by the institution.",
                  "type": "nullable",
                  "value": {
                    "description": "The subtype for the instrument, as given by the institution.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "name",
                "schema": {
                  "description": "The name of the instrument, as given by the institution.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "currency",
                "schema": {
                  "description": "The currency of the instrument. For example:

- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)
- 🇺🇸 USD (US Dollar)


Please note that other currencies other than in the list above may be returned.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "price",
                "schema": {
                  "description": "The current price of one share in the instrument.",
                  "type": "nullable",
                  "value": {
                    "description": "The current price of one share in the instrument.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "quantity",
                "schema": {
                  "description": "The total amount of shares owned in the instrument.",
                  "type": "nullable",
                  "value": {
                    "description": "The total amount of shares owned in the instrument.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "balance_gross",
                "schema": {
                  "description": "The total gross value of the instrument (including taxes).",
                  "type": "nullable",
                  "value": {
                    "description": "The total gross value of the instrument (including taxes).",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "balance_net",
                "schema": {
                  "description": "The total net value of the instrument (excluding taxes).",
                  "type": "nullable",
                  "value": {
                    "description": "The total net value of the instrument (excluding taxes).",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "average_acquisition_price",
                "schema": {
                  "description": "The average price of each share acquired in the instrument.",
                  "type": "nullable",
                  "value": {
                    "description": "The average price of each share acquired in the instrument.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "profit",
                "schema": {
                  "description": "The current profit earned in the instrument.",
                  "type": "nullable",
                  "value": {
                    "description": "The current profit earned in the instrument.",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "open_date",
                "schema": {
                  "description": "The start date of the instrument. Only applicable for instruments of type \`bond\` or \`savings\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The start date of the instrument. Only applicable for instruments of type \`bond\` or \`savings\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "redemption_conditions",
                "schema": {
                  "description": "An array of conditions that apply to the instrument in order to retrieve the final value.

For example, the due date, the liquidity date, the previdencia type, and so on.
",
                  "type": "nullable",
                  "value": {
                    "description": "An array of conditions that apply to the instrument in order to retrieve the final value.

For example, the due date, the liquidity date, the previdencia type, and so on.
",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "InvestmentsPortfolioInstrumentRedemptionConditionsItem",
                      "nameOverride": undefined,
                      "schema": "InvestmentsPortfolioInstrumentRedemptionConditions",
                      "type": "reference",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "fees",
                "schema": {
                  "description": "An array of fees that apply to the instrument.",
                  "type": "nullable",
                  "value": {
                    "description": "An array of fees that apply to the instrument.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "InvestmentsPortfolioInstrumentFeesItem",
                      "nameOverride": undefined,
                      "schema": "InvestmentsPortfolioInstrumentFees",
                      "type": "reference",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "interest_rates",
                "schema": {
                  "description": "An array of interest rates that apply to the instrument.",
                  "type": "nullable",
                  "value": {
                    "description": "An array of interest rates that apply to the instrument.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "InvestmentsPortfolioInstrumentInterestRatesItem",
                      "nameOverride": undefined,
                      "schema": "InvestmentsPortfolioInstrumentInterestRate",
                      "type": "reference",
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "InvestmentsPortfolioInstrumentFees": {
          "description": undefined,
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": undefined,
            "generatedName": "InvestmentsPortfolioInstrumentFees",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "type",
                "schema": {
                  "description": "The fee type incurred when making the purchase of the instrument.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "value",
                "schema": {
                  "description": "The value of \`fees.type\`. The currency of the fee is the same as the currency of the instrument.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            ],
            "type": "object",
          },
        },
        "InvestmentsPortfolioInstrumentInterestRate": {
          "description": undefined,
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": undefined,
            "generatedName": "InvestmentsPortfolioInstrumentInterestRate",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "type",
                "schema": {
                  "description": "How often the interest rate is calculated on the instrument.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "value",
                "schema": {
                  "description": "The interest rate for the instrument, in percent.


ℹ️  **Note:** If the \`interest_rate.index\` is present, this value is a percentage of the index. For example, if \`interest_rate.index\` = \`CDI\` and \`interest_rate.value\` = \`90\`, then the total interest rate applied is 90% of the CDI.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "index",
                "schema": {
                  "description": "If applicable, the index type that the \`interest_rates.value\` is calculated against.",
                  "type": "nullable",
                  "value": {
                    "description": "If applicable, the index type that the \`interest_rates.value\` is calculated against.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "InvestmentsPortfolioInstrumentPublicId": {
          "allOf": [],
          "description": "The public identifiers for the instrument.",
          "generatedName": "InvestmentsPortfolioInstrumentPublicId",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": "The type of public identifier for the instrument.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": "The value of the \`public_id.type\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "InvestmentsPortfolioInstrumentRedemptionConditions": {
          "description": undefined,
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": undefined,
            "generatedName": "InvestmentsPortfolioInstrumentRedemptionConditions",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "type",
                "schema": {
                  "description": "The name of the redemption condition.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "value",
                "schema": {
                  "description": "The value of \`redemption_conditions.type\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "type": "object",
          },
        },
        "InvestmentsPortfoliosPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvestmentsPortfoliosPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of investment portfolio objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "InvestmentsPortfoliosPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "InvestmentsPortfolio",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoiceDetailDian": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvoiceDetailDian",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the invoice item (an invoice can have one or more items).",
                "type": "nullable",
                "value": {
                  "description": "The description of the invoice item (an invoice can have one or more items).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "product_identification",
              "schema": {
                "description": "The identification code of the product or the service, as defined by the legal entity in the country.
",
                "type": "nullable",
                "value": {
                  "description": "The identification code of the product or the service, as defined by the legal entity in the country.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "quantity",
              "schema": {
                "description": "The quantity of this invoice item.",
                "type": "nullable",
                "value": {
                  "description": "The quantity of this invoice item.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "unit_code",
              "schema": {
                "description": "The unit of measure, as defined by the legal entity in the country.
",
                "type": "nullable",
                "value": {
                  "description": "The unit of measure, as defined by the legal entity in the country.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "unit_description",
              "schema": {
                "description": "The description of the item, as defined by the legal entity in the country.
",
                "type": "nullable",
                "value": {
                  "description": "The description of the item, as defined by the legal entity in the country.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "unit_amount",
              "schema": {
                "description": "The price of one singular item.",
                "type": "nullable",
                "value": {
                  "description": "The price of one singular item.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The item's tax type.",
                  "type": "nullable",
                  "value": {
                    "description": "The item's tax type.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "pre_tax_amount",
              "schema": {
                "description": "The total price for this item before tax is applied (\`quantity\` x \`unit_amount\`).",
                "type": "nullable",
                "value": {
                  "description": "The total price for this item before tax is applied (\`quantity\` x \`unit_amount\`).",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_percentage",
              "schema": {
                "description": "The tax percentage to apply.",
                "type": "nullable",
                "value": {
                  "description": "The tax percentage to apply.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_amount",
              "schema": {
                "description": "The amount of tax for this invoice item (\`pre_tax_amount\` x \`tax_percentage\`).",
                "type": "nullable",
                "value": {
                  "description": "The amount of tax for this invoice item (\`pre_tax_amount\` x \`tax_percentage\`).",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "total_amount",
              "schema": {
                "description": "The total price for this invoice item (\`pre_tax_amount\` + \`tax_amount\`).",
                "type": "nullable",
                "value": {
                  "description": "The total price for this invoice item (\`pre_tax_amount\` + \`tax_amount\`).",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp when the data point was collected.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoiceDetailRetainedTaxSat": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvoiceDetailRetainedTaxSat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp when the data point was collected.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for SAT Mexico and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for SAT Mexico and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "tax",
              "schema": {
                "description": "The type of retained tax (for example, ISR, IVA or IEPS).",
                "type": "nullable",
                "value": {
                  "description": "The type of retained tax (for example, ISR, IVA or IEPS).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_percentage",
              "schema": {
                "description": "The percentage of tax retained.",
                "type": "nullable",
                "value": {
                  "description": "The percentage of tax retained.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "retained_tax_amount",
              "schema": {
                "description": "The amount of retained tax.",
                "type": "nullable",
                "value": {
                  "description": "The amount of retained tax.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoiceDetailSat": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvoiceDetailSat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the invoice item (an invoice can have one or more items).",
                "type": "nullable",
                "value": {
                  "description": "The description of the invoice item (an invoice can have one or more items).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "product_identification",
              "schema": {
                "description": "The identification code of the product or the service, as defined by the legal entity in the country.
- 🇲🇽 [Mexico](http://200.57.3.89/Pys/catPyS.aspx)
",
                "type": "nullable",
                "value": {
                  "description": "The identification code of the product or the service, as defined by the legal entity in the country.
- 🇲🇽 [Mexico](http://200.57.3.89/Pys/catPyS.aspx)
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "quantity",
              "schema": {
                "description": "The quantity of this invoice item.",
                "type": "nullable",
                "value": {
                  "description": "The quantity of this invoice item.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "unit_code",
              "schema": {
                "description": "The unit of measure, as defined by the legal entity in the country. 
- 🇲🇽 Mexico [SAT catalog reference](https://developers.belvo.com/docs/sat-catalogs#unit-code)
",
                "type": "nullable",
                "value": {
                  "description": "The unit of measure, as defined by the legal entity in the country. 
- 🇲🇽 Mexico [SAT catalog reference](https://developers.belvo.com/docs/sat-catalogs#unit-code)
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "unit_description",
              "schema": {
                "description": "The description of the item, as defined by the legal entity in the country.
- 🇲🇽 Mexico [SAT catalog reference](https://developers.belvo.com/docs/sat-catalogs#unit-code)
",
                "type": "nullable",
                "value": {
                  "description": "The description of the item, as defined by the legal entity in the country.
- 🇲🇽 Mexico [SAT catalog reference](https://developers.belvo.com/docs/sat-catalogs#unit-code)
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "unit_amount",
              "schema": {
                "description": "The price of one a singular item.",
                "type": "nullable",
                "value": {
                  "description": "The price of one a singular item.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "pre_tax_amount",
              "schema": {
                "description": "The total price for this item before tax is applied (\`quantity\` x \`unit_amount\`).",
                "type": "nullable",
                "value": {
                  "description": "The total price for this item before tax is applied (\`quantity\` x \`unit_amount\`).",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_percentage",
              "schema": {
                "description": "The tax percentage to apply.",
                "type": "nullable",
                "value": {
                  "description": "The tax percentage to apply.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_amount",
              "schema": {
                "description": "The amount of tax for this invoice item (\`pre_tax_amount\` x \`tax_percentage\`).",
                "type": "nullable",
                "value": {
                  "description": "The amount of tax for this invoice item (\`pre_tax_amount\` x \`tax_percentage\`).",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "total_amount",
              "schema": {
                "description": "The total price for this invoice item (\`pre_tax_amount\` + \`tax_amount\`).",
                "type": "nullable",
                "value": {
                  "description": "The total price for this invoice item (\`pre_tax_amount\` + \`tax_amount\`).",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "retained_taxes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The retained tax on the invoice item.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "InvoiceDetailSatRetainedTaxesItem",
                    "nameOverride": undefined,
                    "schema": "InvoiceDetailRetainedTaxSat",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp when the data point was collected.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoiceDian": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvoiceDian",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier for the current invoice.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The \`link.id\` the invoice belongs to.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoice_identification",
              "schema": {
                "description": "The fiscal institution's unique ID for the invoice.",
                "type": "nullable",
                "value": {
                  "description": "The fiscal institution's unique ID for the invoice.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoice_date",
              "schema": {
                "description": "The date of the invoice.",
                "type": "nullable",
                "value": {
                  "description": "The date of the invoice.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": "The status of the invoice. Can be one of:

  - *Vigente* (valid)
  - *Cancelado* (cancelled)
  - *Aprobado* (approved)",
                "type": "nullable",
                "value": {
                  "description": "The status of the invoice. Can be one of:

  - *Vigente* (valid)
  - *Cancelado* (cancelled)
  - *Aprobado* (approved)",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expiration_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates when the invoice is set to expire.

For example: If the invoice is paid in installments, this field indicates the date when the installment is to be paid.
",
                  "type": "nullable",
                  "value": {
                    "description": "Indicates when the invoice is set to expire.

For example: If the invoice is paid in installments, this field indicates the date when the installment is to be paid.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "invoice_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "InvoiceDianInvoiceType",
                "nameOverride": undefined,
                "schema": "EnumInvoiceDianInvoiceType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "InvoiceDianType",
                "nameOverride": undefined,
                "schema": "EnumInvoiceType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "sender_id",
              "schema": {
                "description": "The fiscal ID of the invoice sender.",
                "type": "nullable",
                "value": {
                  "description": "The fiscal ID of the invoice sender.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sender_name",
              "schema": {
                "description": "The name of the invoice sender.",
                "type": "nullable",
                "value": {
                  "description": "The name of the invoice sender.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sender_details",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceDianSenderDetails",
                  "nameOverride": undefined,
                  "schema": "InvoiceSenderDetailsDian",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "sender_tax_fraud_status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not the sender is on a tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.
**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "Indicates whether or not the sender is on a tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.
**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_id",
              "schema": {
                "description": "The fiscal ID of the invoice receiver.",
                "type": "nullable",
                "value": {
                  "description": "The fiscal ID of the invoice receiver.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_name",
              "schema": {
                "description": "The name of the invoice receiver.",
                "type": "nullable",
                "value": {
                  "description": "The name of the invoice receiver.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_details",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceDianReceiverDetails",
                  "nameOverride": undefined,
                  "schema": "InvoicesReceiverDetailsDian",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_tax_fraud_status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "cancelation_status",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "cancelation_update_date",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "certification_date",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "certification_authority",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_type",
              "schema": {
                "description": "The payment type code used for this invoice, as defined by the country legal entity.

For detailed information regarding DIAN's payment types, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                "type": "nullable",
                "value": {
                  "description": "The payment type code used for this invoice, as defined by the country legal entity.

For detailed information regarding DIAN's payment types, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_type_description",
              "schema": {
                "description": "The description of the payment method used for this invoice.
",
                "type": "nullable",
                "value": {
                  "description": "The description of the payment method used for this invoice.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_method",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceDianPaymentMethod",
                  "nameOverride": undefined,
                  "schema": "EnumInvoiceDianPaymentMethod",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_method_description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The description of the payment method used for this invoice.
",
                  "type": "nullable",
                  "value": {
                    "description": "The description of the payment method used for this invoice.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "usage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "place_of_issue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "invoice_details",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceDianInvoiceDetailsItem",
                  "nameOverride": undefined,
                  "schema": "InvoiceDetailDian",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The currency of the invoice. For example:
 
 - 🇧🇷 BRL (Brazilian Real)
 - 🇨🇴 COP (Colombian Peso)
 - 🇲🇽 MXN (Mexican Peso)
 - 🇺🇸 USD (United States Dollar)
",
                "type": "nullable",
                "value": {
                  "description": "The currency of the invoice. For example:
 
 - 🇧🇷 BRL (Brazilian Real)
 - 🇨🇴 COP (Colombian Peso)
 - 🇲🇽 MXN (Mexican Peso)
 - 🇺🇸 USD (United States Dollar)
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "subtotal_amount",
              "schema": {
                "description": "The pretax amount of this invoice (sum of each item's \`pre_tax_amount\`).
",
                "type": "nullable",
                "value": {
                  "description": "The pretax amount of this invoice (sum of each item's \`pre_tax_amount\`).
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "exchange_rate",
              "schema": {
                "description": "The exchange rate used in this invoice for the currency.
",
                "type": "nullable",
                "value": {
                  "description": "The exchange rate used in this invoice for the currency.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_amount",
              "schema": {
                "description": "The amount of tax for this invoice (sum of each item's \`tax_amount\`).
",
                "type": "nullable",
                "value": {
                  "description": "The amount of tax for this invoice (sum of each item's \`tax_amount\`).
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "discount_amount",
              "schema": {
                "description": "The total amount discounted in this invoice.
",
                "type": "nullable",
                "value": {
                  "description": "The total amount discounted in this invoice.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "total_amount",
              "schema": {
                "description": "The total amount of the invoice (\`subtotal_amount\` + \`tax_amount\` - \`discount_amount\`)",
                "type": "nullable",
                "value": {
                  "description": "The total amount of the invoice (\`subtotal_amount\` + \`tax_amount\` - \`discount_amount\`)",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payments",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceDianPaymentsItem",
                  "nameOverride": undefined,
                  "schema": "InvoicesPaymentsDian",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "payroll",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "InvoiceDianPayroll",
                "nameOverride": undefined,
                "schema": "InvoicesPayrollDian",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "folio",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "xml",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "warnings",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceDianWarnings",
                  "nameOverride": undefined,
                  "schema": "InvoiceWarningsDian",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoiceSenderDetailsDian": {
          "description": "Details regarding the sender.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Details regarding the sender.
",
            "generatedName": "InvoiceSenderDetailsDian",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "collected_at",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The ISO-8601 timestamp when the data point was collected.",
                    "type": "nullable",
                    "value": {
                      "description": "The ISO-8601 timestamp when the data point was collected.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "tax_payer_type",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Indicates if the sender is a business or an individual. Can be either:
  
  - \`Persona Jurídica\`
  - \`Persona Natural\`
",
                    "type": "nullable",
                    "value": {
                      "description": "Indicates if the sender is a business or an individual. Can be either:
  
  - \`Persona Jurídica\`
  - \`Persona Natural\`
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "regimen",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The sender's regimen type.

For detailed information regarding DIAN's regimens, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                    "type": "nullable",
                    "value": {
                      "description": "The sender's regimen type.

For detailed information regarding DIAN's regimens, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "tax_scheme",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The sender's fiscal responsibilities.

For detailed information regarding DIAN's tax schemes, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                    "type": "nullable",
                    "value": {
                      "description": "The sender's fiscal responsibilities.

For detailed information regarding DIAN's tax schemes, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "country",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The country where the sender pays their taxes.
",
                    "type": "nullable",
                    "value": {
                      "description": "The country where the sender pays their taxes.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "address",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The sender's address.
",
                    "type": "nullable",
                    "value": {
                      "description": "The sender's address.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "phone_number",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The sender's phone number.
",
                    "type": "nullable",
                    "value": {
                      "description": "The sender's phone number.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "email",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The sender's email address.
",
                    "type": "nullable",
                    "value": {
                      "description": "The sender's email address.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "InvoiceWarningsDian": {
          "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "generatedName": "InvoiceWarningsDian",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "code",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "message",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "InvoiceWarningsSat": {
          "description": "Object containing information about any warnings related to this invoice.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Object containing information about any warnings related to this invoice.
",
            "generatedName": "InvoiceWarningsSat",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "code",
                "schema": {
                  "description": "The warning code.
",
                  "type": "nullable",
                  "value": {
                    "description": "The warning code.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "message",
                "schema": {
                  "description": "The description of the warning.
",
                  "type": "nullable",
                  "value": {
                    "description": "The description of the warning.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "InvoiceWithIdSat": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvoiceWithIdSat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier used to reference the current invoice.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The \`link.id\` the invoice belongs to.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoice_identification",
              "schema": {
                "description": "The fiscal institution's unique ID for the invoice.",
                "type": "nullable",
                "value": {
                  "description": "The fiscal institution's unique ID for the invoice.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoice_date",
              "schema": {
                "description": "The date of the invoice.",
                "type": "nullable",
                "value": {
                  "description": "The date of the invoice.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": "The status of the invoice. Can be either *Vigente* (valid) or *Cancelado* (cancelled).",
                "type": "nullable",
                "value": {
                  "description": "The status of the invoice. Can be either *Vigente* (valid) or *Cancelado* (cancelled).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoice_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "InvoiceWithIdSatInvoiceType",
                "nameOverride": undefined,
                "schema": "EnumInvoiceSatInvoiceType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "InvoiceWithIdSatType",
                "nameOverride": undefined,
                "schema": "EnumInvoiceType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "sender_id",
              "schema": {
                "description": "The fiscal ID of the invoice sender",
                "type": "nullable",
                "value": {
                  "description": "The fiscal ID of the invoice sender",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sender_name",
              "schema": {
                "description": "The name of the invoice sender.",
                "type": "nullable",
                "value": {
                  "description": "The name of the invoice sender.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sender_tax_fraud_status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not the sender is on SAT's tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.<br><br>
SAT updates the tax fraud list every three months. <br><br>
For more information regarding the reason's a taxpayer can be put on the tax fraud list, please see [Article 69](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69.html) and [Article 69-B](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69B.html) of Mexico's Código Fiscal de la Federación. <br><br>
Possible statuses are:
- \`INVESTIGATING\` <br> The fiscal institution has identified irregularities and open an investigation regarding the taxpayer. <br> - \`DISMISSED\` <br> The fiscal institution has investigated the taxpayer and declared them innocent. <br> - \`CONFIRMED\` <br> The fiscal institution has confirmed that the taxpayer is guilty. <br> - \`OVERTURNED\` <br> The fiscal institution has reassessed a previously confirmed taxpayer and, based on new evidence, has taken the taxpayer off the tax fraud list. <br> - \`NO_TAX_FRAUD_STATUS\` <br> The receiver or sender is not found in the list (in other words, they are complying with the fiscal institution's regulations).",
                  "type": "nullable",
                  "value": {
                    "description": "Indicates whether or not the sender is on SAT's tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.<br><br>
SAT updates the tax fraud list every three months. <br><br>
For more information regarding the reason's a taxpayer can be put on the tax fraud list, please see [Article 69](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69.html) and [Article 69-B](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69B.html) of Mexico's Código Fiscal de la Federación. <br><br>
Possible statuses are:
- \`INVESTIGATING\` <br> The fiscal institution has identified irregularities and open an investigation regarding the taxpayer. <br> - \`DISMISSED\` <br> The fiscal institution has investigated the taxpayer and declared them innocent. <br> - \`CONFIRMED\` <br> The fiscal institution has confirmed that the taxpayer is guilty. <br> - \`OVERTURNED\` <br> The fiscal institution has reassessed a previously confirmed taxpayer and, based on new evidence, has taken the taxpayer off the tax fraud list. <br> - \`NO_TAX_FRAUD_STATUS\` <br> The receiver or sender is not found in the list (in other words, they are complying with the fiscal institution's regulations).",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_id",
              "schema": {
                "description": "The fiscal ID of the invoice receiver.",
                "type": "nullable",
                "value": {
                  "description": "The fiscal ID of the invoice receiver.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_name",
              "schema": {
                "description": "The name of the invoice receiver.",
                "type": "nullable",
                "value": {
                  "description": "The name of the invoice receiver.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_tax_fraud_status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not the receiver is on SAT's tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.<br><br>
SAT updates the tax fraud list every three months. <br><br>
For more information regarding the reason's a taxpayer can be put on the tax fraud list, please see [Article 69](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69.html) and [Article 69-B](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69B.html) of Mexico's Código Fiscal de la Federación. <br><br>
Possible statuses are:
- \`INVESTIGATING\` <br> The fiscal institution has identified irregularities and open an investigation regarding the taxpayer. <br> - \`DISMISSED\` <br> The fiscal institution has investigated the taxpayer and declared them innocent. <br> - \`CONFIRMED\` <br> The fiscal institution has confirmed that the taxpayer is guilty. <br> - \`OVERTURNED\` <br> The fiscal institution has reassessed a previously confirmed taxpayer and, based on new evidence, has taken the taxpayer off the tax fraud list. <br> - \`NO_TAX_FRAUD_STATUS\` <br> The receiver or sender is not found in the list (in other words, they are complying with the fiscal institution's regulations).",
                  "type": "nullable",
                  "value": {
                    "description": "Indicates whether or not the receiver is on SAT's tax fraud list for having submitted incorrect data, having outstanding payments, or having conducted business that is in violation of the fiscal institution's regulations.<br><br>
SAT updates the tax fraud list every three months. <br><br>
For more information regarding the reason's a taxpayer can be put on the tax fraud list, please see [Article 69](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69.html) and [Article 69-B](http://omawww.sat.gob.mx/cifras_sat/Paginas/datos/vinculo.html?page=ListCompleta69B.html) of Mexico's Código Fiscal de la Federación. <br><br>
Possible statuses are:
- \`INVESTIGATING\` <br> The fiscal institution has identified irregularities and open an investigation regarding the taxpayer. <br> - \`DISMISSED\` <br> The fiscal institution has investigated the taxpayer and declared them innocent. <br> - \`CONFIRMED\` <br> The fiscal institution has confirmed that the taxpayer is guilty. <br> - \`OVERTURNED\` <br> The fiscal institution has reassessed a previously confirmed taxpayer and, based on new evidence, has taken the taxpayer off the tax fraud list. <br> - \`NO_TAX_FRAUD_STATUS\` <br> The receiver or sender is not found in the list (in other words, they are complying with the fiscal institution's regulations).",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "cancelation_status",
              "schema": {
                "description": "If the invoice is cancelled, this field indicates the status of the cancellation.",
                "type": "nullable",
                "value": {
                  "description": "If the invoice is cancelled, this field indicates the status of the cancellation.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "cancelation_update_date",
              "schema": {
                "description": "The date of the invoice cancelation.
",
                "type": "nullable",
                "value": {
                  "description": "The date of the invoice cancelation.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "certification_date",
              "schema": {
                "description": "The date of the fiscal certification.
",
                "type": "nullable",
                "value": {
                  "description": "The date of the fiscal certification.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "certification_authority",
              "schema": {
                "description": "The fiscal ID of the certification provider.
",
                "type": "nullable",
                "value": {
                  "description": "The fiscal ID of the certification provider.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_type",
              "schema": {
                "description": "The payment type code used for this invoice, as defined by the country legal entity.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-type)
",
                "type": "nullable",
                "value": {
                  "description": "The payment type code used for this invoice, as defined by the country legal entity.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-type)
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_type_description",
              "schema": {
                "description": "*This field has been deprecated.*
",
                "type": "nullable",
                "value": {
                  "description": "*This field has been deprecated.*
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_method",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceWithIdSatPaymentMethod",
                  "nameOverride": undefined,
                  "schema": "EnumInvoiceSatPaymentMethod",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_method_description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "*This field has been deprecated.*

*The description of the payment method used for this invoice.*
",
                  "type": "nullable",
                  "value": {
                    "description": "*This field has been deprecated.*

*The description of the payment method used for this invoice.*
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "usage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The invoice's usage code, as defined by the legal entity of the country. 

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#usage)
",
                  "type": "nullable",
                  "value": {
                    "description": "The invoice's usage code, as defined by the legal entity of the country. 

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#usage)
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The CFDI version of the invoice.
",
                  "type": "nullable",
                  "value": {
                    "description": "The CFDI version of the invoice.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "place_of_issue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The postcode of where the invoice was issued.
",
                  "type": "nullable",
                  "value": {
                    "description": "The postcode of where the invoice was issued.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "invoice_details",
              "schema": {
                "description": "A list of descriptions for each item (purchased product or service provided) in the invoice.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceWithIdSatInvoiceDetailsItem",
                  "nameOverride": undefined,
                  "schema": "InvoiceDetailSat",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The currency of the invoice. For example:
 
 - 🇧🇷 BRL (Brazilian Real)
 - 🇨🇴 COP (Colombian Peso)
 - 🇲🇽 MXN (Mexican Peso)
 - 🇺🇸 USD (United States Dollar)
",
                "type": "nullable",
                "value": {
                  "description": "The currency of the invoice. For example:
 
 - 🇧🇷 BRL (Brazilian Real)
 - 🇨🇴 COP (Colombian Peso)
 - 🇲🇽 MXN (Mexican Peso)
 - 🇺🇸 USD (United States Dollar)
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "subtotal_amount",
              "schema": {
                "description": "The pretax amount of this invoice (sum of each item's \`pre_tax_amount\`).
",
                "type": "nullable",
                "value": {
                  "description": "The pretax amount of this invoice (sum of each item's \`pre_tax_amount\`).
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "exchange_rate",
              "schema": {
                "description": "The exchange rate used in this invoice for the currency.
",
                "type": "nullable",
                "value": {
                  "description": "The exchange rate used in this invoice for the currency.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_amount",
              "schema": {
                "description": "The amount of tax for this invoice (sum of each item's \`tax_amount\`).
",
                "type": "nullable",
                "value": {
                  "description": "The amount of tax for this invoice (sum of each item's \`tax_amount\`).
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "discount_amount",
              "schema": {
                "description": "The total amount discounted in this invoice.
",
                "type": "nullable",
                "value": {
                  "description": "The total amount discounted in this invoice.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "total_amount",
              "schema": {
                "description": "The total amount of the invoice (\`subtotal_amount\` + \`tax_amount\` - \`discount_amount\`)",
                "type": "nullable",
                "value": {
                  "description": "The total amount of the invoice (\`subtotal_amount\` + \`tax_amount\` - \`discount_amount\`)",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payments",
              "schema": {
                "description": "A list detailing all the invoice payments.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceWithIdSatPaymentsItem",
                  "nameOverride": undefined,
                  "schema": "InvoicesPaymentsSat",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "payroll",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "InvoiceWithIdSatPayroll",
                "nameOverride": undefined,
                "schema": "InvoicesPayrollSat",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "folio",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The internal control number that the taxpayer assigns to the invoice.
",
                  "type": "nullable",
                  "value": {
                    "description": "The internal control number that the taxpayer assigns to the invoice.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "xml",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "XML of the invoice document.
",
                  "type": "nullable",
                  "value": {
                    "description": "XML of the invoice document.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "warnings",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoiceWithIdSatWarnings",
                  "nameOverride": undefined,
                  "schema": "InvoiceWarningsSat",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "sender_blacklist_status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "This field has been deprecated. Please use \`sender_tax_fraud_status\` instead.
",
                  "type": "nullable",
                  "value": {
                    "description": "This field has been deprecated. Please use \`sender_tax_fraud_status\` instead.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_blacklist_status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "This field has been deprecated. Please use \`receiver_tax_fraud_status\` instead.
",
                  "type": "nullable",
                  "value": {
                    "description": "This field has been deprecated. Please use \`receiver_tax_fraud_status\` instead.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoicesPaymentsDian": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvoicesPaymentsDian",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "date",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_type",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "exchange_rate",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "operation_number",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiary_rfc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiary_account_number",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_rfc",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_account_number",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_bank_name",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "related_documents",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoicesPaymentsDianRelatedDocumentsItem",
                  "nameOverride": undefined,
                  "schema": "InvoicesPaymentsRelatedDocumentsDian",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoicesPaymentsRelatedDocumentsDian": {
          "allOf": [],
          "description": "List of all the related deferred invoices affected by the payment.",
          "generatedName": "InvoicesPaymentsRelatedDocumentsDian",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "invoice_identification",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_method",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partiality_number",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous_balance",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "amount_paid",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "outstanding_balance",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoicesPaymentsRelatedDocumentsSat": {
          "allOf": [],
          "description": "List of all the related deferred invoices affected by the payment.",
          "generatedName": "InvoicesPaymentsRelatedDocumentsSat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "invoice_identification",
              "schema": {
                "description": "The fiscal institution's unique ID for the related deferred invoice.
",
                "type": "nullable",
                "value": {
                  "description": "The fiscal institution's unique ID for the related deferred invoice.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The currency of the related invoice. For example:
    
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)
  
  Please note that other currencies other than in the list above may be returned.
",
                "type": "nullable",
                "value": {
                  "description": "The currency of the related invoice. For example:
    
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)
  
  Please note that other currencies other than in the list above may be returned.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_method",
              "schema": {
                "description": "The payment method of the related invoice.
",
                "type": "nullable",
                "value": {
                  "description": "The payment method of the related invoice.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partiality_number",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The payment installment number.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "previous_balance",
              "schema": {
                "description": "The invoice amount before the payment.
",
                "type": "nullable",
                "value": {
                  "description": "The invoice amount before the payment.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "amount_paid",
              "schema": {
                "description": "The amount paid in this installment.
",
                "type": "nullable",
                "value": {
                  "description": "The amount paid in this installment.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "outstanding_balance",
              "schema": {
                "description": "The amount remaining to be paid.
",
                "type": "nullable",
                "value": {
                  "description": "The amount remaining to be paid.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoicesPaymentsSat": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvoicesPaymentsSat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "date",
              "schema": {
                "description": "ISO-8601 timestamp when the payment was made.
",
                "type": "nullable",
                "value": {
                  "description": "ISO-8601 timestamp when the payment was made.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_type",
              "schema": {
                "description": "Payment type code used for this invoice, as defined by the country's legal entity.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-type)
",
                "type": "nullable",
                "value": {
                  "description": "Payment type code used for this invoice, as defined by the country's legal entity.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payment-type)
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The currency of the payment. For example:

- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)

Please note that other currencies other than in the list above may be returned.
",
                "type": "nullable",
                "value": {
                  "description": "The currency of the payment. For example:

- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)

Please note that other currencies other than in the list above may be returned.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "exchange_rate",
              "schema": {
                "description": "The \`currency\` to MXN currency exchange rate when the payment was made.
",
                "type": "nullable",
                "value": {
                  "description": "The \`currency\` to MXN currency exchange rate when the payment was made.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "The invoice amount, in the currency of the original invoice.
",
                "type": "nullable",
                "value": {
                  "description": "The invoice amount, in the currency of the original invoice.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "operation_number",
              "schema": {
                "description": "The fiscal institution's internal identifier for the operation.
",
                "type": "nullable",
                "value": {
                  "description": "The fiscal institution's internal identifier for the operation.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiary_rfc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The fiscal ID of the payment beneficiary.
",
                  "type": "nullable",
                  "value": {
                    "description": "The fiscal ID of the payment beneficiary.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiary_account_number",
              "schema": {
                "description": "The bank account number of the payment beneficiary.
",
                "type": "nullable",
                "value": {
                  "description": "The bank account number of the payment beneficiary.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_rfc",
              "schema": {
                "description": "The fiscal ID of the payment issuer.
",
                "type": "nullable",
                "value": {
                  "description": "The fiscal ID of the payment issuer.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_account_number",
              "schema": {
                "description": "The bank account number of the payment issuer.
",
                "type": "nullable",
                "value": {
                  "description": "The bank account number of the payment issuer.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_bank_name",
              "schema": {
                "description": "The banking institution that was used by the payment issuer.
",
                "type": "nullable",
                "value": {
                  "description": "The banking institution that was used by the payment issuer.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "related_documents",
              "schema": {
                "description": "A list of all the related deferred invoices affected by the payment.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "InvoicesPaymentsSatRelatedDocumentsItem",
                  "nameOverride": undefined,
                  "schema": "InvoicesPaymentsRelatedDocumentsSat",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoicesPayrollDian": {
          "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
            "generatedName": "InvoicesPayrollDian",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "days",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "type",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "amount",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "version",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "date_from",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "date_to",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "collected_at",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                    "type": "nullable",
                    "value": {
                      "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "payment_date",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "InvoicesPayrollSat": {
          "description": "Details regarding the payroll payment. Only applicable for payroll invoices.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Details regarding the payroll payment. Only applicable for payroll invoices.
",
            "generatedName": "InvoicesPayrollSat",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "days",
                "schema": {
                  "description": "The number of days covered by the payment.
",
                  "type": "nullable",
                  "value": {
                    "description": "The number of days covered by the payment.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "type",
                "schema": {
                  "description": "The payroll type, as defined by the legal entity of the country.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payroll-type)
",
                  "type": "nullable",
                  "value": {
                    "description": "The payroll type, as defined by the legal entity of the country.

- 🇲🇽 Mexico [SAT catalog reference article](https://developers.belvo.com/docs/sat-catalogs#payroll-type)
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "amount",
                "schema": {
                  "description": "The total amount of the payroll payment.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "version",
                "schema": {
                  "description": "The version of the payroll object.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "date_from",
                "schema": {
                  "description": "The start date of the payment period.
",
                  "type": "nullable",
                  "value": {
                    "description": "The start date of the payment period.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "date_to",
                "schema": {
                  "description": "The end date of the payment period.
",
                  "type": "nullable",
                  "value": {
                    "description": "The end date of the payment period.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "collected_at",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The ISO-8601 timestamp when the data point was collected.",
                    "type": "nullable",
                    "value": {
                      "description": "The ISO-8601 timestamp when the data point was collected.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "payment_date",
                "schema": {
                  "description": "The payment date.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "type": "object",
          },
        },
        "InvoicesReceiverDetailsDian": {
          "description": "Details regarding the receiver.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Details regarding the receiver.
",
            "generatedName": "InvoicesReceiverDetailsDian",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "collected_at",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The ISO-8601 timestamp when the data point was collected.",
                    "type": "nullable",
                    "value": {
                      "description": "The ISO-8601 timestamp when the data point was collected.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "tax_payer_type",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Indicates if the receiver is a business or an individual. Can be either:
  
  - \`Persona Jurídica\`
  - \`Persona Natural\`
",
                    "type": "nullable",
                    "value": {
                      "description": "Indicates if the receiver is a business or an individual. Can be either:
  
  - \`Persona Jurídica\`
  - \`Persona Natural\`
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "regimen",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The receiver's regimen type.

For detailed information regarding DIAN's regimens, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                    "type": "nullable",
                    "value": {
                      "description": "The receiver's regimen type.

For detailed information regarding DIAN's regimens, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "tax_scheme",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The receiver's fiscal responsibilities.

For detailed information regarding DIAN's tax schemes, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                    "type": "nullable",
                    "value": {
                      "description": "The receiver's fiscal responsibilities.

For detailed information regarding DIAN's tax schemes, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "country",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The country where the receiver pays their taxes.
",
                    "type": "nullable",
                    "value": {
                      "description": "The country where the receiver pays their taxes.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "address",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The receiver's address.
",
                    "type": "nullable",
                    "value": {
                      "description": "The receiver's address.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "phone_number",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The receiver's phone number.
",
                    "type": "nullable",
                    "value": {
                      "description": "The receiver's phone number.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "email",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The receiver's email address.
",
                    "type": "nullable",
                    "value": {
                      "description": "The receiver's email address.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "InvoicesRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvoicesRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The fiscal \`link.id\` to use.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_from",
              "schema": {
                "description": "The date from which you want to start getting invoices for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_to",
              "schema": {
                "description": "The date you want to stop getting invoices for, in \`YYYY-MM-DD\` format.

⚠️ The number of days between \`date_from\` and \`date_to\` cannot be over 365.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "InvoicesRequestType",
                "nameOverride": undefined,
                "schema": "EnumInvoiceType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "attach_xml",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "When set to \`true\`, you will receive the XML invoice in the response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "InvoicesResponsePaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InvoicesResponsePaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of invoice objects.",
                  "type": "array",
                  "value": {
                    "oneOf": {
                      "description": undefined,
                      "generatedName": "InvoicesResponsePaginatedResponseResultsItem",
                      "nameOverride": undefined,
                      "schemas": [
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "InvoicesResponsePaginatedResponseResultsItemInvoicesResponsePaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "InvoiceWithIdSat",
                          "type": "reference",
                        },
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "InvoicesResponsePaginatedResponseResultsItemInvoicesResponsePaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "InvoiceDian",
                          "type": "reference",
                        },
                      ],
                      "type": "undisciminated",
                    },
                    "type": "oneOf",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "LastErrorInvalidCredentials": {
          "allOf": [],
          "description": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when the credentials that your customer provides are incorrect.",
          "generatedName": "LastErrorInvalidCredentials",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "error_code",
              "schema": {
                "description": "A unique error code (\`invalid_credentials\`) that allows you to classify and handle the error programmatically.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "error_message",
              "schema": {
                "description": "A short description of the error.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "LastErrorInvalidToken": {
          "allOf": [],
          "description": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when the MFA token your customer provides is invalid.",
          "generatedName": "LastErrorInvalidToken",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "error_code",
              "schema": {
                "description": "A unique error code (\`invalid_token\`) that allows you to classify and handle the error programmatically.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "error_message",
              "schema": {
                "description": "A short description of the error.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "LastErrorLoginError": {
          "allOf": [],
          "description": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when something unexpected happened in the \`pse_display_credentials_required\` next step.",
          "generatedName": "LastErrorLoginError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "error_code",
              "schema": {
                "description": "A unique error code (\`login_error\`) that allows you to classify and handle the error programmatically.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "error_message",
              "schema": {
                "description": "A short description of the error.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "LastErrorPaymentError": {
          "allOf": [],
          "description": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when something unexpected happened during the payment intent process.",
          "generatedName": "LastErrorPaymentError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "error_code",
              "schema": {
                "description": "A unique error code (\`payment_error\`) that allows you to classify and handle the error programmatically.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "error_message",
              "schema": {
                "description": "A short description of the error.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "LastErrorSessionExpired": {
          "allOf": [],
          "description": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error occurs when you try to send a PATCH request after the session has already expired (the session expires after 10 minutes).",
          "generatedName": "LastErrorSessionExpired",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "error_code",
              "schema": {
                "description": "A unique error code (\`session_expired\`) that allows you to classify and handle the error programmatically.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "error_message",
              "schema": {
                "description": "A short description of the error.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "LastErrorTwoFactor": {
          "allOf": [],
          "description": "Information about the error you ran into in the previous step of the payment intent, if applicable. This error can occur when something unexpected happened in the \`pse_display_token_required\` next step.",
          "generatedName": "LastErrorTwoFactor",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "error_code",
              "schema": {
                "description": "A unique error code (\`login_two_factor_error\`) that allows you to classify and handle the error programmatically.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "error_message",
              "schema": {
                "description": "A short description of the error.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Link": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Link",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the current Link.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's name for the institution.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "access_mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LinkAccessMode",
                  "nameOverride": undefined,
                  "schema": "EnumLinkAccessModeResponse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "last_accessed_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of Belvo's most recent successful access to the institution for the given link.",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp of Belvo's most recent successful access to the institution for the given link.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "external_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The \`external_id\` you provided as an additional identifier for the link. For more information, see our [Link creation article](https://developers.belvo.com/docs/link-creation-best-practices#adding-your-own-identifier).",
                  "type": "nullable",
                  "value": {
                    "description": "The \`external_id\` you provided as an additional identifier for the link. For more information, see our [Link creation article](https://developers.belvo.com/docs/link-creation-best-practices#adding-your-own-identifier).",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "institution_user_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "<div style="background-color:#f4f6f8; border-left: 6px solid #0663F9;padding: 12px;margin-left: 25px; border-radius: 4px; margin-right: 25px"> <strong>Info:</strong> Only applicable for links created <b>after 08-02-2022</b>. </div>

A unique 44-character string that can be used to identify a user at a given institution.

📚 Check out our [Avoiding duplicated links](https://developers.belvo.com/docs/link-creation-best-practices#avoiding-duplicated-links) DevPortal article for more information and tips on how to use it.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LinkStatus",
                  "nameOverride": undefined,
                  "schema": "EnumLinkStatus",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique ID for the user that created this link.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refresh_rate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LinkRefreshRate",
                  "nameOverride": undefined,
                  "schema": "EnumLinkRefreshRate",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "LinksPutRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "LinksPutRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "password",
              "schema": {
                "description": "The end-user's password used to log in to the institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "password2",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The end-user's second password used to log in to the institution.

ℹ️ This is only required by some institutions. To know which institutions require a second password, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The MFA token required by the bank to log in.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "username_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Type of document to be used as a username.

  Some banking institutions accept different documents to be used as the \`username\` to login. For example, the *Cédula de Ciudadanía*, *Cédula de Extranjería*, *Pasaporte'*, and so on.

  For banks that require a document to log in, you **must** provide the \`username_type\` parameter to specify which document is used when creating the link.

  ℹ️ To know which institutions require the \`username_type\` parameter, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.

  For a list of standards codes, see the table below.

| Code | Description |
|-----------|-------|
| \`001\` | Cédula de Ciudadanía |
| \`002\` | Cédula de Extranjería |
| \`003\` | Pasaporte |
| \`004\` | Tarjeta de Identidad |
| \`005\` | Registro Civil |
| \`006\` | Número Identificación Personal |
| \`020\` | NIT |
| \`021\` | NIT Persona Natural |
| \`022\` | NIT Persona Extranjera |
| \`023\` | NIT Persona Jurídica |
| \`024\` | NIT Menores |
| \`025\` | NIT Desasociado |
| \`030\` | Trj. Seguro Social Extranjero |
| \`031\` | Sociedad Extranjera sin NIT en Colombia |
| \`032\` | Fideicomiso |
| \`033\` | RIF Venezuela |
| \`034\` | CIF |
| \`035\` | Número de Identidad |
| \`036\` | RTN |
| \`037\` | Cédula de Identidad |
| \`038\` | DIMEX |
| \`039\` | CED |
| \`040\` | PAS |
| \`041\` | Documento Único de Identidad |
| \`042\` | NIT Salvadoreño |
| \`100\` | Agência e conta |
| \`101\` | Código do operador |
| \`102\` | Cartão de crédito |
| \`103\` | CPF |
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "certificate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.

Belvo supports a base64 encoded \`certificate\`. If the \`certificate\` parameter is used, you *must* also provide the \`private_key\` parameter.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "private_key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.

Belvo supports a base64 encoded \`private_key\`. If the \`private_key\` parameter is used, you *must* also provide the \`certificate\` parameter.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "LinksRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "LinksRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": "The Belvo name for the institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "username",
              "schema": {
                "description": "The end-user's username (or ID) used to log in to the institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "password",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The end-user's password used to log in to the institution.

ℹ️ **Note**: You must send through a password for all institutions except for IMSS (\`imss_mx_employment\`).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "external_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An additional identifier for the link, provided by you, to store in the Belvo database. **Cannot** include any Personal Identifiable Information (PII). **Must** be at least three characters long.

If we identify that the identifier contains PII, we will force a \`null\` value. For more information, see our [Link creation article](https://developers.belvo.com/docs/link-creation-best-practices#adding-your-own-identifier).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "username2",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The end-user's second username (or email address) used to log in to the institution.

ℹ️ This is only required by some institutions. To know which institutions require a second username, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "username3",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The end-user's third username used to log in to the institution.

ℹ️ This is only required by some institutions. To know which institutions require a third username, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "password2",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The end-user's second password used to log in to the institution.

ℹ️ This is only required by some institutions. To know which institutions require a second password, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The MFA token required by the bank to log in.

We do not recommend sending the authentication token in the same request as registering the user. See our [Handling multi-factor authentication](https://developers.belvo.com/docs/handling-2-factor-authentication) article for more information and best practices.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "access_mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LinksRequestAccessMode",
                  "nameOverride": undefined,
                  "schema": "EnumLinkAccessModeRequest",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "fetch_historical",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to retrieve historical information for the link or not. For links where \`access_mode=single\`, the default is \`false\`. For links where \`access_mode=recurrent\` this is hardcoded to \`true\`.
",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "credentials_storage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to store credentials (and the duration for which to store the credentials). By default, this is set to \`store\`. For links where \`access_mode=recurrent\`, this must be set to \`store\`.

Choose either:
  - \`store\` to store credentials
  - \`nostore\` to not store credentials
  - \`30d\` to store credentials only for 30 days
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "username_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Type of document to be used as a username.

Some banking institutions accept different documents to be used as the \`username\` to login. For example, the *Cédula de Ciudadanía*, *Cédula de Extranjería*, *Pasaporte'*, and so on.

For banks that require a document to log in, you **must** provide the \`username_type\` parameter to specify which document is used when creating the link.

ℹ️ To know which institutions require the \`username_type\` parameter, get the [details](https://developers.belvo.com/reference/detailinstitution) for the institution and check the \`form_fields\` array in the response.

For a list of standards codes, see the table below.

| Code | Description |
|-----------|-------|
| \`001\` | Cédula de Ciudadanía |
| \`002\` | Cédula de Extranjería |
| \`003\` | Pasaporte |
| \`004\` | Tarjeta de Identidad |
| \`005\` | Registro Civil |
| \`006\` | Número Identificación Personal |
| \`020\` | NIT |
| \`021\` | NIT Persona Natural |
| \`022\` | NIT Persona Extranjera |
| \`023\` | NIT Persona Jurídica |
| \`024\` | NIT Menores |
| \`025\` | NIT Desasociado |
| \`030\` | Trj. Seguro Social Extranjero |
| \`031\` | Sociedad Extranjera sin NIT en Colombia |
| \`032\` | Fideicomiso |
| \`033\` | RIF Venezuela |
| \`034\` | CIF |
| \`035\` | Número de Identidad |
| \`036\` | RTN |
| \`037\` | Cédula de Identidad |
| \`038\` | DIMEX |
| \`039\` | CED |
| \`040\` | PAS |
| \`041\` | Documento Único de Identidad |
| \`042\` | NIT Salvadoreño |
| \`100\` | Agência e conta |
| \`101\` | Código do operador |
| \`102\` | Cartão de crédito |
| \`103\` | CPF |
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "certificate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.

Belvo supports a base64 encoded \`certificate\`. If the \`certificate\` parameter is used, you *must* also provide the \`private_key\` parameter.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "private_key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For certain fiscal institutions, it is possible to log in using a certificate and a private key, which enables a faster connection to the institution.

Belvo supports a base64 encoded \`private_key\`. If the \`private_key\` parameter is used, you *must* also provide the \`certificate\` parameter.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "LoginError": {
          "allOf": [],
          "description": "This error can occur when:

  - the credentials that your user provides are incorrect or missing.
  - the MFA token your user provides is not supported by Belvo.
  - there is an issue with the institution that prevents logins.
  - the user's account is either locked or the user does not have permission to access their internet banking.",
          "generatedName": "LoginError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`login_error\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-login_error" target="_blank">400 login_error errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`login_error\` errors, the description can be one of the following:

  - \`Invalid credentials provided to login to the institution\`
  - \`A MFA token is required by the institution, but it's not supported yet by Belvo.\`
  - \`Impossible to login, something unexpected happened while logging into the institution. Try again later.\`
  - \`Login not attempted due to invalid credentials\`
  - \`Missing credentials to login to the institution\`
  - \`The user account access was forbidden by the institution\`
  - \`The user account is locked, user needs to contact the institution to unlock it\`",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NeedsRedirectContent": {
          "allOf": [],
          "description": "Details regarding the payer institution.",
          "generatedName": "NeedsRedirectContent",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NeedsRedirectContentPayerInstitution",
                  "nameOverride": undefined,
                  "schema": "paymentInstitution",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "NeedsRedirectContentPse": {
          "allOf": [],
          "description": "Details regarding the payer institution.",
          "generatedName": "NeedsRedirectContentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NeedsRedirectContentPsePayerInstitution",
                  "nameOverride": undefined,
                  "schema": "InstitutionFormField",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "NetIncomeIndividual": {
          "allOf": [],
          "description": "Object containing the declared net income of the tax payer. The values are calculated as the \`gross_income\` - \`non_taxable_income\`.",
          "generatedName": "NetIncomeIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "earned_income",
              "schema": {
                "description": "Income received from employment.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "fee_based_income",
              "schema": {
                "description": "Income received from emitted invoices (for example, income independent contractors or freelancers receive).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "capital_income",
              "schema": {
                "description": "Income received from an investment (such as dividends or from renting a property).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "non_labor_income",
              "schema": {
                "description": "Income that cannot be classified into the other three fields (such as income from cryptocurrencies or regular transfers from parents).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayConfirmationRequiredOfpi": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayConfirmationRequiredOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayConfirmationRequiredOfpiType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "open_finance_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_method_information",
                    },
                    {
                      "generatedName": "open_finance_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "open_finance_display_confirmation_required",
                    },
                    {
                      "generatedName": "open_finance_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "open_finance_display_needs_redirect",
                    },
                    {
                      "generatedName": "open_finance_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_processing",
                    },
                    {
                      "generatedName": "open_finance_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_succeeded",
                    },
                    {
                      "generatedName": "open_finance_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_failed",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "open_finance_display_confirmation_required",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayConfirmationRequiredOfpiOpenFinanceDisplayConfirmationRequired",
                  "nameOverride": undefined,
                  "schema": "DisplayConfirmationRequiredOfpi",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayConfirmationRequiredPse": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayConfirmationRequiredPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayConfirmationRequiredPseType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "pse_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_method_information",
                    },
                    {
                      "generatedName": "pse_display_credentials_required",
                      "nameOverride": undefined,
                      "value": "pse_display_credentials_required",
                    },
                    {
                      "generatedName": "pse_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "pse_display_needs_redirect",
                    },
                    {
                      "generatedName": "pse_display_token_required",
                      "nameOverride": undefined,
                      "value": "pse_display_token_required",
                    },
                    {
                      "generatedName": "pse_display_customer_bank_accounts",
                      "nameOverride": undefined,
                      "value": "pse_display_customer_bank_accounts",
                    },
                    {
                      "generatedName": "pse_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "pse_display_confirmation_required",
                    },
                    {
                      "generatedName": "pse_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_processing",
                    },
                    {
                      "generatedName": "pse_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_failed",
                    },
                    {
                      "generatedName": "pse_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_succeeded",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "pse_display_confirmation_required",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayConfirmationRequiredPsePseDisplayConfirmationRequired",
                  "nameOverride": undefined,
                  "schema": "DisplayConfirmationRequiredContentPse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayCredentialsRequiredPse": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayCredentialsRequiredPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayCredentialsRequiredPseType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "pse_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_method_information",
                    },
                    {
                      "generatedName": "pse_display_credentials_required",
                      "nameOverride": undefined,
                      "value": "pse_display_credentials_required",
                    },
                    {
                      "generatedName": "pse_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "pse_display_needs_redirect",
                    },
                    {
                      "generatedName": "pse_display_token_required",
                      "nameOverride": undefined,
                      "value": "pse_display_token_required",
                    },
                    {
                      "generatedName": "pse_display_customer_bank_accounts",
                      "nameOverride": undefined,
                      "value": "pse_display_customer_bank_accounts",
                    },
                    {
                      "generatedName": "pse_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "pse_display_confirmation_required",
                    },
                    {
                      "generatedName": "pse_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_processing",
                    },
                    {
                      "generatedName": "pse_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_failed",
                    },
                    {
                      "generatedName": "pse_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_succeeded",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "pse_display_credentials_required",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayCredentialsRequiredPsePseDisplayCredentialsRequired",
                  "nameOverride": undefined,
                  "schema": "DisplayCredentialsRequiredContentPse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayCustomerBankAccountsPse": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayCustomerBankAccountsPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayCustomerBankAccountsPseType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "pse_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_method_information",
                    },
                    {
                      "generatedName": "pse_display_credentials_required",
                      "nameOverride": undefined,
                      "value": "pse_display_credentials_required",
                    },
                    {
                      "generatedName": "pse_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "pse_display_needs_redirect",
                    },
                    {
                      "generatedName": "pse_display_token_required",
                      "nameOverride": undefined,
                      "value": "pse_display_token_required",
                    },
                    {
                      "generatedName": "pse_display_customer_bank_accounts",
                      "nameOverride": undefined,
                      "value": "pse_display_customer_bank_accounts",
                    },
                    {
                      "generatedName": "pse_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "pse_display_confirmation_required",
                    },
                    {
                      "generatedName": "pse_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_processing",
                    },
                    {
                      "generatedName": "pse_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_failed",
                    },
                    {
                      "generatedName": "pse_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_succeeded",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "pse_display_customer_bank_accounts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayCustomerBankAccountsPsePseDisplayCustomerBankAccounts",
                  "nameOverride": undefined,
                  "schema": "DisplayCustomerBankAccountsContentPse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayNeedsRedirectPse": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayNeedsRedirectPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayNeedsRedirectPseType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "pse_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_method_information",
                    },
                    {
                      "generatedName": "pse_display_credentials_required",
                      "nameOverride": undefined,
                      "value": "pse_display_credentials_required",
                    },
                    {
                      "generatedName": "pse_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "pse_display_needs_redirect",
                    },
                    {
                      "generatedName": "pse_display_token_required",
                      "nameOverride": undefined,
                      "value": "pse_display_token_required",
                    },
                    {
                      "generatedName": "pse_display_customer_bank_accounts",
                      "nameOverride": undefined,
                      "value": "pse_display_customer_bank_accounts",
                    },
                    {
                      "generatedName": "pse_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "pse_display_confirmation_required",
                    },
                    {
                      "generatedName": "pse_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_processing",
                    },
                    {
                      "generatedName": "pse_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_failed",
                    },
                    {
                      "generatedName": "pse_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_succeeded",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "pse_display_needs_redirect",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayNeedsRedirectPsePseDisplayNeedsRedirect",
                  "nameOverride": undefined,
                  "schema": "NeedsRedirectContentPse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayPaymentFailed": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayPaymentFailed",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayPaymentFailedType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "open_finance_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_method_information",
                    },
                    {
                      "generatedName": "open_finance_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "open_finance_display_confirmation_required",
                    },
                    {
                      "generatedName": "open_finance_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "open_finance_display_needs_redirect",
                    },
                    {
                      "generatedName": "open_finance_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_processing",
                    },
                    {
                      "generatedName": "open_finance_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_succeeded",
                    },
                    {
                      "generatedName": "open_finance_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_failed",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "open_finance_display_payment_failed",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayPaymentFailedOpenFinanceDisplayPaymentFailed",
                  "nameOverride": undefined,
                  "schema": "DisplayPaymentFailed",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`,you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayPaymentMethodInformation": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayPaymentMethodInformation",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayPaymentMethodInformationType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "open_finance_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_method_information",
                    },
                    {
                      "generatedName": "open_finance_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "open_finance_display_confirmation_required",
                    },
                    {
                      "generatedName": "open_finance_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "open_finance_display_needs_redirect",
                    },
                    {
                      "generatedName": "open_finance_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_processing",
                    },
                    {
                      "generatedName": "open_finance_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_succeeded",
                    },
                    {
                      "generatedName": "open_finance_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_failed",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "open_finance_display_payment_method_information",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayPaymentMethodInformationOpenFinanceDisplayPaymentMethodInformation",
                  "nameOverride": undefined,
                  "schema": "DisplayPaymentMethodInformationContentOfpi",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayPaymentMethodInformationPse": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type. You'll need to send a PATCH request with the institution selected by the customer or their bank accounts (if there are accounts already saved in the Belvo database).",
          "generatedName": "NextStepDisplayPaymentMethodInformationPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayPaymentMethodInformationPseType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "pse_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_method_information",
                    },
                    {
                      "generatedName": "pse_display_credentials_required",
                      "nameOverride": undefined,
                      "value": "pse_display_credentials_required",
                    },
                    {
                      "generatedName": "pse_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "pse_display_needs_redirect",
                    },
                    {
                      "generatedName": "pse_display_token_required",
                      "nameOverride": undefined,
                      "value": "pse_display_token_required",
                    },
                    {
                      "generatedName": "pse_display_customer_bank_accounts",
                      "nameOverride": undefined,
                      "value": "pse_display_customer_bank_accounts",
                    },
                    {
                      "generatedName": "pse_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "pse_display_confirmation_required",
                    },
                    {
                      "generatedName": "pse_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_processing",
                    },
                    {
                      "generatedName": "pse_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_failed",
                    },
                    {
                      "generatedName": "pse_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_succeeded",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "pse_display_payment_method_information",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayPaymentMethodInformationPsePseDisplayPaymentMethodInformation",
                  "nameOverride": undefined,
                  "schema": "DisplayPaymentMethodInformationContentPse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When the value is \`true\`, you'll need to make a PATCH request sending through \`confirm: true\` to confirm the payment.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayPaymentProcessing": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayPaymentProcessing",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayPaymentProcessingType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "open_finance_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_method_information",
                    },
                    {
                      "generatedName": "open_finance_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "open_finance_display_confirmation_required",
                    },
                    {
                      "generatedName": "open_finance_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "open_finance_display_needs_redirect",
                    },
                    {
                      "generatedName": "open_finance_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_processing",
                    },
                    {
                      "generatedName": "open_finance_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_succeeded",
                    },
                    {
                      "generatedName": "open_finance_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_failed",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "open_finance_display_payment_processing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayPaymentProcessingOpenFinanceDisplayPaymentProcessing",
                  "nameOverride": undefined,
                  "schema": "DisplayPaymentProcessing",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayPaymentSucceeded": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayPaymentSucceeded",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayPaymentSucceededType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "open_finance_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_method_information",
                    },
                    {
                      "generatedName": "open_finance_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "open_finance_display_confirmation_required",
                    },
                    {
                      "generatedName": "open_finance_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "open_finance_display_needs_redirect",
                    },
                    {
                      "generatedName": "open_finance_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_processing",
                    },
                    {
                      "generatedName": "open_finance_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_succeeded",
                    },
                    {
                      "generatedName": "open_finance_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_failed",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "open_finance_display_payment_succeeded",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayPaymentSucceededOpenFinanceDisplayPaymentSucceeded",
                  "nameOverride": undefined,
                  "schema": "DisplayPaymentSucceeded",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepDisplayTokenRequiredPse": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepDisplayTokenRequiredPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.
",
                  "generatedName": "NextStepDisplayTokenRequiredPseType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "pse_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_method_information",
                    },
                    {
                      "generatedName": "pse_display_credentials_required",
                      "nameOverride": undefined,
                      "value": "pse_display_credentials_required",
                    },
                    {
                      "generatedName": "pse_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "pse_display_needs_redirect",
                    },
                    {
                      "generatedName": "pse_display_token_required",
                      "nameOverride": undefined,
                      "value": "pse_display_token_required",
                    },
                    {
                      "generatedName": "pse_display_customer_bank_accounts",
                      "nameOverride": undefined,
                      "value": "pse_display_customer_bank_accounts",
                    },
                    {
                      "generatedName": "pse_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "pse_display_confirmation_required",
                    },
                    {
                      "generatedName": "pse_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_processing",
                    },
                    {
                      "generatedName": "pse_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_failed",
                    },
                    {
                      "generatedName": "pse_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "pse_display_payment_succeeded",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "pse_display_token_required",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepDisplayTokenRequiredPsePseDisplayTokenRequired",
                  "nameOverride": undefined,
                  "schema": "DisplayTokenRequiredContentPse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. This value will return: 

  - \`false\` when a customer wants to pay for the very first time. This is so because you still need to input information about your customer in the following steps to process a payment successfully. 
  - \`true\` when a customer wants to pay and this is not their first time. This is so because the payment intent has all the information needed about the customer to process a payment. 


**Note:** When the value is \`true\`, you'll need to confirm the payment intent. You can do this by making a PATCH request sending through the parameter \`confirm: true\`.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NextStepNeedsRedirect": {
          "allOf": [],
          "description": "Object detailing the next steps you should follow for a specific \`next_step\` type.",
          "generatedName": "NextStepNeedsRedirect",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of \`next_step\` you need to follow.",
                  "generatedName": "NextStepNeedsRedirectType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "open_finance_display_payment_method_information",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_method_information",
                    },
                    {
                      "generatedName": "open_finance_display_confirmation_required",
                      "nameOverride": undefined,
                      "value": "open_finance_display_confirmation_required",
                    },
                    {
                      "generatedName": "open_finance_display_needs_redirect",
                      "nameOverride": undefined,
                      "value": "open_finance_display_needs_redirect",
                    },
                    {
                      "generatedName": "open_finance_display_payment_processing",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_processing",
                    },
                    {
                      "generatedName": "open_finance_display_payment_succeeded",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_succeeded",
                    },
                    {
                      "generatedName": "open_finance_display_payment_failed",
                      "nameOverride": undefined,
                      "value": "open_finance_display_payment_failed",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "open_finance_display_needs_redirect",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NextStepNeedsRedirectOpenFinanceDisplayNeedsRedirect",
                  "nameOverride": undefined,
                  "schema": "NeedsRedirectContent",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ready_to_confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether the payment intent is ready to be confirmed. 

  **Note:** When set to \`true\`, you need to confirm the payment by making a PATCH request sending through \`confirm: true\`.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NonTaxableIncomeIndividual": {
          "allOf": [],
          "description": "Object containing the declared non-taxable income of the tax payer.",
          "generatedName": "NonTaxableIncomeIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "earned_income",
              "schema": {
                "description": "Income received from employment.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "fee_based_income",
              "schema": {
                "description": "Income received from emitted invoices (for example, income independent contractors or freelancers receive).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "capital_income",
              "schema": {
                "description": "Income received from an investment (such as dividends or from renting a property).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "non_labor_income",
              "schema": {
                "description": "Income that cannot be classified into the other three fields (such as income from cryptocurrencies or regular transfers from parents).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NotFoundError": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NotFoundError",
          "nameOverride": "NotFoundErrorBody",
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`not_found\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#404-not_found" target="_blank">404 not_found errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`not_found\` errors, the description is:
  
  - \`Not found\`",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Owner": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Owner",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier used to reference the current owner.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the current Link.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "internal_identification",
              "schema": {
                "description": "The institution's internal identifier for the owner.",
                "type": "nullable",
                "value": {
                  "description": "The institution's internal identifier for the owner.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": "The full name of the owner, as provided by the bank.",
                "type": "nullable",
                "value": {
                  "description": "The full name of the owner, as provided by the bank.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": "The account owner's registered email address.",
                "type": "nullable",
                "value": {
                  "description": "The account owner's registered email address.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "phone_number",
              "schema": {
                "description": "The account owner's registered phone number.",
                "type": "nullable",
                "value": {
                  "description": "The account owner's registered phone number.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "address",
              "schema": {
                "description": "The accounts owners registered address.",
                "type": "nullable",
                "value": {
                  "description": "The accounts owners registered address.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "document_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "OwnerDocumentId",
                  "nameOverride": undefined,
                  "schema": "OwnerDocumentId",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "first_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "*This field has been deprecated.*

*The first name of the account owner.*
",
                  "type": "nullable",
                  "value": {
                    "description": "*This field has been deprecated.*

*The first name of the account owner.*
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "last_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "*This field has been deprecated.*

*The last name of the account owner.*
",
                  "type": "nullable",
                  "value": {
                    "description": "*This field has been deprecated.*

*The last name of the account owner.*
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "second_last_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "*This field has been deprecated.*

*The second last name of the account owner.*
",
                  "type": "nullable",
                  "value": {
                    "description": "*This field has been deprecated.*

*The second last name of the account owner.*
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "OwnerDocumentId": {
          "description": "Information regarding the identification document the owner provided to the bank.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Information regarding the identification document the owner provided to the bank.",
            "generatedName": "OwnerDocumentId",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "document_type",
                "schema": {
                  "description": "The type of document the owner provided to the institution to open the account. Common document types are:

🇧🇷 Brazil
- \`CPF\` (*Cadastro de Pessoas Físicas*)
- \`CNPJ\`(*Cadastro Nacional de Pessoas Jurídicas*)

🇨🇴 Colombia
- \`CC\`(*Cédula de Ciudadanía*)
- \`NIT\` (*Número de Identificación Tributaria*)

🇲🇽 Mexico
- \`CURP\` (*Clave Única de Registro de Población*)
- \`NISS\` (*Número de Seguridad Social*)
",
                  "type": "nullable",
                  "value": {
                    "description": "The type of document the owner provided to the institution to open the account. Common document types are:

🇧🇷 Brazil
- \`CPF\` (*Cadastro de Pessoas Físicas*)
- \`CNPJ\`(*Cadastro Nacional de Pessoas Jurídicas*)

🇨🇴 Colombia
- \`CC\`(*Cédula de Ciudadanía*)
- \`NIT\` (*Número de Identificación Tributaria*)

🇲🇽 Mexico
- \`CURP\` (*Clave Única de Registro de Población*)
- \`NISS\` (*Número de Seguridad Social*)
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "document_number",
                "schema": {
                  "description": "The document's identification number.",
                  "type": "nullable",
                  "value": {
                    "description": "The document's identification number.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "OwnersPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "OwnersPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of owner objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "OwnersPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "Owner",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PaginatedResponseLink": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaginatedResponseLink",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaginatedResponseLinkResultsItem",
                    "nameOverride": undefined,
                    "schema": "Link",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PatchBody": {
          "allOf": [],
          "description": "A JSON object containing a session UUID and a MFA token",
          "generatedName": "PatchBody",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "session",
              "schema": {
                "description": "The session you want to resume. You need to use the \`session\` value that is provided in the 428 Token Required response that you receive after you make your POST request.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The MFA token generated by the institution and required to continue a session.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` you want to resume. Must be the same \`link.id\` as the one you receive in the 428 Token Required response that contains the \`session\` ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PatchBodyWithoutSaveData": {
          "allOf": [],
          "description": "A JSON object containing a session UUID and a MFA token",
          "generatedName": "PatchBodyWithoutSaveData",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "session",
              "schema": {
                "description": "The session you want to resume. You need to use the \`session\` value that is provided in the 428 Token Required response that you receive after you make your POST request.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The MFA token generated by the institution and required to continue a session.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` you want to resume. Must be the same \`link.id\` as the one you receive in the 428 Token Required response that contains the \`session\` ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PatchPaymentIntentPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PatchPaymentIntentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payment_method_details",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PatchPaymentIntentPsePaymentMethodDetails",
                "nameOverride": undefined,
                "schema": "PatchPaymentIntentsBodyPse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "confirm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Boolean that indicates whether this request confirms the payment intent. 

**Note:** You'll need to send this parameter set to \`true\` when the payment intent next_step returns \`ready_to_confirm: true\`, meaning the payment intent is ready to be confirmed.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PatchPaymentIntentsBodyPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PatchPaymentIntentsBodyPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "pse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PatchPaymentIntentsBodyPsePse",
                  "nameOverride": undefined,
                  "schema": "PatchPaymentMethodDetailsPse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "PatchPaymentMethodDetailsPse": {
          "allOf": [],
          "description": "Object with required fields to fill information in the payment intent object. The information you need to send through depends on the next step Belvo returns in the response.",
          "generatedName": "PatchPaymentMethodDetailsPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier for the payer’s institution.

**Note**: You need to send through this information after you received the \`pse_display_payment_method_information\` next step in the payment intent.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "username",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The username used to log in to the institution.

**Note**: You need to send through this information after you received the \`pse_display_credentials_required\` next step in the payment intent.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "password",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The password used to log in to the institution.

**Note**: You need to send through this information after you received the \`pse_display_credentials_required\` next step in the payment intent.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The MFA token generated by the institution and required to continue the payment flow.

**Note**: You need to send through this information if you received the \`pse_display_token_required\` next step in the payment intent.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_bank_account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier for the payer’s bank account.

**Note**: You need to send through this information after you received the \`pse_display_customer_bank_accounts\` next step in the payment intent.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentOfpi": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentIntentOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current payment intent.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created this payment intent.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": "Belvo's unique ID for the customer related to this payment intent.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowed_payment_method_types",
              "schema": {
                "description": "A list of payment method types allowed in this payment intent. For OFPI, the value will be \`open_finance\`.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "Amount to be paid by your customer.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentOfpiCurrency",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCurrency",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the payment.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "failure_code",
              "schema": {
                "description": "Error code that explains the reason behind a payment being unsuccessful (if applicable).
",
                "type": "nullable",
                "value": {
                  "description": "Error code that explains the reason behind a payment being unsuccessful (if applicable).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "failure_message",
              "schema": {
                "description": "Further information regarding the \`failure_code\`.
",
                "type": "nullable",
                "value": {
                  "description": "Further information regarding the \`failure_code\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "next_step",
              "schema": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "PaymentIntentOfpiNextStep",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentOfpiNextStepPaymentIntentOfpiNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayPaymentMethodInformation",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentOfpiNextStepPaymentIntentOfpiNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepNeedsRedirect",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentOfpiNextStepPaymentIntentOfpiNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayConfirmationRequiredOfpi",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentOfpiNextStepPaymentIntentOfpiNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayPaymentProcessing",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentOfpiNextStepPaymentIntentOfpiNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayPaymentSucceeded",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentOfpiNextStepPaymentIntentOfpiNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayPaymentFailed",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "last_error",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentOfpiLastError",
                "nameOverride": undefined,
                "schema": "LastErrorPaymentError",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_method_details",
              "schema": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "PaymentIntentOfpiPaymentMethodDetails",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentOfpiPaymentMethodDetailsPaymentIntentOfpiPaymentMethodDetails",
                      "nameOverride": undefined,
                      "schema": "PaymentIntentPaymentMethodDetailsIndividualOfpi",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentOfpiPaymentMethodDetailsPaymentIntentOfpiPaymentMethodDetails",
                      "nameOverride": undefined,
                      "schema": "PaymentIntentPaymentMethodDetailsBusinessOfpi",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "payment_method_information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentOfpiPaymentMethodInformation",
                "nameOverride": undefined,
                "schema": "PaymentMethodInformationOfpi",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "charges",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An array of charge objects related to this paymnet intent. If no charges are associated, we return an empty array.

**Note**: The charges resource will be deprecated and removed from our API by end of Q1 2023. We recommend not using any data from this resource.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaymentIntentOfpiChargesItem",
                    "nameOverride": undefined,
                    "schema": "Charge",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "provider",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentOfpiProvider",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinkProvider",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "selected_payment_method_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentOfpiSelectedPaymentMethodType",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinkAllowedPaymentMethod",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentOfpiStatus",
                "nameOverride": undefined,
                "schema": "EnumPaymentIntentStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "updated_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the payment intent was last updated.
",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp of when the payment intent was last updated.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentIntentPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of payment intent objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaymentIntentPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "PaymentIntentPse",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentPaymentMethodDetailsBodyBusinessOfpi": {
          "allOf": [],
          "description": "Payment method type selected.",
          "generatedName": "PaymentIntentPaymentMethodDetailsBodyBusinessOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "beneficiary_bank_account",
              "schema": {
                "description": "Belvo's unique ID used to identify the beneficiary's bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": "Belvo's unique ID to reference the payer's institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "callback_url",
              "schema": {
                "description": "The callback URL that your user will be redirected to after confirming the payment in their banking application.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "cpf",
              "schema": {
                "description": "The customer's CPF number. Only required when the \`customer_type\` is \`BUSINESS\`.

**Note:** This value is obfuscated.",
                "type": "nullable",
                "value": {
                  "description": "The customer's CPF number. Only required when the \`customer_type\` is \`BUSINESS\`.

**Note:** This value is obfuscated.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentPaymentMethodDetailsBodyIndividualOfpi": {
          "allOf": [],
          "description": "Payment method type selected.",
          "generatedName": "PaymentIntentPaymentMethodDetailsBodyIndividualOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "beneficiary_bank_account",
              "schema": {
                "description": "Belvo's unique ID used to identify the beneficiary's bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": "Belvo's unique ID to reference the payer's institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "callback_url",
              "schema": {
                "description": "The callback URL that your user will be redirected to after confirming the payment in their banking application.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "cpf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer's CPF number. Only required when the \`customer_type\` is \`BUSINESS\`.

**Note:** This value is obfuscated.",
                  "type": "nullable",
                  "value": {
                    "description": "The customer's CPF number. Only required when the \`customer_type\` is \`BUSINESS\`.

**Note:** This value is obfuscated.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentPaymentMethodDetailsBodyPse": {
          "allOf": [],
          "description": "Details about the payment method type selected.",
          "generatedName": "PaymentIntentPaymentMethodDetailsBodyPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payer_institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier for the payer’s institution.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payer_bank_account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID used to identify the customer’s bank account.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiary_bank_account",
              "schema": {
                "description": "Belvo's unique ID used to identify the beneficiary’s bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "username",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The username used to log in to the institution. This value is obfuscated.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "password",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The password used to log in to the institution. This value is obfuscated.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "callback_url",
              "schema": {
                "description": "The callback URL that your user will be redirected to after confirming the payment in their banking application.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "belvo_flow",
              "schema": {
                "description": "This parameter determines the payment flow of the payment intent. By default, this is set to \`true\` and the payment intent created is processed using the Belvo's payment flow and Belvo-integrated institutions. When set to \`false\`, the payment intent process uses institutions not integrated into Belvo's flow.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentPaymentMethodDetailsBusinessOfpi": {
          "allOf": [],
          "description": "Details about the OFPI payment method.",
          "generatedName": "PaymentIntentPaymentMethodDetailsBusinessOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "open_finance",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentPaymentMethodDetailsBusinessOfpiOpenFinance",
                "nameOverride": undefined,
                "schema": "PaymentIntentPaymentMethodDetailsBodyBusinessOfpi",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentPaymentMethodDetailsIndividualOfpi": {
          "allOf": [],
          "description": "Details about the OFPI payment method.",
          "generatedName": "PaymentIntentPaymentMethodDetailsIndividualOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "open_finance",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentPaymentMethodDetailsIndividualOfpiOpenFinance",
                "nameOverride": undefined,
                "schema": "PaymentIntentPaymentMethodDetailsBodyIndividualOfpi",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentPaymentMethodDetailsPse": {
          "allOf": [],
          "description": "Details about the PSE payment method.",
          "generatedName": "PaymentIntentPaymentMethodDetailsPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "pse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentIntentPaymentMethodDetailsPsePse",
                  "nameOverride": undefined,
                  "schema": "PaymentIntentPaymentMethodDetailsBodyPse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentIntentPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current payment intent.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created this payment intent.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": "Belvo's unique ID for the customer related to this payment intent.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowed_payment_method_types",
              "schema": {
                "description": "A list of payment method types allowed in this payment intent. For PSE, the value will be \`pse\`.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentIntentPseAllowedPaymentMethodTypesItem",
                  "nameOverride": undefined,
                  "schema": "EnumPaymentLinkAllowedPaymentMethod",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "Amount to be paid by your customer.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentPseCurrency",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCurrency",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the payment.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "failure_code",
              "schema": {
                "description": "Error code that explains the reason behind a payment being unsuccessful (if applicable).
",
                "type": "nullable",
                "value": {
                  "description": "Error code that explains the reason behind a payment being unsuccessful (if applicable).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "failure_message",
              "schema": {
                "description": "Further information regarding the \`failure_code\`.
",
                "type": "nullable",
                "value": {
                  "description": "Further information regarding the \`failure_code\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional and customizable object where you can provide any additional key-value pairs for your internal purposes. For example, an internal reference number.

⚠️ **Note**: You can only provide up to 50 keys (keys can have up to 50 characters each and each value can be up to 500 characters). We do not support nested objects, only ASCII values.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "next_step",
              "schema": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "PaymentIntentPseNextStep",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseNextStepPaymentIntentPseNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayPaymentMethodInformationPse",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseNextStepPaymentIntentPseNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayCredentialsRequiredPse",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseNextStepPaymentIntentPseNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayNeedsRedirectPse",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseNextStepPaymentIntentPseNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayTokenRequiredPse",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseNextStepPaymentIntentPseNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayCustomerBankAccountsPse",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseNextStepPaymentIntentPseNextStep",
                      "nameOverride": undefined,
                      "schema": "NextStepDisplayConfirmationRequiredPse",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "last_error",
              "schema": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "PaymentIntentPseLastError",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseLastErrorPaymentIntentPseLastError",
                      "nameOverride": undefined,
                      "schema": "LastErrorInvalidCredentials",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseLastErrorPaymentIntentPseLastError",
                      "nameOverride": undefined,
                      "schema": "LastErrorInvalidToken",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseLastErrorPaymentIntentPseLastError",
                      "nameOverride": undefined,
                      "schema": "LastErrorLoginError",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseLastErrorPaymentIntentPseLastError",
                      "nameOverride": undefined,
                      "schema": "LastErrorTwoFactor",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseLastErrorPaymentIntentPseLastError",
                      "nameOverride": undefined,
                      "schema": "LastErrorPaymentError",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentIntentPseLastErrorPaymentIntentPseLastError",
                      "nameOverride": undefined,
                      "schema": "LastErrorSessionExpired",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "payment_method_details",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentPsePaymentMethodDetails",
                "nameOverride": undefined,
                "schema": "PaymentIntentPaymentMethodDetailsPse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_method_information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentPsePaymentMethodInformation",
                "nameOverride": undefined,
                "schema": "PaymentMethodInformationPse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "charges",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An array of charge objects related to this paymnet intent. If no charges are associated, we return an empty array.

**Note**: The charges resource will be deprecated and removed from our API by end of Q1 2023. We recommend not using any data from this resource.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaymentIntentPseChargesItem",
                    "nameOverride": undefined,
                    "schema": "Charge",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "provider",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentPseProvider",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinkProvider",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "selected_payment_method_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentPseSelectedPaymentMethodType",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinkAllowedPaymentMethod",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentPseStatus",
                "nameOverride": undefined,
                "schema": "EnumPaymentIntentStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "updated_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the payment intent was last updated.
",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp of when the payment intent was last updated.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentsPaymentMethodDetailsBodyPse": {
          "allOf": [],
          "description": "Details about the organization's bank account that will receive the payment.",
          "generatedName": "PaymentIntentsPaymentMethodDetailsBodyPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "beneficiary_bank_account",
              "schema": {
                "description": "Belvo's unique ID used to identify the beneficiary's bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "callback_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to your application that your customer will be directed to once they confirm the payment in their bank application.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "belvo_flow",
              "schema": {
                "description": "This parameter determines the payment flow of the payment intent. By default, this is set to \`true\` and the payment intent created is processed using Belvo's payment flow and Belvo-integrated institutions. When set to \`false\`, the payment intent process uses institutions not integrated into Belvo's flow.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaymentIntentsPaymentMethodDetailsPse": {
          "allOf": [],
          "description": "Object with payment method details to create a payment intent.",
          "generatedName": "PaymentIntentsPaymentMethodDetailsPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "pse",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentIntentsPaymentMethodDetailsPsePse",
                "nameOverride": undefined,
                "schema": "PaymentIntentsPaymentMethodDetailsBodyPse",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "PaymentLinkCallbackUrls": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentLinkCallbackUrls",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "cancel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL that the user should be redirected to if they decide to cancel the payment process or if an error occurs.

**Note:** Not required if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "success",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL that the user should be redirected to when they complete the payment process successfully.

**Note:** Not required if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentLinkCallbackUrlsResponse": {
          "allOf": [],
          "description": "The URLs that the user should be redirected to.

**Note:** This field will return an empty object if your integration only generates payment links through the [Belvo Dashboard](https://dashboard.belvo.com/).",
          "generatedName": "PaymentLinkCallbackUrlsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "cancel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL that the user should be redirected to if they decide to cancel the payment process or if an error occurs.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "success",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL that the user should be redirected to when they complete the payment process successfully.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentLinkListOfpi": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentLinkListOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current payment link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the payment link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payment_url",
              "schema": {
                "description": "The URL for the hosted-widget that will guide your user through the payments process.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Belvo-generated access token for the payment link.

**Note:** You'll need the \`access_token\` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "callback_urls",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentLinkListOfpiCallbackUrls",
                "nameOverride": undefined,
                "schema": "PaymentLinkCallbackUrlsResponse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_intent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the payment intent. You can retrieve the complete payment intent by using our [Get details of a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) request.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "updated_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the payment link was last updated.
",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp of when the payment link was last updated.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentLinkListOfpiStatus",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinksStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": "The payment link expiration time.  ",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "expires_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the payment link is set to expire.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaymentLinkListPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentLinkListPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current payment link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the payment link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payment_url",
              "schema": {
                "description": "The URL for the hosted-widget that will guide your user through the payments process.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Belvo-generated access token for the payment link.

**Note:** You'll need the \`access_token\` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "callback_urls",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentLinkListPseCallbackUrls",
                "nameOverride": undefined,
                "schema": "PaymentLinkCallbackUrlsResponse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_intent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the payment intent. You can retrieve the complete payment intent by using our [Get details of a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) request.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "updated_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the payment link was last updated.
",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp of when the payment link was last updated.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentLinkListPseStatus",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinksStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": "The payment link expiration time.  ",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "expires_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the payment link is set to expire.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaymentLinkOfpi": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentLinkOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current payment link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the payment link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payment_url",
              "schema": {
                "description": "The URL for the hosted-widget that will guide your user through the payments process.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Belvo-generated access token for the payment link.

**Note:** You'll need the \`access_token\` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "callback_urls",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentLinkOfpiCallbackUrls",
                "nameOverride": undefined,
                "schema": "PaymentLinkCallbackUrlsResponse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_intent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentLinkOfpiPaymentIntent",
                  "nameOverride": undefined,
                  "schema": "PaymentIntentOfpi",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "updated_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the payment link was last updated.
",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp of when the payment link was last updated.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentLinkOfpiStatus",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinksStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": "The payment link expiration time.  ",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "expires_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the payment link is set to expire.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaymentLinkPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentLinkPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of bank account objects.",
                  "type": "array",
                  "value": {
                    "oneOf": {
                      "description": undefined,
                      "generatedName": "PaymentLinkPaginatedResponseResultsItem",
                      "nameOverride": undefined,
                      "schemas": [
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "PaymentLinkPaginatedResponseResultsItemPaymentLinkPaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "PaymentLinkListOfpi",
                          "type": "reference",
                        },
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "PaymentLinkPaginatedResponseResultsItemPaymentLinkPaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "PaymentLinkListPse",
                          "type": "reference",
                        },
                      ],
                      "type": "undisciminated",
                    },
                    "type": "oneOf",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentLinkPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentLinkPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current payment link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the payment link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payment_url",
              "schema": {
                "description": "The URL for the hosted-widget that will guide your user through the payments process.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Belvo-generated access token for the payment link.

**Note:** You'll need the \`access_token\` to make [Get details for a payment link](https://developers.belvo.com/reference/detailcreatepaymentlink) requests.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "callback_urls",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentLinkPseCallbackUrls",
                "nameOverride": undefined,
                "schema": "PaymentLinkCallbackUrlsResponse",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_intent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentLinkPsePaymentIntent",
                  "nameOverride": undefined,
                  "schema": "PaymentIntentPse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "updated_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the payment link was last updated.
",
                  "type": "nullable",
                  "value": {
                    "description": "The ISO-8601 timestamp of when the payment link was last updated.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentLinkPseStatus",
                "nameOverride": undefined,
                "schema": "EnumPaymentLinksStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": "The payment link expiration time. ",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "expires_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the payment link is set to expire.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaymentLinksPaymentMethodDetailsBodyOfpi": {
          "allOf": [],
          "description": "Details about the organization's bank account that will receive the payment.",
          "generatedName": "PaymentLinksPaymentMethodDetailsBodyOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "beneficiary_bank_account",
              "schema": {
                "description": "Belvo's unique ID used to identify the beneficiary's bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "callback_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to your application that your customer will be directed to once they confirm the payment in their bank application.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentLinksPaymentMethodDetailsBodyPse": {
          "allOf": [],
          "description": "Details about the organization's bank account that will receive the payment.",
          "generatedName": "PaymentLinksPaymentMethodDetailsBodyPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "beneficiary_bank_account",
              "schema": {
                "description": "Belvo's unique ID used to identify the beneficiary's bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "callback_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to your application that your customer will be directed to once they confirm the payment in their bank application.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "belvo_flow",
              "schema": {
                "description": "This parameter determines the payment flow of the payment intent. By default, this is set to \`true\` and the payment intent created is processed using the Belvo's payment flow and Belvo-integrated institutions. When set to \`false\`, the payment intent process uses institutions not integrated into Belvo's flow.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaymentMethodDetailsOfpi": {
          "allOf": [],
          "description": "Object with information required by Open Finance Payments in Brazil to create a payment intent.",
          "generatedName": "PaymentMethodDetailsOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "open_finance",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentMethodDetailsOfpiOpenFinance",
                "nameOverride": undefined,
                "schema": "PaymentLinksPaymentMethodDetailsBodyOfpi",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "PaymentMethodDetailsPse": {
          "allOf": [],
          "description": "Object with information required by PSE to create a payment intent.",
          "generatedName": "PaymentMethodDetailsPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "pse",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentMethodDetailsPsePse",
                "nameOverride": undefined,
                "schema": "PaymentLinksPaymentMethodDetailsBodyPse",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "PaymentMethodInfoCustomerBankAccountsPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentMethodInfoCustomerBankAccountsPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID used to identify the customer’s bank account.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the current customer.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentMethodInfoCustomerBankAccountsPseInstitution",
                  "nameOverride": undefined,
                  "schema": "paymentInstitution",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "number",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer's bank account number. This value is obfuscated.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "holder",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentMethodInfoCustomerBankAccountsPseHolder",
                  "nameOverride": undefined,
                  "schema": "HolderBankAccountPse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "details",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentMethodInfoCustomerBankAccountsPseDetails",
                  "nameOverride": undefined,
                  "schema": "PaymentMethodInformationDetailsPse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentMethodInformationBodyOfpi": {
          "allOf": [],
          "description": "Payment method type selected.",
          "generatedName": "PaymentMethodInformationBodyOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "provider_request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique ID for the payment, as sent by the provider.",
                  "type": "nullable",
                  "value": {
                    "description": "Unique ID for the payment, as sent by the provider.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "redirect_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "URL that redirects the user to the institution's website.",
                  "type": "nullable",
                  "value": {
                    "description": "URL that redirects the user to the institution's website.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "end_to_end_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique ID for the transaction in the Brazil's PIX payment system.",
                  "type": "nullable",
                  "value": {
                    "description": "A unique ID for the transaction in the Brazil's PIX payment system.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentMethodInformationBodyPse": {
          "allOf": [],
          "description": "Payment method type selected.",
          "generatedName": "PaymentMethodInformationBodyPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "provider_request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique ID for the payment, as sent by the provider.",
                  "type": "nullable",
                  "value": {
                    "description": "Unique ID for the payment, as sent by the provider.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "redirect_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "URL that redirects the user to the institution's website.",
                  "type": "nullable",
                  "value": {
                    "description": "URL that redirects the user to the institution's website.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "bank_payment_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique payment ID provided the institution.",
                  "type": "nullable",
                  "value": {
                    "description": "Unique payment ID provided the institution.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "end_to_end_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique ID for the transaction in Colombia's Payments Way system.",
                  "type": "nullable",
                  "value": {
                    "description": "A unique ID for the transaction in Colombia's Payments Way system.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentMethodInformationDetailsPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentMethodInformationDetailsPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentMethodInformationDetailsPseCountry",
                  "nameOverride": undefined,
                  "schema": "EnumPaymentsCountry",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "account_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of bank account. For example, \`Ahorros\` or \`Corriente\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentMethodInformationOfpi": {
          "allOf": [],
          "description": "Information about the payment method selected.",
          "generatedName": "PaymentMethodInformationOfpi",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "open_finance",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentMethodInformationOfpiOpenFinance",
                  "nameOverride": undefined,
                  "schema": "PaymentMethodInformationBodyOfpi",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentMethodInformationPse": {
          "allOf": [],
          "description": "Information about the payment method selected.

**Note**: If no payment method information is associated, we return an empty array.",
          "generatedName": "PaymentMethodInformationPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "pse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentMethodInformationPsePse",
                  "nameOverride": undefined,
                  "schema": "PaymentMethodInformationBodyPse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentWebhookRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentWebhookRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name you want to provide to identify the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The URL where webhook events should be sent to.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "auth_header",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The authentication header for the request. **Must** be set to \`Authorization\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "auth_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The authentication token you need to send webhook events. Can be either:


  - \`Bearer\` and a token (for Bearer authentication). 
  - \`Basic\` and a base64-encoded username:password string (for Basic authentication).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentsInstitutionsPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentsInstitutionsPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of institution objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaymentsInstitutionsPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "paymentInstitution",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentsTransactionsPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentsTransactionsPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of transaction objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaymentsTransactionsPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "paymentTransaction",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PaymentsWay": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentsWay",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "terminal_id",
              "schema": {
                "description": "Your unique Payments Way terminal ID.

**Note:** Belvo provides you with the Payments Way terminal ID during your onboarding process. If you don't have one yet, just reach out to us at payments-info@belvo.com and we'll give you a hand with this. 🙂",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "form_id",
              "schema": {
                "description": "Your unique Payments Way form ID.

**Note:** Belvo provides you with the Payments Way form ID during your onboarding process. If you don't have one yet, just reach out to us at payments-info@belvo.com and we'll give you a hand with this. 🙂",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaymentsWebhooksPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentsWebhooksPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of webhook objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaymentsWebhooksPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "paymentWebhook",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PensionIncomeStatementIndividual": {
          "allOf": [],
          "description": "Object containing the tax payer's total pension income.",
          "generatedName": "PensionIncomeStatementIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "net_pension_income",
              "schema": {
                "description": "The total net pension of the taxpayer.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "net_taxable_pension_income",
              "schema": {
                "description": "The total taxable pension income of the taxpayer.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ProvidersPse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ProvidersPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "payments_way",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ProvidersPsePaymentsWay",
                  "nameOverride": undefined,
                  "schema": "PaymentsWay",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ReceivableTransactionRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ReceivableTransactionRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` that you want to get information for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_from",
              "schema": {
                "description": "The date from which you want to start getting transactions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_to",
              "schema": {
                "description": "The date you want to stop getting transactions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The OTP token generated by the bank.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ReceivablesTransaction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ReceivablesTransaction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current receivable transaction.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ReceivablesTransactionAccount",
                "nameOverride": undefined,
                "schema": "ReceivablesTransactionAccount",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO timestamp when the data point was collected.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "value_hour",
              "schema": {
                "description": "The time that the transaction occurred, according to the institution, in \`HH:MM\` format.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "value_date",
              "schema": {
                "description": "The date that the transactions occurred, according to the institution, in \`YYYY-MM-DD\` format.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "institution_transaction_id",
              "schema": {
                "description": "Internal identification number that the acquirer uses to identify the transaction.
ℹ️ **Note**: For Brazil, this number is the NSU.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The currency of the transaction. For example:
- 🇧🇷 BRL (Brazilian Real)
- 🇨🇴 COP (Colombian Peso)
- 🇲🇽 MXN (Mexican Peso)

 Please note that currencies other than those listed above may be returned.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ReceivablesTransactionType",
                "nameOverride": undefined,
                "schema": "EnumReceivableTransactionType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "gross_amount",
              "schema": {
                "description": "The total gross amount of the transaction.",
                "type": "nullable",
                "value": {
                  "description": "The total gross amount of the transaction.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "net_amount",
              "schema": {
                "description": "The net amount of the transaction.",
                "type": "nullable",
                "value": {
                  "description": "The net amount of the transaction.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fees",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ReceivablesTransactionFeesItem",
                  "nameOverride": undefined,
                  "schema": "RecevablesTransactionFees",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ReceivablesTransactionStatus",
                "nameOverride": undefined,
                "schema": "EnumReceivableTransactionStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "number_of_installments",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ReceivablesTransactionNumberOfInstallments",
                "nameOverride": undefined,
                "schema": "ReceivablesTransactionNumberOfInstallments",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ReceivablesTransactionAccount": {
          "allOf": [],
          "description": "Basic information about the account associated with the transaction.",
          "generatedName": "ReceivablesTransactionAccount",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the account associated with the transaction.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "institution",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ReceivablesTransactionAccountInstitution",
                "nameOverride": undefined,
                "schema": "InstitutionAccount",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ReceivablesTransactionNumberOfInstallments": {
          "description": "Details regarding the number of installments for the transaction, if applicable.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Details regarding the number of installments for the transaction, if applicable.",
            "generatedName": "ReceivablesTransactionNumberOfInstallments",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "paid",
                "schema": {
                  "description": "The number of payments already made to pay the cost of the transaction.",
                  "type": "nullable",
                  "value": {
                    "description": "The number of payments already made to pay the cost of the transaction.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "total",
                "schema": {
                  "description": "The number of payments required to pay the cost of the transaction.",
                  "type": "nullable",
                  "value": {
                    "description": "The number of payments required to pay the cost of the transaction.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "ReceivablesTransactionsPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ReceivablesTransactionsPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of receivables objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ReceivablesTransactionsPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "ReceivablesTransaction",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "RecevablesTransactionFees": {
          "allOf": [],
          "description": "Details regarding the fees applied to the transaction.",
          "generatedName": "RecevablesTransactionFees",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RecevablesTransactionFeesType",
                "nameOverride": undefined,
                "schema": "EnumReceivableTransactionFeeType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": "The value of \`fees.type\`.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RecurringExpenseSourceTransaction": {
          "description": "An array of minified transaction objects used to evaluate the recurring expense. If no transactions were found, we return an empty array.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "An array of minified transaction objects used to evaluate the recurring expense. If no transactions were found, we return an empty array.",
            "generatedName": "RecurringExpenseSourceTransaction",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "amount",
                "schema": {
                  "description": "The transaction amount.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "description",
                "schema": {
                  "description": "The description of the transaction provided by the institution. Usually, this is the text that the end user would see in the bank statement. The description can be an empty string.",
                  "type": "nullable",
                  "value": {
                    "description": "The description of the transaction provided by the institution. Usually, this is the text that the end user would see in the bank statement. The description can be an empty string.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "value_date",
                "schema": {
                  "description": "The date when the transaction occurred, in \`YYYY-MM-DD\` format.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "type": "object",
          },
        },
        "RecurringExpenses": {
          "allOf": [],
          "description": "Recurring expense insights.


ℹ️ If no recurring expense insights are found, we return an empty array.
",
          "generatedName": "RecurringExpenses",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier used to reference the current recurring expense.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "account",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RecurringExpensesAccount",
                "nameOverride": undefined,
                "schema": "Account",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name for the recurring expense.

ℹ️ **Note**: This information is taken from the description section of a transaction and then normalized to provide you with an easy-to-read name. As such, sometimes the name will reflect the merchant the payment is made to (for example, Netflix.com), while for other recurring expenses, this could be something like "Monthly payment to John".
",
                "type": "nullable",
                "value": {
                  "description": "The name for the recurring expense.

ℹ️ **Note**: This information is taken from the description section of a transaction and then normalized to provide you with an easy-to-read name. As such, sometimes the name will reflect the merchant the payment is made to (for example, Netflix.com), while for other recurring expenses, this could be something like "Monthly payment to John".
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "transactions",
              "schema": {
                "description": "An array of minified transaction objects used to evaluate the recurring expense. If no transactions were found, we return an empty array.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RecurringExpensesTransactionsItem",
                  "nameOverride": undefined,
                  "schema": "RecurringExpenseSourceTransaction",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "frequency",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RecurringExpensesFrequency",
                "nameOverride": undefined,
                "schema": "EnumRecurringExpenseFrequency",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "average_transaction_amount",
              "schema": {
                "description": "The average transaction amount of the recurring expense.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "median_transaction_amount",
              "schema": {
                "description": "The median transaction amount of the recurring expense.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "days_since_last_transaction",
              "schema": {
                "description": "Number of days since the last recurring expense occurred.

Based on the frequency, you can infer how many days until the next charge will occur.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "category",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RecurringExpensesCategory",
                "nameOverride": undefined,
                "schema": "EnumRecurringExpenseCategory",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payment_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RecurringExpensesPaymentType",
                "nameOverride": undefined,
                "schema": "EnumRecurringExpensePaymentType",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RecurringExpensesPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RecurringExpensesPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of recurring expense objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RecurringExpensesPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "RecurringExpenses",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "RecurringExpensesRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RecurringExpensesRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` that you want to get information for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The OTP token generated by the bank.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "date_from",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date from which you want to start getting recurring expenses for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_to\`.



⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "date_to",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date you want to stop getting recurring expenses for, in \`YYYY-MM-DD\` format, within the last 365 days. When you use this parameter, you must also send \`date_from\`.



⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ReportingId": {
          "allOf": [],
          "description": "Object containing information about where the tax payer reports their income.",
          "generatedName": "ReportingId",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "reporting_type",
              "schema": {
                "description": "The type of reporting ID. For DIAN, this is the sectional address code (*Codigo Dirrecion Seccional*)",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "reporting_value",
              "schema": {
                "description": "The value of the reporting ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RequestTimeoutError": {
          "allOf": [],
          "description": "Belvo has a limit regarding the time it takes to log in, retrieve account data, and log out. A timeout occurs when there is a very high amount of data and everything could not be obtained within the allotted time.",
          "generatedName": "RequestTimeoutError",
          "nameOverride": "RequestTimeoutErrorBody",
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`request_timeout\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#408-request_timeout" target="_blank">408 request_timeout errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`request_timeout\` errors, the description is:
  
  - \`The request timed out, you can retry asking for less data by changing your query parameters\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "RetentionBreakdown": {
          "allOf": [],
          "description": "A breakdown of the retained taxes",
          "generatedName": "RetentionBreakdown",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "base_amount",
              "schema": {
                "description": "The base amount that was used to calculate the tax retention.
",
                "type": "nullable",
                "value": {
                  "description": "The base amount that was used to calculate the tax retention.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_type",
              "schema": {
                "description": "Optional attribute to indicate the type of tax withheld for the period or year according to the [SAT catalog](https://developers.belvo.com/docs/sat-catalogs#retention-code).
",
                "type": "nullable",
                "value": {
                  "description": "Optional attribute to indicate the type of tax withheld for the period or year according to the [SAT catalog](https://developers.belvo.com/docs/sat-catalogs#retention-code).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "retained_amount",
              "schema": {
                "description": "The amount retained.
",
                "type": "nullable",
                "value": {
                  "description": "The amount retained.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payment_status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RetentionBreakdownPaymentStatus",
                "nameOverride": undefined,
                "schema": "EnumTaxRetentionPaymentStatus",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RiskInsights": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RiskInsights",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the risk insights request.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` the risk insights analysis belongs to.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "accounts",
              "schema": {
                "description": "An array of Belvo-generated account numbers (UUIDs) that were used during the risk insights analysis. If no accounts were found, we return an empty array.",
                "type": "nullable",
                "value": {
                  "description": "An array of Belvo-generated account numbers (UUIDs) that were used during the risk insights analysis. If no accounts were found, we return an empty array.",
                  "type": "array",
                  "value": {
                    "description": "The Belvo-generated ID for the account.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "transactions_metrics",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RiskInsightsTransactionsMetrics",
                "nameOverride": undefined,
                "schema": "RiskInsightsTransactionMetrics",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "balances_metrics",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RiskInsightsBalancesMetrics",
                "nameOverride": undefined,
                "schema": "RiskInsightsBalanceMetrics",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "cashflow_metrics",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RiskInsightsCashflowMetrics",
                "nameOverride": undefined,
                "schema": "RiskInsightsCashflowMetrics",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "credit_cards_metrics",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RiskInsightsCreditCardsMetrics",
                "nameOverride": undefined,
                "schema": "RiskInsightsCreditCardMetrics",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "loans_metrics",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RiskInsightsLoansMetrics",
                "nameOverride": undefined,
                "schema": "RiskInsightsLoansMetrics",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RiskInsightsBalanceMetrics": {
          "description": "Balance metrics calculated based on the user's balances from checking and savings accounts.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Balance metrics calculated based on the user's balances from checking and savings accounts.",
            "generatedName": "RiskInsightsBalanceMetrics",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "min_balance_1w",
                "schema": {
                  "description": "The minimum balance in the period (one week).
",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum balance in the period (one week).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "min_balance_1m",
                "schema": {
                  "description": "The minimum balance in the period (one month).
",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum balance in the period (one month).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "min_balance_3m",
                "schema": {
                  "description": "The minimum balance in the period (three months).
",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum balance in the period (three months).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "max_balance_1w",
                "schema": {
                  "description": "The maximum balance in the period (one week).
",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum balance in the period (one week).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "max_balance_1m",
                "schema": {
                  "description": "The maximum balance in the period (one month).
",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum balance in the period (one month).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "max_balance_3m",
                "schema": {
                  "description": "The maximum balance in the period (three months).
",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum balance in the period (three months).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "closing_balance",
                "schema": {
                  "description": "The balance of all the accounts at the \`collected_at\` time.
",
                  "type": "nullable",
                  "value": {
                    "description": "The balance of all the accounts at the \`collected_at\` time.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "days_balance_below_0_1w",
                "schema": {
                  "description": "The number of days that the total balance of the account is less than or equal to 0 in the last week.
",
                  "type": "nullable",
                  "value": {
                    "description": "The number of days that the total balance of the account is less than or equal to 0 in the last week.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "days_balance_below_0_1m",
                "schema": {
                  "description": "The number of days that the total balance of the account is less than or equal to 0 in the last month.
",
                  "type": "nullable",
                  "value": {
                    "description": "The number of days that the total balance of the account is less than or equal to 0 in the last month.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "days_balance_below_0_3m",
                "schema": {
                  "description": "The number of days that the total balance of the account is less than or equal to 0 in the last three months.
",
                  "type": "nullable",
                  "value": {
                    "description": "The number of days that the total balance of the account is less than or equal to 0 in the last three months.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "days_balance_below_x_1w",
                "schema": {
                  "description": "The number of days that the total balance of the account is less than or equal to the amount specified in \`balance_threshold_x\` in the last week.
",
                  "type": "nullable",
                  "value": {
                    "description": "The number of days that the total balance of the account is less than or equal to the amount specified in \`balance_threshold_x\` in the last week.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "days_balance_below_x_1m",
                "schema": {
                  "description": "The number of days that the total balance of the account is less than or equal to the amount specified in \`balance_threshold_x\` in the last month.
",
                  "type": "nullable",
                  "value": {
                    "description": "The number of days that the total balance of the account is less than or equal to the amount specified in \`balance_threshold_x\` in the last month.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "days_balance_below_x_3m",
                "schema": {
                  "description": "The number of days that the total balance of the account is less than or equal to the amount specified in \`balance_threshold_x\` in the last three months.
",
                  "type": "nullable",
                  "value": {
                    "description": "The number of days that the total balance of the account is less than or equal to the amount specified in \`balance_threshold_x\` in the last three months.
",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "balance_threshold_x",
                "schema": {
                  "description": "The threshold used to compute \`days_balance_below_x_period\`. Please note, this is value is country specific (both in terms of the amount and the currency).
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            ],
            "type": "object",
          },
        },
        "RiskInsightsCashflowMetrics": {
          "description": "Aggregated metrics calculated based on the user's transactions from checking, savings, credit, and loan accounts.

However, internal transfers (transfers between accounts belonging to the same link) are not used in the calculation.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Aggregated metrics calculated based on the user's transactions from checking, savings, credit, and loan accounts.

However, internal transfers (transfers between accounts belonging to the same link) are not used in the calculation.
",
            "generatedName": "RiskInsightsCashflowMetrics",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "sum_positive_1w",
                "schema": {
                  "description": "Sum total of all transactions leading to a positive cashflow in the last week (counted from the time of the request).
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of all transactions leading to a positive cashflow in the last week (counted from the time of the request).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_positive_1m",
                "schema": {
                  "description": "Sum total of all transactions leading to a positive cashflow in the last month (counted from the time of the request).
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of all transactions leading to a positive cashflow in the last month (counted from the time of the request).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_positive_3m",
                "schema": {
                  "description": "Sum total of all transactions leading to a positive cashflow in the last three months (counted from the time of the request).
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of all transactions leading to a positive cashflow in the last three months (counted from the time of the request).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_negative_1w",
                "schema": {
                  "description": "Sum total of all transactions leading to a negative cashflow in the last week (counted from the time of the request).
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of all transactions leading to a negative cashflow in the last week (counted from the time of the request).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_negative_1m",
                "schema": {
                  "description": "Sum total of all transactions leading to a negative cashflow in the last month (counted from the time of the request).
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of all transactions leading to a negative cashflow in the last month (counted from the time of the request).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_negative_3m",
                "schema": {
                  "description": "Sum total of all transactions leading to a negative cashflow in the last three months (counted from the time of the request).
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of all transactions leading to a negative cashflow in the last three months (counted from the time of the request).
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "positive_to_negative_ratio_1w",
                "schema": {
                  "description": "The ratio between sum_positive / sum_negative  in the last week (counted from the time of the request).

ℹ️ If the ratio is greater than \`1\`, it means that the user has more income than outgoing, indicating that they spend less than they earn.

**Note**: In the case that there have been no outgoing transactions, the value will be \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "The ratio between sum_positive / sum_negative  in the last week (counted from the time of the request).

ℹ️ If the ratio is greater than \`1\`, it means that the user has more income than outgoing, indicating that they spend less than they earn.

**Note**: In the case that there have been no outgoing transactions, the value will be \`null\`.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "positive_to_negative_ratio_1m",
                "schema": {
                  "description": "The ratio between sum_positive / sum_negative  in the last month (counted from the time of the request).

ℹ️ If the ratio is greater than \`1\`, it means that the user has more income than outgoing, indicating that they spend less than they earn.
",
                  "type": "nullable",
                  "value": {
                    "description": "The ratio between sum_positive / sum_negative  in the last month (counted from the time of the request).

ℹ️ If the ratio is greater than \`1\`, it means that the user has more income than outgoing, indicating that they spend less than they earn.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "positive_to_negative_ratio_3m",
                "schema": {
                  "description": "The ratio between sum_positive / sum_negative  in the last three months (counted from the time of the request).

ℹ️ If the ratio is greater than \`1\`, it means that the user has more income than outgoing, indicating that they spend less than they earn.
",
                  "type": "nullable",
                  "value": {
                    "description": "The ratio between sum_positive / sum_negative  in the last three months (counted from the time of the request).

ℹ️ If the ratio is greater than \`1\`, it means that the user has more income than outgoing, indicating that they spend less than they earn.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "RiskInsightsCreditCardMetrics": {
          "description": "Aggregated metrics calculated based on the link's credit card accounts.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Aggregated metrics calculated based on the link's credit card accounts.",
            "generatedName": "RiskInsightsCreditCardMetrics",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "num_accounts",
                "schema": {
                  "description": "Number of credit cards accounts associated to the link.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "sum_credit_limit",
                "schema": {
                  "description": "Sum total of all credit cards' limits.
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of all credit cards' limits.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_credit_used",
                "schema": {
                  "description": "Sum total of all credit used.
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of all credit used.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "RiskInsightsLoansMetrics": {
          "description": "Aggregated metrics calculated based on the user's loan accounts.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Aggregated metrics calculated based on the user's loan accounts.",
            "generatedName": "RiskInsightsLoansMetrics",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "num_accounts",
                "schema": {
                  "description": "Number of loan accounts associated with the link.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "sum_loans_principal",
                "schema": {
                  "description": "Sum total of the principal for all of the link's loan accounts.
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of the principal for all of the link's loan accounts.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_loans_outstanding_principal",
                "schema": {
                  "description": "Sum total of the outstanding principal for all the link's loan accounts.
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of the outstanding principal for all the link's loan accounts.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_loans_monthly_payment",
                "schema": {
                  "description": "Sum total of the monthly payments for all the link's loan accounts.
",
                  "type": "nullable",
                  "value": {
                    "description": "Sum total of the monthly payments for all the link's loan accounts.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "RiskInsightsPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RiskInsightsPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of risk insights objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RiskInsightsPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "RiskInsights",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "RiskInsightsTransactionMetrics": {
          "description": "Aggregated metrics calculated band on the user's transactions from checking, savings, credit card, and loan accounts.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Aggregated metrics calculated band on the user's transactions from checking, savings, credit card, and loan accounts.",
            "generatedName": "RiskInsightsTransactionMetrics",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "num_transactions_1w",
                "schema": {
                  "description": "The total number of transactions analyzed to determine the risk insights for the last week (incoming and outgoing).
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "num_transactions_1m",
                "schema": {
                  "description": "The total number of transactions analyzed to determine the risk insights for the last month (incoming and outgoing).
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "num_transactions_3m",
                "schema": {
                  "description": "The total number of transactions analyzed to determine the risk insights for the last three months (incoming and outgoing).
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "num_incoming_transactions_1w",
                "schema": {
                  "description": "The total number of inflow transactions for the last week.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "num_incoming_transactions_1m",
                "schema": {
                  "description": "The total number of inflow transactions for the last month.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "num_incoming_transactions_3m",
                "schema": {
                  "description": "The total number of inflow transactions for the last three months.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "num_outgoing_transactions_1w",
                "schema": {
                  "description": "To total number of outflow transactions in the last week.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "num_outgoing_transactions_1m",
                "schema": {
                  "description": "To total number of outflow transactions in the last month.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "num_outgoing_transactions_3m",
                "schema": {
                  "description": "To total number of outflow transactions in the last three months.

ℹ️ **Note**: If there are no transactions between the request date and the last seven or thirty days, the value is \`0\`.

If the account has not been open long enough to have the transaction data for a given period, we return \`null\`. For example, if the account has only been open for five days, we return values for \`_1w\` and \`_1m\`, however, the value for \`_3m\` will be \`null\`.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "sum_incoming_amount_1w",
                "schema": {
                  "description": "The total sum of all inflow transactions for the last week.
",
                  "type": "nullable",
                  "value": {
                    "description": "The total sum of all inflow transactions for the last week.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_incoming_amount_1m",
                "schema": {
                  "description": "The total sum of all inflow transactions for the last month.
",
                  "type": "nullable",
                  "value": {
                    "description": "The total sum of all inflow transactions for the last month.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_incoming_amount_3m",
                "schema": {
                  "description": "The total sum of all inflow transactions for the last three months.
",
                  "type": "nullable",
                  "value": {
                    "description": "The total sum of all inflow transactions for the last three months.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_outgoing_amount_1w",
                "schema": {
                  "description": "The total sum of all outflow transactions for the last week.
",
                  "type": "nullable",
                  "value": {
                    "description": "The total sum of all outflow transactions for the last week.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_outgoing_amount_1m",
                "schema": {
                  "description": "The total sum of all outflow transactions for the last month.
",
                  "type": "nullable",
                  "value": {
                    "description": "The total sum of all outflow transactions for the last month.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "sum_outgoing_amount_3m",
                "schema": {
                  "description": "The total sum of all outflow transactions for the last three months.
",
                  "type": "nullable",
                  "value": {
                    "description": "The total sum of all outflow transactions for the last three months.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "max_incoming_amount_1w",
                "schema": {
                  "description": "The highest value inflow transaction in the last week.
",
                  "type": "nullable",
                  "value": {
                    "description": "The highest value inflow transaction in the last week.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "max_incoming_amount_1m",
                "schema": {
                  "description": "The highest value inflow transaction in the last month.
",
                  "type": "nullable",
                  "value": {
                    "description": "The highest value inflow transaction in the last month.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "max_incoming_amount_3m",
                "schema": {
                  "description": "The highest value inflow transaction in the last three months.
",
                  "type": "nullable",
                  "value": {
                    "description": "The highest value inflow transaction in the last three months.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "max_outgoing_amount_1w",
                "schema": {
                  "description": "The highest value outflow transaction in the last week.
",
                  "type": "nullable",
                  "value": {
                    "description": "The highest value outflow transaction in the last week.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "max_outgoing_amount_1m",
                "schema": {
                  "description": "The highest value outflow transaction in the last month.
",
                  "type": "nullable",
                  "value": {
                    "description": "The highest value outflow transaction in the last month.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "max_outgoing_amount_3m",
                "schema": {
                  "description": "The highest value outflow transaction in the last three months.
",
                  "type": "nullable",
                  "value": {
                    "description": "The highest value outflow transaction in the last three months.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "mean_incoming_amount_1w",
                "schema": {
                  "description": "The mean incoming value of all transactions in the last week.
",
                  "type": "nullable",
                  "value": {
                    "description": "The mean incoming value of all transactions in the last week.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "mean_incoming_amount_1m",
                "schema": {
                  "description": "The mean incoming value of all transactions in the last month.
",
                  "type": "nullable",
                  "value": {
                    "description": "The mean incoming value of all transactions in the last month.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "mean_incoming_amount_3m",
                "schema": {
                  "description": "The mean incoming value of all transactions in the last three months.
",
                  "type": "nullable",
                  "value": {
                    "description": "The mean incoming value of all transactions in the last three months.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "mean_outgoing_amount_1w",
                "schema": {
                  "description": "The mean outgoing value of all transaction in the last week.
",
                  "type": "nullable",
                  "value": {
                    "description": "The mean outgoing value of all transaction in the last week.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "mean_outgoing_amount_1m",
                "schema": {
                  "description": "The mean outgoing value of all transaction in the last month.
",
                  "type": "nullable",
                  "value": {
                    "description": "The mean outgoing value of all transaction in the last month.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "mean_outgoing_amount_3m",
                "schema": {
                  "description": "The mean outgoing value of all transaction in the last three months.
",
                  "type": "nullable",
                  "value": {
                    "description": "The mean outgoing value of all transaction in the last three months.
",
                    "schema": {
                      "type": "float",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "SecretKeys": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SecretKeys",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the Payments API \`secretId\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "password",
              "schema": {
                "description": "Your Payments API \`secretPassword\`. This value is obfuscated.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the secret key was created.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "last_used",
              "schema": {
                "description": "The ISO-8601 timestamp of when the secret key was last used.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SecretKeysPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SecretKeysPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`customer\` or \`bank-accounts\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of secret keys objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SecretKeysPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "SecretKeys",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SessionExpiredError": {
          "allOf": [],
          "description": "This error occurs when you try to resume a request session that has already expired. This is usually because the user took too long to provide their authentication token.",
          "generatedName": "SessionExpiredError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`session_expired\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-session_expired" target="_blank">400 session_expired errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`session_expired\` errors, the description is:
  
  - \`The session you are trying to resume has expired, please start again from register/retrieve endpoint\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "StandardRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StandardRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` that you want to get information for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The OTP token generated by the bank.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxAssessmentBusiness": {
          "allOf": [],
          "description": "Object containing the calculated tax assessment of the tax payer. This includes the total taxable income, the income tax applied, and taxes already withheld.",
          "generatedName": "TaxAssessmentBusiness",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "net_income_taxable",
              "schema": {
                "description": "The net income on which tax can be applied.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "fortuitous_profit_tax",
              "schema": {
                "description": "The tax applied on your unexpected income (such as lottery wins or house sales).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_tax_on_taxable_net_income",
              "schema": {
                "description": "The calculated total tax that can be applied on the tax payer's taxable income (total income - exemptions - deductions).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "net_income_tax",
              "schema": {
                "description": "After additional deductions that you can apply, this will be the net income tax. If no further deduction are identified, this value will be the same as \`total_tax_on_taxable_net_income\`.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_tax_due",
              "schema": {
                "description": "After further deductions, this is the final calculated tax that the taxpayer is required to pay.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_withholdings_for_the_taxable_year_to_be_declared",
              "schema": {
                "description": "How much the tax payer has already paid througout the fiscal year.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_balance_payable",
              "schema": {
                "description": "How much the tax payer is required to pay.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_balance_in_favor",
              "schema": {
                "description": "How much the tax payer is expected to receive.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_payment",
              "schema": {
                "description": "The total the tax payer is required to pay, taking into account deductions and fiscal credits.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "TaxAssessmentIndividual": {
          "allOf": [],
          "description": "Object containing the calculated tax assessment of the tax payer. This includes the total taxable income, the income tax applied, and taxes already withheld.",
          "generatedName": "TaxAssessmentIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fortuitous_profit_tax",
              "schema": {
                "description": "The tax applied on your unexpected income (such as lottery wins or house sales).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_tax_on_taxable_net_income",
              "schema": {
                "description": "The calculated total tax that can be applied on the tax payer's taxable income (total income - exemptions - deductions).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "net_income_tax",
              "schema": {
                "description": "After additional deductions that you can apply, this will be the net income tax. If not further deduction are identified, this value will be the same as \`total_tax_on_taxable_net_income\`.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_tax_due",
              "schema": {
                "description": "After further deductions, this is the final calculated tax that the taxpayer is required to pay.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "previous_year_balance",
              "schema": {
                "description": "Only applicable for DIAN.


The amount the tax payer has as a "credit" fromt he previous year (this is equal to the \`balance_refundable\`) of the previous year.
",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_withheld_tax",
              "schema": {
                "description": "The total tax already withheld in the current fiscal year.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "balance_payable",
              "schema": {
                "description": "How much the tax payer is required to pay.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "balance_refundable",
              "schema": {
                "description": "How much the tax payer is expected to receive. For DIAN, this will count as credit for the next fiscal year (see \`previous_year_balance\`).",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "total_payment",
              "schema": {
                "description": "The total the tax payer is required to pay, taking into account deductions and fiscal credits.",
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "TaxComplianceStatus": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxComplianceStatus",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier created by Belvo used to reference the current Tax Compliance Status.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "internal_identification",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The institution’s internal identification number for the document.",
                  "type": "nullable",
                  "value": {
                    "description": "The institution’s internal identification number for the document.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "pdf",
              "schema": {
                "description": "Tax compliance status PDF as a binary.",
                "type": "nullable",
                "value": {
                  "description": "Tax compliance status PDF as a binary.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "rfc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The account holder's RFC (Registro Federal de Contribuyentes) number.",
                  "type": "nullable",
                  "value": {
                    "description": "The account holder's RFC (Registro Federal de Contribuyentes) number.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "outcome",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TaxComplianceStatusOutcome",
                  "nameOverride": undefined,
                  "schema": "EnumTaxComplianceStatusOutcome",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxComplianceStatusPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxComplianceStatusPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of tax compliance status objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxComplianceStatusPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "TaxComplianceStatus",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxComplianceStatusRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxComplianceStatusRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The fiscal \`link.id\` to use.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "attach_pdf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "When set to \`true\`, you will receive the PDF in binary format in the response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxDeclarationBusiness": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxDeclarationBusiness",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current tax declaration.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "Belvo's unique ID of the user that this tax declaration is associated with.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document_information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationBusinessDocumentInformation",
                "nameOverride": undefined,
                "schema": "DocumentInformationBusiness",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "tax_payer_information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationBusinessTaxPayerInformation",
                "nameOverride": undefined,
                "schema": "TaxPayerInformationBusiness",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "equity_statement",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationBusinessEquityStatement",
                "nameOverride": undefined,
                "schema": "EquityStatementBusiness",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "annual_income_statement",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationBusinessAnnualIncomeStatement",
                "nameOverride": undefined,
                "schema": "AnnualIncomeStatementBusiness",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "annual_costs_and_deductions_statement",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationBusinessAnnualCostsAndDeductionsStatement",
                "nameOverride": undefined,
                "schema": "AnnualCostsAndDeductionsStatementBusiness",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "tax_assessment",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationBusinessTaxAssessment",
                "nameOverride": undefined,
                "schema": "TaxAssessmentBusiness",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "date_issued",
              "schema": {
                "description": "The date the tax declaration was issued by the fiscal institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "pdf",
              "schema": {
                "description": "The PDF of the tax declaration, as a binary string.",
                "type": "nullable",
                "value": {
                  "description": "The PDF of the tax declaration, as a binary string.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxDeclarationBusinessPaginated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxDeclarationBusinessPaginated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of Business Tax Declaration objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxDeclarationBusinessPaginatedResultsItem",
                    "nameOverride": undefined,
                    "schema": "TaxDeclarationBusiness",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxDeclarationIndividual": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxDeclarationIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the current tax declaration.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "Belvo's unique ID of the user that this tax declaration is associated with.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document_information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationIndividualDocumentInformation",
                "nameOverride": undefined,
                "schema": "DocumentInformationIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "tax_payer_information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationIndividualTaxPayerInformation",
                "nameOverride": undefined,
                "schema": "TaxPayerInformationIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "equity_statement",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationIndividualEquityStatement",
                "nameOverride": undefined,
                "schema": "EquityStatementIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "annual_income_statement",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationIndividualAnnualIncomeStatement",
                "nameOverride": undefined,
                "schema": "AnnualIncomeStatementIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "pension_income_statement",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationIndividualPensionIncomeStatement",
                "nameOverride": undefined,
                "schema": "PensionIncomeStatementIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "tax_assessment",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxDeclarationIndividualTaxAssessment",
                "nameOverride": undefined,
                "schema": "TaxAssessmentIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "date_issued",
              "schema": {
                "description": "The date the tax declaration was issued by the fiscal institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "pdf",
              "schema": {
                "description": "The PDF of the tax declaration, as a binary string.",
                "type": "nullable",
                "value": {
                  "description": "The PDF of the tax declaration, as a binary string.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxDeclarationIndividualPaginated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxDeclarationIndividualPaginated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of Individual Tax Declaration objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxDeclarationIndividualPaginatedResultsItem",
                    "nameOverride": undefined,
                    "schema": "TaxDeclarationIndividual",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxDeclarationsRequest": {
          "allOf": [],
          "description": "Request body for tax declrarations",
          "generatedName": "TaxDeclarationsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The fiscal \`link.id\` you want specific tax declaration information for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "year_from",
              "schema": {
                "description": "The starting year you want to get tax declaration for, in \`YYYY\` format.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "year_to",
              "schema": {
                "description": "The year you want to stop getting tax declaration for, in \`YYYY\` format.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "attach_pdf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "When this is set to \`true\`, you will receive the PDF as a binary string in the response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxPayerInformationBusiness": {
          "allOf": [],
          "description": "Object containing information about the tax payer.",
          "generatedName": "TaxPayerInformationBusiness",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "first_last_name",
              "schema": {
                "description": "The tax payer's first last name.",
                "type": "nullable",
                "value": {
                  "description": "The tax payer's first last name.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "second_last_name",
              "schema": {
                "description": "The tax payer's second last name.",
                "type": "nullable",
                "value": {
                  "description": "The tax payer's second last name.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "first_name",
              "schema": {
                "description": "The tax payer's first name.",
                "type": "nullable",
                "value": {
                  "description": "The tax payer's first name.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "other_names",
              "schema": {
                "description": "Additional names of the tax payer.",
                "type": "nullable",
                "value": {
                  "description": "Additional names of the tax payer.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "company_name",
              "schema": {
                "description": "The name of the company, as registered at the institution.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "main_economic_activity",
              "schema": {
                "description": "The main economic activity the tax payer is involved in.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document_id",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxPayerInformationBusinessDocumentId",
                "nameOverride": undefined,
                "schema": "DocumentIdBusiness",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "reporting_id",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxPayerInformationBusinessReportingId",
                "nameOverride": undefined,
                "schema": "ReportingId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "TaxPayerInformationIndividual": {
          "allOf": [],
          "description": "Object containing information about the tax payer.",
          "generatedName": "TaxPayerInformationIndividual",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "first_last_name",
              "schema": {
                "description": "The tax payer's first last name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "second_last_name",
              "schema": {
                "description": "The tax payer's second last name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "first_name",
              "schema": {
                "description": "The tax payer's first name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "other_names",
              "schema": {
                "description": "Additional names of the tax payer.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "main_economic_activity",
              "schema": {
                "description": "The main economic activity the tax payer is involved in.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document_id",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxPayerInformationIndividualDocumentId",
                "nameOverride": undefined,
                "schema": "DocumentIdIndividual",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "reporting_id",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxPayerInformationIndividualReportingId",
                "nameOverride": undefined,
                "schema": "ReportingId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "TaxRetentions": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxRetentions",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier used to reference the current tax retention statement.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The \`link.id\` the tax retention belongs to.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was collected.
",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was collected.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoice_identification",
              "schema": {
                "description": "The fiscal institution's unique ID for the invoice that the tax retention relates to.
",
                "type": "nullable",
                "value": {
                  "description": "The fiscal institution's unique ID for the invoice that the tax retention relates to.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The CFDI version of the tax retentions.
",
                "type": "nullable",
                "value": {
                  "description": "The CFDI version of the tax retentions.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": "The tax retention code. For more information, see our [SAT Catalogs DevPortal article](https://developers.belvo.com/docs/sat-catalogs#retention-code).
",
                "type": "nullable",
                "value": {
                  "description": "The tax retention code. For more information, see our [SAT Catalogs DevPortal article](https://developers.belvo.com/docs/sat-catalogs#retention-code).
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "issued_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the tax retention was issued.
",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp of when the tax retention was issued.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "certified_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the tax retention was certified.
",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp of when the tax retention was certified.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "cancelled_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the tax retention was canceled (if applicable).
",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp of when the tax retention was canceled (if applicable).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sender_id",
              "schema": {
                "description": "The fiscal ID of the invoice sender.
",
                "type": "nullable",
                "value": {
                  "description": "The fiscal ID of the invoice sender.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sender_name",
              "schema": {
                "description": "The name of the invoice sender.
",
                "type": "nullable",
                "value": {
                  "description": "The name of the invoice sender.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_nationality",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxRetentionsReceiverNationality",
                "nameOverride": undefined,
                "schema": "EnumTaxRetentionReceiverNationality",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "receiver_id",
              "schema": {
                "description": "The fiscal ID of the invoice receiver.
",
                "type": "nullable",
                "value": {
                  "description": "The fiscal ID of the invoice receiver.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receiver_name",
              "schema": {
                "description": "The name of the invoice receiver.
",
                "type": "nullable",
                "value": {
                  "description": "The name of the invoice receiver.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "total_invoice_amount",
              "schema": {
                "description": "The total amount of the invoice that the tax retention relates to.
",
                "type": "nullable",
                "value": {
                  "description": "The total amount of the invoice that the tax retention relates to.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "total_exempt_amount",
              "schema": {
                "description": "Total amount that is exempt from taxation.
",
                "type": "nullable",
                "value": {
                  "description": "Total amount that is exempt from taxation.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "total_retained_amount",
              "schema": {
                "description": "Total tax retained.
",
                "type": "nullable",
                "value": {
                  "description": "Total tax retained.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "total_taxable_amount",
              "schema": {
                "description": "The total amount that can be taxed. Calculated as \`total_invoice_amount\` - \`total_exempt_amount\`.
",
                "type": "nullable",
                "value": {
                  "description": "The total amount that can be taxed. Calculated as \`total_invoice_amount\` - \`total_exempt_amount\`.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "retention_breakdown",
              "schema": {
                "description": "A breakdown of the retained taxes.",
                "type": "nullable",
                "value": {
                  "description": "A breakdown of the retained taxes.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxRetentionsRetentionBreakdownItem",
                    "nameOverride": undefined,
                    "schema": "RetentionBreakdown",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "xml",
              "schema": {
                "description": "The tax retention document in XML form.
",
                "type": "nullable",
                "value": {
                  "description": "The tax retention document in XML form.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxRetentionsPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxRetentionsPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of tax retentions objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxRetentionsPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "TaxRetentions",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxRetentionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxRetentionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` that you want to get information for.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_from",
              "schema": {
                "description": "The date from which you want to start getting tax retentions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_to",
              "schema": {
                "description": "The date you want to stop getting tax retentions for, in \`YYYY-MM-DD\` format.

⚠️ The number of days between \`date_from\` and \`date_to\` cannot be over 365.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxRetentionsRequestType",
                "nameOverride": undefined,
                "schema": "EnumTaxRetentionType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "attach_xml",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "When set to \`true\`, you will receive the XML tax retention in the response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnBusiness": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxReturnBusiness",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier created by Belvo used to reference the current Tax Return.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "informacion_general",
              "schema": {
                "description": "General information regarding the tax return (year, RFC, return type, person/company name, and so on).",
                "type": "nullable",
                "value": {
                  "description": "General information regarding the tax return (year, RFC, return type, person/company name, and so on).",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "datos_adicionales",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Additional data regarding the tax return.",
                  "type": "nullable",
                  "value": {
                    "description": "Additional data regarding the tax return.",
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "estado_resultados",
              "schema": {
                "description": "Detailed information about the legal entity's yearly profit and loss.",
                "type": "nullable",
                "value": {
                  "description": "Detailed information about the legal entity's yearly profit and loss.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "estado_posicion_financiera_balance",
              "schema": {
                "description": "Details regarding balance sheet of the legal entity.",
                "type": "nullable",
                "value": {
                  "description": "Details regarding balance sheet of the legal entity.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "conciliacion_entre_resultado_contable_fiscal",
              "schema": {
                "description": "Details regarding the accounting reconciliation.",
                "type": "nullable",
                "value": {
                  "description": "Details regarding the accounting reconciliation.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "deducciones_autorizadas",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Details regarding the legal entity's deductions.",
                  "type": "nullable",
                  "value": {
                    "description": "Details regarding the legal entity's deductions.",
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "cifras_cierre_ejercicio",
              "schema": {
                "description": "Details regarding key numbers at the end of the fiscal exercise.",
                "type": "nullable",
                "value": {
                  "description": "Details regarding key numbers at the end of the fiscal exercise.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "determinacion_del_impuesto_sobre_la_renta",
              "schema": {
                "description": "Details regarding the final tax return.",
                "type": "nullable",
                "value": {
                  "description": "Details regarding the final tax return.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "dividendos_o_utilidades_distribuidos",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Details regarding distributed dividends.",
                  "type": "nullable",
                  "value": {
                    "description": "Details regarding distributed dividends.",
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "detalle_pago_r1_isr_personas_morales",
              "schema": {
                "description": "Details of the tax payment.",
                "type": "nullable",
                "value": {
                  "description": "Details of the tax payment.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "pdf",
              "schema": {
                "description": "Tax return PDF as a binary.",
                "type": "nullable",
                "value": {
                  "description": "Tax return PDF as a binary.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receipt_pdf",
              "schema": {
                "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
                "type": "nullable",
                "value": {
                  "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnBusinessMonthly": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxReturnBusinessMonthly",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier created by Belvo used to reference the current Tax Return.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "informacion_general",
              "schema": {
                "description": "General information regarding the tax return (year, RFC, return type, person/company name, and so on).",
                "type": "nullable",
                "value": {
                  "description": "General information regarding the tax return (year, RFC, return type, person/company name, and so on).",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "determinacion_isr",
              "schema": {
                "description": "Information used to calculate the provisional income tax for the period.",
                "type": "nullable",
                "value": {
                  "description": "Information used to calculate the provisional income tax for the period.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "detalle_pago_isr",
              "schema": {
                "description": "Information on the monthly provisional payments for the income tax.",
                "type": "nullable",
                "value": {
                  "description": "Information on the monthly provisional payments for the income tax.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "determinacion_iva",
              "schema": {
                "description": "Information used to calculate the provisional VAT tax for the period.",
                "type": "nullable",
                "value": {
                  "description": "Information used to calculate the provisional VAT tax for the period.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "detalle_pago_iva",
              "schema": {
                "description": "Information on the monthly provisional payments for the VAT tax.",
                "type": "nullable",
                "value": {
                  "description": "Information on the monthly provisional payments for the VAT tax.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "pdf",
              "schema": {
                "description": "Tax return PDF as a binary.",
                "type": "nullable",
                "value": {
                  "description": "Tax return PDF as a binary.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receipt_pdf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
                  "type": "nullable",
                  "value": {
                    "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": "The type of tax return. Can be either monthly or annual.",
                "type": "nullable",
                "value": {
                  "description": "The type of tax return. Can be either monthly or annual.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnPersonal": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxReturnPersonal",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier created by Belvo used to reference the current Tax Return.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The \`link.id\` the statement belongs to",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "informacion_general",
              "schema": {
                "description": "General information on the tax return (year, RFC, return type, person/company name, and so on).",
                "type": "nullable",
                "value": {
                  "description": "General information on the tax return (year, RFC, return type, person/company name, and so on).",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "sueldos_salarios",
              "schema": {
                "description": "Details regarding the income information together combined with withheld taxes.",
                "type": "nullable",
                "value": {
                  "description": "Details regarding the income information together combined with withheld taxes.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "servicios_profesionales",
              "schema": {
                "description": "Details regarding the income and tax information from professional services provided.",
                "type": "nullable",
                "value": {
                  "description": "Details regarding the income and tax information from professional services provided.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "deducciones_personales",
              "schema": {
                "description": "List of all personal tax deductions.",
                "type": "nullable",
                "value": {
                  "description": "List of all personal tax deductions.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "determinacion_impuesto",
              "schema": {
                "description": "Details regarding the final tax return.",
                "type": "nullable",
                "value": {
                  "description": "Details regarding the final tax return.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "retenciones",
              "schema": {
                "description": "Details on the already withheld taxes.",
                "type": "nullable",
                "value": {
                  "description": "Details on the already withheld taxes.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "dividendos",
              "schema": {
                "description": "Details regarding dividends.",
                "type": "nullable",
                "value": {
                  "description": "Details regarding dividends.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "datos_informativos",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Extra informative data on the tax return.",
                  "type": "nullable",
                  "value": {
                    "description": "Extra informative data on the tax return.",
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "pdf",
              "schema": {
                "description": "Tax return PDF as a binary.",
                "type": "nullable",
                "value": {
                  "description": "Tax return PDF as a binary.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receipt_pdf",
              "schema": {
                "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
                "type": "nullable",
                "value": {
                  "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnPersonalMonthly": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxReturnPersonalMonthly",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier created by Belvo used to reference the current Tax Return.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "informacion_general",
              "schema": {
                "description": "General information regarding the tax return (year, RFC, return type, person/company name, and so on).",
                "type": "nullable",
                "value": {
                  "description": "General information regarding the tax return (year, RFC, return type, person/company name, and so on).",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isr",
              "schema": {
                "description": "Information used to calculate the monthly provisional payments of the income tax.",
                "type": "nullable",
                "value": {
                  "description": "Information used to calculate the monthly provisional payments of the income tax.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "iva",
              "schema": {
                "description": "Information used to calculate the monthly provisional payments of the VAT tax.",
                "type": "nullable",
                "value": {
                  "description": "Information used to calculate the monthly provisional payments of the VAT tax.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "pdf",
              "schema": {
                "description": "Tax return PDF as a binary.",
                "type": "nullable",
                "value": {
                  "description": "Tax return PDF as a binary.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "receipt_pdf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
                  "type": "nullable",
                  "value": {
                    "description": "The acknowledgement receipt from the fiscal institution confirming that they received the tax return.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": "The type of tax return. Can be either monthly or annual.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnsBusinessMonthlyPaginated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxReturnsBusinessMonthlyPaginated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of Monthly Business Tax Return objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxReturnsBusinessMonthlyPaginatedResultsItem",
                    "nameOverride": undefined,
                    "schema": "TaxReturnBusinessMonthly",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnsBusinessPaginated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxReturnsBusinessPaginated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of Business Tax Return objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxReturnsBusinessPaginatedResultsItem",
                    "nameOverride": undefined,
                    "schema": "TaxReturnBusiness",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnsMonthlyRequest": {
          "allOf": [],
          "description": "Request body for monthly tax returns",
          "generatedName": "TaxReturnsMonthlyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The fiscal \`link.id\` you want specific tax return information for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "attach_pdf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "When this is set to \`true\`, you will receive the PDF as a binary string in the response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": "The type of tax return to return. For monthly tax returns, this field must be set to \`monthly\`.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_from",
              "schema": {
                "description": "The starting date you want to get tax returns for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_to",
              "schema": {
                "description": "The date you want to stop getting tax returns for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnsPersonalMonthlyPaginated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxReturnsPersonalMonthlyPaginated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of Monthly Personal Tax Return objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxReturnsPersonalMonthlyPaginatedResultsItem",
                    "nameOverride": undefined,
                    "schema": "TaxReturnPersonalMonthly",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnsPersonalPaginated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxReturnsPersonalPaginated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of Personal Tax Return objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxReturnsPersonalPaginatedResultsItem",
                    "nameOverride": undefined,
                    "schema": "TaxReturnPersonal",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxReturnsYearlyRequest": {
          "allOf": [],
          "description": "Request body for yearly tax returns",
          "generatedName": "TaxReturnsYearlyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The fiscal \`link.id\` you want specific tax return information for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "attach_pdf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "When this is set to \`true\`, you will receive the PDF as a binary string in the response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": "The type of tax return to return. For yearly tax returns this must be set to \`yearly\`.

By default, Belvo returns the yearly (annual) tax returns.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "year_from",
              "schema": {
                "description": "The starting year you want to get tax returns for, in \`YYYY\` format.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "year_to",
              "schema": {
                "description": "The year you want to stop getting tax returns for, in \`YYYY\` format.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusAddressBetweenStreetDian": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusAddressBetweenStreetDian",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "street_one",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "street_two",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusAddressBetweenStreetSat": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusAddressBetweenStreetSat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "street_one",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The first street that \`street\` is located between.",
                  "type": "nullable",
                  "value": {
                    "description": "The first street that \`street\` is located between.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "street_two",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The second street that \`street\` is located between.",
                  "type": "nullable",
                  "value": {
                    "description": "The second street that \`street\` is located between.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusAddressDian": {
          "description": "The tax payer's address details.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "The tax payer's address details.",
            "generatedName": "TaxStatusAddressDian",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "postal_code",
                "schema": {
                  "description": "The postcode of the address.
",
                  "type": "nullable",
                  "value": {
                    "description": "The postcode of the address.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "street_type",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The \`street\` type.",
                    "type": "nullable",
                    "value": {
                      "description": "The \`street\` type.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "street",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The tax payers street.",
                    "type": "nullable",
                    "value": {
                      "description": "The tax payers street.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "exterior_number",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The street number.",
                    "type": "nullable",
                    "value": {
                      "description": "The street number.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "interior_number",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Additional address information.",
                    "type": "nullable",
                    "value": {
                      "description": "Additional address information.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "suburb",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "type": "nullable",
                    "value": {
                      "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "locality",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "type": "nullable",
                    "value": {
                      "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "municipality",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The municipality of the address.",
                    "type": "nullable",
                    "value": {
                      "description": "The municipality of the address.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "state",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The state that the address is in.",
                    "type": "nullable",
                    "value": {
                      "description": "The state that the address is in.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "between_street",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "type": "nullable",
                    "value": {
                      "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                      "type": "array",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "TaxStatusAddressDianBetweenStreetItem",
                        "nameOverride": undefined,
                        "schema": "TaxStatusAddressBetweenStreetDian",
                        "type": "reference",
                      },
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "TaxStatusAddressSat": {
          "description": "The tax payer's address details.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "The tax payer's address details.",
            "generatedName": "TaxStatusAddressSat",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "postal_code",
                "schema": {
                  "description": "The postcode of the address.
",
                  "type": "nullable",
                  "value": {
                    "description": "The postcode of the address.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "street_type",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The \`street\` type.",
                    "type": "nullable",
                    "value": {
                      "description": "The \`street\` type.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "street",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The tax payers street.",
                    "type": "nullable",
                    "value": {
                      "description": "The tax payers street.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "exterior_number",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The street number.",
                    "type": "nullable",
                    "value": {
                      "description": "The street number.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "interior_number",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Additional address information.",
                    "type": "nullable",
                    "value": {
                      "description": "Additional address information.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "suburb",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The suburb of the tax payer.
",
                    "type": "nullable",
                    "value": {
                      "description": "The suburb of the tax payer.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "locality",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The locality of the address.
",
                    "type": "nullable",
                    "value": {
                      "description": "The locality of the address.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "municipality",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The municipality of the address.",
                    "type": "nullable",
                    "value": {
                      "description": "The municipality of the address.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "state",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The state that the address is in.",
                    "type": "nullable",
                    "value": {
                      "description": "The state that the address is in.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "between_street",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Additional information about where the \`street\` is located.
",
                    "type": "nullable",
                    "value": {
                      "description": "Additional information about where the \`street\` is located.
",
                      "type": "array",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "TaxStatusAddressSatBetweenStreetItem",
                        "nameOverride": undefined,
                        "schema": "TaxStatusAddressBetweenStreetSat",
                        "type": "reference",
                      },
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "TaxStatusDian": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusDian",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Unique identifier created by Belvo used to reference the current Tax Status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` that the tax status is associated with.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "place_and_date_of_issuance",
              "schema": {
                "description": "The date when the tax status was issued. For example, \`2020-08-05/18:55:16\`.",
                "type": "nullable",
                "value": {
                  "description": "The date when the tax status was issued. For example, \`2020-08-05/18:55:16\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "official_name",
              "schema": {
                "description": "The name of the business.

Note: For individuals in Colombia, this field will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "The name of the business.

Note: For individuals in Colombia, this field will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id_cif",
              "schema": {
                "description": "The taxpayer's *Cédula de ciudadanía* (CC) ID. Only applicable for individuals.
",
                "type": "nullable",
                "value": {
                  "description": "The taxpayer's *Cédula de ciudadanía* (CC) ID. Only applicable for individuals.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_payer_information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxStatusDianTaxPayerInformation",
                "nameOverride": undefined,
                "schema": "TaxStatusTaxPayerInformationDian",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "address",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxStatusDianAddress",
                "nameOverride": undefined,
                "schema": "TaxStatusAddressDian",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "economic_activity",
              "schema": {
                "description": "A list of economic activity objects.
",
                "type": "nullable",
                "value": {
                  "description": "A list of economic activity objects.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxStatusDianEconomicActivityItem",
                    "nameOverride": undefined,
                    "schema": "TaxStatusEconomicActivityDian",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "regimes",
              "schema": {
                "description": "A list of regimen objects.
",
                "type": "nullable",
                "value": {
                  "description": "A list of regimen objects.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxStatusDianRegimesItem",
                    "nameOverride": undefined,
                    "schema": "TaxStatusRegimensDian",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "obligations",
              "schema": {
                "description": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
                "type": "nullable",
                "value": {
                  "description": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxStatusDianObligationsItem",
                    "nameOverride": undefined,
                    "schema": "TaxStatusObligationsDian",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "digital_stamp",
              "schema": {
                "description": "The validation certificate of the document.",
                "type": "nullable",
                "value": {
                  "description": "The validation certificate of the document.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "digital_stamp_chain",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "pdf",
              "schema": {
                "description": "Tax status PDF as a binary string.",
                "type": "nullable",
                "value": {
                  "description": "Tax status PDF as a binary string.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusEconomicActivityDian": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusEconomicActivityDian",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "economic_activity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The economic activity code, according to the fiscal institution.

For detailed information regarding DIAN's economic activities, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                  "type": "nullable",
                  "value": {
                    "description": "The economic activity code, according to the fiscal institution.

For detailed information regarding DIAN's economic activities, please see their [official PDF](https://www.dian.gov.co/impuestos/factura-electronica/Documents/Anexo_tecnico_factura_electronica_vr_1_7_2020.pdf).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "initial_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The start date of the economic activity.",
                  "type": "nullable",
                  "value": {
                    "description": "The start date of the economic activity.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "end_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "order",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The order of the economic activity.",
                  "type": "nullable",
                  "value": {
                    "description": "The order of the economic activity.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "percentage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusEconomicActivitySat": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusEconomicActivitySat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "economic_activity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The description of the economic activity.",
                  "type": "nullable",
                  "value": {
                    "description": "The description of the economic activity.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "initial_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The start date of the economic activity.",
                  "type": "nullable",
                  "value": {
                    "description": "The start date of the economic activity.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "end_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The end date of the economic activity.
",
                  "type": "nullable",
                  "value": {
                    "description": "The end date of the economic activity.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "order",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The order of the economic activity.",
                  "type": "nullable",
                  "value": {
                    "description": "The order of the economic activity.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "percentage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The percentage of the economic activity.
",
                  "type": "nullable",
                  "value": {
                    "description": "The percentage of the economic activity.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusObligationsDian": {
          "allOf": [],
          "description": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
          "generatedName": "TaxStatusObligationsDian",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "obligation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "expiration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "initial_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "end_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusObligationsSat": {
          "allOf": [],
          "description": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
          "generatedName": "TaxStatusObligationsSat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "obligation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The description of the obligation.
",
                  "type": "nullable",
                  "value": {
                    "description": "The description of the obligation.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "expiration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The deadline to fulfill the obligation, as imposed by the tax authority.
",
                  "type": "nullable",
                  "value": {
                    "description": "The deadline to fulfill the obligation, as imposed by the tax authority.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "initial_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date when obligation started.
",
                  "type": "nullable",
                  "value": {
                    "description": "The date when obligation started.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "end_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date when obligation ended.
",
                  "type": "nullable",
                  "value": {
                    "description": "The date when obligation ended.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of tax status objects.",
                  "type": "array",
                  "value": {
                    "oneOf": {
                      "description": undefined,
                      "generatedName": "TaxStatusPaginatedResponseResultsItem",
                      "nameOverride": undefined,
                      "schemas": [
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "TaxStatusPaginatedResponseResultsItemTaxStatusPaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "TaxStatusSat",
                          "type": "reference",
                        },
                        {
                          "description": undefined,
                          "file": undefined,
                          "generatedName": "TaxStatusPaginatedResponseResultsItemTaxStatusPaginatedResponseResultsItem",
                          "nameOverride": undefined,
                          "schema": "TaxStatusDian",
                          "type": "reference",
                        },
                      ],
                      "type": "undisciminated",
                    },
                    "type": "oneOf",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusRegimensDian": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusRegimensDian",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "end_date",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "initial_date",
              "schema": {
                "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                "type": "nullable",
                "value": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "regimen",
              "schema": {
                "description": "The description of the regimen.",
                "type": "nullable",
                "value": {
                  "description": "The description of the regimen.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusRegimensSat": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusRegimensSat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "end_date",
              "schema": {
                "description": "The end date of the regimen.
",
                "type": "nullable",
                "value": {
                  "description": "The end date of the regimen.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "initial_date",
              "schema": {
                "description": "The start date of the regimen.
",
                "type": "nullable",
                "value": {
                  "description": "The start date of the regimen.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "regimen",
              "schema": {
                "description": "The description of the regimen.",
                "type": "nullable",
                "value": {
                  "description": "The description of the regimen.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The fiscal \`link.id\` to use.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "attach_pdf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "When set to \`true\`, you will receive the PDF in binary format in the response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusSat": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TaxStatusSat",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Unique identifier created by Belvo used to reference the current Tax Status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` that the tax status is associated with.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "place_and_date_of_issuance",
              "schema": {
                "description": "The place and date of that the tax status was issued.",
                "type": "nullable",
                "value": {
                  "description": "The place and date of that the tax status was issued.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "official_name",
              "schema": {
                "description": "The name of the person or business.",
                "type": "nullable",
                "value": {
                  "description": "The name of the person or business.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id_cif",
              "schema": {
                "description": "The taxpayer's *Cédula de Identificación Fiscal* (CIF) ID.
",
                "type": "nullable",
                "value": {
                  "description": "The taxpayer's *Cédula de Identificación Fiscal* (CIF) ID.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tax_payer_information",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxStatusSatTaxPayerInformation",
                "nameOverride": undefined,
                "schema": "TaxStatusTaxPayerInformationSat",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "address",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TaxStatusSatAddress",
                "nameOverride": undefined,
                "schema": "TaxStatusAddressSat",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "economic_activity",
              "schema": {
                "description": "A list of economic activity objects.
",
                "type": "nullable",
                "value": {
                  "description": "A list of economic activity objects.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxStatusSatEconomicActivityItem",
                    "nameOverride": undefined,
                    "schema": "TaxStatusEconomicActivitySat",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "regimes",
              "schema": {
                "description": "A list of regimen objects.
",
                "type": "nullable",
                "value": {
                  "description": "A list of regimen objects.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxStatusSatRegimesItem",
                    "nameOverride": undefined,
                    "schema": "TaxStatusRegimensSat",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "obligations",
              "schema": {
                "description": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
                "type": "nullable",
                "value": {
                  "description": "Details regarding a business's obligations.

ℹ️ For non-business accounts, this field will return empty.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TaxStatusSatObligationsItem",
                    "nameOverride": undefined,
                    "schema": "TaxStatusObligationsSat",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "digital_stamp",
              "schema": {
                "description": "The validation certificate of the document.",
                "type": "nullable",
                "value": {
                  "description": "The validation certificate of the document.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "digital_stamp_chain",
              "schema": {
                "description": "A data chain containing the basic structure of a fiscal digital check. For Mexico, this is the *Comprobante Fiscal Digital por Internet* (CFDI).
",
                "type": "nullable",
                "value": {
                  "description": "A data chain containing the basic structure of a fiscal digital check. For Mexico, this is the *Comprobante Fiscal Digital por Internet* (CFDI).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "pdf",
              "schema": {
                "description": "Tax status PDF as a binary string.",
                "type": "nullable",
                "value": {
                  "description": "Tax status PDF as a binary string.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TaxStatusTaxPayerInformationDian": {
          "description": "Details regarding the taxpayer.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Details regarding the taxpayer.",
            "generatedName": "TaxStatusTaxPayerInformationDian",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "rfc",
                "schema": {
                  "description": "The tax payers's identification number (NIT).
",
                  "type": "nullable",
                  "value": {
                    "description": "The tax payers's identification number (NIT).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "curp",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "type": "nullable",
                    "value": {
                      "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The tax payers's first name.",
                    "type": "nullable",
                    "value": {
                      "description": "The tax payers's first name.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "first_last_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The tax payers's first last name.",
                    "type": "nullable",
                    "value": {
                      "description": "The tax payers's first last name.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "second_last_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The tax payers's second last name.",
                    "type": "nullable",
                    "value": {
                      "description": "The tax payers's second last name.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "start_operations_date",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "status_padron",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "last_status_change_date",
                "schema": {
                  "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                  "type": "nullable",
                  "value": {
                    "description": "**Note**: This field is not applicable for DIAN Colombia and will return \`null\`.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "commercial_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The name of the business designated for consumers and the general public.

**Note**: Only applicable for businesses.
",
                    "type": "nullable",
                    "value": {
                      "description": "The name of the business designated for consumers and the general public.

**Note**: Only applicable for businesses.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "social_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The unique and exclusive name within the national territory that companies receive for legal or administrative purposes.
**Note**: Only applicable for businesses.",
                    "type": "nullable",
                    "value": {
                      "description": "The unique and exclusive name within the national territory that companies receive for legal or administrative purposes.
**Note**: Only applicable for businesses.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "email",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Contact email address for the tax payer.",
                    "type": "nullable",
                    "value": {
                      "description": "Contact email address for the tax payer.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "phone",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Contact phone number for the tax payer.",
                    "type": "nullable",
                    "value": {
                      "description": "Contact phone number for the tax payer.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "TaxStatusTaxPayerInformationSat": {
          "description": "Details regarding the taxpayer.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Details regarding the taxpayer.",
            "generatedName": "TaxStatusTaxPayerInformationSat",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "rfc",
                "schema": {
                  "description": "The tax payers's identification number (For Mexico, this is the RFC).
",
                  "type": "nullable",
                  "value": {
                    "description": "The tax payers's identification number (For Mexico, this is the RFC).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "curp",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The tax payers's *Clave Única de Registro de Población* (CURP) number.
",
                    "type": "nullable",
                    "value": {
                      "description": "The tax payers's *Clave Única de Registro de Población* (CURP) number.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The tax payers's first name.",
                    "type": "nullable",
                    "value": {
                      "description": "The tax payers's first name.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "first_last_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The tax payers's first last name.",
                    "type": "nullable",
                    "value": {
                      "description": "The tax payers's first last name.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "second_last_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The tax payers's second last name.",
                    "type": "nullable",
                    "value": {
                      "description": "The tax payers's second last name.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "start_operations_date",
                "schema": {
                  "description": "Date when the tax payer commenced taxable commercial activities.
",
                  "type": "nullable",
                  "value": {
                    "description": "Date when the tax payer commenced taxable commercial activities.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "status_padron",
                "schema": {
                  "description": "Status of the taxpayer in the Federal Register of Taxpayers (RFC). Can be \`ACTIVO\` or \`INACTIVO\`.",
                  "type": "nullable",
                  "value": {
                    "description": "Status of the taxpayer in the Federal Register of Taxpayers (RFC). Can be \`ACTIVO\` or \`INACTIVO\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "last_status_change_date",
                "schema": {
                  "description": "Date when \`status_padron\` was most recently updated.
",
                  "type": "nullable",
                  "value": {
                    "description": "Date when \`status_padron\` was most recently updated.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "conflict": [],
                "key": "commercial_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The name of the business designated for consumers and the general public.

**Note**: Only applicable for businesses.
",
                    "type": "nullable",
                    "value": {
                      "description": "The name of the business designated for consumers and the general public.

**Note**: Only applicable for businesses.
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "social_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The unique and exclusive name within the national territory that companies receive for legal or administrative purposes.
**Note**: Only applicable for businesses.",
                    "type": "nullable",
                    "value": {
                      "description": "The unique and exclusive name within the national territory that companies receive for legal or administrative purposes.
**Note**: Only applicable for businesses.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "email",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Contact email address for the tax payer.",
                    "type": "nullable",
                    "value": {
                      "description": "Contact email address for the tax payer.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "phone",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "Contact phone number for the tax payer.",
                    "type": "nullable",
                    "value": {
                      "description": "Contact phone number for the tax payer.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "TokenRequiredResponse": {
          "allOf": [],
          "description": "MFA Token Required",
          "generatedName": "TokenRequiredResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`token_required\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#428-token_required" target="_blank">428 token_required errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`token_required\` errors, the description is:
  
  - \`A MFA token is required by the institution to login\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "session",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the login session (matching a regex pattern of: \`[a-f0-9]{32}\`).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expiry",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Session duration time in seconds.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier created by Belvo, used to reference the current Link.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "token_generation_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TokenRequiredResponseTokenGenerationData",
                  "nameOverride": undefined,
                  "schema": "TokenRequiredResponseTokenGenerationData",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "TokenRequiredResponseTokenGenerationData": {
          "allOf": [],
          "description": "Details on how to generate the token.",
          "generatedName": "TokenRequiredResponseTokenGenerationData",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "instructions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Instructions for token generation.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Type of the data to generate the token (QR code, numeric challenge).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Value to use to generate the token.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expects_user_input",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether the user needs to provide input in order to complete the authentication.
When set to \`false\`, your user may need to:
- confirm the login on another device - scan a QR code
You will still need to make a PATCH call to complete the request.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TooManySessionsError": {
          "allOf": [],
          "description": "This error occurs when:

  - a user is attempting to log in to their institution via Belvo while also already being logged in to their institution on a web browser or mobile app.
  - you make a request for information while Belvo is scraping data from the institution for that user.",
          "generatedName": "TooManySessionsError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`too_many_sessions\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-too_many_sessions" target="_blank">400 too_many_sessions errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`too_many_sessions\` errors, the description is:
  
  - \`Impossible to login, a session is already opened with the institution for these credentials\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Transaction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Transaction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the transaction.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "internal_identification",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The institution's internal identification for the transaction.
",
                  "type": "nullable",
                  "value": {
                    "description": "The institution's internal identification for the transaction.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "account",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TransactionAccount",
                "nameOverride": undefined,
                "schema": "Account",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "collected_at",
              "schema": {
                "description": "The ISO-8601 timestamp when the data point was collected.",
                "type": "nullable",
                "value": {
                  "description": "The ISO-8601 timestamp when the data point was collected.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "value_date",
              "schema": {
                "description": "The date when the transaction occurred, in \`YYYY-MM-DD\` format.",
                "type": "nullable",
                "value": {
                  "description": "The date when the transaction occurred, in \`YYYY-MM-DD\` format.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "accounting_date",
              "schema": {
                "description": "The ISO timestamp when the transaction was processed and accounted for by the institution.",
                "type": "nullable",
                "value": {
                  "description": "The ISO timestamp when the transaction was processed and accounted for by the institution.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "The transaction amount.
ℹ️ The amount displayed is always positive as we indicate the direction of the transaction in the \`type\` parameter.
",
                "type": "nullable",
                "value": {
                  "description": "The transaction amount.
ℹ️ The amount displayed is always positive as we indicate the direction of the transaction in the \`type\` parameter.
",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "balance",
              "schema": {
                "description": "The balance at the end of the transaction.",
                "type": "nullable",
                "value": {
                  "description": "The balance at the end of the transaction.",
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": "The three-letter currency code (ISO-4217).
",
                "type": "nullable",
                "value": {
                  "description": "The three-letter currency code (ISO-4217).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of transaction provided by the institution. Usually this is the text that the end user sees in the online platform.",
                "type": "nullable",
                "value": {
                  "description": "The description of transaction provided by the institution. Usually this is the text that the end user sees in the online platform.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "observations",
              "schema": {
                "description": "Additional observations provided by the institution on the transaction.",
                "type": "nullable",
                "value": {
                  "description": "Additional observations provided by the institution on the transaction.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "merchant",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TransactionMerchant",
                "nameOverride": undefined,
                "schema": "TransactionMerchantData",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "category",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TransactionCategory",
                "nameOverride": undefined,
                "schema": "EnumTransactionCategory",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "subcategory",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TransactionSubcategory",
                  "nameOverride": undefined,
                  "schema": "EnumTransactionSubcategory",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "reference",
              "schema": {
                "description": "The reference number of the transaction, provided by the bank.",
                "type": "nullable",
                "value": {
                  "description": "The reference number of the transaction, provided by the bank.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TransactionType",
                "nameOverride": undefined,
                "schema": "EnumTransactionType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TransactionStatus",
                "nameOverride": undefined,
                "schema": "EnumTransactionStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "credit_card_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TransactionCreditCardData",
                  "nameOverride": undefined,
                  "schema": "TransactionCreditCardData",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "TransactionBankAccountBodyPse": {
          "allOf": [],
          "description": "Information about the payer's bank account. Belvo returns the bank account ID when the account is already saved in the Belvo database.",
          "generatedName": "TransactionBankAccountBodyPse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "bank_account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique identifier for the payer’s bank account.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TransactionBankAccountOfpi": {
          "description": "Object containing the payer's bank account information. For OFPI, this field will return an empty object.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "TransactionBankAccountPse": {
          "oneOf": {
            "description": "Object containing the payer's bank account information.",
            "generatedName": "TransactionBankAccountPse",
            "nameOverride": undefined,
            "schemas": [
              {
                "description": undefined,
                "file": undefined,
                "generatedName": "TransactionBankAccountPseTransactionBankAccountPse",
                "nameOverride": undefined,
                "schema": "TransactionBankAccountBodyPse",
                "type": "reference",
              },
              {
                "description": undefined,
                "file": undefined,
                "generatedName": "TransactionBankAccountPseTransactionBankAccountPse",
                "nameOverride": undefined,
                "schema": "BankAccountInformationPse",
                "type": "reference",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "TransactionCreditCardData": {
          "description": "Additional data provided by the institution for credit card transactions.",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Additional data provided by the institution for credit card transactions.",
            "generatedName": "TransactionCreditCardData",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "collected_at",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The ISO-8601 timestamp when the data point was collected.",
                    "type": "nullable",
                    "value": {
                      "description": "The ISO-8601 timestamp when the data point was collected.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "bill_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The title of the monthly credit card bill the transaction belongs to. The format of the returned value is institution specific, however, some common examples are:

- diciembre-2021
- dec-2021
- dec-21
",
                    "type": "nullable",
                    "value": {
                      "description": "The title of the monthly credit card bill the transaction belongs to. The format of the returned value is institution specific, however, some common examples are:

- diciembre-2021
- dec-2021
- dec-21
",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "bill_status",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TransactionCreditCardDataBillStatus",
                    "nameOverride": undefined,
                    "schema": "EnumTransactionBillStatus",
                    "type": "reference",
                  },
                },
              },
              {
                "conflict": [],
                "key": "bill_amount",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The aggregate bill amount, as of \`collected_at\`.",
                    "type": "nullable",
                    "value": {
                      "description": "The aggregate bill amount, as of \`collected_at\`.",
                      "schema": {
                        "type": "float",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "previous_bill_total",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The total amount of the previous month's bill, if available.",
                    "type": "nullable",
                    "value": {
                      "description": "The total amount of the previous month's bill, if available.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "TransactionMerchantData": {
          "description": "Additional data regarding the merchant involved in the transaction.
We only return merchant information for new transactions made from *checking* or *credit card* accounts.
> **Get merchant information**
 We retrieve the merchant information for a transaction as part of our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions) product, turning raw data into actionable insights. To enable this product, just [reach out](https://belvo.com/contact/?utm_source=documentation) to us, and we'll get right to it.
",
          "type": "nullable",
          "value": {
            "allOf": [],
            "description": "Additional data regarding the merchant involved in the transaction.
We only return merchant information for new transactions made from *checking* or *credit card* accounts.
> **Get merchant information**
 We retrieve the merchant information for a transaction as part of our [Transaction categorization](https://developers.belvo.com/docs/banking#categorizing-transactions) product, turning raw data into actionable insights. To enable this product, just [reach out](https://belvo.com/contact/?utm_source=documentation) to us, and we'll get right to it.
",
            "generatedName": "TransactionMerchantData",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "logo",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The URL to the merchant's logo.",
                    "type": "nullable",
                    "value": {
                      "description": "The URL to the merchant's logo.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "website",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The URL to the merchant's website.",
                    "type": "nullable",
                    "value": {
                      "description": "The URL to the merchant's website.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "conflict": [],
                "key": "merchant_name",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": "The name of the merchant.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "type": "object",
          },
        },
        "TransactionsPaginatedResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TransactionsPaginatedResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total number of results in your Belvo account.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to next page of results. Each page consists of up to 100 items. If there are not enough results for an additional page, the value is \`null\`.

In our documentation example, we use \`{endpoint}\` as a placeholder value. In production, this value will be replaced by the actual endpoint you are currently using (for example, \`accounts\` or \`owners\`).
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                  "type": "nullable",
                  "value": {
                    "description": "The URL to the previous page of results. If there is no previous page, the value is \`null\`.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Array of transaction objects.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TransactionsPaginatedResponseResultsItem",
                    "nameOverride": undefined,
                    "schema": "Transaction",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TransactionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TransactionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": "The \`link.id\` that you want to get information for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "If provided, we return transactions only from this account.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "date_from",
              "schema": {
                "description": "The date from which you want to start getting transactions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_from\` cannot be greater than \`date_to\`.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "date_to",
              "schema": {
                "description": "The date you want to stop getting transactions for, in \`YYYY-MM-DD\` format.

⚠️ The value of \`date_to\` cannot be greater than today's date (in other words, no future dates).",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The OTP token generated by the bank.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether or not to persist the data in Belvo. By default, this is set to \`true\` and we return a 201 Created response.
When set to \`false\`, the data won't be persisted and we return a 200 OK response.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UnauthorizedError": {
          "allOf": [],
          "description": "This error occurs when you try to make an API call using incorrect Belvo API credentials (either your secret key or secret password, or both, are incorrect).",
          "generatedName": "UnauthorizedError",
          "nameOverride": "UnauthorizedErrorBody",
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`authentication_failed\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#401-authentication_failed" target="_blank">401 authentication_failed errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`authentication_failed\` errors, the description is:

  - \`Invalid Secret Keys\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UnconfirmedLinkError": {
          "allOf": [],
          "description": "This error occurs when you try to access a link that was paused previously (and as such is not active now).
A Link's status is set to \`unconfirmed_link\` when your user has not completed the Link creation process successfully (for example, they might not provide a valid MFA token).",
          "generatedName": "UnconfirmedLinkError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`unconfirmed_link\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-unconfirmed_link" target="_blank">400 unconfirmed_link errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`unconfirmed_link\` errors, the description is:
  
  - \`The link creation has not been completed yet\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UnexpectedError": {
          "allOf": [],
          "description": "This error occurs when we (Belvo) have encountered an internal system error (sorry about that) or due to an unsupported response from the institution.",
          "generatedName": "UnexpectedError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`unexpected_error\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#500-unexpected_error" target="_blank">500 unexpected_error errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`unexpected_error\` errors, the description is:
  
  - \`Belvo is unable to process the request due to an internal system issue or to an unsupported response from an institution\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UnsupportedOperationError": {
          "allOf": [],
          "description": "This error occurs when you try to access some data operation that Belvo does not support for an institution. For example, trying to access the Balances resource for fiscal institutions.",
          "generatedName": "UnsupportedOperationError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`unsupported_operation\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle <a href="https://developers.belvo.com/docs/belvo-api-errors#400-unsupported_operation" target="_blank">400 unsupported_operation errors</a>.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`unsupported_operation\` errors, the description is:
  
  - \`The resource you are trying to access is not supported by this institution\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ValidationError": {
          "allOf": [],
          "description": "This error occurs when you try to resume a request session that has already expired. This is usually because the user took too long to provide their authentication token.",
          "generatedName": "ValidationError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique error code (\`null\`, \`does_not_exist\`, \`required\`) that allows you to classify and handle the error programmatically.

ℹ️ Check our DevPortal for more information on how to handle:
  - <a href="https://developers.belvo.com/docs/belvo-api-errors#400-blank" target="_blank">400 blank errors</a>
  - <a href="https://developers.belvo.com/docs/belvo-api-errors#400-null" target="_blank">400 null errors</a>
  - <a href="https://developers.belvo.com/docs/belvo-api-errors#400-does_not_exist" target="_blank">400 does_not_exist errors</a>
  - <a href="https://developers.belvo.com/docs/belvo-api-errors#400-required" target="_blank">400 required errors</a>",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A short description of the error. 

For \`session_expired\` errors, the description can be (among others):
  
  - \`This field is required.\`
  - \`Object with name=narnia does not exist.\`
  - \`This field may not be null.\`
  - \`This field may not be blank.\`",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "request_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A 32-character unique ID of the request (matching a regex pattern of: \`[a-f0-9]{32}\`). Provide this ID when contacting the Belvo support team to accelerate investigations.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "field",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Name of the field where the error was encountered.",
                  "type": "nullable",
                  "value": {
                    "description": "Name of the field where the error was encountered.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "paymentInstitution": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentInstitution",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID to reference the institution.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "active",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates whether this institution is available for use or not.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the institution, as designated by Belvo.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer-facing name of the institution.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "legal_entity_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the legal entity of the institution, as registered with the relevant regulatory authority. Only applicable for 🇧🇷 Brazil OFPI.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the legal entity of the institution, as registered with the relevant regulatory authority. Only applicable for 🇧🇷 Brazil OFPI.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "website",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL of the institution's website.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "logo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL of the institution's logo.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "icon_logo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL of the institution's icon logo.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "text_logo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL of the institution's text logo.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "primary_color",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The primary color on the institution's website.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PaymentInstitutionCountry",
                  "nameOverride": undefined,
                  "schema": "EnumPaymentsCountry",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "form_fields",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaymentInstitutionFormFieldsItem",
                    "nameOverride": undefined,
                    "schema": "InstitutionFormField",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "paymentTransaction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentTransaction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo’s unique ID to reference the transaction.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the data point was last updated in Belvo's database.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID for the user that created the payment.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": "The transaction amount.


**Note**: The amount displayed is always positive as we indicate the direction of the transaction in \`transaction_type\` parameter.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentTransactionCurrency",
                "nameOverride": undefined,
                "schema": "EnumPaymentsCurrency",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the payment.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "transaction_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PaymentTransactionTransactionType",
                "nameOverride": undefined,
                "schema": "EnumPaymentTransactionType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "beneficiary",
              "schema": {
                "description": "Belvo's unique ID used to identify the beneficiary's bank account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payer",
              "schema": {
                "oneOf": {
                  "description": undefined,
                  "generatedName": "PaymentTransactionPayer",
                  "nameOverride": undefined,
                  "schemas": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentTransactionPayerPaymentTransactionPayer",
                      "nameOverride": undefined,
                      "schema": "TransactionBankAccountOfpi",
                      "type": "reference",
                    },
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "PaymentTransactionPayerPaymentTransactionPayer",
                      "nameOverride": undefined,
                      "schema": "TransactionBankAccountPse",
                      "type": "reference",
                    },
                  ],
                  "type": "undisciminated",
                },
                "type": "oneOf",
              },
            },
            {
              "conflict": [],
              "key": "payment_intent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique ID of the payment intent associated with the transaction.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "customer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Belvo's unique ID for the customer asscociated with this transaction.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "paymentWebhook": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaymentWebhook",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Belvo's unique ID for the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The URL where webhook events should be sent to.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "auth_header",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The authentication header for the request. **Must** be set to \`Authorization\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "auth_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The authentication token you need to send webhook events. This value is obfuscated.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_at",
              "schema": {
                "description": "The ISO-8601 timestamp of when the webhook was created in our database.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": "Belvo's unique ID of the user that created the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "basicAuth": {
          "passwordVariableName": undefined,
          "type": "basic",
          "usernameVariableName": undefined,
        },
      },
      "servers": [
        {
          "description": "Production",
          "name": "Production",
          "url": "https://api.belvo.com",
        },
        {
          "description": "Sandbox",
          "name": "Sandbox",
          "url": "https://sandbox.belvo.com",
        },
        {
          "description": "Development",
          "name": "Development",
          "url": "https://development.belvo.com",
        },
      ],
      "tags": [],
      "title": "Belvo API Docs",
      "variables": {},
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser devrev simple 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "DevRev's REST API.",
      "endpoints": [
        {
          "authed": true,
          "description": "Gets the download URL for the artifact.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "ArtifactsLocateRequest",
          "headers": [],
          "method": "GET",
          "operationId": "artifacts-locate",
          "path": "/artifacts.locate",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the artifact to get the URL for.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ArtifactsLocateResponse",
              "nameOverride": undefined,
              "schema": "artifacts-locate-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "authed": true,
          "description": "Creates an artifact and generates an upload URL for its data.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "ArtifactsPrepareRequest",
          "headers": [],
          "method": "POST",
          "operationId": "artifacts-prepare",
          "path": "/artifacts.prepare",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ArtifactsPrepareRequest",
              "nameOverride": undefined,
              "schema": "artifacts-prepare-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ArtifactsPrepareResponse",
              "nameOverride": undefined,
              "schema": "artifacts-prepare-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "authed": true,
          "description": "Creates a JWT corresponding to the requested token type for the
authenticated user.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-create",
          "path": "/auth-tokens.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensCreateRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensCreateResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Revokes the token that matches the given token ID issued under the
given Dev organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-delete",
          "path": "/auth-tokens.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensDeleteRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Gets the token metadata corresponding to the given token ID under the
given Dev organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "auth-tokens-get",
          "path": "/auth-tokens.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The unique identifier of the token under a given Dev organization.
",
              "name": "token_id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensGetResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Gets the token metadata for all the tokens corresponding to the given
token type issued for a given subject.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "auth-tokens-list",
          "path": "/auth-tokens.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "An identifier that represents the application, which requested the
token. Only relevant for application access tokens.
",
              "name": "client_id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The type of the requested token. If no value is specified, the
response will include tokens of all the types.
",
              "name": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensListRequestRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "description": "The subject associated with the token. In the absence of this
parameter, the ID of the authenticated entity is treated as the
subject.
",
              "name": "subject",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensListResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Revokes all the tokens that matches the given token type created by the
authenticated user.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensSelfDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-self-delete",
          "path": "/auth-tokens.self.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensSelfDeleteRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-self-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Updates token metadata of a token issued under a given Dev
organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-update",
          "path": "/auth-tokens.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensUpdateRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensUpdateResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new enterprise authentication connection for a Dev
organization. This authentication connection will not be enabled by
default for the organization and the user will need to explicitly
enable this. Keep in mind that at a time, only one authentication
connection can be enabled for a Dev organization. At present, only 5
enterprise connections can be created by an organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-create",
          "path": "/dev-orgs.auth-connections.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsCreateRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsCreateResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Deletes an authentication connection. Only enterprise connections which
are explicitly set up for a Dev organization can be deleted. Default
connections can not be deleted using this method.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-delete",
          "path": "/dev-orgs.auth-connections.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsDeleteRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Retrieves the details for an authentication connection.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-org-auth-connections-get",
          "path": "/dev-orgs.auth-connections.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "ID of the authentication connection.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsGetResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Lists all the authentication connections available for a Dev
organization. This list will include both social and enterprise
connections which are either available by default or are explicitly
created by the user.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-org-auth-connections-list",
          "path": "/dev-orgs.auth-connections.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsListResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Enable or disable an authentication connection for a Dev organization.
Currently, only 1 authentication connection can be enabled at a time.
When a new authentication connection is enabled, the connection which
is currently enabled for the Dev organization is automatically
disabled.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsToggleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-toggle",
          "path": "/dev-orgs.auth-connections.toggle",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsToggleRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-toggle-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Updates an authentication connection.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-update",
          "path": "/dev-orgs.auth-connections.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsUpdateRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsUpdateResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Lists users within your organization.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevUsersListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-users-list",
          "path": "/dev-users.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters Dev users based on email addresses.",
              "name": "email",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The maximum number of Dev users to return. The default is '50'.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevUsersListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Fields to sort the Dev users by and the direction to sort them.
",
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters Dev users based on state.",
              "name": "state",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DevUsersListRequestStateItem",
                    "nameOverride": undefined,
                    "schema": "user-state",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevUsersListResponse",
              "nameOverride": undefined,
              "schema": "dev-users-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "authed": true,
          "description": "Gets the authenticated user's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevUsersSelfRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-users-self",
          "path": "/dev-users.self",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevUsersSelfResponse",
              "nameOverride": undefined,
              "schema": "dev-users-self-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "authed": true,
          "description": "Creates new [part](https://devrev.ai/docs/product/parts).",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "parts-create",
          "path": "/parts.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsCreateRequest",
              "nameOverride": undefined,
              "schema": "parts-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsCreateResponse",
              "nameOverride": undefined,
              "schema": "parts-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Deletes a [part](https://devrev.ai/docs/product/parts).",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "parts-delete",
          "path": "/parts.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsDeleteRequest",
              "nameOverride": undefined,
              "schema": "parts-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsDeleteResponse",
              "nameOverride": undefined,
              "schema": "parts-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "parts-get",
          "path": "/parts.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the part to retrieve.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsGetResponse",
              "nameOverride": undefined,
              "schema": "parts-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "parts-list",
          "path": "/parts.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Filters for parts created by any of these users.",
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The maximum number of parts to return. The default is '50'.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartsListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Filters for parts of the provided name(s).",
              "name": "name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for parts owned by any of these users.",
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for parts of the provided type(s).",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartsListRequestTypeItem",
                    "nameOverride": undefined,
                    "schema": "part-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsListResponse",
              "nameOverride": undefined,
              "schema": "parts-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Updates a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "parts-update",
          "path": "/parts.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsUpdateRequest",
              "nameOverride": undefined,
              "schema": "parts-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsUpdateResponse",
              "nameOverride": undefined,
              "schema": "parts-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Creates a Rev organization in the authenticated user's Dev
organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-create",
          "path": "/rev-orgs.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsCreateRequest",
              "nameOverride": undefined,
              "schema": "rev-orgs-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsCreateResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Deletes the Rev organization.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-delete",
          "path": "/rev-orgs.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsDeleteRequest",
              "nameOverride": undefined,
              "schema": "rev-orgs-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsDeleteResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Retrieves the Rev organization's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "rev-orgs-get",
          "path": "/rev-orgs.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the required Rev organization.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsGetResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Gets the list of Rev organizations' information belonging to the
authenticated user's Dev Organization which the user is also authorized
to access.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "rev-orgs-list",
          "path": "/rev-orgs.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Filters by creator.",
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for objects created after the provided timestamp (inclusive).
",
              "name": "created_date.after",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters for objects created before the provided timestamp
(inclusive).
",
              "name": "created_date.before",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List of external refs to filter Rev organizations for.",
              "name": "external_ref",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The maximum number of Rev organizations to be retrieved per page.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Filters for objects created after the provided timestamp (inclusive).
",
              "name": "modified_date.after",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters for objects created before the provided timestamp
(inclusive).
",
              "name": "modified_date.before",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Fields to sort the Rev organizations by and the direction to sort
them.
",
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsListResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Updates the Rev organization's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-update",
          "path": "/rev-orgs.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsUpdateRequest",
              "nameOverride": undefined,
              "schema": "rev-orgs-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsUpdateResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new tag, which is used to create associations between objects
and a logical concept denoted by the tag's name.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "tags-create",
          "path": "/tags.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsCreateRequest",
              "nameOverride": undefined,
              "schema": "tags-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsCreateResponse",
              "nameOverride": undefined,
              "schema": "tags-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Deletes a tag.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "tags-delete",
          "path": "/tags.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsDeleteRequest",
              "nameOverride": undefined,
              "schema": "tags-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsDeleteResponse",
              "nameOverride": undefined,
              "schema": "tags-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Gets a tag's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "tags-get",
          "path": "/tags.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The requested tag's ID.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsGetResponse",
              "nameOverride": undefined,
              "schema": "tags-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Lists the available tags.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "tags-list",
          "path": "/tags.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The maximum number of tags to return. The default is '50'.",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsListResponse",
              "nameOverride": undefined,
              "schema": "tags-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Updates a tag's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "tags-update",
          "path": "/tags.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsUpdateRequest",
              "nameOverride": undefined,
              "schema": "tags-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsUpdateResponse",
              "nameOverride": undefined,
              "schema": "tags-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new entry on an object's timeline.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TimelineEntriesCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "timeline-entries-create",
          "path": "/timeline-entries.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesCreateRequest",
              "nameOverride": undefined,
              "schema": "timeline-entries-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesCreateResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Gets an entry on an object's timeline.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TimelineEntriesGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "timeline-entries-get",
          "path": "/timeline-entries.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the timeline entry to get.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesGetResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Lists the timeline entries for an object.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TimelineEntriesListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "timeline-entries-list",
          "path": "/timeline-entries.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the object to list timeline entries for.",
              "name": "object",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The maximum number of entries to return. If not set, then this
defaults to \`50\`.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesListResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Updates an entry on an object's timeline.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TimelineEntriesUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "timeline-entries-update",
          "path": "/timeline-entries.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesUpdateRequest",
              "nameOverride": undefined,
              "schema": "timeline-entries-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesUpdateResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new webhook target.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-create",
          "path": "/webhooks.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksCreateRequest",
              "nameOverride": undefined,
              "schema": "webhooks-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksCreateResponse",
              "nameOverride": undefined,
              "schema": "webhooks-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Deletes the requested webhook.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-delete",
          "path": "/webhooks.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksDeleteRequest",
              "nameOverride": undefined,
              "schema": "webhooks-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksDeleteResponse",
              "nameOverride": undefined,
              "schema": "webhooks-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Gets the requested webhook's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "webhooks-get",
          "path": "/webhooks.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "ID for the webhook.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksGetResponse",
              "nameOverride": undefined,
              "schema": "webhooks-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Lists the webhooks.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "webhooks-list",
          "path": "/webhooks.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksListResponse",
              "nameOverride": undefined,
              "schema": "webhooks-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Updates the requested webhook.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-update",
          "path": "/webhooks.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksUpdateRequest",
              "nameOverride": undefined,
              "schema": "webhooks-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksUpdateResponse",
              "nameOverride": undefined,
              "schema": "webhooks-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Creates new work ([issue](https://devrev.ai/docs/product/build),
[ticket](https://devrev.ai/docs/product/support)) item.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "works-create",
          "path": "/works.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksCreateRequest",
              "nameOverride": undefined,
              "schema": "works-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksCreateResponse",
              "nameOverride": undefined,
              "schema": "works-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Deletes a work item.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "works-delete",
          "path": "/works.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksDeleteRequest",
              "nameOverride": undefined,
              "schema": "works-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksDeleteResponse",
              "nameOverride": undefined,
              "schema": "works-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Exports a collection of work items.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksExportRequest",
          "headers": [],
          "method": "GET",
          "operationId": "works-export",
          "path": "/works.export",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Filters for work belonging to any of the provided parts.",
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for work created by any of these users.",
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The number of work items to return. The default is '50', the maximum
is '5000'.
",
              "name": "first",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters for issues with any of the provided priorities.",
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksExportRequestIssuePriorityItem",
                    "nameOverride": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": "Filters for issues with any of the provided Rev organizations.
",
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for work owned by any of these users.",
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for records in the provided stage(s).",
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for tickets that are associated with any of the provided Rev
organizations.
",
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for tickets with any of the provided severities.",
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksExportRequestTicketSeverityItem",
                    "nameOverride": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": "Filters for work of the provided types.",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksExportRequestTypeItem",
                    "nameOverride": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksExportResponse",
              "nameOverride": undefined,
              "schema": "works-export-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Gets a work item's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "works-get",
          "path": "/works.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The work's ID.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksGetResponse",
              "nameOverride": undefined,
              "schema": "works-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Lists a collection of work items.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "works-list",
          "path": "/works.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Filters for work belonging to any of the provided parts.",
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for work created by any of these users.",
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters for issues with any of the provided priorities.",
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksListRequestIssuePriorityItem",
                    "nameOverride": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": "Filters for issues with any of the provided Rev organizations.
",
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The maximum number of works to return. The default is '50'.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Filters for work owned by any of these users.",
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for records in the provided stage(s).",
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for tickets that are associated with any of the provided Rev
organizations.
",
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for tickets with any of the provided severities.",
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksListRequestTicketSeverityItem",
                    "nameOverride": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": "Filters for work of the provided types.",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksListRequestTypeItem",
                    "nameOverride": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksListResponse",
              "nameOverride": undefined,
              "schema": "works-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Updates a work item's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "works-update",
          "path": "/works.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksUpdateRequest",
              "nameOverride": undefined,
              "schema": "works-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksUpdateResponse",
              "nameOverride": undefined,
              "schema": "works-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
      ],
      "errors": {
        "400": {
          "description": undefined,
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "BadRequestErrorBody",
            "nameOverride": undefined,
            "schema": "error-bad-request",
            "type": "reference",
          },
        },
        "401": {
          "description": undefined,
          "generatedName": "UnauthorizedError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "UnauthorizedErrorBody",
            "nameOverride": undefined,
            "schema": "error-unauthorized",
            "type": "reference",
          },
        },
        "403": {
          "description": undefined,
          "generatedName": "ForbiddenError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "ForbiddenErrorBody",
            "nameOverride": undefined,
            "schema": "error-forbidden",
            "type": "reference",
          },
        },
        "404": {
          "description": undefined,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "NotFoundErrorBody",
            "nameOverride": undefined,
            "schema": "error-not-found",
            "type": "reference",
          },
        },
        "429": {
          "description": undefined,
          "generatedName": "TooManyRequestsError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "TooManyRequestsErrorBody",
            "nameOverride": undefined,
            "schema": "error-too-many-requests",
            "type": "reference",
          },
        },
        "500": {
          "description": undefined,
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "InternalServerErrorBody",
            "nameOverride": undefined,
            "schema": "error-internal-server-error",
            "type": "reference",
          },
        },
        "503": {
          "description": undefined,
          "generatedName": "ServiceUnavailableError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "ServiceUnavailableErrorBody",
            "nameOverride": undefined,
            "schema": "error-service-unavailable",
            "type": "reference",
          },
        },
      },
      "nonRequestReferencedSchemas": [
        "artifacts-locate-response",
        "artifacts-prepare-response",
        "auth-tokens-create-response",
        "auth-tokens-get-response",
        "auth-token-requested-token-type",
        "auth-tokens-list-response",
        "auth-tokens-update-response",
        "dev-org-auth-connections-create-response",
        "dev-org-auth-connections-get-response",
        "dev-org-auth-connections-list-response",
        "dev-org-auth-connections-update-response",
        "list-mode",
        "user-state",
        "dev-users-list-response",
        "dev-users-self-response",
        "parts-create-response",
        "parts-delete-response",
        "parts-get-response",
        "part-type",
        "parts-list-response",
        "parts-update-response",
        "rev-orgs-create-response",
        "rev-orgs-delete-response",
        "rev-orgs-get-response",
        "rev-orgs-list-response",
        "rev-orgs-update-response",
        "tags-create-response",
        "tags-delete-response",
        "tags-get-response",
        "tags-list-response",
        "tags-update-response",
        "timeline-entries-create-response",
        "timeline-entries-get-response",
        "timeline-entries-list-response",
        "timeline-entries-update-response",
        "webhooks-create-response",
        "webhooks-delete-response",
        "webhooks-get-response",
        "webhooks-list-response",
        "webhooks-update-response",
        "works-create-response",
        "works-delete-response",
        "issue-priority",
        "ticket-severity",
        "work-type",
        "works-export-response",
        "works-get-response",
        "works-list-response",
        "works-update-response",
        "atom-base-summary",
        "artifacts-prepare-response-form-data",
        "user-summary",
        "auth-token-status",
        "auth-token-grant-type",
        "auth-tokens-rev-info",
        "auth-token-subject-token-type",
        "auth-token-token-type",
        "auth-token",
        "auth-tokens-org-traits",
        "auth-tokens-user-traits",
        "part-base",
        "part-base-summary",
        "auth-connection",
        "auth-connection-toggle",
        "artifact-summary",
        "external-identity",
        "user-base-summary",
        "dev-user",
        "tag-with-value",
        "error-bad-request-type",
        "error-forbidden-type",
        "error-internal-server-error-type",
        "error-not-found-type",
        "error-service-unavailable-type",
        "error-too-many-requests-type",
        "error-unauthorized-type",
        "part",
        "rev-org",
        "tag",
        "timeline-entry",
        "webhook",
        "work",
        "part-summary",
        "stage",
        "parts-update-request-owned-by",
        "org-base-summary",
        "org-environment",
        "org-summary",
        "tag-summary",
        "tags-update-allowed-values",
        "group-summary",
        "timeline-comment-body-type",
        "timeline-entry-visibility",
        "timeline-entries-update-request-timeline-comment-artifacts",
        "atom-base",
        "webhook-event-type",
        "webhook-status",
        "event-part-created",
        "event-part-deleted",
        "event-part-updated",
        "event-rev-org-created",
        "event-rev-org-deleted",
        "event-rev-org-updated",
        "event-tag-created",
        "event-tag-deleted",
        "event-tag-updated",
        "event-timeline-entry-created",
        "event-timeline-entry-deleted",
        "event-timeline-entry-updated",
        "webhook-event-verify",
        "event-webhook-created",
        "event-webhook-deleted",
        "event-webhook-updated",
        "event-work-created",
        "event-work-deleted",
        "event-work-updated",
        "webhooks-update-action",
        "webhooks-update-request-event-types",
        "stage-init",
        "set-tag-with-value",
        "works-update-request-artifact-ids",
        "works-update-request-owned-by",
        "works-update-request-reported-by",
        "stage-update",
        "works-update-request-tags",
        "error-bad-request",
        "error-unauthorized",
        "error-forbidden",
        "error-not-found",
        "error-too-many-requests",
        "error-internal-server-error",
        "error-service-unavailable",
      ],
      "schemas": {
        "artifact-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "ArtifactSummary",
          "nameOverride": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "artifacts-locate-response": {
          "allOf": [],
          "description": "The response to getting an artifact's download URL.",
          "generatedName": "ArtifactsLocateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "expires_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The expiration timestamp of the URL.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The artifact's download URL.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-request": {
          "allOf": [],
          "description": "The request to prepare a URL to upload a file.",
          "generatedName": "ArtifactsPrepareRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "file_name",
              "schema": {
                "description": "The name of the file that's being uploaded.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response": {
          "allOf": [],
          "description": "The response to preparing a URL to upload a file.",
          "generatedName": "ArtifactsPrepareResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "form_data",
              "schema": {
                "description": "The POST policy form data.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ArtifactsPrepareResponseFormDataItem",
                  "nameOverride": undefined,
                  "schema": "artifacts-prepare-response-form-data",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The generated artifact's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The URL that the file's data should be uploaded to.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response-form-data": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ArtifactsPrepareResponseFormData",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "key",
              "schema": {
                "description": "Key of the form field.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": "Value corresponding to the key.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "atom-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AtomBaseCreatedBy",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "created_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp when the object was created.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "display_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Human-readable object ID unique to the Dev organization.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "modified_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AtomBaseModifiedBy",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "modified_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp when the object was last modified.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "atom-base-summary": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "display_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Human-readable object ID unique to the Dev organization.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-connection": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "nullable",
                  "value": {
                    "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "enabled",
                "schema": {
                  "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
                  "type": "nullable",
                  "value": {
                    "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": "Connection object that specifies the configuration for an
authentication connection that is set up for a Dev organization.
",
            "discriminantProperty": "type",
            "generatedName": "AuthConnection",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
                "nameOverride": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
                "nameOverride": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
                "nameOverride": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "social": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSocial",
                "nameOverride": undefined,
                "schema": "auth-connection-options-social",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
                "nameOverride": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "auth-connection-options-azure-ad": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an Azure AD
authentication connection.
",
          "generatedName": "AuthConnectionOptionsAzureAd",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client ID for the Azure authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "client_secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client secret for the Azure authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Domain URL of the Azure authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-google-apps": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a Google Apps
authentication connection.
",
          "generatedName": "AuthConnectionOptionsGoogleApps",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client ID for the Google Apps authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "client_secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client secret for the Google Apps authentication connection.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tenant_domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Tenant domain URL of the Google Apps authentication connection.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-oidc": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an OIDC
authentication connection.
",
          "generatedName": "AuthConnectionOptionsOidc",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client ID for the OIDC authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "client_secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client secret for the OIDC authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "issuer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Issuer URL of the OIDC authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-saml": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a SAML
authentication connection.
",
          "generatedName": "AuthConnectionOptionsSaml",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "sign_in_endpoint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sign In endpoint for the SAML authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "signing_cert",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Signing certificate for the SAML authentication connection.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-social": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "auth-connection-toggle": {
          "description": undefined,
          "generatedName": "AuthConnectionToggle",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "disable",
              "nameOverride": undefined,
              "value": "disable",
            },
            {
              "generatedName": "enable",
              "nameOverride": undefined,
              "value": "enable",
            },
          ],
        },
        "auth-connection-type": {
          "description": "Defines the type for the authentication connection. The configuration
for each authentication connection will depend on the type value.
",
          "generatedName": "AuthConnectionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "generatedName": "social",
              "nameOverride": undefined,
              "value": "social",
            },
            {
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "auth-token": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AuthToken",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An identifier that represents the application that requested the
token. Only applicable for application access tokens.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expires_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The time at which the token expires.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "issued_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The time at which the token was issued.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokenRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "scopes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The scopes associated with the issued token.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokenStatus",
                  "nameOverride": undefined,
                  "schema": "auth-token-status",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "subject",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The subject of the token.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "token_hint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A hint that identifies the token.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-token-grant-type": {
          "description": "Specifies the process of obtaining a token.",
          "generatedName": "AuthTokenGrantType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UrnDevrevParamsOauthGrantTypeTokenIssue",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:grant-type:token-issue",
            },
            {
              "generatedName": "UrnIetfParamsOauthGrantTypeTokenExchange",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:grant-type:token-exchange",
            },
          ],
        },
        "auth-token-requested-token-type": {
          "description": "The type of the requested token.",
          "generatedName": "AuthTokenRequestedTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeAat",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeAatPublic",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat:public",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeDev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:dev",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypePat",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:pat",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeRev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:rev",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSession",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:session",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSessionDev0",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:session:dev0",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSys",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:sys",
            },
            {
              "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-status": {
          "description": "The status of the token.",
          "generatedName": "AuthTokenStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "expired",
              "nameOverride": undefined,
              "value": "expired",
            },
            {
              "generatedName": "revoked",
              "nameOverride": undefined,
              "value": "revoked",
            },
          ],
        },
        "auth-token-subject-token-type": {
          "description": "The type of the subject token.",
          "generatedName": "AuthTokenSubjectTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeJwtAuth0",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:auth0",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeJwtDev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:dev",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeRevinfo",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:revinfo",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSysu",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:sysu",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfo",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfoProfile",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo:profile",
            },
            {
              "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-token-type": {
          "description": "The type of the issued token. Bearer is the only supported token type.
",
          "generatedName": "AuthTokenTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "bearer",
              "nameOverride": undefined,
              "value": "bearer",
            },
          ],
        },
        "auth-tokens-create-request": {
          "allOf": [],
          "description": "A request to create a new token corresponding to the requested token
type.
",
          "generatedName": "AuthTokensCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "aud",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The expected audience values with respect to the token.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An identifier that represents the application which is requesting
the token. If no client_id is present in the request to generate an
application access token (AAT), DevRev will generate a client_id.
This client_id is only associated with an AAT.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The expected validity lifetime of the token in number of days.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "grant_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestGrantType",
                  "nameOverride": undefined,
                  "schema": "auth-token-grant-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestRevInfo",
                  "nameOverride": undefined,
                  "schema": "auth-tokens-rev-info",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "scope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The requested set of scopes associated with the issued token. A
space-delimited list of values in which the order of values does
not matter.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "subject_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Represents the entity that requests the token. Not required when
requesting an application access token (AAT).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "subject_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestSubjectTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-subject-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "token_hint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A hint that identifies the token.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new token corresponding to the
requested token type.
",
          "generatedName": "AuthTokensCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "access_token",
              "schema": {
                "description": "The issued JSON Web Token (JWT) corresponding to the requested
token type.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An identifier that represents the application which is requesting
the token. Only present in a response corresponding to an
application access token (AAT).
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": "The validity lifetime of the token specified in seconds since Unix
epoch.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "refresh_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A token to refresh the issued token.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "scope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The scopes associated with the issued token. A space-delimited list
of values in which the order of values does not matter.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "token_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AuthTokensCreateResponseTokenType",
                "nameOverride": undefined,
                "schema": "auth-token-token-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-delete-request": {
          "allOf": [],
          "description": "The request to revoke the token.",
          "generatedName": "AuthTokensDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "token_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique identifier for the token under a given Dev organization.
If no token ID is provided, then the token ID will be set from the
JTI claim of the token in the authorization header.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-get-response": {
          "allOf": [],
          "description": "The response to get the token metadata.",
          "generatedName": "AuthTokensGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AuthTokensGetResponseToken",
                "nameOverride": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-list-response": {
          "allOf": [],
          "description": "The response to list the token metadata.",
          "generatedName": "AuthTokensListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "tokens",
              "schema": {
                "description": "The list of token metadata.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensListResponseTokensItem",
                  "nameOverride": undefined,
                  "schema": "auth-token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-org-traits": {
          "allOf": [],
          "description": "Carries Rev org info.",
          "generatedName": "AuthTokensOrgTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The display name of the Rev org.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The domain of the Rev org.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-rev-info": {
          "allOf": [],
          "description": "Carries info corresponding to the Rev user to be provisioned and/or
issue a Rev session token.
",
          "generatedName": "AuthTokensRevInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "org_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An identifier which uniquely identifies a Rev org.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "org_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensRevInfoOrgTraits",
                  "nameOverride": undefined,
                  "schema": "auth-tokens-org-traits",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_user_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique ID of the Rev user.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "user_ref",
              "schema": {
                "description": "An identifier which uniquely identifies a Rev user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "user_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensRevInfoUserTraits",
                  "nameOverride": undefined,
                  "schema": "auth-tokens-user-traits",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-self-delete-request": {
          "allOf": [],
          "description": "The request to delete all the tokens created by the authenticated user,
that match with the provided token type.
",
          "generatedName": "AuthTokensSelfDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensSelfDeleteRequestRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-request": {
          "allOf": [],
          "description": "A request to update the token metadata.",
          "generatedName": "AuthTokensUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "token_id",
              "schema": {
                "description": "The unique identifier of the token under a given Dev organization.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-response": {
          "allOf": [],
          "description": "Response for the request to update the token metadata.",
          "generatedName": "AuthTokensUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AuthTokensUpdateResponseToken",
                "nameOverride": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-user-traits": {
          "allOf": [],
          "description": "Carries Rev user info.",
          "generatedName": "AuthTokensUserTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The display name of the Rev user.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The email address of the Rev user.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "full_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The full name of the Rev user.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "capability": {
          "description": undefined,
          "file": undefined,
          "generatedName": "Capability",
          "nameOverride": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "capability-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "CapabilitySummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "dev-org-auth-connections-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "nullable",
                  "value": {
                    "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "description": "Request to create a new enterprise authentication connection.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
                "nameOverride": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
                "nameOverride": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
                "nameOverride": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
                "nameOverride": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-create-request-type": {
          "description": "Defines the type for the authentication connection. Different types of
authentication connections have different configuration parameters.
",
          "generatedName": "DevOrgAuthConnectionsCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevOrgAuthConnectionsCreateResponseAuthConnection",
                "nameOverride": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-delete-request": {
          "allOf": [],
          "description": "Request to delete an enterprise authentication connection for a Dev
organization. A default connection and a connection which is currently
enabled cannot be deleted.
",
          "generatedName": "DevOrgAuthConnectionsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-get-response": {
          "allOf": [],
          "description": "Response object encapsulating the configuration details of an
authentication connection.
",
          "generatedName": "DevOrgAuthConnectionsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevOrgAuthConnectionsGetResponseAuthConnection",
                "nameOverride": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-list-response": {
          "allOf": [],
          "description": "Response object for the request to list all the social and enterprise
authentication connections configured for a Dev organization.
",
          "generatedName": "DevOrgAuthConnectionsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "auth_connections",
              "schema": {
                "description": "List of all the authentication connections currently configured for
a Dev organization.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevOrgAuthConnectionsListResponseAuthConnectionsItem",
                  "nameOverride": undefined,
                  "schema": "auth-connection",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-toggle-request": {
          "allOf": [],
          "description": "Request to enable or disable an authentication connection for a Dev
organization.
",
          "generatedName": "DevOrgAuthConnectionsToggleRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be toggled.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "toggle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevOrgAuthConnectionsToggleRequestToggle",
                  "nameOverride": undefined,
                  "schema": "auth-connection-toggle",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "nullable",
                  "value": {
                    "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection which is to be updated.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": "Request to update an enterprise authentication connection for a Dev
organization.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
                "nameOverride": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmpty",
                "nameOverride": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
                "nameOverride": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
                "nameOverride": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
                "nameOverride": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-update-request-type": {
          "description": "Specifies the type for the authentication connection. Different types
of authentication connections have different configuration parameters
that can be updated.
",
          "generatedName": "DevOrgAuthConnectionsUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "generatedName": "none",
              "nameOverride": undefined,
              "value": "none",
            },
            {
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-update-response": {
          "allOf": [],
          "description": "Response for the request to update an enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevOrgAuthConnectionsUpdateResponseAuthConnection",
                "nameOverride": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-user": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserBase",
              "nameOverride": undefined,
              "schema": "user-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "DevUser",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "external_identities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "IDs of the Dev User outside the DevRev SOR.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DevUserExternalIdentitiesItem",
                    "nameOverride": undefined,
                    "schema": "external-identity",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-user-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "DevUserSummary",
          "nameOverride": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "dev-users-list-response": {
          "allOf": [],
          "description": "The response to listing the Dev users.",
          "generatedName": "DevUsersListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "dev_users",
              "schema": {
                "description": "The list of Dev users.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevUsersListResponseDevUsersItem",
                  "nameOverride": undefined,
                  "schema": "dev-user",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-users-self-response": {
          "allOf": [],
          "description": "The response to getting the information for the authenticated user.
",
          "generatedName": "DevUsersSelfResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "dev_user",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevUsersSelfResponseDevUser",
                "nameOverride": undefined,
                "schema": "dev-user",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "empty": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "enhancement": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartBase",
              "nameOverride": undefined,
              "schema": "part-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Enhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "target_close_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp when the enhancement is expected to be closed.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "enhancement-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "EnhancementSummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "error-bad-request": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorBadRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorBadRequestType",
                "nameOverride": undefined,
                "schema": "error-bad-request-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-bad-request": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-invalid-enum-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestInvalidEnumValue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the field.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "field_name",
              "schema": {
                "description": "The field whose enum value is invalid.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": "The value that was received.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-missing-required-field": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestMissingRequiredField",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "field_name",
              "schema": {
                "description": "The missing field's name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-parse-error": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-type": {
          "description": undefined,
          "generatedName": "ErrorBadRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "bad_request",
              "nameOverride": undefined,
              "value": "bad_request",
            },
            {
              "generatedName": "invalid_enum_value",
              "nameOverride": undefined,
              "value": "invalid_enum_value",
            },
            {
              "generatedName": "missing_required_field",
              "nameOverride": undefined,
              "value": "missing_required_field",
            },
            {
              "generatedName": "parse_error",
              "nameOverride": undefined,
              "value": "parse_error",
            },
            {
              "generatedName": "value_not_permitted",
              "nameOverride": undefined,
              "value": "value_not_permitted",
            },
          ],
        },
        "error-bad-request-value-not-permitted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestValueNotPermitted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "field_name",
              "schema": {
                "description": "The field whose value is not permitted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "reason",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The reason the value isn't permitted.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The message associated with the error.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorForbidden",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorForbiddenType",
                "nameOverride": undefined,
                "schema": "error-forbidden-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden-forbidden": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-forbidden-type": {
          "description": undefined,
          "generatedName": "ErrorForbiddenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "forbidden",
              "nameOverride": undefined,
              "value": "forbidden",
            },
          ],
        },
        "error-internal-server-error": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorInternalServerError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "reference_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique ID that's generated for the error that can be used for
inquiry.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorInternalServerErrorType",
                "nameOverride": undefined,
                "schema": "error-internal-server-error-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-internal-server-error-internal-error": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-internal-server-error-type": {
          "description": undefined,
          "generatedName": "ErrorInternalServerErrorType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "internal_error",
              "nameOverride": undefined,
              "value": "internal_error",
            },
          ],
        },
        "error-not-found": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorNotFound",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorNotFoundType",
                "nameOverride": undefined,
                "schema": "error-not-found-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-not-found-not-found": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-not-found-type": {
          "description": undefined,
          "generatedName": "ErrorNotFoundType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "not_found",
              "nameOverride": undefined,
              "value": "not_found",
            },
          ],
        },
        "error-service-unavailable": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorServiceUnavailable",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorServiceUnavailableType",
                "nameOverride": undefined,
                "schema": "error-service-unavailable-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-service-unavailable-service-unavailable": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-service-unavailable-type": {
          "description": undefined,
          "generatedName": "ErrorServiceUnavailableType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "service_unavailable",
              "nameOverride": undefined,
              "value": "service_unavailable",
            },
          ],
        },
        "error-too-many-requests": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorTooManyRequests",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "retry_after",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The number of seconds after which the client should retry.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorTooManyRequestsType",
                "nameOverride": undefined,
                "schema": "error-too-many-requests-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-too-many-requests-too-many-requests": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-too-many-requests-type": {
          "description": undefined,
          "generatedName": "ErrorTooManyRequestsType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "too_many_requests",
              "nameOverride": undefined,
              "value": "too_many_requests",
            },
          ],
        },
        "error-unauthorized": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorUnauthorized",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorUnauthorizedType",
                "nameOverride": undefined,
                "schema": "error-unauthorized-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-unauthorized-type": {
          "description": undefined,
          "generatedName": "ErrorUnauthorizedType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "unauthenticated",
              "nameOverride": undefined,
              "value": "unauthenticated",
            },
          ],
        },
        "error-unauthorized-unauthenticated": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "event-part-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventPartCreatedPart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-part-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the part that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-part-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventPartUpdatedPart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventRevOrgCreatedRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the Rev organization that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventRevOrgUpdatedRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTagCreatedTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the tag that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTagUpdatedTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTimelineEntryCreatedEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the timeline entry that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTimelineEntryUpdatedEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWebhookCreatedWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the webhook that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWebhookUpdatedWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWorkCreatedWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the work that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-work-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWorkUpdatedWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "external-identity": {
          "description": "External identity of a user.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "feature": {
          "description": undefined,
          "file": undefined,
          "generatedName": "Feature",
          "nameOverride": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "feature-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "FeatureSummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "group-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "GroupSummary",
          "nameOverride": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "issue": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorkBase",
              "nameOverride": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Issue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "IssuePriority",
                  "nameOverride": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "issue-priority": {
          "description": "Priority of the work based upon impact and criticality.",
          "generatedName": "IssuePriority",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "p0",
              "nameOverride": undefined,
              "value": "p0",
            },
            {
              "generatedName": "p1",
              "nameOverride": undefined,
              "value": "p1",
            },
            {
              "generatedName": "p2",
              "nameOverride": undefined,
              "value": "p2",
            },
            {
              "generatedName": "p3",
              "nameOverride": undefined,
              "value": "p3",
            },
          ],
        },
        "list-mode": {
          "description": "The iteration mode to use. If "after", then entries after the provided
cursor will be returned, or if no cursor is provided, then from the
beginning. If "before", then entries before the provided cursor will be
returned, or if no cursor is provided, then from the end. Entries will
always be returned in the specified sort-by order.
",
          "generatedName": "ListMode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "after",
              "nameOverride": undefined,
              "value": "after",
            },
            {
              "generatedName": "before",
              "nameOverride": undefined,
              "value": "before",
            },
          ],
        },
        "org-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Name of the Organization.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Name of the Organization.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-environment": {
          "description": "The environment of the Org. Defaults to 'production' if not specified.
",
          "generatedName": "OrgEnvironment",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "production",
              "nameOverride": undefined,
              "value": "production",
            },
            {
              "generatedName": "staging",
              "nameOverride": undefined,
              "value": "staging",
            },
            {
              "generatedName": "test",
              "nameOverride": undefined,
              "value": "test",
            },
          ],
        },
        "org-summary": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "OrgSummary",
            "nameOverride": undefined,
            "schemas": {
              "rev_org": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasRevOrgSummary",
                "nameOverride": undefined,
                "schema": "rev-org-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "org-type": {
          "description": undefined,
          "generatedName": "OrgType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "rev_org",
              "nameOverride": undefined,
              "value": "rev_org",
            },
          ],
        },
        "part": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Part",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCapability",
                "nameOverride": undefined,
                "schema": "capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEnhancement",
                "nameOverride": undefined,
                "schema": "enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasFeature",
                "nameOverride": undefined,
                "schema": "feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasProduct",
                "nameOverride": undefined,
                "schema": "product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The attached artifacts.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartBaseArtifactsItem",
                    "nameOverride": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Description of the part.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "owned_by",
              "schema": {
                "description": "The users that own the part.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartBaseOwnedByItem",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Tags associated with the object.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartBaseTagsItem",
                    "nameOverride": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "part-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "part-summary": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartSummary",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCapabilitySummary",
                "nameOverride": undefined,
                "schema": "capability-summary",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEnhancementSummary",
                "nameOverride": undefined,
                "schema": "enhancement-summary",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasFeatureSummary",
                "nameOverride": undefined,
                "schema": "feature-summary",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasProductSummary",
                "nameOverride": undefined,
                "schema": "product-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-type": {
          "description": undefined,
          "generatedName": "PartType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "capability",
              "nameOverride": undefined,
              "value": "capability",
            },
            {
              "generatedName": "enhancement",
              "nameOverride": undefined,
              "value": "enhancement",
            },
            {
              "generatedName": "feature",
              "nameOverride": undefined,
              "value": "feature",
            },
            {
              "generatedName": "product",
              "nameOverride": undefined,
              "value": "product",
            },
          ],
        },
        "parts-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "Description of the part.",
                  "type": "nullable",
                  "value": {
                    "description": "Description of the part.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "Name of the part.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the part.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestCapability",
                "nameOverride": undefined,
                "schema": "parts-create-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestEnhancement",
                "nameOverride": undefined,
                "schema": "parts-create-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestFeature",
                "nameOverride": undefined,
                "schema": "parts-create-request-feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestProduct",
                "nameOverride": undefined,
                "schema": "parts-create-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-create-request-capability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestCapability",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent product for the capability.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent part on which the enhancement is to be created.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "target_close_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Target close date by which enhancement is expected to be closed.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-feature": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestFeature",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent capability/feature for the feature.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-product": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PartsCreateResponsePart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the part to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-response": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PartsGetResponsePart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "parts",
              "schema": {
                "description": "The list of parts.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartsListResponsePartsItem",
                  "nameOverride": undefined,
                  "schema": "part",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "The updated description of the part.",
                  "type": "nullable",
                  "value": {
                    "description": "The updated description of the part.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the part to update.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "The updated name of the part.",
                  "type": "nullable",
                  "value": {
                    "description": "The updated name of the part.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartsUpdateRequestOwnedBy",
                    "nameOverride": undefined,
                    "schema": "parts-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestCapability",
                "nameOverride": undefined,
                "schema": "parts-update-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestEnhancement",
                "nameOverride": undefined,
                "schema": "parts-update-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestFeature",
                "nameOverride": undefined,
                "schema": "parts-update-request-feature",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmpty",
                "nameOverride": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestProduct",
                "nameOverride": undefined,
                "schema": "parts-update-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-update-request-capability": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "target_close_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Updates the target close date of the enhancement.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-feature": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-product": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PartsUpdateResponsePart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "product": {
          "description": undefined,
          "file": undefined,
          "generatedName": "Product",
          "nameOverride": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "product-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "ProductSummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "rev-org": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "OrgBase",
              "nameOverride": undefined,
              "schema": "org-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevOrg",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Description of the Rev organization.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Company's domain name. Example - 'devrev.ai'.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "External ref is a unique identifier for the Rev (customer)
organization from your primary customer system of records. If none
is specified, a system-generated identifier will be assigned to the
organization.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-org-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "RevOrgSummary",
          "nameOverride": undefined,
          "schema": "org-base-summary",
          "type": "reference",
        },
        "rev-orgs-create-request": {
          "allOf": [],
          "description": "Request object to create a new Rev organization in the Dev
organization.
",
          "generatedName": "RevOrgsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Description of the Rev organization.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": "Name of the Rev organization.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Company's domain name. Example - 'devrev.ai'.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsCreateRequestEnvironment",
                  "nameOverride": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tier",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The tier of the RevOrg.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-create-response": {
          "allOf": [],
          "description": "Response object for request to create a new Rev organization.
",
          "generatedName": "RevOrgsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RevOrgsCreateResponseRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-request": {
          "allOf": [],
          "description": "Request object to delete a Rev organization.",
          "generatedName": "RevOrgsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-response": {
          "description": "The response to deleting a Rev organization.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "rev-orgs-get-response": {
          "allOf": [],
          "description": "The response to getting a Rev organization's information.",
          "generatedName": "RevOrgsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RevOrgsGetResponseRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-list-response": {
          "allOf": [],
          "description": "The response to getting a list of Rev organizations' information.
",
          "generatedName": "RevOrgsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_orgs",
              "schema": {
                "description": "List with all of the Rev organizations' information.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsListResponseRevOrgsItem",
                  "nameOverride": undefined,
                  "schema": "rev-org",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-request": {
          "allOf": [],
          "description": "Request object to update information of the Rev organization.
",
          "generatedName": "RevOrgsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Description of the Rev organization.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Customer chosen name for the Rev organization.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Company's domain name. Example - 'devrev.ai'.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsUpdateRequestEnvironment",
                  "nameOverride": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "tier",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The tier of the RevOrg.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-response": {
          "allOf": [],
          "description": "Response object to updating Rev organization's information.",
          "generatedName": "RevOrgsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RevOrgsUpdateResponseRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-user-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserBaseSummary",
              "nameOverride": undefined,
              "schema": "user-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevUserSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "External ref is a mutable unique identifier for a user within the
Rev organization from your primary customer record. If none is
available, a good alternative is the email address/phone number
which could uniquely identify the user. If none is specified, a
system-generated identifier will be assigned to the user.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevUserSummaryRevOrg",
                  "nameOverride": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "set-tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SetTagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the tag.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage": {
          "allOf": [],
          "description": "Describes the current stage of a work item.",
          "generatedName": "Stage",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "Current stage name of the work item.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "stage-init": {
          "allOf": [],
          "description": "Sets an object's initial stage.",
          "generatedName": "StageInit",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the stage.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage-update": {
          "allOf": [],
          "description": "Updates an object's stage.",
          "generatedName": "StageUpdate",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated name of the stage, otherwise unchanged if not set.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "sys-user-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "SysUserSummary",
          "nameOverride": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "tag": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Tag",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "allowed_values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The allowed values for the tag, where a value is provided when a
tag is associated with an object. If empty, then no value should be
provided when the association is made.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An informative description for the tag that should provide context
on the tag's purpose and usage.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tag-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TagSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagWithValueTag",
                "nameOverride": undefined,
                "schema": "tag-summary",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The value for the object's association with the tag.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-create-request": {
          "allOf": [],
          "description": "The request to create a new tag.",
          "generatedName": "TagsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "allowed_values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The allowed values for the tag, or empty if no values are
permitted.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The description for the tag.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name for the tag, which must be unique across all tags.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-create-response": {
          "allOf": [],
          "description": "The response to creating a new tag.",
          "generatedName": "TagsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsCreateResponseTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-request": {
          "allOf": [],
          "description": "The request to delete a tag.",
          "generatedName": "TagsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the tag to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-response": {
          "description": "The response for deleting a tag.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "tags-get-response": {
          "allOf": [],
          "description": "The response to getting a tag's information.",
          "generatedName": "TagsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsGetResponseTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-list-response": {
          "allOf": [],
          "description": "The response to listing the tags.",
          "generatedName": "TagsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": "The list of tags.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsListResponseTagsItem",
                  "nameOverride": undefined,
                  "schema": "tag",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-allowed-values": {
          "allOf": [],
          "description": "Specifies an update to a tag's allowed values.",
          "generatedName": "TagsUpdateAllowedValues",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the allowed values for the tag.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-request": {
          "allOf": [],
          "description": "The request to update a tag.",
          "generatedName": "TagsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "allowed_values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsUpdateRequestAllowedValues",
                  "nameOverride": undefined,
                  "schema": "tags-update-allowed-values",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated description of the tag.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the tag to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated name of the tag. The name must be unique across all
tags.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-response": {
          "allOf": [],
          "description": "The response for updating a tag.",
          "generatedName": "TagsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsUpdateResponseTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ticket": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorkBase",
              "nameOverride": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Ticket",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "group",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TicketGroup",
                  "nameOverride": undefined,
                  "schema": "group-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TicketRevOrg",
                  "nameOverride": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TicketSeverity",
                  "nameOverride": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ticket-severity": {
          "description": "Severity of the ticket.",
          "generatedName": "TicketSeverity",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "blocker",
              "nameOverride": undefined,
              "value": "blocker",
            },
            {
              "generatedName": "high",
              "nameOverride": undefined,
              "value": "high",
            },
            {
              "generatedName": "low",
              "nameOverride": undefined,
              "value": "low",
            },
            {
              "generatedName": "medium",
              "nameOverride": undefined,
              "value": "medium",
            },
          ],
        },
        "timeline-comment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntryBase",
              "nameOverride": undefined,
              "schema": "timeline-entry-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The artifacts for the comment.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TimelineCommentArtifactsItem",
                    "nameOverride": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The comment's body. If the comment has been deleted, then no body
will appear in the response.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineCommentBodyType",
                  "nameOverride": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "snap_kit_body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The SnapKit Body of the comment.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-comment-body-type": {
          "description": "The type of the body to use for the comment.",
          "generatedName": "TimelineCommentBodyType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "snap_kit",
              "nameOverride": undefined,
              "value": "snap_kit",
            },
            {
              "generatedName": "text",
              "nameOverride": undefined,
              "value": "text",
            },
          ],
        },
        "timeline-entries-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "object",
                "schema": {
                  "description": "The ID of the object to create the timeline entry for.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "visibility",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TimelineEntriesCreateRequestVisibility",
                    "nameOverride": undefined,
                    "schema": "timeline-entry-visibility",
                    "type": "reference",
                  },
                },
              },
            ],
            "description": "The request to create a timeline entry for an object.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTimelineEntriesCreateRequestTimelineComment",
                "nameOverride": undefined,
                "schema": "timeline-entries-create-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-create-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The IDs of the artifacts attached to the comment.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The comment's body.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesCreateRequestTimelineCommentBodyType",
                  "nameOverride": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "snap_kit_body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The SnapKit body of the comment.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-create-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-create-response": {
          "allOf": [],
          "description": "The response to creating a timeline entry for an object.",
          "generatedName": "TimelineEntriesCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TimelineEntriesCreateResponseTimelineEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-get-response": {
          "allOf": [],
          "description": "The request to getting a timeline entry.",
          "generatedName": "TimelineEntriesGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TimelineEntriesGetResponseTimelineEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-list-response": {
          "allOf": [],
          "description": "The response to listing timeline entries for an object.",
          "generatedName": "TimelineEntriesListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "timeline_entries",
              "schema": {
                "description": "The timeline entries for the object.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesListResponseTimelineEntriesItem",
                  "nameOverride": undefined,
                  "schema": "timeline-entry",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the timeline entry to update.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": "The request to update a timeline entry.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTimelineEntriesUpdateRequestTimelineComment",
                "nameOverride": undefined,
                "schema": "timeline-entries-update-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-update-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
                  "nameOverride": undefined,
                  "schema": "timeline-entries-update-request-timeline-comment-artifacts",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated comment's body.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentBodyType",
                  "nameOverride": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "snap_kit_body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The SnapKit body of the comment.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-timeline-comment-artifacts": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "add",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Adds the provided artifacts to the comment. An artifact cannot be
added more than once, i.e. nothing is done if the artifact is
already attached. Mutually exclusive with \`set\`.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "remove",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Removes the provided artifacts from the comment. If an artifact is
not present, then it's ignored. Mututally exclusive with \`set\`.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the field to the provided artifacts.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-update-response": {
          "allOf": [],
          "description": "The response to updating a timeline entry.",
          "generatedName": "TimelineEntriesUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TimelineEntriesUpdateResponseTimelineEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entry": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "TimelineEntry",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTimelineComment",
                "nameOverride": undefined,
                "schema": "timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entry-base": {
          "description": undefined,
          "file": undefined,
          "generatedName": "TimelineEntryBase",
          "nameOverride": undefined,
          "schema": "atom-base",
          "type": "reference",
        },
        "timeline-entry-type": {
          "description": undefined,
          "generatedName": "TimelineEntryType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entry-visibility": {
          "description": "The visibility of the entry. If 'private', then the entry is only
visible to the creator, otherwise if not set, then the entry has
default visibility.
",
          "generatedName": "TimelineEntryVisibility",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "private",
              "nameOverride": undefined,
              "value": "private",
            },
          ],
        },
        "user-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The user's display name. The name is non-unique and mutable.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseDisplayPicture",
                  "nameOverride": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Email address of the user.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "full_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Full name of the user.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "phone_numbers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Phone numbers of the user.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseState",
                  "nameOverride": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The user's display name. The name is non-unique and mutable.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseSummaryDisplayPicture",
                  "nameOverride": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Email address of the user.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "full_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Full name of the user.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseSummaryState",
                  "nameOverride": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-state": {
          "description": "State of the user.",
          "generatedName": "UserState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "deactivated",
              "nameOverride": undefined,
              "value": "deactivated",
            },
            {
              "generatedName": "locked",
              "nameOverride": undefined,
              "value": "locked",
            },
            {
              "generatedName": "shadow",
              "nameOverride": undefined,
              "value": "shadow",
            },
            {
              "generatedName": "unassigned",
              "nameOverride": undefined,
              "value": "unassigned",
            },
          ],
        },
        "user-summary": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "UserSummary",
            "nameOverride": undefined,
            "schemas": {
              "dev_user": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasDevUserSummary",
                "nameOverride": undefined,
                "schema": "dev-user-summary",
                "type": "reference",
              },
              "rev_user": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasRevUserSummary",
                "nameOverride": undefined,
                "schema": "rev-user-summary",
                "type": "reference",
              },
              "sys_user": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSysUserSummary",
                "nameOverride": undefined,
                "schema": "sys-user-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "user-type": {
          "description": undefined,
          "generatedName": "UserType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "dev_user",
              "nameOverride": undefined,
              "value": "dev_user",
            },
            {
              "generatedName": "rev_user",
              "nameOverride": undefined,
              "value": "rev_user",
            },
            {
              "generatedName": "sys_user",
              "nameOverride": undefined,
              "value": "sys_user",
            },
          ],
        },
        "webhook": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Webhook",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "event_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The event types that the webhook will receive.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhookEventTypesItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "secret",
              "schema": {
                "description": "The secret to use for verifying webhook events.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhookStatus",
                "nameOverride": undefined,
                "schema": "webhook-status",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The event's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "part_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestPartCreated",
                  "nameOverride": undefined,
                  "schema": "event-part-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "part_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestPartDeleted",
                  "nameOverride": undefined,
                  "schema": "event-part-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "part_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestPartUpdated",
                  "nameOverride": undefined,
                  "schema": "event-part-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_org_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestRevOrgCreated",
                  "nameOverride": undefined,
                  "schema": "event-rev-org-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_org_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestRevOrgDeleted",
                  "nameOverride": undefined,
                  "schema": "event-rev-org-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_org_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestRevOrgUpdated",
                  "nameOverride": undefined,
                  "schema": "event-rev-org-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "tag_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTagCreated",
                  "nameOverride": undefined,
                  "schema": "event-tag-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "tag_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTagDeleted",
                  "nameOverride": undefined,
                  "schema": "event-tag-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "tag_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTagUpdated",
                  "nameOverride": undefined,
                  "schema": "event-tag-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "timeline_entry_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTimelineEntryCreated",
                  "nameOverride": undefined,
                  "schema": "event-timeline-entry-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "timeline_entry_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTimelineEntryDeleted",
                  "nameOverride": undefined,
                  "schema": "event-timeline-entry-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "timeline_entry_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTimelineEntryUpdated",
                  "nameOverride": undefined,
                  "schema": "event-timeline-entry-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "timestamp",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp of the webhook's invocation for the event. Note this
should be used to protect against replay attacks, where the event
should only be processed if the timestamp isn't stale by several
seconds.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestType",
                  "nameOverride": undefined,
                  "schema": "webhook-event-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "verify",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestVerify",
                  "nameOverride": undefined,
                  "schema": "webhook-event-verify",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "webhook_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWebhookCreated",
                  "nameOverride": undefined,
                  "schema": "event-webhook-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "webhook_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWebhookDeleted",
                  "nameOverride": undefined,
                  "schema": "event-webhook-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "webhook_id",
              "schema": {
                "description": "ID of the webhook for the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "webhook_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWebhookUpdated",
                  "nameOverride": undefined,
                  "schema": "event-webhook-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "work_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWorkCreated",
                  "nameOverride": undefined,
                  "schema": "event-work-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "work_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWorkDeleted",
                  "nameOverride": undefined,
                  "schema": "event-work-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "work_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWorkUpdated",
                  "nameOverride": undefined,
                  "schema": "event-work-updated",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "challenge",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The challenge from the "verify" request, otherwise this should not
be set for other request types.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-type": {
          "description": "The event types that the webhook will receive.",
          "generatedName": "WebhookEventType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "part_created",
              "nameOverride": undefined,
              "value": "part_created",
            },
            {
              "generatedName": "part_deleted",
              "nameOverride": undefined,
              "value": "part_deleted",
            },
            {
              "generatedName": "part_updated",
              "nameOverride": undefined,
              "value": "part_updated",
            },
            {
              "generatedName": "rev_org_created",
              "nameOverride": undefined,
              "value": "rev_org_created",
            },
            {
              "generatedName": "rev_org_deleted",
              "nameOverride": undefined,
              "value": "rev_org_deleted",
            },
            {
              "generatedName": "rev_org_updated",
              "nameOverride": undefined,
              "value": "rev_org_updated",
            },
            {
              "generatedName": "tag_created",
              "nameOverride": undefined,
              "value": "tag_created",
            },
            {
              "generatedName": "tag_deleted",
              "nameOverride": undefined,
              "value": "tag_deleted",
            },
            {
              "generatedName": "tag_updated",
              "nameOverride": undefined,
              "value": "tag_updated",
            },
            {
              "generatedName": "timeline_entry_created",
              "nameOverride": undefined,
              "value": "timeline_entry_created",
            },
            {
              "generatedName": "timeline_entry_deleted",
              "nameOverride": undefined,
              "value": "timeline_entry_deleted",
            },
            {
              "generatedName": "timeline_entry_updated",
              "nameOverride": undefined,
              "value": "timeline_entry_updated",
            },
            {
              "generatedName": "verify",
              "nameOverride": undefined,
              "value": "verify",
            },
            {
              "generatedName": "webhook_created",
              "nameOverride": undefined,
              "value": "webhook_created",
            },
            {
              "generatedName": "webhook_deleted",
              "nameOverride": undefined,
              "value": "webhook_deleted",
            },
            {
              "generatedName": "webhook_updated",
              "nameOverride": undefined,
              "value": "webhook_updated",
            },
            {
              "generatedName": "work_created",
              "nameOverride": undefined,
              "value": "work_created",
            },
            {
              "generatedName": "work_deleted",
              "nameOverride": undefined,
              "value": "work_deleted",
            },
            {
              "generatedName": "work_updated",
              "nameOverride": undefined,
              "value": "work_updated",
            },
          ],
        },
        "webhook-event-verify": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventVerify",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "challenge",
              "schema": {
                "description": "The challenge that must be echoed in the response.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhook-status": {
          "description": "The status of the webhook.",
          "generatedName": "WebhookStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "inactive",
              "nameOverride": undefined,
              "value": "inactive",
            },
            {
              "generatedName": "unverified",
              "nameOverride": undefined,
              "value": "unverified",
            },
          ],
        },
        "webhooks-create-request": {
          "allOf": [],
          "description": "The request to create a new webhook.",
          "generatedName": "WebhooksCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "event_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The event types that the webhook endpoint will receive.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksCreateRequestEventTypesItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The secret to use when verifying webhook events. If provided, the
secret must be between 8 and 32 bytes (inclusive). If not set, a
secret will be automatically generated and provided in the
response.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-create-response": {
          "allOf": [],
          "description": "The response to creating a new webhook.",
          "generatedName": "WebhooksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhooksCreateResponseWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-request": {
          "allOf": [],
          "description": "The request to delete a webhook.",
          "generatedName": "WebhooksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-response": {
          "description": "The response to deleting the webhook.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "webhooks-get-response": {
          "allOf": [],
          "description": "The response to getting the information for the webhook.",
          "generatedName": "WebhooksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhooksGetResponseWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-list-response": {
          "allOf": [],
          "description": "The response to listing the webhooks.",
          "generatedName": "WebhooksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "webhooks",
              "schema": {
                "description": "The list of webhooks.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhooksListResponseWebhooksItem",
                  "nameOverride": undefined,
                  "schema": "webhook",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-action": {
          "description": "The action to update the webhook's status.",
          "generatedName": "WebhooksUpdateAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "activate",
              "nameOverride": undefined,
              "value": "activate",
            },
            {
              "generatedName": "deactivate",
              "nameOverride": undefined,
              "value": "deactivate",
            },
          ],
        },
        "webhooks-update-request": {
          "allOf": [],
          "description": "The request to update a webhook.",
          "generatedName": "WebhooksUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhooksUpdateRequestAction",
                  "nameOverride": undefined,
                  "schema": "webhooks-update-action",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "event_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhooksUpdateRequestEventTypes",
                  "nameOverride": undefined,
                  "schema": "webhooks-update-request-event-types",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "If provided, updates the secret that's used when verifying webhook
events, which must be between 8 and 32 bytes (inclusive). Otherwise
if empty, then a new secret is generated. If the webhook is active,
then its status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The webhook's updated URL. If the webhook is active, then the
webhook's status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-request-event-types": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhooksUpdateRequestEventTypes",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "add",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The event types to add. If a provided event type is already set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksUpdateRequestEventTypesAddItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "remove",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The event types to remove. If a provided event type isn't set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksUpdateRequestEventTypesRemoveItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated event types, which will replace the webhook's current
event types. Note this is mutually exclusive with 'add' and
'remove'.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksUpdateRequestEventTypesSetItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-response": {
          "allOf": [],
          "description": "The response to updating the webhook.",
          "generatedName": "WebhooksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhooksUpdateResponseWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "work": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Work",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasIssue",
                "nameOverride": undefined,
                "schema": "issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTicket",
                "nameOverride": undefined,
                "schema": "ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "work-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "WorkBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkBaseAppliesToPart",
                  "nameOverride": undefined,
                  "schema": "part-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The artifacts attached to the work item.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseArtifactsItem",
                    "nameOverride": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Body of the work object.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "owned_by",
              "schema": {
                "description": "The users that own the work.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkBaseOwnedByItem",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "reported_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Users that reported the work.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseReportedByItem",
                    "nameOverride": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "stage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkBaseStage",
                  "nameOverride": undefined,
                  "schema": "stage",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Tags associated with the object.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseTagsItem",
                    "nameOverride": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "target_close_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp when the work is expected to be complete.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": "Title of the work object.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "work-type": {
          "description": undefined,
          "generatedName": "WorkType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "issue",
              "nameOverride": undefined,
              "value": "issue",
            },
            {
              "generatedName": "ticket",
              "nameOverride": undefined,
              "value": "ticket",
            },
          ],
        },
        "works-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "The [part](https://devrev.ai/docs/product/parts) that the work
applies to. Specifying a part is required when creating tickets and
issues.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": "The IDs of the artifacts to associate with the work item.
",
                  "type": "nullable",
                  "value": {
                    "description": "The IDs of the artifacts to associate with the work item.
",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Body of the work object.",
                  "type": "nullable",
                  "value": {
                    "description": "Body of the work object.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the work.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": "The users that reported the work.",
                  "type": "nullable",
                  "value": {
                    "description": "The users that reported the work.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksCreateRequestStage",
                    "nameOverride": undefined,
                    "schema": "stage-init",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": "Tags associated with the work item.",
                  "type": "nullable",
                  "value": {
                    "description": "Tags associated with the work item.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "WorksCreateRequestTagsItem",
                      "nameOverride": undefined,
                      "schema": "set-tag-with-value",
                      "type": "reference",
                    },
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Timestamp for when the work is expected to be complete.",
                  "type": "nullable",
                  "value": {
                    "description": "Timestamp for when the work is expected to be complete.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Title of the work object.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksCreateRequestIssue",
                "nameOverride": undefined,
                "schema": "works-create-request-issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksCreateRequestTicket",
                "nameOverride": undefined,
                "schema": "works-create-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-create-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksCreateRequestIssuePriority",
                  "nameOverride": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "sprint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The sprint that the issue belongs to.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "group",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The group that the ticket is associated with.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Rev organization that the ticket is associated with.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksCreateRequestTicketSeverity",
                  "nameOverride": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WorksCreateResponseWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The work's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-response": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "works-export-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksExportResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "works",
              "schema": {
                "description": "The resulting collection of work items.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksExportResponseWorksItem",
                  "nameOverride": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WorksGetResponseWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "works",
              "schema": {
                "description": "The list of works.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksListResponseWorksItem",
                  "nameOverride": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "Updates the part that the work applies to.",
                  "type": "nullable",
                  "value": {
                    "description": "Updates the part that the work applies to.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestArtifacts",
                    "nameOverride": undefined,
                    "schema": "works-update-request-artifact-ids",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Updated body of the work object, or unchanged if not provided.
",
                  "type": "nullable",
                  "value": {
                    "description": "Updated body of the work object, or unchanged if not provided.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The work's ID.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestOwnedBy",
                    "nameOverride": undefined,
                    "schema": "works-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestReportedBy",
                    "nameOverride": undefined,
                    "schema": "works-update-request-reported-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestStage",
                    "nameOverride": undefined,
                    "schema": "stage-update",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestTags",
                    "nameOverride": undefined,
                    "schema": "works-update-request-tags",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Updates the timestamp for when the work is expected to be complete.
",
                  "type": "nullable",
                  "value": {
                    "description": "Updates the timestamp for when the work is expected to be complete.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Updated title of the work object, or unchanged if not provided.
",
                  "type": "nullable",
                  "value": {
                    "description": "Updated title of the work object, or unchanged if not provided.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksUpdateRequestIssue",
                "nameOverride": undefined,
                "schema": "works-update-request-issue",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmpty",
                "nameOverride": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksUpdateRequestTicket",
                "nameOverride": undefined,
                "schema": "works-update-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-update-request-artifact-ids": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestArtifactIds",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the IDs to the provided artifact IDs.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksUpdateRequestIssuePriority",
                  "nameOverride": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "sprint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Updates the sprint that the issue belongs to.",
                  "type": "nullable",
                  "value": {
                    "description": "Updates the sprint that the issue belongs to.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-reported-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestReportedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the users that reported the work to the provided user IDs.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-tags": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTags",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the provided tags on the work item.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestTagsSetItem",
                    "nameOverride": undefined,
                    "schema": "set-tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "group",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The group that the ticket is associated with.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Updates the Rev organization that the ticket is associated with.
",
                  "type": "nullable",
                  "value": {
                    "description": "Updates the Rev organization that the ticket is associated with.
",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksUpdateRequestTicketSeverity",
                  "nameOverride": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WorksUpdateResponseWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "auth-token": {
          "headerName": "Authorization",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": "DevRev API endpoint.",
          "name": undefined,
          "url": "{protocol}://{hostname}",
        },
      ],
      "tags": [],
      "title": "DevRev REST API",
      "variables": {},
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser hathora simple 1`] = `
{
  "files": {
    "openapi.json": {
      "dependencies": [],
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "GetAppsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetApps",
          "path": "/apps/v1/list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetAppsResponseItem",
                "nameOverride": undefined,
                "schema": "ApplicationWithDeployment",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            422,
            500,
          ],
          "generatedRequestName": "CreateAppRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateApp",
          "path": "/apps/v1/create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreateAppRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "authConfiguration",
                  "schema": {
                    "allOf": [],
                    "description": undefined,
                    "generatedName": "CreateAppRequestAuthConfiguration",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "conflict": [],
                        "key": "google",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "allOf": [],
                            "description": undefined,
                            "generatedName": "CreateAppRequestAuthConfigurationGoogle",
                            "nameOverride": undefined,
                            "properties": [
                              {
                                "conflict": [],
                                "key": "clientId",
                                "schema": {
                                  "description": undefined,
                                  "schema": {
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "object",
                          },
                        },
                      },
                      {
                        "conflict": [],
                        "key": "nickname",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "generatedName": "CreateAppRequestAuthConfigurationNickname",
                            "nameOverride": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "conflict": [],
                        "key": "anonymous",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "generatedName": "CreateAppRequestAuthConfigurationAnonymous",
                            "nameOverride": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
                {
                  "conflict": [],
                  "key": "appName",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateAppResponse",
              "nameOverride": undefined,
              "schema": "Application",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            422,
            500,
          ],
          "generatedRequestName": "UpdateAppRequest",
          "headers": [],
          "method": "POST",
          "operationId": "UpdateApp",
          "path": "/apps/v1/update/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UpdateAppRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "UpdateAppRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "authConfiguration",
                  "schema": {
                    "allOf": [],
                    "description": undefined,
                    "generatedName": "UpdateAppRequestAuthConfiguration",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "conflict": [],
                        "key": "google",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "allOf": [],
                            "description": undefined,
                            "generatedName": "UpdateAppRequestAuthConfigurationGoogle",
                            "nameOverride": undefined,
                            "properties": [
                              {
                                "conflict": [],
                                "key": "clientId",
                                "schema": {
                                  "description": undefined,
                                  "schema": {
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "object",
                          },
                        },
                      },
                      {
                        "conflict": [],
                        "key": "nickname",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "generatedName": "UpdateAppRequestAuthConfigurationNickname",
                            "nameOverride": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "conflict": [],
                        "key": "anonymous",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "generatedName": "UpdateAppRequestAuthConfigurationAnonymous",
                            "nameOverride": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
                {
                  "conflict": [],
                  "key": "appName",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateAppResponse",
              "nameOverride": undefined,
              "schema": "Application",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetAppInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetAppInfo",
          "path": "/apps/v1/info/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetAppInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetAppInfoResponse",
              "nameOverride": undefined,
              "schema": "Application",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "DeleteAppRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DeleteApp",
          "path": "/apps/v1/delete/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeleteAppRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "LoginAnonymousRequest",
          "headers": [],
          "method": "POST",
          "operationId": "LoginAnonymous",
          "path": "/auth/v1/{appId}/login/anonymous",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LoginAnonymousRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginAnonymousResponse",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "LoginNicknameRequest",
          "headers": [],
          "method": "POST",
          "operationId": "LoginNickname",
          "path": "/auth/v1/{appId}/login/nickname",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LoginNicknameRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginNicknameRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "nickname",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginNicknameResponse",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "LoginGoogleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "LoginGoogle",
          "path": "/auth/v1/{appId}/login/google",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LoginGoogleRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginGoogleRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "idToken",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginGoogleResponse",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetBuildsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetBuilds",
          "path": "/builds/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetBuildsRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetBuildsResponseItem",
                "nameOverride": undefined,
                "schema": "Build",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetBuildInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetBuildInfo",
          "path": "/builds/v1/{appId}/info/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetBuildInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetBuildInfoRequestBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetBuildInfoResponse",
              "nameOverride": undefined,
              "schema": "Build",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            422,
            500,
          ],
          "generatedRequestName": "CreateBuildRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateBuild",
          "path": "/builds/v1/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateBuildRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateBuildResponse",
              "nameOverride": undefined,
              "schema": "Build",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "RunBuildRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RunBuild",
          "path": "/builds/v1/{appId}/run/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RunBuildRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RunBuildRequestBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            422,
            500,
          ],
          "generatedRequestName": "DeleteBuildRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DeleteBuild",
          "path": "/builds/v1/{appId}/delete/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeleteBuildRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeleteBuildRequestBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetDeploymentsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetDeployments",
          "path": "/deployments/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetDeploymentsRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetDeploymentsResponseItem",
                "nameOverride": undefined,
                "schema": "Deployment",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetDeploymentInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetDeploymentInfo",
          "path": "/deployments/v1/{appId}/info/{deploymentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetDeploymentInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetDeploymentInfoRequestDeploymentId",
                "nameOverride": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetDeploymentInfoResponse",
              "nameOverride": undefined,
              "schema": "Deployment",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            422,
            500,
          ],
          "generatedRequestName": "CreateDeploymentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateDeployment",
          "path": "/deployments/v1/{appId}/create/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateDeploymentRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateDeploymentRequestBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateDeploymentRequest",
              "nameOverride": undefined,
              "schema": "DeploymentConfig",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateDeploymentResponse",
              "nameOverride": undefined,
              "schema": "Deployment",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "GetPingServiceEndpointsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetPingServiceEndpoints",
          "path": "/discovery/v1/ping",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetPingServiceEndpointsResponse",
              "nameOverride": undefined,
              "schema": "DiscoveryResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "DiscoveryV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            401,
            404,
            422,
            429,
            500,
          ],
          "generatedRequestName": "CreatePrivateLobbyDeprecatedRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePrivateLobbyDeprecated",
          "path": "/lobby/v1/{appId}/create/private",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePrivateLobbyDeprecatedRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePrivateLobbyDeprecatedRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePrivateLobbyDeprecatedResponse",
              "nameOverride": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            401,
            404,
            422,
            429,
            500,
          ],
          "generatedRequestName": "CreatePublicLobbyDeprecatedRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePublicLobbyDeprecated",
          "path": "/lobby/v1/{appId}/create/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePublicLobbyDeprecatedRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePublicLobbyDeprecatedRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePublicLobbyDeprecatedResponse",
              "nameOverride": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            401,
            404,
          ],
          "generatedRequestName": "ListActivePublicLobbiesDeprecatedRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "GET",
          "operationId": "ListActivePublicLobbiesDeprecated",
          "path": "/lobby/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListActivePublicLobbiesDeprecatedRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListActivePublicLobbiesDeprecatedRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListActivePublicLobbiesDeprecatedResponseItem",
                "nameOverride": undefined,
                "schema": "Lobby",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            401,
            404,
            422,
            429,
            500,
          ],
          "generatedRequestName": "CreatePrivateLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePrivateLobby",
          "path": "/lobby/v2/{appId}/create/private",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePrivateLobbyRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePrivateLobbyRequestRoomId",
                  "nameOverride": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreatePrivateLobbyRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "conflict": [],
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreatePrivateLobbyRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePrivateLobbyResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            401,
            404,
            422,
            429,
            500,
          ],
          "generatedRequestName": "CreatePublicLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePublicLobby",
          "path": "/lobby/v2/{appId}/create/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePublicLobbyRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePublicLobbyRequestRoomId",
                  "nameOverride": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreatePublicLobbyRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "conflict": [],
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreatePublicLobbyRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePublicLobbyResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            401,
            404,
            422,
            429,
            500,
          ],
          "generatedRequestName": "CreateLocalLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreateLocalLobby",
          "path": "/lobby/v2/{appId}/create/local",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateLocalLobbyRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreateLocalLobbyRequestRoomId",
                  "nameOverride": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreateLocalLobbyRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "conflict": [],
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateLocalLobbyRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateLocalLobbyResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            401,
            404,
            422,
            429,
            500,
          ],
          "generatedRequestName": "CreateLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreateLobby",
          "path": "/lobby/v2/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateLobbyRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreateLobbyRequestRoomId",
                  "nameOverride": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreateLobbyRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "visibility",
                  "schema": {
                    "description": undefined,
                    "generatedName": "CreateLobbyRequestVisibility",
                    "nameOverride": undefined,
                    "type": "enum",
                    "values": [
                      {
                        "generatedName": "public",
                        "nameOverride": undefined,
                        "value": "public",
                      },
                      {
                        "generatedName": "private",
                        "nameOverride": undefined,
                        "value": "private",
                      },
                      {
                        "generatedName": "local",
                        "nameOverride": undefined,
                        "value": "local",
                      },
                    ],
                  },
                },
                {
                  "conflict": [],
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "conflict": [],
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateLobbyRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateLobbyResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "ListActivePublicLobbiesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListActivePublicLobbies",
          "path": "/lobby/v2/{appId}/list/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListActivePublicLobbiesRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListActivePublicLobbiesRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListActivePublicLobbiesResponseItem",
                "nameOverride": undefined,
                "schema": "Lobby",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetLobbyInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLobbyInfo",
          "path": "/lobby/v2/{appId}/info/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLobbyInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLobbyInfoRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetLobbyInfoResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            422,
          ],
          "generatedRequestName": "SetLobbyStateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SetLobbyState",
          "path": "/lobby/v2/{appId}/setState/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SetLobbyStateRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SetLobbyStateRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "SetLobbyStateRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "state",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SetLobbyStateResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "GetLogsForAppRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForApp",
          "path": "/logs/v1/{appId}/all",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForAppRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GetLogsForAppRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "GetLogsForProcessRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForProcess",
          "path": "/logs/v1/{appId}/process/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForProcessRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForProcessRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "GetLogsForDeploymentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForDeployment",
          "path": "/logs/v1/{appId}/deployment/{deploymentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForDeploymentRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForDeploymentRequestDeploymentId",
                "nameOverride": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            422,
          ],
          "generatedRequestName": "GetMetricsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetMetrics",
          "path": "/metrics/v1/{appId}/process/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetMetricsRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetMetricsRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "metrics",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "GetMetricsRequestMetricsItem",
                    "nameOverride": undefined,
                    "schema": "MetricName",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "end",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "start",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "step",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetMetricsResponse",
              "nameOverride": undefined,
              "schema": "MetricsResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "MetricsV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetRunningProcessesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetRunningProcesses",
          "path": "/processes/v1/{appId}/list/running",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetRunningProcessesRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GetRunningProcessesRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetRunningProcessesResponseItem",
                "nameOverride": undefined,
                "schema": "ProcessWithRooms",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetStoppedProcessesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetStoppedProcesses",
          "path": "/processes/v1/{appId}/list/stopped",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetStoppedProcessesRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GetStoppedProcessesRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetStoppedProcessesResponseItem",
                "nameOverride": undefined,
                "schema": "Process",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetProcessInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetProcessInfo",
          "path": "/processes/v1/{appId}/info/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetProcessInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetProcessInfoRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetProcessInfoResponse",
              "nameOverride": undefined,
              "schema": "Process",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "CreateRoomRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateRoom",
          "path": "/rooms/v1/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateRoomRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreateRoomRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": [],
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateRoomRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateRoomResponse",
              "nameOverride": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetRoomInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetRoomInfo",
          "path": "/rooms/v1/{appId}/info/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetRoomInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetRoomInfoRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetRoomInfoResponse",
              "nameOverride": undefined,
              "schema": "Room",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetActiveRoomsForProcessRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetActiveRoomsForProcess",
          "path": "/rooms/v1/{appId}/list/{processId}/active",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetActiveRoomsForProcessRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetActiveRoomsForProcessRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetActiveRoomsForProcessResponseItem",
                "nameOverride": undefined,
                "schema": "RoomWithoutAllocations",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
          ],
          "generatedRequestName": "GetInactiveRoomsForProcessRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetInactiveRoomsForProcess",
          "path": "/rooms/v1/{appId}/list/{processId}/inactive",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetInactiveRoomsForProcessRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetInactiveRoomsForProcessRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetInactiveRoomsForProcessResponseItem",
                "nameOverride": undefined,
                "schema": "RoomWithoutAllocations",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "DestroyRoomRequest",
          "headers": [],
          "method": "POST",
          "operationId": "DestroyRoom",
          "path": "/rooms/v1/{appId}/destroy/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DestroyRoomRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DestroyRoomRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "SuspendRoomRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SuspendRoom",
          "path": "/rooms/v1/{appId}/suspend/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SuspendRoomRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SuspendRoomRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            422,
            500,
          ],
          "generatedRequestName": "GetConnectionInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetConnectionInfo",
          "path": "/rooms/v1/{appId}/connectioninfo/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetConnectionInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetConnectionInfoRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetConnectionInfoResponse",
              "nameOverride": undefined,
              "schema": "ConnectionInfo",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
      ],
      "errors": {
        "401": {
          "description": undefined,
          "generatedName": "UnauthorizedError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "404": {
          "description": undefined,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "422": {
          "description": undefined,
          "generatedName": "UnprocessableEntityError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "429": {
          "description": undefined,
          "generatedName": "TooManyRequestsError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "500": {
          "description": undefined,
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
      },
      "nonRequestReferencedSchemas": [
        "ApplicationWithDeployment",
        "Record_string.never_",
        "Application",
        "AppId",
        "Build",
        "BuildId",
        "Deployment",
        "DeploymentId",
        "DiscoveryResponse",
        "Region",
        "RoomId",
        "Lobby",
        "ProcessId",
        "MetricName",
        "MetricsResponse",
        "ProcessWithRooms",
        "Process",
        "Room",
        "RoomWithoutAllocations",
        "ConnectionInfo",
        "OrgId",
        "PlanName",
        "TransportType",
        "MetricValue",
        "Record_Partial_MetricName_.MetricValue-Array_",
        "RoomAllocationId",
        "RoomStatus",
        "RoomAllocation",
        "Pick_Room.Exclude_keyofRoom.allocations__",
        "Omit_Room.allocations_",
        "StartingConnectionInfo",
        "ActiveConnectionInfo",
      ],
      "schemas": {
        "ActiveConnectionInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ActiveConnectionInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "ActiveConnectionInfoStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "active",
                    "nameOverride": undefined,
                    "value": "active",
                  },
                ],
              },
            },
            {
              "conflict": [],
              "key": "transportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ActiveConnectionInfoTransportType",
                "nameOverride": undefined,
                "schema": "TransportType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "port",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "host",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ActiveConnectionInfoRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "AppId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "Application": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Application",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "deletedBy",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "deletedAt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "orgId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ApplicationOrgId",
                "nameOverride": undefined,
                "schema": "OrgId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "authConfiguration",
              "schema": {
                "allOf": [],
                "description": undefined,
                "generatedName": "ApplicationAuthConfiguration",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": [],
                    "key": "google",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "description": undefined,
                        "generatedName": "ApplicationAuthConfigurationGoogle",
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "conflict": [],
                            "key": "clientId",
                            "schema": {
                              "description": undefined,
                              "schema": {
                                "type": "string",
                              },
                              "type": "primitive",
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                  {
                    "conflict": [],
                    "key": "nickname",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "ApplicationAuthConfigurationNickname",
                        "nameOverride": undefined,
                        "schema": "Record_string.never_",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": [],
                    "key": "anonymous",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "ApplicationAuthConfigurationAnonymous",
                        "nameOverride": undefined,
                        "schema": "Record_string.never_",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "conflict": [],
              "key": "appSecret",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "appId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "appName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ApplicationWithDeployment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Application",
              "nameOverride": undefined,
              "schema": "Application",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ApplicationWithDeployment",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "deployment",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ApplicationWithDeploymentDeployment",
                "nameOverride": undefined,
                "schema": "Deployment",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "Build": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Build",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "regionalContainerTags",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "allOf": [],
                  "description": undefined,
                  "generatedName": "BuildRegionalContainerTagsItem",
                  "nameOverride": undefined,
                  "properties": [
                    {
                      "conflict": [],
                      "key": "containerTag",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    {
                      "conflict": [],
                      "key": "region",
                      "schema": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "BuildRegionalContainerTagsItemRegion",
                        "nameOverride": undefined,
                        "schema": "Region",
                        "type": "reference",
                      },
                    },
                  ],
                  "type": "object",
                },
              },
            },
            {
              "conflict": [],
              "key": "imageSize",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "BuildStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "created",
                    "nameOverride": undefined,
                    "value": "created",
                  },
                  {
                    "generatedName": "running",
                    "nameOverride": undefined,
                    "value": "running",
                  },
                  {
                    "generatedName": "succeeded",
                    "nameOverride": undefined,
                    "value": "succeeded",
                  },
                  {
                    "generatedName": "failed",
                    "nameOverride": undefined,
                    "value": "failed",
                  },
                ],
              },
            },
            {
              "conflict": [],
              "key": "deletedAt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "finishedAt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "startedAt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BuildBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BuildAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "BuildId": {
          "description": undefined,
          "schema": {
            "type": "double",
          },
          "type": "primitive",
        },
        "ConnectionInfo": {
          "oneOf": {
            "description": undefined,
            "generatedName": "ConnectionInfo",
            "nameOverride": undefined,
            "schemas": [
              {
                "description": undefined,
                "file": undefined,
                "generatedName": "ConnectionInfoConnectionInfo",
                "nameOverride": undefined,
                "schema": "StartingConnectionInfo",
                "type": "reference",
              },
              {
                "description": undefined,
                "file": undefined,
                "generatedName": "ConnectionInfoConnectionInfo",
                "nameOverride": undefined,
                "schema": "ActiveConnectionInfo",
                "type": "reference",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "Deployment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "DeploymentConfig",
              "nameOverride": undefined,
              "schema": "DeploymentConfig",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Deployment",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "requestedMemoryMB",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "requestedCPU",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeploymentDeploymentId",
                "nameOverride": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeploymentBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeploymentAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "DeploymentConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DeploymentConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "env",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "allOf": [],
                  "description": undefined,
                  "generatedName": "DeploymentConfigEnvItem",
                  "nameOverride": undefined,
                  "properties": [
                    {
                      "conflict": [],
                      "key": "value",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    {
                      "conflict": [],
                      "key": "name",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  ],
                  "type": "object",
                },
              },
            },
            {
              "conflict": [],
              "key": "roomsPerProcess",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "planName",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeploymentConfigPlanName",
                "nameOverride": undefined,
                "schema": "PlanName",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "transportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeploymentConfigTransportType",
                "nameOverride": undefined,
                "schema": "TransportType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "containerPort",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DeploymentId": {
          "description": undefined,
          "schema": {
            "type": "double",
          },
          "type": "primitive",
        },
        "DiscoveryResponse": {
          "description": undefined,
          "type": "array",
          "value": {
            "allOf": [],
            "description": undefined,
            "generatedName": "DiscoveryResponseItem",
            "nameOverride": undefined,
            "properties": [
              {
                "conflict": [],
                "key": "port",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "host",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "conflict": [],
                "key": "region",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DiscoveryResponseItemRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            ],
            "type": "object",
          },
        },
        "Lobby": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Lobby",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "initialConfig",
              "schema": {
                "description": undefined,
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "conflict": [],
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "local",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "visibility",
              "schema": {
                "description": undefined,
                "generatedName": "LobbyVisibility",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "private",
                    "nameOverride": undefined,
                    "value": "private",
                  },
                  {
                    "generatedName": "public",
                    "nameOverride": undefined,
                    "value": "public",
                  },
                  {
                    "generatedName": "local",
                    "nameOverride": undefined,
                    "value": "local",
                  },
                ],
              },
            },
            {
              "conflict": [],
              "key": "region",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LobbyRegion",
                "nameOverride": undefined,
                "schema": "Region",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LobbyRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LobbyAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "MetricName": {
          "description": undefined,
          "generatedName": "MetricName",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "cpu",
              "nameOverride": undefined,
              "value": "cpu",
            },
            {
              "generatedName": "memory",
              "nameOverride": undefined,
              "value": "memory",
            },
            {
              "generatedName": "rate_egress",
              "nameOverride": undefined,
              "value": "rate_egress",
            },
            {
              "generatedName": "total_egress",
              "nameOverride": undefined,
              "value": "total_egress",
            },
          ],
        },
        "MetricValue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MetricValue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "timestamp",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "MetricsResponse": {
          "description": undefined,
          "file": undefined,
          "generatedName": "MetricsResponse",
          "nameOverride": undefined,
          "schema": "Record_Partial_MetricName_.MetricValue-Array_",
          "type": "reference",
        },
        "Omit_Room.allocations_": {
          "description": undefined,
          "file": undefined,
          "generatedName": "OmitRoomAllocations",
          "nameOverride": undefined,
          "schema": "Pick_Room.Exclude_keyofRoom.allocations__",
          "type": "reference",
        },
        "OrgId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "Pick_Room.Exclude_keyofRoom.allocations__": {
          "allOf": [],
          "description": "From T, pick a set of properties whose keys are in the union K",
          "generatedName": "PickRoomExcludeKeyofRoomAllocations",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PickRoomExcludeKeyofRoomAllocationsAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PickRoomExcludeKeyofRoomAllocationsRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PickRoomExcludeKeyofRoomAllocationsStatus",
                "nameOverride": undefined,
                "schema": "RoomStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "currentAllocation",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PickRoomExcludeKeyofRoomAllocationsCurrentAllocation",
                  "nameOverride": undefined,
                  "schema": "RoomAllocation",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "PlanName": {
          "description": undefined,
          "generatedName": "PlanName",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "tiny",
              "nameOverride": undefined,
              "value": "tiny",
            },
            {
              "generatedName": "small",
              "nameOverride": undefined,
              "value": "small",
            },
            {
              "generatedName": "medium",
              "nameOverride": undefined,
              "value": "medium",
            },
            {
              "generatedName": "large",
              "nameOverride": undefined,
              "value": "large",
            },
          ],
        },
        "Process": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Process",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "egressedBytes",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "idleSince",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "activeConnections",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "roomSlotsAvailable",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "draining",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "terminatedAt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "stoppingAt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "startedAt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "startingAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "roomsPerProcess",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "port",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "host",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "region",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProcessRegion",
                "nameOverride": undefined,
                "schema": "Region",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProcessProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProcessDeploymentId",
                "nameOverride": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProcessAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ProcessId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "ProcessWithRooms": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Process",
              "nameOverride": undefined,
              "schema": "Process",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ProcessWithRooms",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "rooms",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ProcessWithRoomsRoomsItem",
                  "nameOverride": undefined,
                  "schema": "RoomWithoutAllocations",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "totalRooms",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Record_Partial_MetricName_.MetricValue-Array_": {
          "allOf": [],
          "description": "Construct a type with a set of properties K of type T",
          "generatedName": "RecordPartialMetricNameMetricValueArray",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "cpu",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RecordPartialMetricNameMetricValueArrayCpuItem",
                    "nameOverride": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "memory",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RecordPartialMetricNameMetricValueArrayMemoryItem",
                    "nameOverride": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "rate_egress",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RecordPartialMetricNameMetricValueArrayRateEgressItem",
                    "nameOverride": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "total_egress",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RecordPartialMetricNameMetricValueArrayTotalEgressItem",
                    "nameOverride": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "Record_string.never_": {
          "allOf": [],
          "description": "Construct a type with a set of properties K of type T",
          "generatedName": "RecordStringNever",
          "nameOverride": undefined,
          "properties": [],
          "type": "object",
        },
        "Region": {
          "description": undefined,
          "generatedName": "Region",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Seattle",
              "nameOverride": undefined,
              "value": "Seattle",
            },
            {
              "generatedName": "Washington_DC",
              "nameOverride": undefined,
              "value": "Washington_DC",
            },
            {
              "generatedName": "Chicago",
              "nameOverride": undefined,
              "value": "Chicago",
            },
            {
              "generatedName": "London",
              "nameOverride": undefined,
              "value": "London",
            },
            {
              "generatedName": "Frankfurt",
              "nameOverride": undefined,
              "value": "Frankfurt",
            },
            {
              "generatedName": "Mumbai",
              "nameOverride": undefined,
              "value": "Mumbai",
            },
            {
              "generatedName": "Singapore",
              "nameOverride": undefined,
              "value": "Singapore",
            },
            {
              "generatedName": "Tokyo",
              "nameOverride": undefined,
              "value": "Tokyo",
            },
            {
              "generatedName": "Sydney",
              "nameOverride": undefined,
              "value": "Sydney",
            },
            {
              "generatedName": "Sao_Paulo",
              "nameOverride": undefined,
              "value": "Sao_Paulo",
            },
          ],
        },
        "Room": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Room",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "currentAllocation",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RoomCurrentAllocation",
                  "nameOverride": undefined,
                  "schema": "RoomAllocation",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomStatus",
                "nameOverride": undefined,
                "schema": "RoomStatus",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "allocations",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RoomAllocationsItem",
                  "nameOverride": undefined,
                  "schema": "RoomAllocation",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RoomAllocation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RoomAllocation",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "unscheduledAt",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "scheduledAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomAllocationProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "roomAllocationId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomAllocationRoomAllocationId",
                "nameOverride": undefined,
                "schema": "RoomAllocationId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RoomAllocationId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "RoomId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "RoomStatus": {
          "description": undefined,
          "generatedName": "RoomStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "scheduling",
              "nameOverride": undefined,
              "value": "scheduling",
            },
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "suspended",
              "nameOverride": undefined,
              "value": "suspended",
            },
            {
              "generatedName": "destroyed",
              "nameOverride": undefined,
              "value": "destroyed",
            },
          ],
        },
        "RoomWithoutAllocations": {
          "description": undefined,
          "file": undefined,
          "generatedName": "RoomWithoutAllocations",
          "nameOverride": undefined,
          "schema": "Omit_Room.allocations_",
          "type": "reference",
        },
        "StartingConnectionInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StartingConnectionInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "StartingConnectionInfoStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "starting",
                    "nameOverride": undefined,
                    "value": "starting",
                  },
                ],
              },
            },
            {
              "conflict": [],
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "StartingConnectionInfoRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "TransportType": {
          "description": undefined,
          "generatedName": "TransportType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "tcp",
              "nameOverride": undefined,
              "value": "tcp",
            },
            {
              "generatedName": "udp",
              "nameOverride": undefined,
              "value": "udp",
            },
            {
              "generatedName": "tls",
              "nameOverride": undefined,
              "value": "tls",
            },
          ],
        },
      },
      "securitySchemes": {
        "auth0": {
          "type": "bearer",
        },
      },
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "https://api.hathora.dev",
        },
        {
          "description": undefined,
          "name": undefined,
          "url": "/",
        },
      ],
      "tags": [],
      "title": "Hathora Cloud API",
      "variables": {},
    },
  },
  "rootPackage": {
    "file": "openapi.json",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser hume simple 1`] = `
{
  "files": {
    "openapi.yaml": {
      "dependencies": [],
      "description": "The Batch API provides access to Hume models through an asynchronous job-based interface. You can submit a job to have many different files processed in parallel. The status of a job can then be checked with the job ID. Email notifications are available to alert on completed jobs.",
      "endpoints": [
        {
          "authed": false,
          "description": "Sort and filter jobs.",
          "errorStatusCode": [],
          "generatedRequestName": "ListJobsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "listJobs",
          "path": "/v0/batch/jobs",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The maximum number of jobs to include in the response.",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Include only jobs with these statuses.",
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ListJobsRequestStatusItem",
                    "nameOverride": undefined,
                    "schema": "Status",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": "Include only jobs that were created before or after \`timestamp_ms\`.",
              "name": "when",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListJobsRequestWhen",
                  "nameOverride": undefined,
                  "schema": "When",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Defaults to the current date and time. See \`when\`.",
              "name": "timestamp_ms",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The job timestamp to sort by.",
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListJobsRequestSortBy",
                  "nameOverride": undefined,
                  "schema": "SortBy",
                  "type": "reference",
                },
              },
            },
            {
              "description": "The sort direction.",
              "name": "direction",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListJobsRequestDirection",
                  "nameOverride": undefined,
                  "schema": "Direction",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListJobsResponseItem",
                "nameOverride": undefined,
                "schema": "Job<Request>",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List Jobs",
          "tags": [
            "[3] List Jobs",
          ],
        },
        {
          "authed": false,
          "description": "Start a new batch job.",
          "errorStatusCode": [],
          "generatedRequestName": "StartJobRequest",
          "headers": [],
          "method": "POST",
          "operationId": "startJob",
          "path": "/v0/batch/jobs",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "StartJobRequest",
              "nameOverride": undefined,
              "schema": "BaseRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "StartJobResponse",
              "nameOverride": undefined,
              "schema": "JobId",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Start Job",
          "tags": [
            "[1] Start Job",
          ],
        },
        {
          "authed": false,
          "description": "Get the JSON predictions of a completed job.",
          "errorStatusCode": [],
          "generatedRequestName": "GetJobPredictionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "getJobPredictions",
          "path": "/v0/batch/jobs/{id}/predictions",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetJobPredictionsResponseItem",
                "nameOverride": undefined,
                "schema": "SourceResult",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get Job Predictions",
          "tags": [
            "[2] Get Job Predictions",
          ],
        },
        {
          "authed": false,
          "description": "Get the artifacts ZIP of a completed job.",
          "errorStatusCode": [],
          "generatedRequestName": "GetJobArtifactsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "getJobArtifacts",
          "path": "/v0/batch/jobs/{id}/artifacts",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get Job Artifacts",
          "tags": [
            "[2] Get Job Predictions",
          ],
        },
        {
          "authed": false,
          "description": "Get the request details and state of a given job.",
          "errorStatusCode": [],
          "generatedRequestName": "GetJobDetailsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "getJobDetails",
          "path": "/v0/batch/jobs/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetJobDetailsResponse",
              "nameOverride": undefined,
              "schema": "Job<Request>",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get Job Details",
          "tags": [
            "[2] Get Job Predictions",
          ],
        },
      ],
      "errors": {},
      "nonRequestReferencedSchemas": [
        "Status",
        "When",
        "SortBy",
        "Direction",
        "Job<Request>",
        "JobId",
        "SourceResult",
        "Models",
        "Transcription",
        "TimeInterval",
        "EmotionScore",
        "DescriptionsScore",
        "Empty",
        "BoundingBox",
        "FacsScore",
        "BurstPrediction",
        "FacePrediction",
        "FacemeshPrediction",
        "LanguagePrediction",
        "NerPrediction",
        "ProsodyPrediction",
        "Request",
        "State",
        "Granularity",
        "PositionInterval",
        "SentimentScore",
        "ToxicityScore",
        "Face",
        "Prosody",
        "Language",
        "Ner",
        "Predictions<optional<Null>, FacePrediction>",
        "Predictions<optional<Null>, BurstPrediction>",
        "Predictions<optional<TranscriptionMetadata>, ProsodyPrediction>",
        "Predictions<optional<TranscriptionMetadata>, LanguagePrediction>",
        "Predictions<optional<TranscriptionMetadata>, NerPrediction>",
        "Predictions<optional<Null>, FacemeshPrediction>",
        "ModelsPredictions",
        "Null",
        "GroupedPredictions<BurstPrediction>",
        "GroupedPredictions<FacePrediction>",
        "GroupedPredictions<FacemeshPrediction>",
        "TranscriptionMetadata",
        "GroupedPredictions<LanguagePrediction>",
        "GroupedPredictions<NerPrediction>",
        "GroupedPredictions<ProsodyPrediction>",
        "Window",
        "File",
        "Prediction",
        "Error",
        "Source",
        "Results",
        "Url",
        "Bcp47Tag",
      ],
      "schemas": {
        "BaseRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BaseRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "models",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BaseRequestModels",
                  "nameOverride": undefined,
                  "schema": "Models",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "transcription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BaseRequestTranscription",
                  "nameOverride": undefined,
                  "schema": "Transcription",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "urls",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "URLs to the media files to be processed. Each must be a valid public URL to a media file (see recommended input filetypes) or an archive (\`.zip\`, \`.tar.gz\`, \`.tar.bz2\`, \`.tar.xz\`) of media files.

If you wish to supply more than 100 URLs, consider providing them as an archive (\`.zip\`, \`.tar.gz\`, \`.tar.bz2\`, \`.tar.xz\`).",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "callback_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "If provided, a \`POST\` request will be made to the URL with the generated predictions on completion or the error message on failure.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "notify",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Whether to send an email notification to the user upon job completion/failure.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Bcp47Tag": {
          "description": undefined,
          "generatedName": "Bcp47Tag",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "zh",
              "nameOverride": undefined,
              "value": "zh",
            },
            {
              "generatedName": "da",
              "nameOverride": undefined,
              "value": "da",
            },
            {
              "generatedName": "nl",
              "nameOverride": undefined,
              "value": "nl",
            },
            {
              "generatedName": "en",
              "nameOverride": undefined,
              "value": "en",
            },
            {
              "generatedName": "EnAu",
              "nameOverride": undefined,
              "value": "en-AU",
            },
            {
              "generatedName": "EnIn",
              "nameOverride": undefined,
              "value": "en-IN",
            },
            {
              "generatedName": "EnNz",
              "nameOverride": undefined,
              "value": "en-NZ",
            },
            {
              "generatedName": "EnGb",
              "nameOverride": undefined,
              "value": "en-GB",
            },
            {
              "generatedName": "fr",
              "nameOverride": undefined,
              "value": "fr",
            },
            {
              "generatedName": "FrCa",
              "nameOverride": undefined,
              "value": "fr-CA",
            },
            {
              "generatedName": "de",
              "nameOverride": undefined,
              "value": "de",
            },
            {
              "generatedName": "hi",
              "nameOverride": undefined,
              "value": "hi",
            },
            {
              "generatedName": "HiLatn",
              "nameOverride": undefined,
              "value": "hi-Latn",
            },
            {
              "generatedName": "id",
              "nameOverride": undefined,
              "value": "id",
            },
            {
              "generatedName": "it",
              "nameOverride": undefined,
              "value": "it",
            },
            {
              "generatedName": "ja",
              "nameOverride": undefined,
              "value": "ja",
            },
            {
              "generatedName": "ko",
              "nameOverride": undefined,
              "value": "ko",
            },
            {
              "generatedName": "no",
              "nameOverride": undefined,
              "value": "no",
            },
            {
              "generatedName": "pl",
              "nameOverride": undefined,
              "value": "pl",
            },
            {
              "generatedName": "pt",
              "nameOverride": undefined,
              "value": "pt",
            },
            {
              "generatedName": "PtBr",
              "nameOverride": undefined,
              "value": "pt-BR",
            },
            {
              "generatedName": "PtPt",
              "nameOverride": undefined,
              "value": "pt-PT",
            },
            {
              "generatedName": "ru",
              "nameOverride": undefined,
              "value": "ru",
            },
            {
              "generatedName": "es",
              "nameOverride": undefined,
              "value": "es",
            },
            {
              "generatedName": "Es419",
              "nameOverride": undefined,
              "value": "es-419",
            },
            {
              "generatedName": "sv",
              "nameOverride": undefined,
              "value": "sv",
            },
            {
              "generatedName": "ta",
              "nameOverride": undefined,
              "value": "ta",
            },
            {
              "generatedName": "tr",
              "nameOverride": undefined,
              "value": "tr",
            },
            {
              "generatedName": "uk",
              "nameOverride": undefined,
              "value": "uk",
            },
          ],
        },
        "BoundingBox": {
          "allOf": [],
          "description": "A bounding box around a face.",
          "generatedName": "BoundingBox",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "x",
              "schema": {
                "description": "x-coordinate of bounding box top left corner.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "y",
              "schema": {
                "description": "y-coordinate of bounding box top left corner.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "w",
              "schema": {
                "description": "Bounding box width.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "h",
              "schema": {
                "description": "Bounding box height.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "BurstPrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BurstPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "time",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BurstPredictionTime",
                "nameOverride": undefined,
                "schema": "TimeInterval",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BurstPredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "descriptions",
              "schema": {
                "description": "Modality-specific descriptive features and their scores.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BurstPredictionDescriptionsItem",
                  "nameOverride": undefined,
                  "schema": "DescriptionsScore",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Completed": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Completed",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "created_timestamp_ms",
              "schema": {
                "description": "When this job was created (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "started_timestamp_ms",
              "schema": {
                "description": "When this job started (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "ended_timestamp_ms",
              "schema": {
                "description": "When this job ended (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "num_predictions",
              "schema": {
                "description": "The number of predictions that were generated by this job.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "num_errors",
              "schema": {
                "description": "The number of errors that occurred while running this job.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DescriptionsScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DescriptionsScore",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "Name of the descriptive feature being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "score",
              "schema": {
                "description": "Embedding value for the descriptive feature being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Direction": {
          "description": undefined,
          "generatedName": "Direction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "asc",
              "nameOverride": undefined,
              "value": "asc",
            },
            {
              "generatedName": "desc",
              "nameOverride": undefined,
              "value": "desc",
            },
          ],
        },
        "EmotionScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EmotionScore",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "Name of the emotion being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "score",
              "schema": {
                "description": "Embedding value for the emotion being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Empty": {
          "description": "To include predictions for this model type, set this field to \`{}\`. It is currently not configurable further.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "Error": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Error",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": "An error message.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "file",
              "schema": {
                "description": "A file path relative to the top level source URL or file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Face": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Face",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fps_pred",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Number of frames per second to process. Other frames will be omitted from the response. Set to \`0\` to process every frame.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "prob_threshold",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Face detection probability threshold. Faces detected with a probability less than this threshold will be omitted from the response.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "identify_faces",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Whether to return identifiers for faces across frames. If \`true\`, unique identifiers will be assigned to face bounding boxes to differentiate different faces. If \`false\`, all faces will be tagged with an \`unknown\` ID.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "min_face_size",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Minimum bounding box side length in pixels to treat as a face. Faces detected with a bounding box side length in pixels less than this threshold will be omitted from the response.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "facs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FaceFacs",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "descriptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FaceDescriptions",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "save_faces",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Whether to extract and save the detected faces in the artifacts zip created by each job.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "FacePrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FacePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "frame",
              "schema": {
                "description": "Frame number",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "time",
              "schema": {
                "description": "Time in seconds when face detection occurred.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "prob",
              "schema": {
                "description": "The predicted probability that a detected face was actually a face.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "box",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "FacePredictionBox",
                "nameOverride": undefined,
                "schema": "BoundingBox",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FacePredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "facs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "FACS 2.0 features and their scores.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "FacePredictionFacsItem",
                    "nameOverride": undefined,
                    "schema": "FacsScore",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "descriptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Modality-specific descriptive features and their scores.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "FacePredictionDescriptionsItem",
                    "nameOverride": undefined,
                    "schema": "DescriptionsScore",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "FacemeshPrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FacemeshPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FacemeshPredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "FacsScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FacsScore",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "Name of the FACS 2.0 feature being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "score",
              "schema": {
                "description": "Embedding value for the FACS 2.0 feature being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Failed": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Failed",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "created_timestamp_ms",
              "schema": {
                "description": "When this job was created (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "started_timestamp_ms",
              "schema": {
                "description": "When this job started (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "ended_timestamp_ms",
              "schema": {
                "description": "When this job ended (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": "An error message.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "File": {
          "allOf": [],
          "description": undefined,
          "generatedName": "File",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "filename",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the file.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "content_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The content type of the file.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "md5sum",
              "schema": {
                "description": "The MD5 checksum of the file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Granularity": {
          "description": "The granularity at which to generate predictions. \`utterance\` corresponds to a natural pause or break in conversation, while \`conversational_turn\` corresponds to a change in speaker.",
          "generatedName": "Granularity",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "word",
              "nameOverride": undefined,
              "value": "word",
            },
            {
              "generatedName": "sentence",
              "nameOverride": undefined,
              "value": "sentence",
            },
            {
              "generatedName": "utterance",
              "nameOverride": undefined,
              "value": "utterance",
            },
            {
              "generatedName": "conversational_turn",
              "nameOverride": undefined,
              "value": "conversational_turn",
            },
          ],
        },
        "GroupedPredictions<BurstPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsBurstPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsBurstPredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "BurstPrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<FacePrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsFacePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsFacePredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "FacePrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<FacemeshPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsFacemeshPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsFacemeshPredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "FacemeshPrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<LanguagePrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsLanguagePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsLanguagePredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "LanguagePrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<NerPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsNerPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsNerPredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "NerPrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<ProsodyPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsProsodyPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsProsodyPredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "ProsodyPrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "InProgress": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InProgress",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "created_timestamp_ms",
              "schema": {
                "description": "When this job was created (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "started_timestamp_ms",
              "schema": {
                "description": "When this job started (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Job<Request>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "JobRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "user_id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "job_id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "request",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "JobRequestRequest",
                "nameOverride": undefined,
                "schema": "Request",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "JobRequestState",
                "nameOverride": undefined,
                "schema": "State",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "JobId": {
          "allOf": [],
          "description": undefined,
          "generatedName": "JobId",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "job_id",
              "schema": {
                "description": "The ID of the started job.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Language": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Language",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "granularity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguageGranularity",
                  "nameOverride": undefined,
                  "schema": "Granularity",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "identify_speakers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Whether to return identifiers for speakers over time. If \`true\`, unique identifiers will be assigned to spoken words to differentiate different speakers. If \`false\`, all speakers will be tagged with an \`unknown\` ID.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sentiment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguageSentiment",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "toxicity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguageToxicity",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "LanguagePrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "LanguagePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "A segment of text (like a word or a sentence).",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "position",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LanguagePredictionPosition",
                "nameOverride": undefined,
                "schema": "PositionInterval",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "time",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguagePredictionTime",
                  "nameOverride": undefined,
                  "schema": "TimeInterval",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "confidence",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence in this text.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "speaker_confidence",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguagePredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "sentiment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sentiment predictions returned as a distribution. This model predicts the probability that a given text could be interpreted as having each sentiment level from \`1\` (negative) to \`9\` (positive).

Compared to returning one estimate of sentiment, this enables a more nuanced analysis of a text's meaning. For example, a text with very neutral sentiment would have an average rating of \`5\`. But also a text that could be interpreted as having very positive sentiment or very negative sentiment would also have an average rating of \`5\`. The average sentiment is less informative than the distribution over sentiment, so this API returns a value for each sentiment level.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "LanguagePredictionSentimentItem",
                    "nameOverride": undefined,
                    "schema": "SentimentScore",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "toxicity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Toxicity predictions returned as probabilities that the text can be classified into the following categories: \`toxic\`, \`severe_toxic\`, \`obscene\`, \`threat\`, \`insult\`, and \`identity_hate\`.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "LanguagePredictionToxicityItem",
                    "nameOverride": undefined,
                    "schema": "ToxicityScore",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "Models": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Models",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "face",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsFace",
                  "nameOverride": undefined,
                  "schema": "Face",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "burst",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsBurst",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "prosody",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsProsody",
                  "nameOverride": undefined,
                  "schema": "Prosody",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "language",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsLanguage",
                  "nameOverride": undefined,
                  "schema": "Language",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsNer",
                  "nameOverride": undefined,
                  "schema": "Ner",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "facemesh",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsFacemesh",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelsPredictions": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelsPredictions",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "face",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsFace",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<Null>, FacePrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "burst",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsBurst",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<Null>, BurstPrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "prosody",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsProsody",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<TranscriptionMetadata>, ProsodyPrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "language",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsLanguage",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<TranscriptionMetadata>, LanguagePrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "ner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsNer",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<TranscriptionMetadata>, NerPrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "facemesh",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsFacemesh",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<Null>, FacemeshPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Ner": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Ner",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "identify_speakers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Whether to return identifiers for speakers over time. If \`true\`, unique identifiers will be assigned to spoken words to differentiate different speakers. If \`false\`, all speakers will be tagged with an \`unknown\` ID.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NerPrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NerPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "entity",
              "schema": {
                "description": "The recognized topic or entity.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "position",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "NerPredictionPosition",
                "nameOverride": undefined,
                "schema": "PositionInterval",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "entity_confidence",
              "schema": {
                "description": "Our NER model's relative confidence in the recognized topic or entity.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "support",
              "schema": {
                "description": "A measure of how often the entity is linked to by other entities.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "uri",
              "schema": {
                "description": "A URL which provides more information about the recognized topic or entity.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "link_word",
              "schema": {
                "description": "The specific word to which the emotion predictions are linked.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "time",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NerPredictionTime",
                  "nameOverride": undefined,
                  "schema": "TimeInterval",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "confidence",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence in this text.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "speaker_confidence",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NerPredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Null": {
          "description": "No associated metadata for this model. Value will be \`null\`.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "PositionInterval": {
          "allOf": [],
          "description": "Position of a segment of text within a larger document, measured in characters. Uses zero-based indexing. The beginning index is inclusive and the end index is exclusive.",
          "generatedName": "PositionInterval",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "begin",
              "schema": {
                "description": "The index of the first character in the text segment, inclusive.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "end",
              "schema": {
                "description": "The index of the last character in the text segment, exclusive.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Prediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Prediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "file",
              "schema": {
                "description": "A file path relative to the top level source URL or file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "models",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PredictionModels",
                "nameOverride": undefined,
                "schema": "ModelsPredictions",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<Null>, BurstPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalNullBurstPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullBurstPredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "Null",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullBurstPredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<BurstPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<Null>, FacePrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalNullFacePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullFacePredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "Null",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullFacePredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<FacePrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<Null>, FacemeshPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalNullFacemeshPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullFacemeshPredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "Null",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullFacemeshPredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<FacemeshPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<TranscriptionMetadata>, LanguagePrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "TranscriptionMetadata",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<LanguagePrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<TranscriptionMetadata>, NerPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalTranscriptionMetadataNerPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataNerPredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "TranscriptionMetadata",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataNerPredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<NerPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<TranscriptionMetadata>, ProsodyPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "TranscriptionMetadata",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<ProsodyPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Prosody": {
          "allOf": [],
          "description": "NOTE: the \`granularity\` field is ignored if transcription is not enabled or if the \`window\` field has been set.",
          "generatedName": "Prosody",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "granularity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ProsodyGranularity",
                  "nameOverride": undefined,
                  "schema": "Granularity",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "identify_speakers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Whether to return identifiers for speakers over time. If \`true\`, unique identifiers will be assigned to spoken words to differentiate different speakers. If \`false\`, all speakers will be tagged with an \`unknown\` ID.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "window",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ProsodyWindow",
                  "nameOverride": undefined,
                  "schema": "Window",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ProsodyPrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ProsodyPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A segment of text (like a word or a sentence).",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "time",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProsodyPredictionTime",
                "nameOverride": undefined,
                "schema": "TimeInterval",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "confidence",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence in this text.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "speaker_confidence",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ProsodyPredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Queued": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Queued",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "created_timestamp_ms",
              "schema": {
                "description": "When this job was created (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Request",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "models",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RequestModels",
                  "nameOverride": undefined,
                  "schema": "Models",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "transcription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RequestTranscription",
                  "nameOverride": undefined,
                  "schema": "Transcription",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "urls",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "URLs to the media files to be processed. Each must be a valid public URL to a media file (see recommended input filetypes) or an archive (\`.zip\`, \`.tar.gz\`, \`.tar.bz2\`, \`.tar.xz\`) of media files.

If you wish to supply more than 100 URLs, consider providing them as an archive (\`.zip\`, \`.tar.gz\`, \`.tar.bz2\`, \`.tar.xz\`).",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "callback_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "If provided, a \`POST\` request will be made to the URL with the generated predictions on completion or the error message on failure.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "notify",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Whether to send an email notification to the user upon job completion/failure.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "files",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RequestFilesItem",
                  "nameOverride": undefined,
                  "schema": "File",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Results": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Results",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ResultsPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "Prediction",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "errors",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ResultsErrorsItem",
                  "nameOverride": undefined,
                  "schema": "Error",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SentimentScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SentimentScore",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "Level of sentiment, ranging from \`1\` (negative) to \`9\` (positive)",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "score",
              "schema": {
                "description": "Prediction for this level of sentiment",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SortBy": {
          "description": undefined,
          "generatedName": "SortBy",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "created",
              "nameOverride": undefined,
              "value": "created",
            },
            {
              "generatedName": "started",
              "nameOverride": undefined,
              "value": "started",
            },
            {
              "generatedName": "ended",
              "nameOverride": undefined,
              "value": "ended",
            },
          ],
        },
        "Source": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Source",
            "nameOverride": undefined,
            "schemas": {
              "file": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSourceFile",
                "nameOverride": undefined,
                "schema": "Source_File",
                "type": "reference",
              },
              "url": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSourceUrl",
                "nameOverride": undefined,
                "schema": "Source_Url",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "SourceResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SourceResult",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "source",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SourceResultSource",
                "nameOverride": undefined,
                "schema": "Source",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SourceResultResults",
                  "nameOverride": undefined,
                  "schema": "Results",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "error",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An error message.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Source_File": {
          "description": undefined,
          "file": undefined,
          "generatedName": "SourceFile",
          "nameOverride": undefined,
          "schema": "File",
          "type": "reference",
        },
        "Source_Url": {
          "description": undefined,
          "file": undefined,
          "generatedName": "SourceUrl",
          "nameOverride": undefined,
          "schema": "Url",
          "type": "reference",
        },
        "State": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "State",
            "nameOverride": undefined,
            "schemas": {
              "COMPLETED": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStateCompleted",
                "nameOverride": undefined,
                "schema": "State_Completed",
                "type": "reference",
              },
              "FAILED": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStateFailed",
                "nameOverride": undefined,
                "schema": "State_Failed",
                "type": "reference",
              },
              "IN_PROGRESS": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStateInProgress",
                "nameOverride": undefined,
                "schema": "State_InProgress",
                "type": "reference",
              },
              "QUEUED": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStateQueued",
                "nameOverride": undefined,
                "schema": "State_Queued",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "State_Completed": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Completed",
              "nameOverride": undefined,
              "schema": "Completed",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "StateCompleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "State_Failed": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Failed",
              "nameOverride": undefined,
              "schema": "Failed",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "StateFailed",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "State_InProgress": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "InProgress",
              "nameOverride": undefined,
              "schema": "InProgress",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "StateInProgress",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "State_Queued": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Queued",
              "nameOverride": undefined,
              "schema": "Queued",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "StateQueued",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Status": {
          "description": undefined,
          "generatedName": "Status",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "QUEUED",
              "nameOverride": undefined,
              "value": "QUEUED",
            },
            {
              "generatedName": "IN_PROGRESS",
              "nameOverride": undefined,
              "value": "IN_PROGRESS",
            },
            {
              "generatedName": "COMPLETED",
              "nameOverride": undefined,
              "value": "COMPLETED",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "TimeInterval": {
          "allOf": [],
          "description": "A time range with a beginning and end, measured in seconds.",
          "generatedName": "TimeInterval",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "begin",
              "schema": {
                "description": "Beginning of time range in seconds.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "end",
              "schema": {
                "description": "End of time range in seconds.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ToxicityScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ToxicityScore",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "Category of toxicity.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "score",
              "schema": {
                "description": "Prediction for this category of toxicity",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Transcription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Transcription",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "language",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TranscriptionLanguage",
                  "nameOverride": undefined,
                  "schema": "Bcp47Tag",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "TranscriptionMetadata": {
          "allOf": [],
          "description": "Transcription metadata for your media file.",
          "generatedName": "TranscriptionMetadata",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "confidence",
              "schema": {
                "description": "Value between \`0.0\` and \`1.0\` indicating our transcription model’s relative confidence in the transcription of your media file.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "detected_language",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TranscriptionMetadataDetectedLanguage",
                  "nameOverride": undefined,
                  "schema": "Bcp47Tag",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Url": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Url",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The URL of the source media file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "When": {
          "description": undefined,
          "generatedName": "When",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "created_before",
              "nameOverride": undefined,
              "value": "created_before",
            },
            {
              "generatedName": "created_after",
              "nameOverride": undefined,
              "value": "created_after",
            },
          ],
        },
        "Window": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Window",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "length",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The length of the sliding window.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "step",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The step size of the sliding window.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {},
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "https://api.hume.ai",
        },
      ],
      "tags": [],
      "title": "Hume AI Batch API",
      "variables": {},
    },
  },
  "rootPackage": {
    "file": "openapi.yaml",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser squidex simple 1`] = `
{
  "files": {
    "openapi.json": {
      "dependencies": [],
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "UserManagementGetUsersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "UserManagement_GetUsers",
          "path": "/api/user-management",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Optional query to search by email address or username.",
              "name": "query",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The number of users to skip.",
              "name": "skip",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The number of users to return.",
              "name": "take",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Users returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementGetUsersResponse",
              "nameOverride": undefined,
              "schema": "UsersDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "getUsers",
          },
          "server": [],
          "summary": "Get users by query.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "UserManagementPostUserRequest",
          "headers": [],
          "method": "POST",
          "operationId": "UserManagement_PostUser",
          "path": "/api/user-management",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementPostUserRequest",
              "nameOverride": undefined,
              "schema": "CreateUserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "User created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementPostUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "postUser",
          },
          "server": [],
          "summary": "Create a new user.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "UserManagementGetUserRequest",
          "headers": [],
          "method": "GET",
          "operationId": "UserManagement_GetUser",
          "path": "/api/user-management/{id}",
          "pathParameters": [
            {
              "description": "The ID of the user.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementGetUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "getUser",
          },
          "server": [],
          "summary": "Get a user by ID.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "UserManagementPutUserRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "UserManagement_PutUser",
          "path": "/api/user-management/{id}",
          "pathParameters": [
            {
              "description": "The ID of the user.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementPutUserRequest",
              "nameOverride": undefined,
              "schema": "UpdateUserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "User created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementPutUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "putUser",
          },
          "server": [],
          "summary": "Update a user.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            403,
            404,
            500,
          ],
          "generatedRequestName": "UserManagementDeleteUserRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "UserManagement_DeleteUser",
          "path": "/api/user-management/{id}",
          "pathParameters": [
            {
              "description": "The ID of the user to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "deleteUser",
          },
          "server": [],
          "summary": "Delete a User.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            403,
            404,
            500,
          ],
          "generatedRequestName": "UserManagementLockUserRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "UserManagement_LockUser",
          "path": "/api/user-management/{id}/lock",
          "pathParameters": [
            {
              "description": "The ID of the user to lock.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User locked.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementLockUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "lockUser",
          },
          "server": [],
          "summary": "Lock a user.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            403,
            404,
            500,
          ],
          "generatedRequestName": "UserManagementUnlockUserRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "UserManagement_UnlockUser",
          "path": "/api/user-management/{id}/unlock",
          "pathParameters": [
            {
              "description": "The ID of the user to unlock.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User unlocked.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementUnlockUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "unlockUser",
          },
          "server": [],
          "summary": "Unlock a user.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "UsersGetUserResourcesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Users_GetUserResources",
          "path": "/api",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User resources returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UsersGetUserResourcesResponse",
              "nameOverride": undefined,
              "schema": "ResourcesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "users",
            "methodName": "getUserResources",
          },
          "server": [],
          "summary": "Get the user resources.",
          "tags": [
            "Users",
          ],
        },
        {
          "authed": true,
          "description": "Search the user by query that contains the email address or the part of the email address.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "UsersGetUsersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Users_GetUsers",
          "path": "/api/users",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The query to search the user by email address. Case invariant.",
              "name": "query",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Users returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UsersGetUsersResponseItem",
                "nameOverride": undefined,
                "schema": "UserDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "users",
            "methodName": "getUsers",
          },
          "server": [],
          "summary": "Get users by query.",
          "tags": [
            "Users",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "UsersGetUserRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Users_GetUser",
          "path": "/api/users/{id}",
          "pathParameters": [
            {
              "description": "The ID of the user (GUID).",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User found.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UsersGetUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "users",
            "methodName": "getUser",
          },
          "server": [],
          "summary": "Get user by id.",
          "tags": [
            "Users",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "UsersGetUserPictureRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Users_GetUserPicture",
          "path": "/api/users/{id}/picture",
          "pathParameters": [
            {
              "description": "The ID of the user (GUID).",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User found and image or fallback returned.",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "users",
            "methodName": "getUserPicture",
          },
          "server": [],
          "summary": "Get user picture by id.",
          "tags": [
            "Users",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "TranslationsPostTranslationRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Translations_PostTranslation",
          "path": "/api/apps/{app}/translations",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TranslationsPostTranslationRequest",
              "nameOverride": undefined,
              "schema": "TranslateDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Text translated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TranslationsPostTranslationResponse",
              "nameOverride": undefined,
              "schema": "TranslationDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "translations",
            "methodName": "postTranslation",
          },
          "server": [],
          "summary": "Translate a text.",
          "tags": [
            "Translations",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "TemplatesGetTemplatesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Templates_GetTemplates",
          "path": "/api/templates",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Templates returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TemplatesGetTemplatesResponse",
              "nameOverride": undefined,
              "schema": "TemplatesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "templates",
            "methodName": "getTemplates",
          },
          "server": [],
          "summary": "Get all templates.",
          "tags": [
            "Templates",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "TemplatesGetTemplateRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Templates_GetTemplate",
          "path": "/api/templates/{name}",
          "pathParameters": [
            {
              "description": "The name of the template.",
              "name": "name",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Template returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TemplatesGetTemplateResponse",
              "nameOverride": undefined,
              "schema": "TemplateDetailsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "templates",
            "methodName": "getTemplate",
          },
          "server": [],
          "summary": "Get template details.",
          "tags": [
            "Templates",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "TeamsGetContributorsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "TeamContributors_GetContributors",
          "path": "/api/teams/{team}/contributors",
          "pathParameters": [
            {
              "description": "The ID of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributors returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsGetContributorsResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "getContributors",
          },
          "server": [],
          "summary": "Get team contributors.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "TeamsPostContributorRequest",
          "headers": [],
          "method": "POST",
          "operationId": "TeamContributors_PostContributor",
          "path": "/api/teams/{team}/contributors",
          "pathParameters": [
            {
              "description": "The ID of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPostContributorRequest",
              "nameOverride": undefined,
              "schema": "AssignContributorDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor assigned to team.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPostContributorResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "postContributor",
          },
          "server": [],
          "summary": "Assign contributor to team.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "TeamsDeleteMyselfRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "TeamContributors_DeleteMyself",
          "path": "/api/teams/{team}/contributors/me",
          "pathParameters": [
            {
              "description": "The ID of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsDeleteMyselfResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "deleteMyself",
          },
          "server": [],
          "summary": "Remove yourself.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "TeamsDeleteContributorRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "TeamContributors_DeleteContributor",
          "path": "/api/teams/{team}/contributors/{id}",
          "pathParameters": [
            {
              "description": "The ID of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the contributor.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsDeleteContributorResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "deleteContributor",
          },
          "server": [],
          "summary": "Remove contributor.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": "You can only retrieve the list of teams when you are authenticated as a user (OpenID implicit flow).
You will retrieve all teams, where you are assigned as a contributor.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "TeamsGetTeamsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Teams_GetTeams",
          "path": "/api/teams",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Teams returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TeamsGetTeamsResponseItem",
                "nameOverride": undefined,
                "schema": "TeamDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "getTeams",
          },
          "server": [],
          "summary": "Get your teams.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": "You can only create an team when you are authenticated as a user (OpenID implicit flow).
You will be assigned as owner of the new team automatically.",
          "errorStatusCode": [
            400,
            409,
            500,
          ],
          "generatedRequestName": "TeamsPostTeamRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Teams_PostTeam",
          "path": "/api/teams",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPostTeamRequest",
              "nameOverride": undefined,
              "schema": "CreateTeamDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Team created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPostTeamResponse",
              "nameOverride": undefined,
              "schema": "TeamDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "postTeam",
          },
          "server": [],
          "summary": "Create a new team.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "TeamsGetTeamRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Teams_GetTeam",
          "path": "/api/teams/{team}",
          "pathParameters": [
            {
              "description": "The name of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Teams returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsGetTeamResponse",
              "nameOverride": undefined,
              "schema": "TeamDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "getTeam",
          },
          "server": [],
          "summary": "Get an team by name.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "TeamsPutTeamRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Teams_PutTeam",
          "path": "/api/teams/{team}",
          "pathParameters": [
            {
              "description": "The name of the team to update.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPutTeamRequest",
              "nameOverride": undefined,
              "schema": "UpdateTeamDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Team updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPutTeamResponse",
              "nameOverride": undefined,
              "schema": "TeamDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "putTeam",
          },
          "server": [],
          "summary": "Update the team.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "StatisticsGetLogRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetLog",
          "path": "/api/apps/{app}/usages/log",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Usage tracking results returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "StatisticsGetLogResponse",
              "nameOverride": undefined,
              "schema": "LogDownloadDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getLog",
          },
          "server": [],
          "summary": "Get api calls as log file.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "StatisticsGetUsagesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetUsages",
          "path": "/api/apps/{app}/usages/calls/{fromDate}/{toDate}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The from date.",
              "name": "fromDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The to date.",
              "name": "toDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "API call returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "StatisticsGetUsagesResponse",
              "nameOverride": undefined,
              "schema": "CallsUsageDtoDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getUsages",
          },
          "server": [],
          "summary": "Get api calls in date range.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "StatisticsGetUsagesForTeamRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetUsagesForTeam",
          "path": "/api/teams/{team}/usages/calls/{fromDate}/{toDate}",
          "pathParameters": [
            {
              "description": "The name of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The from date.",
              "name": "fromDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The to date.",
              "name": "toDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "API call returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "StatisticsGetUsagesForTeamResponse",
              "nameOverride": undefined,
              "schema": "CallsUsageDtoDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getUsagesForTeam",
          },
          "server": [],
          "summary": "Get api calls in date range for team.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "StatisticsGetCurrentStorageSizeRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetCurrentStorageSize",
          "path": "/api/apps/{app}/usages/storage/today",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Storage usage returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "StatisticsGetCurrentStorageSizeResponse",
              "nameOverride": undefined,
              "schema": "CurrentStorageDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getCurrentStorageSize",
          },
          "server": [],
          "summary": "Get total asset size.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "StatisticsGetTeamCurrentStorageSizeForTeamRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetTeamCurrentStorageSizeForTeam",
          "path": "/api/teams/{team}/usages/storage/today",
          "pathParameters": [
            {
              "description": "The ID of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Storage usage returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "StatisticsGetTeamCurrentStorageSizeForTeamResponse",
              "nameOverride": undefined,
              "schema": "CurrentStorageDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getTeamCurrentStorageSizeForTeam",
          },
          "server": [],
          "summary": "Get total asset size by team.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "StatisticsGetStorageSizesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetStorageSizes",
          "path": "/api/apps/{app}/usages/storage/{fromDate}/{toDate}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The from date.",
              "name": "fromDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The to date.",
              "name": "toDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Storage usage returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "StatisticsGetStorageSizesResponseItem",
                "nameOverride": undefined,
                "schema": "StorageUsagePerDateDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getStorageSizes",
          },
          "server": [],
          "summary": "Get asset usage by date.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "StatisticsGetStorageSizesForTeamRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetStorageSizesForTeam",
          "path": "/api/teams/{team}/usages/storage/{fromDate}/{toDate}",
          "pathParameters": [
            {
              "description": "The ID of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The from date.",
              "name": "fromDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The to date.",
              "name": "toDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Storage usage returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "StatisticsGetStorageSizesForTeamResponseItem",
                "nameOverride": undefined,
                "schema": "StorageUsagePerDateDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getStorageSizesForTeam",
          },
          "server": [],
          "summary": "Get asset usage by date for team.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "SearchGetSearchResultsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Search_GetSearchResults",
          "path": "/api/apps/{app}/search",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [
            {
              "description": "The search query.",
              "name": "query",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Search results returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SearchGetSearchResultsResponseItem",
                "nameOverride": undefined,
                "schema": "SearchResultDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "search",
            "methodName": "getSearchResults",
          },
          "server": [],
          "summary": "Get search results.",
          "tags": [
            "Search",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            409,
            500,
          ],
          "generatedRequestName": "SchemasPostFieldRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SchemaFields_PostField",
          "path": "/api/apps/{app}/schemas/{schema}/fields",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPostFieldRequest",
              "nameOverride": undefined,
              "schema": "AddFieldDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPostFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "postField",
          },
          "server": [],
          "summary": "Add a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            409,
            500,
          ],
          "generatedRequestName": "SchemasPostNestedFieldRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SchemaFields_PostNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The parent field id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPostNestedFieldRequest",
              "nameOverride": undefined,
              "schema": "AddFieldDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPostNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "postNestedField",
          },
          "server": [],
          "summary": "Add a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutSchemaUiFieldsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutSchemaUIFields",
          "path": "/api/apps/{app}/schemas/{schema}/fields/ui",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaUiFieldsRequest",
              "nameOverride": undefined,
              "schema": "ConfigureUIFieldsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema UI fields defined.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaUiFieldsResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putSchemaUIFields",
          },
          "server": [],
          "summary": "Configure UI fields.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutSchemaFieldOrderingRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutSchemaFieldOrdering",
          "path": "/api/apps/{app}/schemas/{schema}/fields/ordering",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaFieldOrderingRequest",
              "nameOverride": undefined,
              "schema": "ReorderFieldsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema fields reordered.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaFieldOrderingResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putSchemaFieldOrdering",
          },
          "server": [],
          "summary": "Reorder all fields.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutNestedFieldOrderingRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutNestedFieldOrdering",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/ordering",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The parent field id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutNestedFieldOrderingRequest",
              "nameOverride": undefined,
              "schema": "ReorderFieldsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema fields reordered.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutNestedFieldOrderingResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putNestedFieldOrdering",
          },
          "server": [],
          "summary": "Reorder all nested fields.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to update.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutFieldRequest",
              "nameOverride": undefined,
              "schema": "UpdateFieldDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putField",
          },
          "server": [],
          "summary": "Update a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasDeleteFieldRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "SchemaFields_DeleteField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to disable.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasDeleteFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "deleteField",
          },
          "server": [],
          "summary": "Delete a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The parent field id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to update.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutNestedFieldRequest",
              "nameOverride": undefined,
              "schema": "UpdateFieldDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putNestedField",
          },
          "server": [],
          "summary": "Update a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasDeleteNestedFieldRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "SchemaFields_DeleteNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The parent field id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to disable.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasDeleteNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "deleteNestedField",
          },
          "server": [],
          "summary": "Delete a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A locked field cannot be updated or deleted.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasLockFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_LockField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/lock",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to lock.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field shown.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasLockFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "lockField",
          },
          "server": [],
          "summary": "Lock a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A locked field cannot be edited or deleted.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasLockNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_LockNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/lock",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The parent field id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to lock.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field hidden.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasLockNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "lockNestedField",
          },
          "server": [],
          "summary": "Lock a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasHideFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_HideField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/hide",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to hide.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field hidden.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasHideFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "hideField",
          },
          "server": [],
          "summary": "Hide a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasHideNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_HideNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/hide",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The parent field id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to hide.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field hidden.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasHideNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "hideNestedField",
          },
          "server": [],
          "summary": "Hide a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasShowFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_ShowField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/show",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to show.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field shown.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasShowFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "showField",
          },
          "server": [],
          "summary": "Show a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasShowNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_ShowNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/show",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The parent field id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to show.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field shown.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasShowNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "showNestedField",
          },
          "server": [],
          "summary": "Show a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasEnableFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_EnableField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/enable",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to enable.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field enabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasEnableFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "enableField",
          },
          "server": [],
          "summary": "Enable a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasEnableNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_EnableNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/enable",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The parent field id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to enable.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field enabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasEnableNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "enableNestedField",
          },
          "server": [],
          "summary": "Enable a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasDisableFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_DisableField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/disable",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to disable.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field disabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasDisableFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "disableField",
          },
          "server": [],
          "summary": "Disable a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasDisableNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_DisableNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/disable",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The parent field id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the field to disable.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field disabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasDisableNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "disableNestedField",
          },
          "server": [],
          "summary": "Disable a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "SchemasGetSchemasRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Schemas_GetSchemas",
          "path": "/api/apps/{app}/schemas",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schemas returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasGetSchemasResponse",
              "nameOverride": undefined,
              "schema": "SchemasDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "getSchemas",
          },
          "server": [],
          "summary": "Get schemas.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            409,
            500,
          ],
          "generatedRequestName": "SchemasPostSchemaRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Schemas_PostSchema",
          "path": "/api/apps/{app}/schemas",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPostSchemaRequest",
              "nameOverride": undefined,
              "schema": "CreateSchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPostSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "postSchema",
          },
          "server": [],
          "summary": "Create a new schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "SchemasGetSchemaRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Schemas_GetSchema",
          "path": "/api/apps/{app}/schemas/{schema}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema to retrieve.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema found.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasGetSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "getSchema",
          },
          "server": [],
          "summary": "Get a schema by name.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutSchemaRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutSchema",
          "path": "/api/apps/{app}/schemas/{schema}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaRequest",
              "nameOverride": undefined,
              "schema": "UpdateSchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putSchema",
          },
          "server": [],
          "summary": "Update a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasDeleteSchemaRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Schemas_DeleteSchema",
          "path": "/api/apps/{app}/schemas/{schema}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema to delete.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "deleteSchema",
          },
          "server": [],
          "summary": "Delete a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutSchemaSyncRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutSchemaSync",
          "path": "/api/apps/{app}/schemas/{schema}/sync",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaSyncRequest",
              "nameOverride": undefined,
              "schema": "SynchronizeSchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaSyncResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putSchemaSync",
          },
          "server": [],
          "summary": "Synchronize a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutCategoryRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutCategory",
          "path": "/api/apps/{app}/schemas/{schema}/category",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutCategoryRequest",
              "nameOverride": undefined,
              "schema": "ChangeCategoryDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutCategoryResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putCategory",
          },
          "server": [],
          "summary": "Update a schema category.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutPreviewUrlsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutPreviewUrls",
          "path": "/api/apps/{app}/schemas/{schema}/preview-urls",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutPreviewUrlsRequest",
              "nameOverride": undefined,
              "schema": "ConfigurePreviewUrlsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutPreviewUrlsResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putPreviewUrls",
          },
          "server": [],
          "summary": "Update the preview urls.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutScriptsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutScripts",
          "path": "/api/apps/{app}/schemas/{schema}/scripts",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutScriptsRequest",
              "nameOverride": undefined,
              "schema": "SchemaScriptsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutScriptsResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putScripts",
          },
          "server": [],
          "summary": "Update the scripts.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPutRulesRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutRules",
          "path": "/api/apps/{app}/schemas/{schema}/rules",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutRulesRequest",
              "nameOverride": undefined,
              "schema": "ConfigureFieldRulesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutRulesResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putRules",
          },
          "server": [],
          "summary": "Update the rules.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasPublishSchemaRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PublishSchema",
          "path": "/api/apps/{app}/schemas/{schema}/publish",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema to publish.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema published.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPublishSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "publishSchema",
          },
          "server": [],
          "summary": "Publish a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SchemasUnpublishSchemaRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_UnpublishSchema",
          "path": "/api/apps/{app}/schemas/{schema}/unpublish",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema to unpublish.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema unpublished.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasUnpublishSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "unpublishSchema",
          },
          "server": [],
          "summary": "Unpublish a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "RulesGetActionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetActions",
          "path": "/api/rules/actions",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule actions returned.",
            "schema": {
              "description": undefined,
              "key": {
                "type": "string",
              },
              "type": "map",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RulesGetActionsResponseValue",
                "nameOverride": undefined,
                "schema": "RuleElementDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getActions",
          },
          "server": [],
          "summary": "Get supported rule actions.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "RulesGetRulesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetRules",
          "path": "/api/apps/{app}/rules",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rules returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesGetRulesResponse",
              "nameOverride": undefined,
              "schema": "RulesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getRules",
          },
          "server": [],
          "summary": "Get rules.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "RulesPostRuleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Rules_PostRule",
          "path": "/api/apps/{app}/rules",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesPostRuleRequest",
              "nameOverride": undefined,
              "schema": "CreateRuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesPostRuleResponse",
              "nameOverride": undefined,
              "schema": "RuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "postRule",
          },
          "server": [],
          "summary": "Create a new rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "RulesDeleteRuleRunRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Rules_DeleteRuleRun",
          "path": "/api/apps/{app}/rules/run",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteRuleRun",
          },
          "server": [],
          "summary": "Cancel the current run.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "RulesPutRuleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_PutRule",
          "path": "/api/apps/{app}/rules/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the rule to update.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesPutRuleRequest",
              "nameOverride": undefined,
              "schema": "UpdateRuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesPutRuleResponse",
              "nameOverride": undefined,
              "schema": "RuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "putRule",
          },
          "server": [],
          "summary": "Update a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "RulesDeleteRuleRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Rules_DeleteRule",
          "path": "/api/apps/{app}/rules/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the rule to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteRule",
          },
          "server": [],
          "summary": "Delete a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "RulesEnableRuleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_EnableRule",
          "path": "/api/apps/{app}/rules/{id}/enable",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the rule to enable.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule enabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesEnableRuleResponse",
              "nameOverride": undefined,
              "schema": "RuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "enableRule",
          },
          "server": [],
          "summary": "Enable a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "RulesDisableRuleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_DisableRule",
          "path": "/api/apps/{app}/rules/{id}/disable",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the rule to disable.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule disabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesDisableRuleResponse",
              "nameOverride": undefined,
              "schema": "RuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "disableRule",
          },
          "server": [],
          "summary": "Disable a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "RulesTriggerRuleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_TriggerRule",
          "path": "/api/apps/{app}/rules/{id}/trigger",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the rule to disable.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "triggerRule",
          },
          "server": [],
          "summary": "Trigger a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "RulesPutRuleRunRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_PutRuleRun",
          "path": "/api/apps/{app}/rules/{id}/run",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the rule to run.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Runs the rule from snapeshots if possible.",
              "name": "fromSnapshots",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "putRuleRun",
          },
          "server": [],
          "summary": "Run a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "RulesDeleteRuleEventsRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Rules_DeleteRuleEvents",
          "path": "/api/apps/{app}/rules/{id}/events",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the rule to cancel.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteRuleEvents",
          },
          "server": [],
          "summary": "Cancels all rule events.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "RulesSimulatePostRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Rules_SimulatePOST",
          "path": "/api/apps/{app}/rules/simulate",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesSimulatePostRequest",
              "nameOverride": undefined,
              "schema": "CreateRuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule simulated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesSimulatePostResponse",
              "nameOverride": undefined,
              "schema": "SimulatedRuleEventsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "simulatePOST",
          },
          "server": [],
          "summary": "Simulate a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "RulesSimulateGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_SimulateGET",
          "path": "/api/apps/{app}/rules/{id}/simulate",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the rule to simulate.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule simulated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesSimulateGetResponse",
              "nameOverride": undefined,
              "schema": "SimulatedRuleEventsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "simulateGET",
          },
          "server": [],
          "summary": "Simulate a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "RulesGetEventsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetEvents",
          "path": "/api/apps/{app}/rules/events",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [
            {
              "description": "The optional rule id to filter to events.",
              "name": "ruleId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The number of events to skip.",
              "name": "skip",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The number of events to take.",
              "name": "take",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule events returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesGetEventsResponse",
              "nameOverride": undefined,
              "schema": "RuleEventsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getEvents",
          },
          "server": [],
          "summary": "Get rule events.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "RulesDeleteEventsRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Rules_DeleteEvents",
          "path": "/api/apps/{app}/rules/events",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteEvents",
          },
          "server": [],
          "summary": "Cancels all events.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "RulesPutEventRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_PutEvent",
          "path": "/api/apps/{app}/rules/events/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The event to enqueue.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "putEvent",
          },
          "server": [],
          "summary": "Retry the event immediately.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "RulesDeleteEventRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Rules_DeleteEvent",
          "path": "/api/apps/{app}/rules/events/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The event to enqueue.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteEvent",
          },
          "server": [],
          "summary": "Cancels an event.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "RulesGetEventTypesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetEventTypes",
          "path": "/api/rules/eventtypes",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule events returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getEventTypes",
          },
          "server": [],
          "summary": "Provide a list of all event types that are used in rules.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "RulesGetEventSchemaRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetEventSchema",
          "path": "/api/rules/eventtypes/{type}",
          "pathParameters": [
            {
              "description": "The type name of the event.",
              "name": "type",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule event type found.",
            "schema": {
              "type": "unknown",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getEventSchema",
          },
          "server": [],
          "summary": "Provide the json schema for the event with the specified name.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "PlansGetPlansRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppPlans_GetPlans",
          "path": "/api/apps/{app}/plans",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "App plan information returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PlansGetPlansResponse",
              "nameOverride": undefined,
              "schema": "PlansDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "plans",
            "methodName": "getPlans",
          },
          "server": [],
          "summary": "Get app plan information.",
          "tags": [
            "Plans",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "PlansPutPlanRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppPlans_PutPlan",
          "path": "/api/apps/{app}/plan",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PlansPutPlanRequest",
              "nameOverride": undefined,
              "schema": "ChangePlanDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Plan changed or redirect url returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PlansPutPlanResponse",
              "nameOverride": undefined,
              "schema": "PlanChangedDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "plans",
            "methodName": "putPlan",
          },
          "server": [],
          "summary": "Change the app plan.",
          "tags": [
            "Plans",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "PlansGetTeamPlansRequest",
          "headers": [],
          "method": "GET",
          "operationId": "TeamPlans_GetTeamPlans",
          "path": "/api/teams/{team}/plans",
          "pathParameters": [
            {
              "description": "The name of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Team plan information returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PlansGetTeamPlansResponse",
              "nameOverride": undefined,
              "schema": "PlansDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "plans",
            "methodName": "getTeamPlans",
          },
          "server": [],
          "summary": "Get team plan information.",
          "tags": [
            "Plans",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "PlansPutTeamPlanRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "TeamPlans_PutTeamPlan",
          "path": "/api/teams/{team}/plan",
          "pathParameters": [
            {
              "description": "The name of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PlansPutTeamPlanRequest",
              "nameOverride": undefined,
              "schema": "ChangePlanDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Plan changed or redirect url returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PlansPutTeamPlanResponse",
              "nameOverride": undefined,
              "schema": "PlanChangedDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "plans",
            "methodName": "putTeamPlan",
          },
          "server": [],
          "summary": "Change the team plan.",
          "tags": [
            "Plans",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "PingGetInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Ping_GetInfo",
          "path": "/api/info",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Infos returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PingGetInfoResponse",
              "nameOverride": undefined,
              "schema": "ExposedValues",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "ping",
            "methodName": "getInfo",
          },
          "server": [],
          "summary": "Get API information.",
          "tags": [
            "Ping",
          ],
        },
        {
          "authed": true,
          "description": "Can be used to test, if the Squidex API is alive and responding.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "PingGetPingRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Ping_GetPing",
          "path": "/api/ping",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "ping",
            "methodName": "getPing",
          },
          "server": [],
          "summary": "Get ping status of the API.",
          "tags": [
            "Ping",
          ],
        },
        {
          "authed": true,
          "description": "Can be used to test, if the Squidex API is alive and responding.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "PingGetAppPingRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Ping_GetAppPing",
          "path": "/api/ping/{app}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "ping",
            "methodName": "getAppPing",
          },
          "server": [],
          "summary": "Get ping status.",
          "tags": [
            "Ping",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "NewsGetNewsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "News_GetNews",
          "path": "/api/news/features",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The latest received version.",
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Latest features returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "NewsGetNewsResponse",
              "nameOverride": undefined,
              "schema": "FeaturesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "news",
            "methodName": "getNews",
          },
          "server": [],
          "summary": "Get features since version.",
          "tags": [
            "News",
          ],
        },
        {
          "authed": true,
          "description": "Provide a list of supported language codes, following the ISO2Code standard.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "LanguagesGetLanguagesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Languages_GetLanguages",
          "path": "/api/languages",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Supported language codes returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LanguagesGetLanguagesResponseItem",
                "nameOverride": undefined,
                "schema": "LanguageDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "languages",
            "methodName": "getLanguages",
          },
          "server": [],
          "summary": "Get supported languages.",
          "tags": [
            "Languages",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "HistoryGetAppHistoryRequest",
          "headers": [],
          "method": "GET",
          "operationId": "History_GetAppHistory",
          "path": "/api/apps/{app}/history",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [
            {
              "description": "The name of the channel.",
              "name": "channel",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Events returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HistoryGetAppHistoryResponseItem",
                "nameOverride": undefined,
                "schema": "HistoryEventDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "history",
            "methodName": "getAppHistory",
          },
          "server": [],
          "summary": "Get historical events.",
          "tags": [
            "History",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "HistoryGetTeamHistoryRequest",
          "headers": [],
          "method": "GET",
          "operationId": "History_GetTeamHistory",
          "path": "/api/teams/{team}/history",
          "pathParameters": [
            {
              "description": "The ID of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The name of the channel.",
              "name": "channel",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Events returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HistoryGetTeamHistoryResponseItem",
                "nameOverride": undefined,
                "schema": "HistoryEventDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "history",
            "methodName": "getTeamHistory",
          },
          "server": [],
          "summary": "Get historical events for a team.",
          "tags": [
            "History",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "EventConsumersGetEventConsumersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "EventConsumers_GetEventConsumers",
          "path": "/api/event-consumers",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Event consumers returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "EventConsumersGetEventConsumersResponse",
              "nameOverride": undefined,
              "schema": "EventConsumersDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "eventConsumers",
            "methodName": "getEventConsumers",
          },
          "server": [],
          "summary": "Get event consumers.",
          "tags": [
            "EventConsumers",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "EventConsumersStartEventConsumerRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "EventConsumers_StartEventConsumer",
          "path": "/api/event-consumers/{consumerName}/start",
          "pathParameters": [
            {
              "description": "The name of the event consumer.",
              "name": "consumerName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Event consumer started asynchronously.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "EventConsumersStartEventConsumerResponse",
              "nameOverride": undefined,
              "schema": "EventConsumerDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "eventConsumers",
            "methodName": "startEventConsumer",
          },
          "server": [],
          "summary": "Start an event consumer.",
          "tags": [
            "EventConsumers",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "EventConsumersStopEventConsumerRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "EventConsumers_StopEventConsumer",
          "path": "/api/event-consumers/{consumerName}/stop",
          "pathParameters": [
            {
              "description": "The name of the event consumer.",
              "name": "consumerName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Event consumer stopped asynchronously.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "EventConsumersStopEventConsumerResponse",
              "nameOverride": undefined,
              "schema": "EventConsumerDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "eventConsumers",
            "methodName": "stopEventConsumer",
          },
          "server": [],
          "summary": "Stop an event consumer.",
          "tags": [
            "EventConsumers",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "EventConsumersResetEventConsumerRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "EventConsumers_ResetEventConsumer",
          "path": "/api/event-consumers/{consumerName}/reset",
          "pathParameters": [
            {
              "description": "The name of the event consumer.",
              "name": "consumerName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Event consumer resetted asynchronously.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "EventConsumersResetEventConsumerResponse",
              "nameOverride": undefined,
              "schema": "EventConsumerDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "eventConsumers",
            "methodName": "resetEventConsumer",
          },
          "server": [],
          "summary": "Reset an event consumer.",
          "tags": [
            "EventConsumers",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
            501,
          ],
          "generatedRequestName": "DiagnosticsGetDumpRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Diagnostics_GetDump",
          "path": "/api/diagnostics/dump",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "diagnostics",
            "methodName": "getDump",
          },
          "server": [],
          "summary": "Creates a dump and writes it into storage..",
          "tags": [
            "Diagnostics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
            501,
          ],
          "generatedRequestName": "DiagnosticsGetGcDumpRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Diagnostics_GetGCDump",
          "path": "/api/diagnostics/gcdump",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "diagnostics",
            "methodName": "getGCDump",
          },
          "server": [],
          "summary": "Creates a gc dump and writes it into storage.",
          "tags": [
            "Diagnostics",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "ContentsGetContentsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetContents",
          "path": "/api/content/{app}/{schema}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The optional ids of the content to fetch.",
              "name": "ids",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The optional json query.",
              "name": "q",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contents returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetContentsResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContents",
          },
          "server": [],
          "summary": "Queries contents.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsPostContentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_PostContent",
          "path": "/api/content/{app}/{schema}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The initial status.",
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The optional custom content id.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to automatically publish the content.",
              "name": "publish",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostContentRequestBody",
              "nameOverride": undefined,
              "schema": "ContentData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostContentResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "postContent",
          },
          "server": [],
          "summary": "Create a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsGetContentsPostRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_GetContentsPost",
          "path": "/api/content/{app}/{schema}/query",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetContentsPostRequest",
              "nameOverride": undefined,
              "schema": "QueryDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Contents returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetContentsPostResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContentsPost",
          },
          "server": [],
          "summary": "Queries contents.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "ContentsGetContentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content to fetch.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The optional version.",
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetContentResponse",
              "nameOverride": undefined,
              "schema": "ContentDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContent",
          },
          "server": [],
          "summary": "Get a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsPostUpsertContentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_PostUpsertContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content item to update.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The initial status.",
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Makes the update as patch.",
              "name": "patch",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to automatically publish the content.",
              "name": "publish",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostUpsertContentRequestBody",
              "nameOverride": undefined,
              "schema": "ContentData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content created or updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostUpsertContentResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "postUpsertContent",
          },
          "server": [],
          "summary": "Upsert a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsPutContentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Contents_PutContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content item to update.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPutContentRequest",
              "nameOverride": undefined,
              "schema": "ContentData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPutContentResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "putContent",
          },
          "server": [],
          "summary": "Update a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsPatchContentRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Contents_PatchContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content item to patch.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPatchContentRequest",
              "nameOverride": undefined,
              "schema": "ContentData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content patched.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPatchContentResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "patchContent",
          },
          "server": [],
          "summary": "Patchs a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can create an generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsDeleteContentRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Contents_DeleteContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content item to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "True to check referrers of this content.",
              "name": "checkReferrers",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to delete the content permanently.",
              "name": "permanent",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "deleteContent",
          },
          "server": [],
          "summary": "Delete a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsGetContentValidityRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetContentValidity",
          "path": "/api/content/{app}/{schema}/{id}/validity",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content to fetch.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContentValidity",
          },
          "server": [],
          "summary": "Get a content item validity.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "ContentsGetReferencesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetReferences",
          "path": "/api/content/{app}/{schema}/{id}/references",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content to fetch.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The optional json query.",
              "name": "q",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contents returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetReferencesResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getReferences",
          },
          "server": [],
          "summary": "Get all references of a content.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "ContentsGetReferencingRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetReferencing",
          "path": "/api/content/{app}/{schema}/{id}/referencing",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content to fetch.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The optional json query.",
              "name": "q",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetReferencingResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getReferencing",
          },
          "server": [],
          "summary": "Get a referencing contents of a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [],
          "generatedRequestName": "ContentsGetContentVersionRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetContentVersion",
          "path": "/api/content/{app}/{schema}/{id}/{version}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content to fetch.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The version fo the content to fetch.",
              "name": "version",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content version returned.",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContentVersion",
          },
          "server": [],
          "summary": "Get a content by version.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsPostContentsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_PostContents",
          "path": "/api/content/{app}/{schema}/import",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostContentsRequest",
              "nameOverride": undefined,
              "schema": "ImportContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Contents created.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ContentsPostContentsResponseItem",
                "nameOverride": undefined,
                "schema": "BulkResultDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "postContents",
          },
          "server": [],
          "summary": "Import content items.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsBulkUpdateContentsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_BulkUpdateContents",
          "path": "/api/content/{app}/{schema}/bulk",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsBulkUpdateContentsRequest",
              "nameOverride": undefined,
              "schema": "BulkUpdateContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ContentsBulkUpdateContentsResponseItem",
                "nameOverride": undefined,
                "schema": "BulkResultDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "bulkUpdateContents",
          },
          "server": [],
          "summary": "Bulk update content items.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsPutContentStatusRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Contents_PutContentStatus",
          "path": "/api/content/{app}/{schema}/{id}/status",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content item to change.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPutContentStatusRequest",
              "nameOverride": undefined,
              "schema": "ChangeStatusDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content status changed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPutContentStatusResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "putContentStatus",
          },
          "server": [],
          "summary": "Change status of a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsDeleteContentStatusRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Contents_DeleteContentStatus",
          "path": "/api/content/{app}/{schema}/{id}/status",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content item to cancel.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content status change cancelled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsDeleteContentStatusResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "deleteContentStatus",
          },
          "server": [],
          "summary": "Cancel status change of a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsCreateDraftRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_CreateDraft",
          "path": "/api/content/{app}/{schema}/{id}/draft",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content item to create the draft for.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content draft created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsCreateDraftResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "createDraft",
          },
          "server": [],
          "summary": "Create a new draft version.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "ContentsDeleteVersionRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Contents_DeleteVersion",
          "path": "/api/content/{app}/{schema}/{id}/draft",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the schema.",
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the content item to delete the draft from.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content draft deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsDeleteVersionResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "deleteVersion",
          },
          "server": [],
          "summary": "Delete the draft version.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "CommentsGetWatchingUsersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Comments_GetWatchingUsers",
          "path": "/api/apps/{app}/watching/{resource}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The path to the resource.",
              "name": "resource",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Watching users returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "getWatchingUsers",
          },
          "server": [],
          "summary": "Get all watching users..",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": "When passing in a version you can retrieve all updates since then.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "CommentsGetCommentsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Comments_GetComments",
          "path": "/api/apps/{app}/comments/{commentsId}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the comments.",
              "name": "commentsId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The current version.",
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Comments returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CommentsGetCommentsResponse",
              "nameOverride": undefined,
              "schema": "CommentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "getComments",
          },
          "server": [],
          "summary": "Get all comments.",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "CommentsPostCommentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Comments_PostComment",
          "path": "/api/apps/{app}/comments/{commentsId}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the comments.",
              "name": "commentsId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CommentsPostCommentRequest",
              "nameOverride": undefined,
              "schema": "UpsertCommentDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Comment created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CommentsPostCommentResponse",
              "nameOverride": undefined,
              "schema": "CommentDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "postComment",
          },
          "server": [],
          "summary": "Create a new comment.",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "CommentsPutCommentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Comments_PutComment",
          "path": "/api/apps/{app}/comments/{commentsId}/{commentId}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the comments.",
              "name": "commentsId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the comment.",
              "name": "commentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CommentsPutCommentRequest",
              "nameOverride": undefined,
              "schema": "UpsertCommentDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "putComment",
          },
          "server": [],
          "summary": "Update a comment.",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "CommentsDeleteCommentRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Comments_DeleteComment",
          "path": "/api/apps/{app}/comments/{commentsId}/{commentId}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the comments.",
              "name": "commentsId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the comment.",
              "name": "commentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "deleteComment",
          },
          "server": [],
          "summary": "Delete a comment.",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": "When passing in a version you can retrieve all updates since then.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "NotificationsGetNotificationsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "UserNotifications_GetNotifications",
          "path": "/api/users/{userId}/notifications",
          "pathParameters": [
            {
              "description": "The user id.",
              "name": "userId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The current version.",
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "All comments returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "NotificationsGetNotificationsResponse",
              "nameOverride": undefined,
              "schema": "CommentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "notifications",
            "methodName": "getNotifications",
          },
          "server": [],
          "summary": "Get all notifications.",
          "tags": [
            "Notifications",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "NotificationsDeleteCommentRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "UserNotifications_DeleteComment",
          "path": "/api/users/{userId}/notifications/{commentId}",
          "pathParameters": [
            {
              "description": "The user id.",
              "name": "userId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "The ID of the comment.",
              "name": "commentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "notifications",
            "methodName": "deleteComment",
          },
          "server": [],
          "summary": "Delete a notification.",
          "tags": [
            "Notifications",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "BackupsGetBackupContentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "BackupContent_GetBackupContent",
          "path": "/api/apps/{app}/backups/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the backup.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Backup found and content returned.",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "getBackupContent",
          },
          "server": [],
          "summary": "Get the backup content.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "BackupsDeleteBackupRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Backups_DeleteBackup",
          "path": "/api/apps/{app}/backups/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the backup to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "deleteBackup",
          },
          "server": [],
          "summary": "Delete a backup.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "BackupsGetBackupContentV2Request",
          "headers": [],
          "method": "GET",
          "operationId": "BackupContent_GetBackupContentV2",
          "path": "/api/apps/backups/{id}",
          "pathParameters": [
            {
              "description": "The ID of the backup.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The ID of the app.",
              "name": "appId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Backup found and content returned.",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "getBackupContentV2",
          },
          "server": [],
          "summary": "Get the backup content.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "BackupsGetBackupsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Backups_GetBackups",
          "path": "/api/apps/{app}/backups",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Backups returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "BackupsGetBackupsResponse",
              "nameOverride": undefined,
              "schema": "BackupJobsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "getBackups",
          },
          "server": [],
          "summary": "Get all backup jobs.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "BackupsPostBackupRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Backups_PostBackup",
          "path": "/api/apps/{app}/backups",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "postBackup",
          },
          "server": [],
          "summary": "Start a new backup.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "BackupsGetRestoreJobRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Restore_GetRestoreJob",
          "path": "/api/apps/restore",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Status returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "BackupsGetRestoreJobResponse",
              "nameOverride": undefined,
              "schema": "RestoreJobDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "getRestoreJob",
          },
          "server": [],
          "summary": "Get current restore status.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "BackupsPostRestoreJobRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Restore_PostRestoreJob",
          "path": "/api/apps/restore",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "BackupsPostRestoreJobRequest",
              "nameOverride": undefined,
              "schema": "RestoreRequestDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "postRestoreJob",
          },
          "server": [],
          "summary": "Restore a backup.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "AssetsGetAssetContentBySlugRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AssetContent_GetAssetContentBySlug",
          "path": "/api/assets/{app}/{idOrSlug}/{more}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The id or slug of the asset.",
              "name": "idOrSlug",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Optional suffix that can be used to seo-optimize the link to the image Has not effect.",
              "name": "more",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The optional version of the asset.",
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The cache duration in seconds.",
              "name": "cache",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Set it to 0 to prevent download.",
              "name": "download",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The target width of the asset, if it is an image.",
              "name": "width",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The target height of the asset, if it is an image.",
              "name": "height",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Optional image quality, it is is an jpeg image.",
              "name": "quality",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The resize mode when the width and height is defined.",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsGetAssetContentBySlugRequestMode",
                  "nameOverride": undefined,
                  "schema": "ResizeMode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Optional background color.",
              "name": "bg",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Override the y focus point.",
              "name": "focusX",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Override the x focus point.",
              "name": "focusY",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to ignore the asset focus point if any.",
              "name": "nofocus",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to use auto format.",
              "name": "auto",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to force a new resize even if it already stored.",
              "name": "force",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to force a new resize even if it already stored.",
              "name": "format",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsGetAssetContentBySlugRequestFormat",
                  "nameOverride": undefined,
                  "schema": "ImageFormat",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset found and content or (resized) image returned.",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssetContentBySlug",
          },
          "server": [],
          "summary": "Get the asset content.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "AssetsGetAssetContentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AssetContent_GetAssetContent",
          "path": "/api/assets/{id}",
          "pathParameters": [
            {
              "description": "The ID of the asset.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The optional version of the asset.",
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The cache duration in seconds.",
              "name": "cache",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Set it to 0 to prevent download.",
              "name": "download",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The target width of the asset, if it is an image.",
              "name": "width",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The target height of the asset, if it is an image.",
              "name": "height",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Optional image quality, it is is an jpeg image.",
              "name": "quality",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The resize mode when the width and height is defined.",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsGetAssetContentRequestMode",
                  "nameOverride": undefined,
                  "schema": "ResizeMode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Optional background color.",
              "name": "bg",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Override the y focus point.",
              "name": "focusX",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Override the x focus point.",
              "name": "focusY",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to ignore the asset focus point if any.",
              "name": "nofocus",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to use auto format.",
              "name": "auto",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to force a new resize even if it already stored.",
              "name": "force",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to force a new resize even if it already stored.",
              "name": "format",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsGetAssetContentRequestFormat",
                  "nameOverride": undefined,
                  "schema": "ImageFormat",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset found and content or (resized) image returned.",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssetContent",
          },
          "server": [],
          "summary": "Get the asset content.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Get all asset folders for the app.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AssetsGetAssetFoldersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AssetFolders_GetAssetFolders",
          "path": "/api/apps/{app}/assets/folders",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [
            {
              "description": "The optional parent folder id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The scope of the query.",
              "name": "scope",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsGetAssetFoldersRequestScope",
                  "nameOverride": undefined,
                  "schema": "AssetFolderScope",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset folders returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsGetAssetFoldersResponse",
              "nameOverride": undefined,
              "schema": "AssetFoldersDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssetFolders",
          },
          "server": [],
          "summary": "Get asset folders.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsPostAssetFolderRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AssetFolders_PostAssetFolder",
          "path": "/api/apps/{app}/assets/folders",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPostAssetFolderRequest",
              "nameOverride": undefined,
              "schema": "CreateAssetFolderDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset folder created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPostAssetFolderResponse",
              "nameOverride": undefined,
              "schema": "AssetFolderDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "postAssetFolder",
          },
          "server": [],
          "summary": "Create an asset folder.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsPutAssetFolderRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AssetFolders_PutAssetFolder",
          "path": "/api/apps/{app}/assets/folders/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the asset folder.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetFolderRequest",
              "nameOverride": undefined,
              "schema": "RenameAssetFolderDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset folder updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetFolderResponse",
              "nameOverride": undefined,
              "schema": "AssetFolderDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAssetFolder",
          },
          "server": [],
          "summary": "Update an asset folder.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsDeleteAssetFolderRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "AssetFolders_DeleteAssetFolder",
          "path": "/api/apps/{app}/assets/folders/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the asset folder to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "deleteAssetFolder",
          },
          "server": [],
          "summary": "Delete an asset folder.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsPutAssetFolderParentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AssetFolders_PutAssetFolderParent",
          "path": "/api/apps/{app}/assets/folders/{id}/parent",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the asset folder.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetFolderParentRequest",
              "nameOverride": undefined,
              "schema": "MoveAssetFolderDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset folder moved.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetFolderParentResponse",
              "nameOverride": undefined,
              "schema": "AssetFolderDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAssetFolderParent",
          },
          "server": [],
          "summary": "Move an asset folder.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Get all tags for assets.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AssetsGetTagsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Assets_GetTags",
          "path": "/api/apps/{app}/assets/tags",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Assets tags returned.",
            "schema": {
              "description": undefined,
              "key": {
                "type": "string",
              },
              "type": "map",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getTags",
          },
          "server": [],
          "summary": "Get assets tags.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsPutTagRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Assets_PutTag",
          "path": "/api/apps/{app}/assets/tags/{name}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The tag to return.",
              "name": "name",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutTagRequest",
              "nameOverride": undefined,
              "schema": "RenameTagDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset tag renamed and new tags returned.",
            "schema": {
              "description": undefined,
              "key": {
                "type": "string",
              },
              "type": "map",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putTag",
          },
          "server": [],
          "summary": "Rename an asset tag.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Get all assets for the app.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AssetsGetAssetsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Assets_GetAssets",
          "path": "/api/apps/{app}/assets",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [
            {
              "description": "The optional parent folder id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The optional asset ids.",
              "name": "ids",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The optional json query.",
              "name": "q",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Optional number of items to take.",
              "name": "$top",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Optional number of items to skip.",
              "name": "$skip",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Optional OData order definition.",
              "name": "$orderby",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Optional OData filter.",
              "name": "$filter",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Assets returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsGetAssetsResponse",
              "nameOverride": undefined,
              "schema": "AssetsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssets",
          },
          "server": [],
          "summary": "Get assets.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
          "errorStatusCode": [
            400,
            404,
            413,
            500,
          ],
          "generatedRequestName": "AssetsPostAssetRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Assets_PostAsset",
          "path": "/api/apps/{app}/assets",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [
            {
              "description": "The optional parent folder id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The optional custom asset id.",
              "name": "id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to duplicate the asset, event if the file has been uploaded.",
              "name": "duplicate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPostAssetResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "postAsset",
          },
          "server": [],
          "summary": "Upload a new asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Get all assets for the app.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsGetAssetsPostRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Assets_GetAssetsPost",
          "path": "/api/apps/{app}/assets/query",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsGetAssetsPostRequest",
              "nameOverride": undefined,
              "schema": "QueryDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Assets returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsGetAssetsPostResponse",
              "nameOverride": undefined,
              "schema": "AssetsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssetsPost",
          },
          "server": [],
          "summary": "Get assets.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AssetsGetAssetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Assets_GetAsset",
          "path": "/api/apps/{app}/assets/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the asset to retrieve.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset found.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsGetAssetResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAsset",
          },
          "server": [],
          "summary": "Get an asset by id.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
          "errorStatusCode": [
            400,
            404,
            413,
            500,
          ],
          "generatedRequestName": "AssetsPostUpsertAssetRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Assets_PostUpsertAsset",
          "path": "/api/apps/{app}/assets/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The optional custom asset id.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The optional parent folder id.",
              "name": "parentId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to duplicate the asset, event if the file has been uploaded.",
              "name": "duplicate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset created or updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPostUpsertAssetResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "postUpsertAsset",
          },
          "server": [],
          "summary": "Upsert an asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsPutAssetRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Assets_PutAsset",
          "path": "/api/apps/{app}/assets/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the asset.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetRequest",
              "nameOverride": undefined,
              "schema": "AnnotateAssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAsset",
          },
          "server": [],
          "summary": "Update an asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsDeleteAssetRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Assets_DeleteAsset",
          "path": "/api/apps/{app}/assets/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the asset to delete.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "True to check referrers of this asset.",
              "name": "checkReferrers",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "True to delete the asset permanently.",
              "name": "permanent",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "deleteAsset",
          },
          "server": [],
          "summary": "Delete an asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsBulkUpdateAssetsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Assets_BulkUpdateAssets",
          "path": "/api/apps/{app}/assets/bulk",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsBulkUpdateAssetsRequest",
              "nameOverride": undefined,
              "schema": "BulkUpdateAssetsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Assets created, update or delete.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AssetsBulkUpdateAssetsResponseItem",
                "nameOverride": undefined,
                "schema": "BulkResultDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "bulkUpdateAssets",
          },
          "server": [],
          "summary": "Bulk update assets.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Use multipart request to upload an asset.",
          "errorStatusCode": [
            400,
            404,
            413,
            500,
          ],
          "generatedRequestName": "AssetsPutAssetContentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Assets_PutAssetContent",
          "path": "/api/apps/{app}/assets/{id}/content",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the asset.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetContentResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAssetContent",
          },
          "server": [],
          "summary": "Replace asset content.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AssetsPutAssetParentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Assets_PutAssetParent",
          "path": "/api/apps/{app}/assets/{id}/parent",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the asset.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetParentRequest",
              "nameOverride": undefined,
              "schema": "MoveAssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset moved.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetParentResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAssetParent",
          },
          "server": [],
          "summary": "Moves the asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AppsGetAssetScriptsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppAssets_GetAssetScripts",
          "path": "/api/apps/{app}/assets/scripts",
          "pathParameters": [
            {
              "description": "The name of the app to get the asset scripts for.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset scripts returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsGetAssetScriptsResponse",
              "nameOverride": undefined,
              "schema": "AssetScriptsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getAssetScripts",
          },
          "server": [],
          "summary": "Get the app asset scripts.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPutAssetScriptsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppAssets_PutAssetScripts",
          "path": "/api/apps/{app}/assets/scripts",
          "pathParameters": [
            {
              "description": "The name of the app to update.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAssetScriptsRequest",
              "nameOverride": undefined,
              "schema": "UpdateAssetScriptsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset scripts updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAssetScriptsResponse",
              "nameOverride": undefined,
              "schema": "AssetScriptsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putAssetScripts",
          },
          "server": [],
          "summary": "Update the app asset scripts.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "Gets all configured clients for the app with the specified name.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AppsGetClientsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppClients_GetClients",
          "path": "/api/apps/{app}/clients",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Clients returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsGetClientsResponse",
              "nameOverride": undefined,
              "schema": "ClientsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getClients",
          },
          "server": [],
          "summary": "Get app clients.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "Create a new client for the app with the specified name.
The client secret is auto generated on the server and returned. The client does not expire, the access token is valid for 30 days.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPostClientRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppClients_PostClient",
          "path": "/api/apps/{app}/clients",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostClientRequest",
              "nameOverride": undefined,
              "schema": "CreateClientDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Client created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostClientResponse",
              "nameOverride": undefined,
              "schema": "ClientsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postClient",
          },
          "server": [],
          "summary": "Create a new app client.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "Only the display name can be changed, create a new client if necessary.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPutClientRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppClients_PutClient",
          "path": "/api/apps/{app}/clients/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the client that must be updated.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutClientRequest",
              "nameOverride": undefined,
              "schema": "UpdateClientDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Client updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutClientResponse",
              "nameOverride": undefined,
              "schema": "ClientsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putClient",
          },
          "server": [],
          "summary": "Updates an app client.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "The application that uses this client credentials cannot access the API after it has been revoked.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsDeleteClientRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "AppClients_DeleteClient",
          "path": "/api/apps/{app}/clients/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the client that must be deleted.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Client deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsDeleteClientResponse",
              "nameOverride": undefined,
              "schema": "ClientsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteClient",
          },
          "server": [],
          "summary": "Revoke an app client.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AppsGetContributorsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppContributors_GetContributors",
          "path": "/api/apps/{app}/contributors",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributors returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsGetContributorsResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getContributors",
          },
          "server": [],
          "summary": "Get app contributors.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPostContributorRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppContributors_PostContributor",
          "path": "/api/apps/{app}/contributors",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostContributorRequest",
              "nameOverride": undefined,
              "schema": "AssignContributorDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor assigned to app.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostContributorResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postContributor",
          },
          "server": [],
          "summary": "Assign contributor to app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsDeleteMyselfRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "AppContributors_DeleteMyself",
          "path": "/api/apps/{app}/contributors/me",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsDeleteMyselfResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteMyself",
          },
          "server": [],
          "summary": "Remove yourself.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsDeleteContributorRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "AppContributors_DeleteContributor",
          "path": "/api/apps/{app}/contributors/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the contributor.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsDeleteContributorResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteContributor",
          },
          "server": [],
          "summary": "Remove contributor.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [],
          "generatedRequestName": "AppsGetImageRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppImage_GetImage",
          "path": "/api/apps/{app}/image",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "App image found and content or (resized) image returned.",
            "type": "file",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getImage",
          },
          "server": [],
          "summary": "Get the app image.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsUploadImageRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Apps_UploadImage",
          "path": "/api/apps/{app}/image",
          "pathParameters": [
            {
              "description": "The name of the app to update.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App image uploaded.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsUploadImageResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "uploadImage",
          },
          "server": [],
          "summary": "Upload the app image.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsDeleteImageRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Apps_DeleteImage",
          "path": "/api/apps/{app}/image",
          "pathParameters": [
            {
              "description": "The name of the app to update.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "App image removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsDeleteImageResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteImage",
          },
          "server": [],
          "summary": "Remove the app image.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AppsGetLanguagesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppLanguages_GetLanguages",
          "path": "/api/apps/{app}/languages",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Languages returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsGetLanguagesResponse",
              "nameOverride": undefined,
              "schema": "AppLanguagesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getLanguages",
          },
          "server": [],
          "summary": "Get app languages.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPostLanguageRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppLanguages_PostLanguage",
          "path": "/api/apps/{app}/languages",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostLanguageRequest",
              "nameOverride": undefined,
              "schema": "AddLanguageDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Language created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostLanguageResponse",
              "nameOverride": undefined,
              "schema": "AppLanguagesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postLanguage",
          },
          "server": [],
          "summary": "Attaches an app language.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPutLanguageRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppLanguages_PutLanguage",
          "path": "/api/apps/{app}/languages/{language}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The language to update.",
              "name": "language",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutLanguageRequest",
              "nameOverride": undefined,
              "schema": "UpdateLanguageDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Language updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutLanguageResponse",
              "nameOverride": undefined,
              "schema": "AppLanguagesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putLanguage",
          },
          "server": [],
          "summary": "Updates an app language.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsDeleteLanguageRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "AppLanguages_DeleteLanguage",
          "path": "/api/apps/{app}/languages/{language}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The language to delete from the app.",
              "name": "language",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Language deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsDeleteLanguageResponse",
              "nameOverride": undefined,
              "schema": "AppLanguagesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteLanguage",
          },
          "server": [],
          "summary": "Deletes an app language.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AppsGetRolesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppRoles_GetRoles",
          "path": "/api/apps/{app}/roles",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Roles returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsGetRolesResponse",
              "nameOverride": undefined,
              "schema": "RolesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getRoles",
          },
          "server": [],
          "summary": "Get app roles.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPostRoleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppRoles_PostRole",
          "path": "/api/apps/{app}/roles",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostRoleRequest",
              "nameOverride": undefined,
              "schema": "AddRoleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Role created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostRoleResponse",
              "nameOverride": undefined,
              "schema": "RolesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postRole",
          },
          "server": [],
          "summary": "Add role to app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AppsGetPermissionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppRoles_GetPermissions",
          "path": "/api/apps/{app}/roles/permissions",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "App permissions returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getPermissions",
          },
          "server": [],
          "summary": "Get app permissions.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPutRoleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppRoles_PutRole",
          "path": "/api/apps/{app}/roles/{roleName}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the role to be updated.",
              "name": "roleName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutRoleRequest",
              "nameOverride": undefined,
              "schema": "UpdateRoleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Role updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutRoleResponse",
              "nameOverride": undefined,
              "schema": "RolesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putRole",
          },
          "server": [],
          "summary": "Update an app role.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsDeleteRoleRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "AppRoles_DeleteRole",
          "path": "/api/apps/{app}/roles/{roleName}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The name of the role.",
              "name": "roleName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Role deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsDeleteRoleResponse",
              "nameOverride": undefined,
              "schema": "RolesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteRole",
          },
          "server": [],
          "summary": "Remove role from app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).
You will retrieve all apps, where you are assigned as a contributor.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "AppsGetAppsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Apps_GetApps",
          "path": "/api/apps",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Apps returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AppsGetAppsResponseItem",
                "nameOverride": undefined,
                "schema": "AppDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getApps",
          },
          "server": [],
          "summary": "Get your apps.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "You can only create an app when you are authenticated as a user (OpenID implicit flow).
You will be assigned as owner of the new app automatically.",
          "errorStatusCode": [
            400,
            409,
            500,
          ],
          "generatedRequestName": "AppsPostAppRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Apps_PostApp",
          "path": "/api/apps",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostAppRequest",
              "nameOverride": undefined,
              "schema": "CreateAppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostAppResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postApp",
          },
          "server": [],
          "summary": "Create a new app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).
You will retrieve all apps, where you are assigned as a contributor.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "AppsGetTeamAppsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Apps_GetTeamApps",
          "path": "/api/teams/{team}/apps",
          "pathParameters": [
            {
              "description": "The ID of the team.",
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Apps returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AppsGetTeamAppsResponseItem",
                "nameOverride": undefined,
                "schema": "AppDto",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getTeamApps",
          },
          "server": [],
          "summary": "Get team apps.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AppsGetAppRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Apps_GetApp",
          "path": "/api/apps/{app}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Apps returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsGetAppResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getApp",
          },
          "server": [],
          "summary": "Get an app by name.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPutAppRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Apps_PutApp",
          "path": "/api/apps/{app}",
          "pathParameters": [
            {
              "description": "The name of the app to update.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAppRequest",
              "nameOverride": undefined,
              "schema": "UpdateAppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAppResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putApp",
          },
          "server": [],
          "summary": "Update the app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsDeleteAppRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "Apps_DeleteApp",
          "path": "/api/apps/{app}",
          "pathParameters": [
            {
              "description": "The name of the app to delete.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteApp",
          },
          "server": [],
          "summary": "Delete the app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPutAppTeamRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Apps_PutAppTeam",
          "path": "/api/apps/{app}/team",
          "pathParameters": [
            {
              "description": "The name of the app to update.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAppTeamRequest",
              "nameOverride": undefined,
              "schema": "TransferToTeamDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App transferred.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAppTeamResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putAppTeam",
          },
          "server": [],
          "summary": "Transfer the app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AppsGetSettingsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppSettings_GetSettings",
          "path": "/api/apps/{app}/settings",
          "pathParameters": [
            {
              "description": "The name of the app to get the settings for.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "App settings returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsGetSettingsResponse",
              "nameOverride": undefined,
              "schema": "AppSettingsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getSettings",
          },
          "server": [],
          "summary": "Get the app settings.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPutSettingsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppSettings_PutSettings",
          "path": "/api/apps/{app}/settings",
          "pathParameters": [
            {
              "description": "The name of the app to update.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutSettingsRequest",
              "nameOverride": undefined,
              "schema": "UpdateAppSettingsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutSettingsResponse",
              "nameOverride": undefined,
              "schema": "AppSettingsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putSettings",
          },
          "server": [],
          "summary": "Update the app settings.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "AppsGetWorkflowsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppWorkflows_GetWorkflows",
          "path": "/api/apps/{app}/workflows",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Workflows returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsGetWorkflowsResponse",
              "nameOverride": undefined,
              "schema": "WorkflowsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getWorkflows",
          },
          "server": [],
          "summary": "Get app workflow.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPostWorkflowRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppWorkflows_PostWorkflow",
          "path": "/api/apps/{app}/workflows",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostWorkflowRequest",
              "nameOverride": undefined,
              "schema": "AddWorkflowDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Workflow created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostWorkflowResponse",
              "nameOverride": undefined,
              "schema": "WorkflowsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postWorkflow",
          },
          "server": [],
          "summary": "Create a workflow.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsPutWorkflowRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppWorkflows_PutWorkflow",
          "path": "/api/apps/{app}/workflows/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the workflow to update.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutWorkflowRequest",
              "nameOverride": undefined,
              "schema": "UpdateWorkflowDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Workflow updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutWorkflowResponse",
              "nameOverride": undefined,
              "schema": "WorkflowsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putWorkflow",
          },
          "server": [],
          "summary": "Update a workflow.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "AppsDeleteWorkflowRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "AppWorkflows_DeleteWorkflow",
          "path": "/api/apps/{app}/workflows/{id}",
          "pathParameters": [
            {
              "description": "The name of the app.",
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": "appName",
            },
            {
              "description": "The ID of the workflow to update.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Workflow deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsDeleteWorkflowResponse",
              "nameOverride": undefined,
              "schema": "WorkflowsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteWorkflow",
          },
          "server": [],
          "summary": "Delete a workflow.",
          "tags": [
            "Apps",
          ],
        },
      ],
      "errors": {
        "400": {
          "description": undefined,
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "BadRequestErrorBody",
            "nameOverride": undefined,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "403": {
          "description": undefined,
          "generatedName": "ForbiddenError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "ForbiddenErrorBody",
            "nameOverride": undefined,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": undefined,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "type": "unknown",
          },
        },
        "409": {
          "description": undefined,
          "generatedName": "ConflictError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "ConflictErrorBody",
            "nameOverride": undefined,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "413": {
          "description": undefined,
          "generatedName": "ContentTooLargeError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "ContentTooLargeErrorBody",
            "nameOverride": undefined,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": undefined,
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "InternalServerErrorBody",
            "nameOverride": undefined,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "501": {
          "description": undefined,
          "generatedName": "NotImplementedError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "NotImplementedErrorBody",
            "nameOverride": undefined,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "nonRequestReferencedSchemas": [
        "UsersDto",
        "UserDto",
        "ResourcesDto",
        "TranslationDto",
        "TemplatesDto",
        "TemplateDetailsDto",
        "ContributorsDto",
        "TeamDto",
        "LogDownloadDto",
        "CallsUsageDtoDto",
        "CurrentStorageDto",
        "StorageUsagePerDateDto",
        "SearchResultDto",
        "SchemaDto",
        "SchemasDto",
        "RuleElementDto",
        "RulesDto",
        "RuleDto",
        "SimulatedRuleEventsDto",
        "RuleEventsDto",
        "PlansDto",
        "PlanChangedDto",
        "ExposedValues",
        "FeaturesDto",
        "LanguageDto",
        "HistoryEventDto",
        "EventConsumersDto",
        "EventConsumerDto",
        "ContentsDto",
        "ContentDto",
        "BulkResultDto",
        "CommentsDto",
        "CommentDto",
        "BackupJobsDto",
        "RestoreJobDto",
        "ResizeMode",
        "ImageFormat",
        "AssetFolderScope",
        "AssetFoldersDto",
        "AssetFolderDto",
        "AssetsDto",
        "AssetDto",
        "AssetScriptsDto",
        "ClientsDto",
        "AppDto",
        "AppLanguagesDto",
        "RolesDto",
        "AppSettingsDto",
        "WorkflowsDto",
        "ResourceLink",
        "StatusInfoDto",
        "ContentData",
        "ScheduleJobDto",
        "FieldDto",
        "ContentFieldData",
        "FieldPropertiesDto",
        "NestedFieldDto",
        "AssetPreviewMode",
        "LocalizedValueOfReadonlyListOfString",
        "AssetType",
        "LocalizedValueOfNullableBoolean",
        "BooleanFieldEditor",
        "LocalizedValueOfNullableInstant",
        "DateTimeFieldEditor",
        "DateTimeCalculatedDefaultValue",
        "GeolocationFieldEditor",
        "LocalizedValueOfNullableDouble",
        "NumberFieldEditor",
        "ReferencesFieldEditor",
        "LocalizedValueOfString",
        "StringContentType",
        "StringFieldEditor",
        "TagsFieldEditor",
        "UIFieldEditor",
        "ErrorDto",
        "BulkUpdateContentsJobDto",
        "QueryJsonDto",
        "BulkUpdateContentType",
        "SortNode",
        "PropertyPath",
        "SortOrder",
        "TranslationResultCode",
        "TemplateDto",
        "ContributorDto",
        "ContributorsMetadata",
        "CallsUsagePerDateDto",
        "SearchResultType",
        "SchemaType",
        "SchemaPropertiesDto",
        "SchemaScriptsDto",
        "FieldRuleDto",
        "FieldRuleAction",
        "UpsertSchemaFieldDto",
        "UpsertSchemaNestedFieldDto",
        "RuleElementPropertyDto",
        "RuleFieldEditor",
        "RuleTriggerDto",
        "RuleActionDto",
        "SchemaCondition",
        "ActionTypeEnum",
        "WebhookMethod",
        "SimulatedRuleEventDto",
        "SkipReason",
        "RuleEventDto",
        "RuleResult",
        "RuleJobResult",
        "PlanDto",
        "ReferralInfo",
        "PlansLockedReason",
        "FeatureDto",
        "BackupJobDto",
        "JobStatus",
        "AssetMeta",
        "BulkUpdateAssetsJobDto",
        "BulkUpdateAssetType",
        "ClientDto",
        "AppLanguageDto",
        "RoleDto",
        "PatternDto",
        "EditorDto",
        "WorkflowDto",
        "WorkflowStepDto",
        "WorkflowTransitionDto",
        "AddFieldDto",
        "ReorderFieldsDto",
        "UpdateFieldDto",
        "CreateRuleDto",
        "ChangePlanDto",
        "UpsertCommentDto",
        "QueryDto",
        "AssignContributorDto",
      ],
      "schemas": {
        "ActionTypeEnum": {
          "description": "",
          "generatedName": "ActionTypeEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Broadcast",
              "nameOverride": undefined,
              "value": "Broadcast",
            },
            {
              "generatedName": "User",
              "nameOverride": undefined,
              "value": "User",
            },
            {
              "generatedName": "Group",
              "nameOverride": undefined,
              "value": "Group",
            },
          ],
        },
        "AddFieldDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AddFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "partitioning",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Determines the optional partitioning of the field.",
                  "type": "nullable",
                  "value": {
                    "description": "Determines the optional partitioning of the field.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AddFieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "AddLanguageDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AddLanguageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "language",
              "schema": {
                "description": "The language to add.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AddRoleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AddRoleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The role name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AddWorkflowDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AddWorkflowDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the workflow.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AlgoliaRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AlgoliaRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "appId",
              "schema": {
                "description": "The application ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "apiKey",
              "schema": {
                "description": "The API key to grant access to Squidex.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "indexName",
              "schema": {
                "description": "The name of the index.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document",
              "schema": {
                "description": "The optional custom document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "delete",
              "schema": {
                "description": "The condition when to delete the entry.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AllContentsByPostDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AllContentsByPostDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "ids",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The list of ids to query.",
                  "type": "nullable",
                  "value": {
                    "description": "The list of ids to query.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "scheduledFrom",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The start of the schedule.",
                  "type": "nullable",
                  "value": {
                    "description": "The start of the schedule.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "scheduledTo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The end of the schedule.",
                  "type": "nullable",
                  "value": {
                    "description": "The end of the schedule.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "referencing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the referencing content item.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the referencing content item.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "references",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the reference content item.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the reference content item.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "oData",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional odata query.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional odata query.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "q",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "type": "unknown",
                },
              },
            },
          ],
          "type": "object",
        },
        "AnnotateAssetDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AnnotateAssetDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fileName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new name of the asset.",
                  "type": "nullable",
                  "value": {
                    "description": "The new name of the asset.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "slug",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new slug of the asset.",
                  "type": "nullable",
                  "value": {
                    "description": "The new slug of the asset.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isProtected",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True, when the asset is not public.",
                  "type": "nullable",
                  "value": {
                    "description": "True, when the asset is not public.",
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new asset tags.",
                  "type": "nullable",
                  "value": {
                    "description": "The new asset tags.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The asset metadata.",
                  "type": "nullable",
                  "value": {
                    "description": "The asset metadata.",
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AppDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AppDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the app.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the app.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional label of the app.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional label of the app.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional description of the app.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional description of the app.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version of the app.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": "The timestamp when the app has been created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModified",
              "schema": {
                "description": "The timestamp when the app has been modified last.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "teamId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the team.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the team.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "permissions",
              "schema": {
                "description": "The permission level of the user.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "canAccessApi",
              "schema": {
                "description": "Indicates if the user can access the api.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "canAccessContent",
              "schema": {
                "description": "Indicates if the user can access at least one content.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "roleName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The role name of the user.",
                  "type": "nullable",
                  "value": {
                    "description": "The role name of the user.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "roleProperties",
              "schema": {
                "description": "The properties from the role.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
          ],
          "type": "object",
        },
        "AppLanguageDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AppLanguageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "iso2Code",
              "schema": {
                "description": "The iso code of the language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "englishName",
              "schema": {
                "description": "The english name of the language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "fallback",
              "schema": {
                "description": "The fallback languages.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "isMaster",
              "schema": {
                "description": "Indicates if the language is the master language.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isOptional",
              "schema": {
                "description": "Indicates if the language is optional.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AppLanguagesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AppLanguagesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The languages.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AppLanguagesDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "AppLanguageDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AppSettingsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AppSettingsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "patterns",
              "schema": {
                "description": "The configured app patterns.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AppSettingsDtoPatternsItem",
                  "nameOverride": undefined,
                  "schema": "PatternDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "editors",
              "schema": {
                "description": "The configured UI editors.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AppSettingsDtoEditorsItem",
                  "nameOverride": undefined,
                  "schema": "EditorDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "hideScheduler",
              "schema": {
                "description": "Hide the scheduler for content items.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "hideDateTimeModeButton",
              "schema": {
                "description": "Hide the datetime mode button.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version of the app.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ArrayFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ArrayFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "minItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "uniqueFields",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The fields that must be unique.",
                  "type": "nullable",
                  "value": {
                    "description": "The fields that must be unique.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetChangedRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AssetChangedRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "condition",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Javascript condition when to trigger.",
                  "type": "nullable",
                  "value": {
                    "description": "Javascript condition when to trigger.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the asset.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "parentId",
              "schema": {
                "description": "The ID of the parent folder. Empty for files without parent.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "fileName",
              "schema": {
                "description": "The file name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "fileHash",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The file hash.",
                  "type": "nullable",
                  "value": {
                    "description": "The file hash.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isProtected",
              "schema": {
                "description": "True, when the asset is not public.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "slug",
              "schema": {
                "description": "The slug.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "mimeType",
              "schema": {
                "description": "The mime type.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "fileType",
              "schema": {
                "description": "The file type.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "metadataText",
              "schema": {
                "description": "The formatted text representation of the metadata.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "editToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The UI token.",
                  "type": "nullable",
                  "value": {
                    "description": "The UI token.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": "The asset metadata.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The asset tags.",
                  "type": "nullable",
                  "value": {
                    "description": "The asset tags.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "fileSize",
              "schema": {
                "description": "The size of the file in bytes.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "fileVersion",
              "schema": {
                "description": "The version of the file.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AssetDtoType",
                "nameOverride": undefined,
                "schema": "AssetType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": "The user that has created the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModifiedBy",
              "schema": {
                "description": "The user that has updated the asset.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": "The date and time when the asset has been created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModified",
              "schema": {
                "description": "The date and time when the asset has been modified last.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version of the asset.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "_meta",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetDtoMeta",
                  "nameOverride": undefined,
                  "schema": "AssetMeta",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "isImage",
              "schema": {
                "description": "Determines of the created file is an image.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "pixelWidth",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The width of the image in pixels if the asset is an image.",
                  "type": "nullable",
                  "value": {
                    "description": "The width of the image in pixels if the asset is an image.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "pixelHeight",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The height of the image in pixels if the asset is an image.",
                  "type": "nullable",
                  "value": {
                    "description": "The height of the image in pixels if the asset is an image.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetFolderDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetFolderDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the asset.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "parentId",
              "schema": {
                "description": "The ID of the parent folder. Empty for files without parent.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "folderName",
              "schema": {
                "description": "The folder name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version of the asset folder.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AssetFolderScope": {
          "description": "",
          "generatedName": "AssetFolderScope",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "PathAndItems",
              "nameOverride": undefined,
              "value": "PathAndItems",
            },
            {
              "generatedName": "Path",
              "nameOverride": undefined,
              "value": "Path",
            },
            {
              "generatedName": "Items",
              "nameOverride": undefined,
              "value": "Items",
            },
          ],
        },
        "AssetFoldersDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetFoldersDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "total",
              "schema": {
                "description": "The total number of assets.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The assets folders.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetFoldersDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "AssetFolderDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "path",
              "schema": {
                "description": "The path to the current folder.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetFoldersDtoPathItem",
                  "nameOverride": undefined,
                  "schema": "AssetFolderDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetMeta": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AssetMeta",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "isDuplicate",
              "schema": {
                "description": "Indicates whether the asset is a duplicate.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AssetPreviewMode": {
          "description": "",
          "generatedName": "AssetPreviewMode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ImageAndFileName",
              "nameOverride": undefined,
              "value": "ImageAndFileName",
            },
            {
              "generatedName": "Image",
              "nameOverride": undefined,
              "value": "Image",
            },
            {
              "generatedName": "FileName",
              "nameOverride": undefined,
              "value": "FileName",
            },
          ],
        },
        "AssetScriptsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetScriptsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "query",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed for each asset when querying assets.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed for each asset when querying assets.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "queryPre",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed for all assets when querying assets.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed for all assets when querying assets.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "create",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when creating an asset.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when creating an asset.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "update",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when updating a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when updating a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "annotate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when annotating a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when annotating a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "move",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when moving a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when moving a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "delete",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when deleting a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when deleting a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version of the app.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AssetType": {
          "description": "",
          "generatedName": "AssetType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Unknown",
              "nameOverride": undefined,
              "value": "Unknown",
            },
            {
              "generatedName": "Image",
              "nameOverride": undefined,
              "value": "Image",
            },
            {
              "generatedName": "Audio",
              "nameOverride": undefined,
              "value": "Audio",
            },
            {
              "generatedName": "Video",
              "nameOverride": undefined,
              "value": "Video",
            },
          ],
        },
        "AssetsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "total",
              "schema": {
                "description": "The total number of assets.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The assets.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "AssetDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetsFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AssetsFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "previewMode",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AssetsFieldPropertiesDtoPreviewMode",
                "nameOverride": undefined,
                "schema": "AssetPreviewMode",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfReadonlyListOfString",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "defaultValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The default value as a list of asset ids.",
                  "type": "nullable",
                  "value": {
                    "description": "The default value as a list of asset ids.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "folderId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The initial id to the folder.",
                  "type": "nullable",
                  "value": {
                    "description": "The initial id to the folder.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previewFormat",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The preview format.",
                  "type": "nullable",
                  "value": {
                    "description": "The preview format.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minSize",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum file size in bytes.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum file size in bytes.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxSize",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum file size in bytes.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum file size in bytes.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minWidth",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum image width in pixels.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum image width in pixels.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxWidth",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum image width in pixels.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum image width in pixels.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minHeight",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum image height in pixels.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum image height in pixels.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxHeight",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum image height in pixels.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum image height in pixels.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "aspectWidth",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The image aspect width in pixels.",
                  "type": "nullable",
                  "value": {
                    "description": "The image aspect width in pixels.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "aspectHeight",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The image aspect height in pixels.",
                  "type": "nullable",
                  "value": {
                    "description": "The image aspect height in pixels.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "expectedType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsFieldPropertiesDtoExpectedType",
                  "nameOverride": undefined,
                  "schema": "AssetType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "resolveFirst",
              "schema": {
                "description": "True to resolve first asset in the content list.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "mustBeImage",
              "schema": {
                "description": "True to resolve first image in the content list.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "resolveImage",
              "schema": {
                "description": "True to resolve first image in the content list.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowedExtensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The allowed file extensions.",
                  "type": "nullable",
                  "value": {
                    "description": "The allowed file extensions.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "allowDuplicates",
              "schema": {
                "description": "True, if duplicate values are allowed.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AssignContributorDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AssignContributorDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "contributorId",
              "schema": {
                "description": "The id or email of the user to add to the app.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "role",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The role of the contributor.",
                  "type": "nullable",
                  "value": {
                    "description": "The role of the contributor.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "invite",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Set to true to invite the user if he does not exist.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureQueueRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureQueueRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "connectionString",
              "schema": {
                "description": "The connection string to the storage account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "queue",
              "schema": {
                "description": "The name of the queue.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payload",
              "schema": {
                "description": "Leave it empty to use the full event as body.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "BackupJobDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "BackupJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the backup job.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "started",
              "schema": {
                "description": "The time when the job has been started.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "stopped",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The time when the job has been stopped.",
                  "type": "nullable",
                  "value": {
                    "description": "The time when the job has been stopped.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "handledEvents",
              "schema": {
                "description": "The number of handled events.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "handledAssets",
              "schema": {
                "description": "The number of handled assets.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BackupJobDtoStatus",
                "nameOverride": undefined,
                "schema": "JobStatus",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "BackupJobsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "BackupJobsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The backups.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BackupJobsDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "BackupJobDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "BooleanFieldEditor": {
          "description": "",
          "generatedName": "BooleanFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Checkbox",
              "nameOverride": undefined,
              "value": "Checkbox",
            },
            {
              "generatedName": "Toggle",
              "nameOverride": undefined,
              "value": "Toggle",
            },
          ],
        },
        "BooleanFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BooleanFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BooleanFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfNullableBoolean",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "defaultValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The default value for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The default value for the field value.",
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "inlineEditable",
              "schema": {
                "description": "Indicates that the inline editor is enabled for this field.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BooleanFieldPropertiesDtoEditor",
                "nameOverride": undefined,
                "schema": "BooleanFieldEditor",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "BulkResultDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkResultDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "error",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkResultDtoError",
                  "nameOverride": undefined,
                  "schema": "ErrorDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "jobIndex",
              "schema": {
                "description": "The index of the bulk job where the result belongs to. The order can change.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the entity that has been handled successfully or not.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the entity that has been handled successfully or not.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "contentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the entity that has been handled successfully or not.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the entity that has been handled successfully or not.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "BulkUpdateAssetType": {
          "description": "",
          "generatedName": "BulkUpdateAssetType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Annotate",
              "nameOverride": undefined,
              "value": "Annotate",
            },
            {
              "generatedName": "Move",
              "nameOverride": undefined,
              "value": "Move",
            },
            {
              "generatedName": "Delete",
              "nameOverride": undefined,
              "value": "Delete",
            },
          ],
        },
        "BulkUpdateAssetsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkUpdateAssetsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "jobs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The contents to update or insert.",
                  "type": "nullable",
                  "value": {
                    "description": "The contents to update or insert.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "BulkUpdateAssetsDtoJobsItem",
                      "nameOverride": undefined,
                      "schema": "BulkUpdateAssetsJobDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "checkReferrers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to check referrers of deleted assets.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "optimizeValidation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to turn off costly validation: Folder checks. Default: true.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "doNotScript",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to turn off scripting for faster inserts. Default: true.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BulkUpdateAssetsJobDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkUpdateAssetsJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An optional ID of the asset to update.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateAssetsJobDtoType",
                  "nameOverride": undefined,
                  "schema": "BulkUpdateAssetType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "parentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The parent folder id.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fileName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new name of the asset.",
                  "type": "nullable",
                  "value": {
                    "description": "The new name of the asset.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "slug",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new slug of the asset.",
                  "type": "nullable",
                  "value": {
                    "description": "The new slug of the asset.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isProtected",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True, when the asset is not public.",
                  "type": "nullable",
                  "value": {
                    "description": "True, when the asset is not public.",
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new asset tags.",
                  "type": "nullable",
                  "value": {
                    "description": "The new asset tags.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The asset metadata.",
                  "type": "nullable",
                  "value": {
                    "description": "The asset metadata.",
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "permanent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to delete the asset permanently.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expectedVersion",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The expected version.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BulkUpdateContentType": {
          "description": "",
          "generatedName": "BulkUpdateContentType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Upsert",
              "nameOverride": undefined,
              "value": "Upsert",
            },
            {
              "generatedName": "ChangeStatus",
              "nameOverride": undefined,
              "value": "ChangeStatus",
            },
            {
              "generatedName": "Create",
              "nameOverride": undefined,
              "value": "Create",
            },
            {
              "generatedName": "Delete",
              "nameOverride": undefined,
              "value": "Delete",
            },
            {
              "generatedName": "Patch",
              "nameOverride": undefined,
              "value": "Patch",
            },
            {
              "generatedName": "Update",
              "nameOverride": undefined,
              "value": "Update",
            },
            {
              "generatedName": "Validate",
              "nameOverride": undefined,
              "value": "Validate",
            },
          ],
        },
        "BulkUpdateContentsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkUpdateContentsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "jobs",
              "schema": {
                "description": "The contents to update or insert.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateContentsDtoJobsItem",
                  "nameOverride": undefined,
                  "schema": "BulkUpdateContentsJobDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "publish",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to automatically publish the content.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "doNotScript",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to turn off scripting for faster inserts. Default: true.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "doNotValidate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to turn off validation for faster inserts. Default: false.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "doNotValidateWorkflow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to turn off validation of workflow rules. Default: false.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "checkReferrers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to check referrers of deleted contents.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "optimizeValidation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BulkUpdateContentsJobDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkUpdateContentsJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "query",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateContentsJobDtoQuery",
                  "nameOverride": undefined,
                  "schema": "QueryJsonDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An optional ID of the content to update.",
                  "type": "nullable",
                  "value": {
                    "description": "An optional ID of the content to update.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateContentsJobDtoData",
                  "nameOverride": undefined,
                  "schema": "ContentData",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new status when the type is set to 'ChangeStatus' or 'Upsert'.",
                  "type": "nullable",
                  "value": {
                    "description": "The new status when the type is set to 'ChangeStatus' or 'Upsert'.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "dueTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The due time.",
                  "type": "nullable",
                  "value": {
                    "description": "The due time.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateContentsJobDtoType",
                  "nameOverride": undefined,
                  "schema": "BulkUpdateContentType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional schema id or name.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional schema id or name.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "patch",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Makes the update as patch.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "permanent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to delete the content permanently.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expectedCount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The number of expected items. Set it to a higher number to update multiple items when a query is defined.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expectedVersion",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The expected version.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CallsUsageDtoDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CallsUsageDtoDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "totalCalls",
              "schema": {
                "description": "The total number of API calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "totalBytes",
              "schema": {
                "description": "The total number of bytes transferred.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "monthCalls",
              "schema": {
                "description": "The total number of API calls this month.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "monthBytes",
              "schema": {
                "description": "The total number of bytes transferred this month.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "blockingApiCalls",
              "schema": {
                "description": "The amount of calls that will block the app.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowedBytes",
              "schema": {
                "description": "The included API traffic.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowedCalls",
              "schema": {
                "description": "The included API calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "averageElapsedMs",
              "schema": {
                "description": "The average duration in milliseconds.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "details",
              "schema": {
                "description": "The statistics by date and group.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CallsUsageDtoDtoDetailsValueItem",
                    "nameOverride": undefined,
                    "schema": "CallsUsagePerDateDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CallsUsagePerDateDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CallsUsagePerDateDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "date",
              "schema": {
                "description": "The date when the usage was tracked.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "totalCalls",
              "schema": {
                "description": "The total number of API calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "totalBytes",
              "schema": {
                "description": "The total number of bytes transferred.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "averageElapsedMs",
              "schema": {
                "description": "The average duration in milliseconds.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ChangeCategoryDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ChangeCategoryDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the category.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the category.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ChangePlanDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ChangePlanDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "planId",
              "schema": {
                "description": "The new plan id.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ChangeStatusDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ChangeStatusDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": "The new status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "dueTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The due time.",
                  "type": "nullable",
                  "value": {
                    "description": "The due time.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "checkReferrers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to check referrers of this content.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ClientDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ClientDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The client id.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "secret",
              "schema": {
                "description": "The client secret.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The client name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "role",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The role of the client.",
                  "type": "nullable",
                  "value": {
                    "description": "The role of the client.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "apiCallsLimit",
              "schema": {
                "description": "The number of allowed api calls per month for this client.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "apiTrafficLimit",
              "schema": {
                "description": "The number of allowed api traffic bytes per month for this client.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "allowAnonymous",
              "schema": {
                "description": "True to allow anonymous access without an access token for this client.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ClientsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ClientsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The clients.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ClientsDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "ClientDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "CommentDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CommentDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the comment.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "time",
              "schema": {
                "description": "The time when the comment was created or updated last.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "user",
              "schema": {
                "description": "The user who created or updated the comment.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The text of the comment.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The url where the comment is created.",
                  "type": "nullable",
                  "value": {
                    "description": "The url where the comment is created.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CommentRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CommentRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The comment text.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "client",
              "schema": {
                "description": "An optional client name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "CommentRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CommentRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "condition",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Javascript condition when to trigger.",
                  "type": "nullable",
                  "value": {
                    "description": "Javascript condition when to trigger.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CommentsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CommentsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "createdComments",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The created comments including the updates.",
                  "type": "nullable",
                  "value": {
                    "description": "The created comments including the updates.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "CommentsDtoCreatedCommentsItem",
                      "nameOverride": undefined,
                      "schema": "CommentDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "updatedComments",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updates comments since the last version.",
                  "type": "nullable",
                  "value": {
                    "description": "The updates comments since the last version.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "CommentsDtoUpdatedCommentsItem",
                      "nameOverride": undefined,
                      "schema": "CommentDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "deletedComments",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The deleted comments since the last version.",
                  "type": "nullable",
                  "value": {
                    "description": "The deleted comments since the last version.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The current version.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ComponentFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ComponentFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "schemaIds",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the embedded schemas.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the embedded schemas.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ComponentsFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ComponentsFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "minItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "schemaIds",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the embedded schemas.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the embedded schemas.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "uniqueFields",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The fields that must be unique.",
                  "type": "nullable",
                  "value": {
                    "description": "The fields that must be unique.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ConfigureFieldRulesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ConfigureFieldRulesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fieldRules",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The field rules to configure.",
                  "type": "nullable",
                  "value": {
                    "description": "The field rules to configure.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "ConfigureFieldRulesDtoFieldRulesItem",
                      "nameOverride": undefined,
                      "schema": "FieldRuleDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ConfigurePreviewUrlsDto": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "ConfigureUIFieldsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ConfigureUiFieldsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fieldsInLists",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of fields that are used in content lists.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of fields that are used in content lists.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "fieldsInReferences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of fields that are used in content references.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of fields that are used in content references.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ContentChangedRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ContentChangedRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "schemas",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The schema settings.",
                  "type": "nullable",
                  "value": {
                    "description": "The schema settings.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "ContentChangedRuleTriggerDtoSchemasItem",
                      "nameOverride": undefined,
                      "schema": "SchemaCondition",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "referencedSchemas",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The schema references.",
                  "type": "nullable",
                  "value": {
                    "description": "The schema references.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "ContentChangedRuleTriggerDtoReferencedSchemasItem",
                      "nameOverride": undefined,
                      "schema": "SchemaCondition",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "handleAll",
              "schema": {
                "description": "Determines whether the trigger should handle all content changes events.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ContentData": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "file": undefined,
            "generatedName": "ContentDataValue",
            "nameOverride": undefined,
            "schema": "ContentFieldData",
            "type": "reference",
          },
        },
        "ContentDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ContentDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The if of the content item.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": "The user that has created the content item.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModifiedBy",
              "schema": {
                "description": "The user that has updated the content item.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "data",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "conflict": [],
              "key": "referenceData",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ContentDtoReferenceData",
                  "nameOverride": undefined,
                  "schema": "ContentData",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": "The date and time when the content item has been created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModified",
              "schema": {
                "description": "The date and time when the content item has been modified last.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": "The status of the content.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "newStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new status of the content.",
                  "type": "nullable",
                  "value": {
                    "description": "The new status of the content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "statusColor",
              "schema": {
                "description": "The color of the status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "newStatusColor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The color of the new status.",
                  "type": "nullable",
                  "value": {
                    "description": "The color of the new status.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "editToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The UI token.",
                  "type": "nullable",
                  "value": {
                    "description": "The UI token.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "scheduleJob",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ContentDtoScheduleJob",
                  "nameOverride": undefined,
                  "schema": "ScheduleJobDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "schemaId",
              "schema": {
                "description": "The ID of the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "schemaName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the schema.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the schema.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "schemaDisplayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The display name of the schema.",
                  "type": "nullable",
                  "value": {
                    "description": "The display name of the schema.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "referenceFields",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The reference fields.",
                  "type": "nullable",
                  "value": {
                    "description": "The reference fields.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "ContentDtoReferenceFieldsItem",
                      "nameOverride": undefined,
                      "schema": "FieldDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isDeleted",
              "schema": {
                "description": "Indicates whether the content is deleted.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version of the content.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ContentFieldData": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "ContentsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ContentsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "total",
              "schema": {
                "description": "The total number of content items.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The content items.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ContentsDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "ContentDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "statuses",
              "schema": {
                "description": "The possible statuses.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ContentsDtoStatusesItem",
                  "nameOverride": undefined,
                  "schema": "StatusInfoDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ContributorDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ContributorDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "contributorId",
              "schema": {
                "description": "The ID of the user that contributes to the app.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "contributorName",
              "schema": {
                "description": "The display name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "contributorEmail",
              "schema": {
                "description": "The email address.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "role",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The role of the contributor.",
                  "type": "nullable",
                  "value": {
                    "description": "The role of the contributor.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ContributorsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ContributorsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The contributors.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ContributorsDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "ContributorDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "maxContributors",
              "schema": {
                "description": "The maximum number of allowed contributors.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "_meta",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ContributorsDtoMeta",
                  "nameOverride": undefined,
                  "schema": "ContributorsMetadata",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ContributorsMetadata": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ContributorsMetadata",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "isInvited",
              "schema": {
                "description": "Indicates whether the user has been invited.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "CreateAppDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateAppDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the app.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "template",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Initialize the app with the inbuilt template.",
                  "type": "nullable",
                  "value": {
                    "description": "Initialize the app with the inbuilt template.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CreateAssetFolderDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateAssetFolderDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "folderName",
              "schema": {
                "description": "The name of the folder.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "parentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the parent folder.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CreateClientDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateClientDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the client.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "CreateContentRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateContentRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "data",
              "schema": {
                "description": "The content data.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "schema",
              "schema": {
                "description": "The name of the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "client",
              "schema": {
                "description": "An optional client name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "publish",
              "schema": {
                "description": "Publish the content.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "CreateRuleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateRuleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "trigger",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateRuleDtoTrigger",
                "nameOverride": undefined,
                "schema": "RuleTriggerDto",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "action",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateRuleDtoAction",
                "nameOverride": undefined,
                "schema": "RuleActionDto",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "CreateSchemaDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpsertSchemaDto",
              "nameOverride": undefined,
              "schema": "UpsertSchemaDto",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "CreateSchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateSchemaDtoType",
                "nameOverride": undefined,
                "schema": "SchemaType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "isSingleton",
              "schema": {
                "description": "Set to true to allow a single content item only.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "CreateTeamDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateTeamDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the team.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "CreateUserDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateUserDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": "The email of the user. Unique value.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "displayName",
              "schema": {
                "description": "The display name (usually first name and last name) of the user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "password",
              "schema": {
                "description": "The password of the user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "permissions",
              "schema": {
                "description": "Additional permissions for the user.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CurrentStorageDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CurrentStorageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "size",
              "schema": {
                "description": "The size in bytes.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "maxAllowed",
              "schema": {
                "description": "The maximum allowed asset size.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DateTimeCalculatedDefaultValue": {
          "description": "",
          "generatedName": "DateTimeCalculatedDefaultValue",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Now",
              "nameOverride": undefined,
              "value": "Now",
            },
            {
              "generatedName": "Today",
              "nameOverride": undefined,
              "value": "Today",
            },
          ],
        },
        "DateTimeFieldEditor": {
          "description": "",
          "generatedName": "DateTimeFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Date",
              "nameOverride": undefined,
              "value": "Date",
            },
            {
              "generatedName": "DateTime",
              "nameOverride": undefined,
              "value": "DateTime",
            },
          ],
        },
        "DateTimeFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DateTimeFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DateTimeFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfNullableInstant",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "defaultValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The default value for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The default value for the field value.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed value for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed value for the field value.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed value for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed value for the field value.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "format",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The format pattern when displayed in the UI.",
                  "type": "nullable",
                  "value": {
                    "description": "The format pattern when displayed in the UI.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DateTimeFieldPropertiesDtoEditor",
                "nameOverride": undefined,
                "schema": "DateTimeFieldEditor",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "calculatedDefaultValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DateTimeFieldPropertiesDtoCalculatedDefaultValue",
                  "nameOverride": undefined,
                  "schema": "DateTimeCalculatedDefaultValue",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DiscourseRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DiscourseRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The url to the discourse server.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "apiKey",
              "schema": {
                "description": "The api key to authenticate to your discourse server.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "apiUsername",
              "schema": {
                "description": "The api username to authenticate to your discourse server.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The text as markdown.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": "The optional title when creating new topics.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "topic",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional topic id.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional topic id.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "category",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional category id.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional category id.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "EditorDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EditorDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the editor.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The url to the editor.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ElasticSearchRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ElasticSearchRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "host",
              "schema": {
                "description": "The url to the instance or cluster.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "indexName",
              "schema": {
                "description": "The name of the index.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "username",
              "schema": {
                "description": "The optional username.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "password",
              "schema": {
                "description": "The optional password.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document",
              "schema": {
                "description": "The optional custom document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "delete",
              "schema": {
                "description": "The condition when to delete the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "EmailRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EmailRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "serverHost",
              "schema": {
                "description": "The IP address or host to the SMTP server.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "serverPort",
              "schema": {
                "description": "The port to the SMTP server.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "serverUsername",
              "schema": {
                "description": "The username for the SMTP server.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "serverPassword",
              "schema": {
                "description": "The password for the SMTP server.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "messageFrom",
              "schema": {
                "description": "The email sending address.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "messageTo",
              "schema": {
                "description": "The email message will be sent to.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "messageSubject",
              "schema": {
                "description": "The subject line for this email message.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "messageBody",
              "schema": {
                "description": "The message body.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ErrorDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": "Error message.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "errorCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The error code.",
                  "type": "nullable",
                  "value": {
                    "description": "The error code.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "traceId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional trace id.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional trace id.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Link to the error details.",
                  "type": "nullable",
                  "value": {
                    "description": "Link to the error details.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "details",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Detailed error messages.",
                  "type": "nullable",
                  "value": {
                    "description": "Detailed error messages.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "statusCode",
              "schema": {
                "description": "Status code of the http response.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "EventConsumerDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "EventConsumerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "isStopped",
              "schema": {
                "description": "Indicates if the event consumer has been started.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isResetting",
              "schema": {
                "description": "Indicates if the event consumer is resetting at the moment.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": "The number of handled events.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the event consumer.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "error",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The error details if the event consumer has been stopped after a failure.",
                  "type": "nullable",
                  "value": {
                    "description": "The error details if the event consumer has been stopped after a failure.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "position",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The position within the vent stream.",
                  "type": "nullable",
                  "value": {
                    "description": "The position within the vent stream.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "EventConsumersDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "EventConsumersDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The event consumers.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EventConsumersDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "EventConsumerDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ExposedValues": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "FastlyRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FastlyRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "apiKey",
              "schema": {
                "description": "The API key to grant access to Squidex.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "serviceId",
              "schema": {
                "description": "The ID of the fastly service.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "FeatureDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FeatureDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the feature.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The description text.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "FeaturesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FeaturesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "features",
              "schema": {
                "description": "The latest features.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FeaturesDtoFeaturesItem",
                  "nameOverride": undefined,
                  "schema": "FeatureDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The recent version.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "FieldDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "FieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fieldId",
              "schema": {
                "description": "The ID of the field.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isHidden",
              "schema": {
                "description": "Defines if the field is hidden.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isLocked",
              "schema": {
                "description": "Defines if the field is locked.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isDisabled",
              "schema": {
                "description": "Defines if the field is disabled.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "partitioning",
              "schema": {
                "description": "Defines the partitioning of the field.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "FieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "nested",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The nested fields.",
                  "type": "nullable",
                  "value": {
                    "description": "The nested fields.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "FieldDtoNestedItem",
                      "nameOverride": undefined,
                      "schema": "NestedFieldDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "FieldPropertiesDto": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "label",
                "schema": {
                  "description": "Optional label for the editor.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional label for the editor.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "hints",
                "schema": {
                  "description": "Hints to describe the field.",
                  "type": "nullable",
                  "value": {
                    "description": "Hints to describe the field.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "placeholder",
                "schema": {
                  "description": "Placeholder to show when no value has been entered.",
                  "type": "nullable",
                  "value": {
                    "description": "Placeholder to show when no value has been entered.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "isRequired",
                "schema": {
                  "description": "Indicates if the field is required.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "isRequiredOnPublish",
                "schema": {
                  "description": "Indicates if the field is required when publishing.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "isHalfWidth",
                "schema": {
                  "description": "Indicates if the field should be rendered with half width only.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "editorUrl",
                "schema": {
                  "description": "Optional url to the editor.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional url to the editor.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": "Tags for automation processes.",
                  "type": "nullable",
                  "value": {
                    "description": "Tags for automation processes.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "fieldType",
            "generatedName": "FieldPropertiesDto",
            "nameOverride": undefined,
            "schemas": {
              "Array": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasArrayFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "ArrayFieldPropertiesDto",
                "type": "reference",
              },
              "Assets": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAssetsFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "AssetsFieldPropertiesDto",
                "type": "reference",
              },
              "Boolean": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasBooleanFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "BooleanFieldPropertiesDto",
                "type": "reference",
              },
              "Component": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasComponentFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "ComponentFieldPropertiesDto",
                "type": "reference",
              },
              "Components": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasComponentsFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "ComponentsFieldPropertiesDto",
                "type": "reference",
              },
              "DateTime": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasDateTimeFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "DateTimeFieldPropertiesDto",
                "type": "reference",
              },
              "Geolocation": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasGeolocationFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "GeolocationFieldPropertiesDto",
                "type": "reference",
              },
              "Json": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasJsonFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "JsonFieldPropertiesDto",
                "type": "reference",
              },
              "Number": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasNumberFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "NumberFieldPropertiesDto",
                "type": "reference",
              },
              "References": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasReferencesFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "ReferencesFieldPropertiesDto",
                "type": "reference",
              },
              "String": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStringFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "StringFieldPropertiesDto",
                "type": "reference",
              },
              "Tags": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTagsFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "TagsFieldPropertiesDto",
                "type": "reference",
              },
              "UI": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasUiFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "UIFieldPropertiesDto",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "FieldRuleAction": {
          "description": "",
          "generatedName": "FieldRuleAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Disable",
              "nameOverride": undefined,
              "value": "Disable",
            },
            {
              "generatedName": "Hide",
              "nameOverride": undefined,
              "value": "Hide",
            },
            {
              "generatedName": "Require",
              "nameOverride": undefined,
              "value": "Require",
            },
          ],
        },
        "FieldRuleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FieldRuleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "action",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "FieldRuleDtoAction",
                "nameOverride": undefined,
                "schema": "FieldRuleAction",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "field",
              "schema": {
                "description": "The field to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "condition",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The condition.",
                  "type": "nullable",
                  "value": {
                    "description": "The condition.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "GeolocationFieldEditor": {
          "description": "",
          "generatedName": "GeolocationFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Map",
              "nameOverride": undefined,
              "value": "Map",
            },
          ],
        },
        "GeolocationFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GeolocationFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GeolocationFieldPropertiesDtoEditor",
                "nameOverride": undefined,
                "schema": "GeolocationFieldEditor",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "HistoryEventDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "HistoryEventDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": "The message for the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "eventType",
              "schema": {
                "description": "The type of the original event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "actor",
              "schema": {
                "description": "The user who called the action.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "eventId",
              "schema": {
                "description": "Gets a unique id for the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": "The time when the event happened.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version identifier.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ImageFormat": {
          "description": "",
          "generatedName": "ImageFormat",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "AVIF",
              "nameOverride": undefined,
              "value": "AVIF",
            },
            {
              "generatedName": "BMP",
              "nameOverride": undefined,
              "value": "BMP",
            },
            {
              "generatedName": "GIF",
              "nameOverride": undefined,
              "value": "GIF",
            },
            {
              "generatedName": "JPEG",
              "nameOverride": undefined,
              "value": "JPEG",
            },
            {
              "generatedName": "PNG",
              "nameOverride": undefined,
              "value": "PNG",
            },
            {
              "generatedName": "TGA",
              "nameOverride": undefined,
              "value": "TGA",
            },
            {
              "generatedName": "TIFF",
              "nameOverride": undefined,
              "value": "TIFF",
            },
            {
              "generatedName": "WEBP",
              "nameOverride": undefined,
              "value": "WEBP",
            },
          ],
        },
        "ImportContentsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ImportContentsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "datas",
              "schema": {
                "description": "The data to import.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ImportContentsDtoDatasItem",
                  "nameOverride": undefined,
                  "schema": "ContentData",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "publish",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to automatically publish the content.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "doNotScript",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to turn off scripting for faster inserts. Default: true.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "optimizeValidation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "JobStatus": {
          "description": "",
          "generatedName": "JobStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Created",
              "nameOverride": undefined,
              "value": "Created",
            },
            {
              "generatedName": "Started",
              "nameOverride": undefined,
              "value": "Started",
            },
            {
              "generatedName": "Completed",
              "nameOverride": undefined,
              "value": "Completed",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
          ],
        },
        "JsonFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "JsonFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "graphQLSchema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The GraphQL schema.",
                  "type": "nullable",
                  "value": {
                    "description": "The GraphQL schema.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "LanguageDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "LanguageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "iso2Code",
              "schema": {
                "description": "The iso code of the language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "englishName",
              "schema": {
                "description": "The english name of the language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "nativeName",
              "schema": {
                "description": "The native name of the language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "LocalizedValueOfNullableBoolean": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        "LocalizedValueOfNullableDouble": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        "LocalizedValueOfNullableInstant": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        "LocalizedValueOfReadonlyListOfString": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "type": "array",
            "value": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        "LocalizedValueOfString": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "LogDownloadDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "LogDownloadDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "downloadUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The url to download the log.",
                  "type": "nullable",
                  "value": {
                    "description": "The url to download the log.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ManualRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ManualRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [],
          "type": "object",
        },
        "MediumRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MediumRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "accessToken",
              "schema": {
                "description": "The self issued access token.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": "The title, used for the url.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "content",
              "schema": {
                "description": "The content, either html or markdown.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "canonicalUrl",
              "schema": {
                "description": "The original home of this content, if it was originally published elsewhere.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": "The optional comma separated list of tags.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "publicationId",
              "schema": {
                "description": "Optional publication id.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isHtml",
              "schema": {
                "description": "Indicates whether the content is markdown or html.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "MoveAssetDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MoveAssetDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "parentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The parent folder id.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "MoveAssetFolderDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MoveAssetFolderDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "parentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The parent folder id.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NestedFieldDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "NestedFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fieldId",
              "schema": {
                "description": "The ID of the field.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isHidden",
              "schema": {
                "description": "Defines if the field is hidden.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isLocked",
              "schema": {
                "description": "Defines if the field is locked.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isDisabled",
              "schema": {
                "description": "Defines if the field is disabled.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "NestedFieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "NotificationRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NotificationRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "user",
              "schema": {
                "description": "The user id or email.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The text to send.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The optional url to attach to the notification.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "client",
              "schema": {
                "description": "An optional client name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NumberFieldEditor": {
          "description": "",
          "generatedName": "NumberFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Input",
              "nameOverride": undefined,
              "value": "Input",
            },
            {
              "generatedName": "Radio",
              "nameOverride": undefined,
              "value": "Radio",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
            {
              "generatedName": "Stars",
              "nameOverride": undefined,
              "value": "Stars",
            },
          ],
        },
        "NumberFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NumberFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NumberFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfNullableDouble",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "defaultValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The default value for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The default value for the field value.",
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed value for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed value for the field value.",
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed value for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed value for the field value.",
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "allowedValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The allowed values for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The allowed values for the field value.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isUnique",
              "schema": {
                "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "inlineEditable",
              "schema": {
                "description": "Indicates that the inline editor is enabled for this field.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "NumberFieldPropertiesDtoEditor",
                "nameOverride": undefined,
                "schema": "NumberFieldEditor",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "OpenSearchRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "OpenSearchRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "host",
              "schema": {
                "description": "The url to the instance or cluster.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "indexName",
              "schema": {
                "description": "The name of the index.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "username",
              "schema": {
                "description": "The optional username.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "password",
              "schema": {
                "description": "The optional password.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document",
              "schema": {
                "description": "The optional custom document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "delete",
              "schema": {
                "description": "The condition when to delete the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PatternDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PatternDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the suggestion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "regex",
              "schema": {
                "description": "The regex pattern.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The regex message.",
                  "type": "nullable",
                  "value": {
                    "description": "The regex message.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PlanChangedDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PlanChangedDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "redirectUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional redirect uri.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional redirect uri.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "PlanDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PlanDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the plan.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the plan.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "costs",
              "schema": {
                "description": "The monthly costs of the plan.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "confirmText",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An optional confirm text for the monthly subscription.",
                  "type": "nullable",
                  "value": {
                    "description": "An optional confirm text for the monthly subscription.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "yearlyConfirmText",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An optional confirm text for the yearly subscription.",
                  "type": "nullable",
                  "value": {
                    "description": "An optional confirm text for the yearly subscription.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "yearlyCosts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The yearly costs of the plan.",
                  "type": "nullable",
                  "value": {
                    "description": "The yearly costs of the plan.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "yearlyId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The yearly ID of the plan.",
                  "type": "nullable",
                  "value": {
                    "description": "The yearly ID of the plan.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxApiBytes",
              "schema": {
                "description": "The maximum number of API traffic.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "maxApiCalls",
              "schema": {
                "description": "The maximum number of API calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "maxAssetSize",
              "schema": {
                "description": "The maximum allowed asset size.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "maxContributors",
              "schema": {
                "description": "The maximum number of contributors.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PlansDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PlansDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "plans",
              "schema": {
                "description": "The available plans.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PlansDtoPlansItem",
                  "nameOverride": undefined,
                  "schema": "PlanDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "currentPlanId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The current plan id.",
                  "type": "nullable",
                  "value": {
                    "description": "The current plan id.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "planOwner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The plan owner.",
                  "type": "nullable",
                  "value": {
                    "description": "The plan owner.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "portalLink",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The link to the management portal.",
                  "type": "nullable",
                  "value": {
                    "description": "The link to the management portal.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "referral",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PlansDtoReferral",
                  "nameOverride": undefined,
                  "schema": "ReferralInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "locked",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PlansDtoLocked",
                "nameOverride": undefined,
                "schema": "PlansLockedReason",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "PlansLockedReason": {
          "description": "",
          "generatedName": "PlansLockedReason",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "None",
              "nameOverride": undefined,
              "value": "None",
            },
            {
              "generatedName": "NotOwner",
              "nameOverride": undefined,
              "value": "NotOwner",
            },
            {
              "generatedName": "NoPermission",
              "nameOverride": undefined,
              "value": "NoPermission",
            },
            {
              "generatedName": "ManagedByTeam",
              "nameOverride": undefined,
              "value": "ManagedByTeam",
            },
          ],
        },
        "PrerenderRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PrerenderRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": "The prerender token from your account.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The url to recache.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PropertyPath": {
          "description": undefined,
          "type": "array",
          "value": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "QueryDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "QueryDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "ids",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional list of ids to query.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional list of ids to query.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "oData",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional odata query.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional odata query.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "q",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "conflict": [],
              "key": "parentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The parent id (for assets).",
                  "type": "nullable",
                  "value": {
                    "description": "The parent id (for assets).",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "QueryJsonDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "QueryJsonDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "filter",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "conflict": [],
              "key": "fullText",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "skip",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "take",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "random",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "top",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "sort",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "QueryJsonDtoSortItem",
                      "nameOverride": undefined,
                      "schema": "SortNode",
                      "type": "reference",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ReferencesFieldEditor": {
          "description": "",
          "generatedName": "ReferencesFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "List",
              "nameOverride": undefined,
              "value": "List",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
            {
              "generatedName": "Tags",
              "nameOverride": undefined,
              "value": "Tags",
            },
            {
              "generatedName": "Checkboxes",
              "nameOverride": undefined,
              "value": "Checkboxes",
            },
            {
              "generatedName": "Input",
              "nameOverride": undefined,
              "value": "Input",
            },
          ],
        },
        "ReferencesFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ReferencesFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ReferencesFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfReadonlyListOfString",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "defaultValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The default value as a list of content ids.",
                  "type": "nullable",
                  "value": {
                    "description": "The default value as a list of content ids.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "allowDuplicates",
              "schema": {
                "description": "True, if duplicate values are allowed.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "resolveReference",
              "schema": {
                "description": "True to resolve references in the content list.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "mustBePublished",
              "schema": {
                "description": "True when all references must be published.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ReferencesFieldPropertiesDtoEditor",
                "nameOverride": undefined,
                "schema": "ReferencesFieldEditor",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "schemaIds",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the referenced schemas.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the referenced schemas.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ReferralInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ReferralInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "earned",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "condition",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RenameAssetFolderDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RenameAssetFolderDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "folderName",
              "schema": {
                "description": "The name of the folder.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RenameTagDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RenameTagDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "tagName",
              "schema": {
                "description": "The new name for the tag.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ReorderFieldsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ReorderFieldsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fieldIds",
              "schema": {
                "description": "The field ids in the target order.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ResizeMode": {
          "description": "",
          "generatedName": "ResizeMode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Crop",
              "nameOverride": undefined,
              "value": "Crop",
            },
            {
              "generatedName": "CropUpsize",
              "nameOverride": undefined,
              "value": "CropUpsize",
            },
            {
              "generatedName": "Pad",
              "nameOverride": undefined,
              "value": "Pad",
            },
            {
              "generatedName": "BoxPad",
              "nameOverride": undefined,
              "value": "BoxPad",
            },
            {
              "generatedName": "Max",
              "nameOverride": undefined,
              "value": "Max",
            },
            {
              "generatedName": "Min",
              "nameOverride": undefined,
              "value": "Min",
            },
            {
              "generatedName": "Stretch",
              "nameOverride": undefined,
              "value": "Stretch",
            },
          ],
        },
        "Resource": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Resource",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "_links",
              "schema": {
                "description": "The links.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ResourceLinksValue",
                  "nameOverride": undefined,
                  "schema": "ResourceLink",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ResourceLink": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ResourceLink",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "href",
              "schema": {
                "description": "The link url.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "method",
              "schema": {
                "description": "The link method.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Additional data about the link.",
                  "type": "nullable",
                  "value": {
                    "description": "Additional data about the link.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ResourcesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ResourcesDto",
          "nameOverride": undefined,
          "properties": [],
          "type": "object",
        },
        "RestoreJobDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RestoreJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The uri to load from.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "log",
              "schema": {
                "description": "The status log.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "started",
              "schema": {
                "description": "The time when the job has been started.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "stopped",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The time when the job has been stopped.",
                  "type": "nullable",
                  "value": {
                    "description": "The time when the job has been stopped.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RestoreJobDtoStatus",
                "nameOverride": undefined,
                "schema": "JobStatus",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RestoreRequestDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RestoreRequestDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the app.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the app.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The url to the restore file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RoleDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RoleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The role name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "numClients",
              "schema": {
                "description": "The number of clients with this role.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "numContributors",
              "schema": {
                "description": "The number of contributors with this role.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isDefaultRole",
              "schema": {
                "description": "Indicates if the role is an builtin default role.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "permissions",
              "schema": {
                "description": "Associated list of permissions.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": "Associated list of UI properties.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
          ],
          "type": "object",
        },
        "RolesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RolesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The roles.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RolesDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "RoleDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "RuleActionDto": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "actionType",
            "generatedName": "RuleActionDto",
            "nameOverride": undefined,
            "schemas": {
              "Algolia": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAlgoliaRuleActionDto",
                "nameOverride": undefined,
                "schema": "AlgoliaRuleActionDto",
                "type": "reference",
              },
              "AzureQueue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAzureQueueRuleActionDto",
                "nameOverride": undefined,
                "schema": "AzureQueueRuleActionDto",
                "type": "reference",
              },
              "Comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCommentRuleActionDto",
                "nameOverride": undefined,
                "schema": "CommentRuleActionDto",
                "type": "reference",
              },
              "CreateContent": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCreateContentRuleActionDto",
                "nameOverride": undefined,
                "schema": "CreateContentRuleActionDto",
                "type": "reference",
              },
              "Discourse": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasDiscourseRuleActionDto",
                "nameOverride": undefined,
                "schema": "DiscourseRuleActionDto",
                "type": "reference",
              },
              "ElasticSearch": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasElasticSearchRuleActionDto",
                "nameOverride": undefined,
                "schema": "ElasticSearchRuleActionDto",
                "type": "reference",
              },
              "Email": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmailRuleActionDto",
                "nameOverride": undefined,
                "schema": "EmailRuleActionDto",
                "type": "reference",
              },
              "Fastly": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasFastlyRuleActionDto",
                "nameOverride": undefined,
                "schema": "FastlyRuleActionDto",
                "type": "reference",
              },
              "Medium": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasMediumRuleActionDto",
                "nameOverride": undefined,
                "schema": "MediumRuleActionDto",
                "type": "reference",
              },
              "Notification": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasNotificationRuleActionDto",
                "nameOverride": undefined,
                "schema": "NotificationRuleActionDto",
                "type": "reference",
              },
              "OpenSearch": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasOpenSearchRuleActionDto",
                "nameOverride": undefined,
                "schema": "OpenSearchRuleActionDto",
                "type": "reference",
              },
              "Prerender": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPrerenderRuleActionDto",
                "nameOverride": undefined,
                "schema": "PrerenderRuleActionDto",
                "type": "reference",
              },
              "Script": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasScriptRuleActionDto",
                "nameOverride": undefined,
                "schema": "ScriptRuleActionDto",
                "type": "reference",
              },
              "SignalR": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSignalRRuleActionDto",
                "nameOverride": undefined,
                "schema": "SignalRRuleActionDto",
                "type": "reference",
              },
              "Slack": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSlackRuleActionDto",
                "nameOverride": undefined,
                "schema": "SlackRuleActionDto",
                "type": "reference",
              },
              "Tweet": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTweetRuleActionDto",
                "nameOverride": undefined,
                "schema": "TweetRuleActionDto",
                "type": "reference",
              },
              "Typesense": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTypesenseRuleActionDto",
                "nameOverride": undefined,
                "schema": "TypesenseRuleActionDto",
                "type": "reference",
              },
              "Webhook": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWebhookRuleActionDto",
                "nameOverride": undefined,
                "schema": "WebhookRuleActionDto",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "RuleDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RuleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the rule.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": "The user that has created the rule.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModifiedBy",
              "schema": {
                "description": "The user that has updated the rule.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": "The date and time when the rule has been created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModified",
              "schema": {
                "description": "The date and time when the rule has been modified last.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version of the rule.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isEnabled",
              "schema": {
                "description": "Determines if the rule is enabled.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional rule name.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional rule name.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "trigger",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RuleDtoTrigger",
                "nameOverride": undefined,
                "schema": "RuleTriggerDto",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "action",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RuleDtoAction",
                "nameOverride": undefined,
                "schema": "RuleActionDto",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "numSucceeded",
              "schema": {
                "description": "The number of completed executions.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "numFailed",
              "schema": {
                "description": "The number of failed executions.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastExecuted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date and time when the rule was executed the last time.",
                  "type": "nullable",
                  "value": {
                    "description": "The date and time when the rule was executed the last time.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "RuleElementDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RuleElementDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "Describes the action or trigger type.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "display",
              "schema": {
                "description": "The label for the action or trigger type.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional title.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional title.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "iconColor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The color for the icon.",
                  "type": "nullable",
                  "value": {
                    "description": "The color for the icon.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "iconImage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The image for the icon.",
                  "type": "nullable",
                  "value": {
                    "description": "The image for the icon.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "readMore",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional link to the product that is integrated.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional link to the product that is integrated.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": "The properties.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RuleElementDtoPropertiesItem",
                  "nameOverride": undefined,
                  "schema": "RuleElementPropertyDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "RuleElementPropertyDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RuleElementPropertyDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RuleElementPropertyDtoEditor",
                "nameOverride": undefined,
                "schema": "RuleFieldEditor",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the editor.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "display",
              "schema": {
                "description": "The label to use.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "options",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The options, if the editor is a dropdown.",
                  "type": "nullable",
                  "value": {
                    "description": "The options, if the editor is a dropdown.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional description.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional description.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isFormattable",
              "schema": {
                "description": "Indicates if the property is formattable.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isRequired",
              "schema": {
                "description": "Indicates if the property is required.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RuleEventDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RuleEventDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": "The time when the event has been created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "eventName",
              "schema": {
                "description": "The name of the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastDump",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The last dump.",
                  "type": "nullable",
                  "value": {
                    "description": "The last dump.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "numCalls",
              "schema": {
                "description": "The number of calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "nextAttempt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The next attempt.",
                  "type": "nullable",
                  "value": {
                    "description": "The next attempt.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "result",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RuleEventDtoResult",
                "nameOverride": undefined,
                "schema": "RuleResult",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "jobResult",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RuleEventDtoJobResult",
                "nameOverride": undefined,
                "schema": "RuleJobResult",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RuleEventsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RuleEventsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "total",
              "schema": {
                "description": "The total number of rule events.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The rule events.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RuleEventsDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "RuleEventDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "RuleFieldEditor": {
          "description": "",
          "generatedName": "RuleFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Checkbox",
              "nameOverride": undefined,
              "value": "Checkbox",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
            {
              "generatedName": "Email",
              "nameOverride": undefined,
              "value": "Email",
            },
            {
              "generatedName": "Javascript",
              "nameOverride": undefined,
              "value": "Javascript",
            },
            {
              "generatedName": "Number",
              "nameOverride": undefined,
              "value": "Number",
            },
            {
              "generatedName": "Password",
              "nameOverride": undefined,
              "value": "Password",
            },
            {
              "generatedName": "Text",
              "nameOverride": undefined,
              "value": "Text",
            },
            {
              "generatedName": "TextArea",
              "nameOverride": undefined,
              "value": "TextArea",
            },
            {
              "generatedName": "Url",
              "nameOverride": undefined,
              "value": "Url",
            },
          ],
        },
        "RuleJobResult": {
          "description": "",
          "generatedName": "RuleJobResult",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Pending",
              "nameOverride": undefined,
              "value": "Pending",
            },
            {
              "generatedName": "Success",
              "nameOverride": undefined,
              "value": "Success",
            },
            {
              "generatedName": "Retry",
              "nameOverride": undefined,
              "value": "Retry",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
            {
              "generatedName": "Cancelled",
              "nameOverride": undefined,
              "value": "Cancelled",
            },
          ],
        },
        "RuleResult": {
          "description": "",
          "generatedName": "RuleResult",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Pending",
              "nameOverride": undefined,
              "value": "Pending",
            },
            {
              "generatedName": "Success",
              "nameOverride": undefined,
              "value": "Success",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
            {
              "generatedName": "Timeout",
              "nameOverride": undefined,
              "value": "Timeout",
            },
          ],
        },
        "RuleTriggerDto": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "triggerType",
            "generatedName": "RuleTriggerDto",
            "nameOverride": undefined,
            "schemas": {
              "AssetChanged": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAssetChangedRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "AssetChangedRuleTriggerDto",
                "type": "reference",
              },
              "Comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCommentRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "CommentRuleTriggerDto",
                "type": "reference",
              },
              "ContentChanged": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasContentChangedRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "ContentChangedRuleTriggerDto",
                "type": "reference",
              },
              "Manual": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasManualRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "ManualRuleTriggerDto",
                "type": "reference",
              },
              "SchemaChanged": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSchemaChangedRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "SchemaChangedRuleTriggerDto",
                "type": "reference",
              },
              "Usage": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasUsageRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "UsageRuleTriggerDto",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "RulesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RulesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The rules.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RulesDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "RuleDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "runningRuleId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the rule that is currently rerunning.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the rule that is currently rerunning.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ScheduleJobDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ScheduleJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the schedule job.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": "The new status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "dueTime",
              "schema": {
                "description": "The target date and time when the content should be scheduled.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "color",
              "schema": {
                "description": "The color of the scheduled status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "scheduledBy",
              "schema": {
                "description": "The user who schedule the content.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SchemaChangedRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SchemaChangedRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "condition",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Javascript condition when to trigger.",
                  "type": "nullable",
                  "value": {
                    "description": "Javascript condition when to trigger.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaCondition": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SchemaCondition",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "schemaId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "condition",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": "The user that has created the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModifiedBy",
              "schema": {
                "description": "The user that has updated the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the schema. Unique within the app.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SchemaDtoType",
                "nameOverride": undefined,
                "schema": "SchemaType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "category",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the category.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the category.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SchemaDtoProperties",
                "nameOverride": undefined,
                "schema": "SchemaPropertiesDto",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "isSingleton",
              "schema": {
                "description": "Indicates if the schema is a singleton.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isPublished",
              "schema": {
                "description": "Indicates if the schema is published.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": "The date and time when the schema has been created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModified",
              "schema": {
                "description": "The date and time when the schema has been modified last.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version of the schema.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "scripts",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SchemaDtoScripts",
                "nameOverride": undefined,
                "schema": "SchemaScriptsDto",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "previewUrls",
              "schema": {
                "description": "The preview Urls.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fieldsInLists",
              "schema": {
                "description": "The name of fields that are used in content lists.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fieldsInReferences",
              "schema": {
                "description": "The name of fields that are used in content references.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fieldRules",
              "schema": {
                "description": "The field rules.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SchemaDtoFieldRulesItem",
                  "nameOverride": undefined,
                  "schema": "FieldRuleDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "fields",
              "schema": {
                "description": "The list of fields.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SchemaDtoFieldsItem",
                  "nameOverride": undefined,
                  "schema": "FieldDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SchemaPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional label for the editor.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional label for the editor.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "hints",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Hints to describe the schema.",
                  "type": "nullable",
                  "value": {
                    "description": "Hints to describe the schema.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "contentsSidebarUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The url to a the sidebar plugin for content lists.",
                  "type": "nullable",
                  "value": {
                    "description": "The url to a the sidebar plugin for content lists.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "contentSidebarUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The url to a the sidebar plugin for content items.",
                  "type": "nullable",
                  "value": {
                    "description": "The url to a the sidebar plugin for content items.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "contentEditorUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The url to the editor plugin.",
                  "type": "nullable",
                  "value": {
                    "description": "The url to the editor plugin.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "validateOnPublish",
              "schema": {
                "description": "True to validate the content items on publish.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Tags for automation processes.",
                  "type": "nullable",
                  "value": {
                    "description": "Tags for automation processes.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaScriptsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SchemaScriptsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "query",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed for each content when querying contents.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed for each content when querying contents.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "queryPre",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed for all contents when querying contents.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed for all contents when querying contents.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "create",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when creating a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when creating a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "update",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when updating a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when updating a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "delete",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when deleting a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when deleting a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "change",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when change a content status.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when change a content status.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaType": {
          "description": "",
          "generatedName": "SchemaType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Default",
              "nameOverride": undefined,
              "value": "Default",
            },
            {
              "generatedName": "Singleton",
              "nameOverride": undefined,
              "value": "Singleton",
            },
            {
              "generatedName": "Component",
              "nameOverride": undefined,
              "value": "Component",
            },
          ],
        },
        "SchemasDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SchemasDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The schemas.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SchemasDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "SchemaDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ScriptRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ScriptRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "script",
              "schema": {
                "description": "The script to render.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchResultDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SearchResultDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the search result.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SearchResultDtoType",
                "nameOverride": undefined,
                "schema": "SearchResultType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An optional label.",
                  "type": "nullable",
                  "value": {
                    "description": "An optional label.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResultType": {
          "description": "",
          "generatedName": "SearchResultType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Asset",
              "nameOverride": undefined,
              "value": "Asset",
            },
            {
              "generatedName": "Content",
              "nameOverride": undefined,
              "value": "Content",
            },
            {
              "generatedName": "Dashboard",
              "nameOverride": undefined,
              "value": "Dashboard",
            },
            {
              "generatedName": "Setting",
              "nameOverride": undefined,
              "value": "Setting",
            },
            {
              "generatedName": "Rule",
              "nameOverride": undefined,
              "value": "Rule",
            },
            {
              "generatedName": "Schema",
              "nameOverride": undefined,
              "value": "Schema",
            },
          ],
        },
        "SignalRRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SignalRRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "connectionString",
              "schema": {
                "description": "The connection string to the Azure SignalR.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "hubName",
              "schema": {
                "description": "The name of the hub.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "action",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SignalRRuleActionDtoAction",
                "nameOverride": undefined,
                "schema": "ActionTypeEnum",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "methodName",
              "schema": {
                "description": "Set the Name of the hub method received by the customer.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "target",
              "schema": {
                "description": "Define target users or groups by id or name. One item per line. Not needed for Broadcast action.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payload",
              "schema": {
                "description": "Leave it empty to use the full event as body.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SimulatedRuleEventDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SimulatedRuleEventDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "eventId",
              "schema": {
                "description": "The unique event id.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "uniqueId",
              "schema": {
                "description": "The the unique id of the simulated event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "eventName",
              "schema": {
                "description": "The name of the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "event",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "conflict": [],
              "key": "enrichedEvent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "conflict": [],
              "key": "actionName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The data for the action.",
                  "type": "nullable",
                  "value": {
                    "description": "The data for the action.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "actionData",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the action.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the action.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "error",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the event.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the event.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "skipReasons",
              "schema": {
                "description": "The reason why the event has been skipped.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SimulatedRuleEventDtoSkipReasonsItem",
                  "nameOverride": undefined,
                  "schema": "SkipReason",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SimulatedRuleEventsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SimulatedRuleEventsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "total",
              "schema": {
                "description": "The total number of simulated rule events.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The simulated rule events.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SimulatedRuleEventsDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "SimulatedRuleEventDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SkipReason": {
          "description": "",
          "generatedName": "SkipReason",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "None",
              "nameOverride": undefined,
              "value": "None",
            },
            {
              "generatedName": "ConditionDoesNotMatch",
              "nameOverride": undefined,
              "value": "ConditionDoesNotMatch",
            },
            {
              "generatedName": "ConditionPrecheckDoesNotMatch",
              "nameOverride": undefined,
              "value": "ConditionPrecheckDoesNotMatch",
            },
            {
              "generatedName": "Disabled",
              "nameOverride": undefined,
              "value": "Disabled",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
            {
              "generatedName": "FromRule",
              "nameOverride": undefined,
              "value": "FromRule",
            },
            {
              "generatedName": "NoAction",
              "nameOverride": undefined,
              "value": "NoAction",
            },
            {
              "generatedName": "NoTrigger",
              "nameOverride": undefined,
              "value": "NoTrigger",
            },
            {
              "generatedName": "TooOld",
              "nameOverride": undefined,
              "value": "TooOld",
            },
            {
              "generatedName": "WrongEvent",
              "nameOverride": undefined,
              "value": "WrongEvent",
            },
            {
              "generatedName": "WrongEventForTrigger",
              "nameOverride": undefined,
              "value": "WrongEventForTrigger",
            },
          ],
        },
        "SlackRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "webhookUrl",
              "schema": {
                "description": "The slack webhook url.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The text that is sent as message to slack.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SortNode": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SortNode",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "path",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SortNodePath",
                "nameOverride": undefined,
                "schema": "PropertyPath",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "order",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SortNodeOrder",
                "nameOverride": undefined,
                "schema": "SortOrder",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "SortOrder": {
          "description": "",
          "generatedName": "SortOrder",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Ascending",
              "nameOverride": undefined,
              "value": "Ascending",
            },
            {
              "generatedName": "Descending",
              "nameOverride": undefined,
              "value": "Descending",
            },
          ],
        },
        "StatusInfoDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StatusInfoDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": "The name of the status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "color",
              "schema": {
                "description": "The color of the status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "StorageUsagePerDateDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StorageUsagePerDateDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "date",
              "schema": {
                "description": "The date when the usage was tracked.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "totalCount",
              "schema": {
                "description": "The number of assets.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "totalSize",
              "schema": {
                "description": "The size in bytes.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "StringContentType": {
          "description": "",
          "generatedName": "StringContentType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Unspecified",
              "nameOverride": undefined,
              "value": "Unspecified",
            },
            {
              "generatedName": "Html",
              "nameOverride": undefined,
              "value": "Html",
            },
            {
              "generatedName": "Markdown",
              "nameOverride": undefined,
              "value": "Markdown",
            },
          ],
        },
        "StringFieldEditor": {
          "description": "",
          "generatedName": "StringFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Input",
              "nameOverride": undefined,
              "value": "Input",
            },
            {
              "generatedName": "Color",
              "nameOverride": undefined,
              "value": "Color",
            },
            {
              "generatedName": "Markdown",
              "nameOverride": undefined,
              "value": "Markdown",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
            {
              "generatedName": "Html",
              "nameOverride": undefined,
              "value": "Html",
            },
            {
              "generatedName": "Radio",
              "nameOverride": undefined,
              "value": "Radio",
            },
            {
              "generatedName": "RichText",
              "nameOverride": undefined,
              "value": "RichText",
            },
            {
              "generatedName": "Slug",
              "nameOverride": undefined,
              "value": "Slug",
            },
            {
              "generatedName": "StockPhoto",
              "nameOverride": undefined,
              "value": "StockPhoto",
            },
            {
              "generatedName": "TextArea",
              "nameOverride": undefined,
              "value": "TextArea",
            },
          ],
        },
        "StringFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StringFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "StringFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfString",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "defaultValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The default value for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The default value for the field value.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "pattern",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The pattern to enforce a specific format for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The pattern to enforce a specific format for the field value.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "patternMessage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The validation message for the pattern.",
                  "type": "nullable",
                  "value": {
                    "description": "The validation message for the pattern.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "folderId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The initial id to the folder when the control supports file uploads.",
                  "type": "nullable",
                  "value": {
                    "description": "The initial id to the folder when the control supports file uploads.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minLength",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed length for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed length for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxLength",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed length for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed length for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minCharacters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed of normal characters for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed of normal characters for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxCharacters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed of normal characters for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed of normal characters for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minWords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed number of words for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed number of words for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxWords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed number of words for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed number of words for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "allowedValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The allowed values for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The allowed values for the field value.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "schemaIds",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The allowed schema ids that can be embedded.",
                  "type": "nullable",
                  "value": {
                    "description": "The allowed schema ids that can be embedded.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isUnique",
              "schema": {
                "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isEmbeddable",
              "schema": {
                "description": "Indicates that other content items or references are embedded.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "inlineEditable",
              "schema": {
                "description": "Indicates that the inline editor is enabled for this field.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "createEnum",
              "schema": {
                "description": "Indicates whether GraphQL Enum should be created.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "contentType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "StringFieldPropertiesDtoContentType",
                "nameOverride": undefined,
                "schema": "StringContentType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "StringFieldPropertiesDtoEditor",
                "nameOverride": undefined,
                "schema": "StringFieldEditor",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "SynchronizeSchemaDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpsertSchemaDto",
              "nameOverride": undefined,
              "schema": "UpsertSchemaDto",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SynchronizeSchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "noFieldDeletion",
              "schema": {
                "description": "True, when fields should not be deleted.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "noFieldRecreation",
              "schema": {
                "description": "True, when fields with different types should not be recreated.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "TagsFieldEditor": {
          "description": "",
          "generatedName": "TagsFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Tags",
              "nameOverride": undefined,
              "value": "Tags",
            },
            {
              "generatedName": "Checkboxes",
              "nameOverride": undefined,
              "value": "Checkboxes",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
          ],
        },
        "TagsFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TagsFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfReadonlyListOfString",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "defaultValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The default value.",
                  "type": "nullable",
                  "value": {
                    "description": "The default value.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "minItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The minimum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "maxItems",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum allowed items for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum allowed items for the field value.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "allowedValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The allowed values for the field value.",
                  "type": "nullable",
                  "value": {
                    "description": "The allowed values for the field value.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "createEnum",
              "schema": {
                "description": "Indicates whether GraphQL Enum should be created.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsFieldPropertiesDtoEditor",
                "nameOverride": undefined,
                "schema": "TagsFieldEditor",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "TeamDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TeamDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the team.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the team.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "version",
              "schema": {
                "description": "The version of the team.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": "The timestamp when the team has been created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "lastModified",
              "schema": {
                "description": "The timestamp when the team has been modified last.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "roleName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The role name of the user.",
                  "type": "nullable",
                  "value": {
                    "description": "The role name of the user.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TemplateDetailsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TemplateDetailsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "details",
              "schema": {
                "description": "The details of the template.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "TemplateDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TemplateDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the template.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": "The title of the template.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": "The description of the template.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isStarter",
              "schema": {
                "description": "True, if the template is a starter.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "TemplatesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TemplatesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The event consumers.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TemplatesDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "TemplateDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "TransferToTeamDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TransferToTeamDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "teamId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the team.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the team.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TranslateDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TranslateDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The text to translate.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "targetLanguage",
              "schema": {
                "description": "The target language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "sourceLanguage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional source language.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TranslationDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TranslationDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "result",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TranslationDtoResult",
                "nameOverride": undefined,
                "schema": "TranslationResultCode",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The translated text.",
                  "type": "nullable",
                  "value": {
                    "description": "The translated text.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TranslationResultCode": {
          "description": "",
          "generatedName": "TranslationResultCode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Translated",
              "nameOverride": undefined,
              "value": "Translated",
            },
            {
              "generatedName": "LanguageNotSupported",
              "nameOverride": undefined,
              "value": "LanguageNotSupported",
            },
            {
              "generatedName": "NotTranslated",
              "nameOverride": undefined,
              "value": "NotTranslated",
            },
            {
              "generatedName": "NotConfigured",
              "nameOverride": undefined,
              "value": "NotConfigured",
            },
            {
              "generatedName": "Unauthorized",
              "nameOverride": undefined,
              "value": "Unauthorized",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
          ],
        },
        "TweetRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TweetRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "accessToken",
              "schema": {
                "description": " The generated access token.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "accessSecret",
              "schema": {
                "description": " The generated access secret.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The text that is sent as tweet to twitter.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "TypesenseRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesenseRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "host",
              "schema": {
                "description": "The url to the instance or cluster.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "indexName",
              "schema": {
                "description": "The name of the index.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "apiKey",
              "schema": {
                "description": "The api key.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document",
              "schema": {
                "description": "The optional custom document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "delete",
              "schema": {
                "description": "The condition when to delete the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UIFieldEditor": {
          "description": "",
          "generatedName": "UiFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Separator",
              "nameOverride": undefined,
              "value": "Separator",
            },
          ],
        },
        "UIFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UiFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UiFieldPropertiesDtoEditor",
                "nameOverride": undefined,
                "schema": "UIFieldEditor",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "UISettingsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UiSettingsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "canCreateApps",
              "schema": {
                "description": "True when the user can create apps.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "canCreateTeams",
              "schema": {
                "description": "True when the user can create teams.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UpdateAppDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateAppDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional label of your app.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional label of your app.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional description of your app.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional description of your app.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateAppSettingsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateAppSettingsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "patterns",
              "schema": {
                "description": "The configured app patterns.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateAppSettingsDtoPatternsItem",
                  "nameOverride": undefined,
                  "schema": "PatternDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "editors",
              "schema": {
                "description": "The configured UI editors.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateAppSettingsDtoEditorsItem",
                  "nameOverride": undefined,
                  "schema": "EditorDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "hideScheduler",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Hide the scheduler for content items.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "hideDateTimeModeButton",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Hide the datetime mode button.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateAssetScriptsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateAssetScriptsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "query",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed for each asset when querying assets.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed for each asset when querying assets.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "queryPre",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed for all assets when querying assets.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed for all assets when querying assets.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "create",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when creating an asset.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when creating an asset.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "update",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when updating a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when updating a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "annotate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when annotating a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when annotating a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "move",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when moving a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when moving a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "delete",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The script that is executed when deleting a content.",
                  "type": "nullable",
                  "value": {
                    "description": "The script that is executed when deleting a content.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateClientDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateClientDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new display name of the client.",
                  "type": "nullable",
                  "value": {
                    "description": "The new display name of the client.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "role",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The role of the client.",
                  "type": "nullable",
                  "value": {
                    "description": "The role of the client.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "allowAnonymous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True to allow anonymous access without an access token for this client.",
                  "type": "nullable",
                  "value": {
                    "description": "True to allow anonymous access without an access token for this client.",
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "apiCallsLimit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The number of allowed api calls per month for this client.",
                  "type": "nullable",
                  "value": {
                    "description": "The number of allowed api calls per month for this client.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "apiTrafficLimit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The number of allowed api traffic bytes per month for this client.",
                  "type": "nullable",
                  "value": {
                    "description": "The number of allowed api traffic bytes per month for this client.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateFieldDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UpdateFieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "UpdateLanguageDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateLanguageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "isMaster",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Set the value to true to make the language the master.",
                  "type": "nullable",
                  "value": {
                    "description": "Set the value to true to make the language the master.",
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isOptional",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Set the value to true to make the language optional.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fallback",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional fallback languages.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional fallback languages.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateRoleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateRoleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "permissions",
              "schema": {
                "description": "Associated list of permissions.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Associated list of UI properties.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateRuleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateRuleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional rule name.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional rule name.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "trigger",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateRuleDtoTrigger",
                  "nameOverride": undefined,
                  "schema": "RuleTriggerDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateRuleDtoAction",
                  "nameOverride": undefined,
                  "schema": "RuleActionDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "isEnabled",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Enable or disable the rule.",
                  "type": "nullable",
                  "value": {
                    "description": "Enable or disable the rule.",
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateSchemaDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateSchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional label for the editor.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional label for the editor.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "hints",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Hints to describe the schema.",
                  "type": "nullable",
                  "value": {
                    "description": "Hints to describe the schema.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "contentsSidebarUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The url to a the sidebar plugin for content lists.",
                  "type": "nullable",
                  "value": {
                    "description": "The url to a the sidebar plugin for content lists.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "contentSidebarUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The url to a the sidebar plugin for content items.",
                  "type": "nullable",
                  "value": {
                    "description": "The url to a the sidebar plugin for content items.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "contentEditorUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The url to the editor plugin.",
                  "type": "nullable",
                  "value": {
                    "description": "The url to the editor plugin.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "validateOnPublish",
              "schema": {
                "description": "True to validate the content items on publish.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Tags for automation processes.",
                  "type": "nullable",
                  "value": {
                    "description": "Tags for automation processes.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateSettingDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateSettingDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "type": "unknown",
              },
            },
          ],
          "type": "object",
        },
        "UpdateTeamDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateTeamDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the team.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UpdateUserDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateUserDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": "The email of the user. Unique value.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "displayName",
              "schema": {
                "description": "The display name (usually first name and last name) of the user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "password",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The password of the user.",
                  "type": "nullable",
                  "value": {
                    "description": "The password of the user.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "permissions",
              "schema": {
                "description": "Additional permissions for the user.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateWorkflowDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateWorkflowDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the workflow.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the workflow.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "steps",
              "schema": {
                "description": "The workflow steps.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateWorkflowDtoStepsValue",
                  "nameOverride": undefined,
                  "schema": "WorkflowStepDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "schemaIds",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The schema ids.",
                  "type": "nullable",
                  "value": {
                    "description": "The schema ids.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "initial",
              "schema": {
                "description": "The initial step.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UpsertCommentDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpsertCommentDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The comment text.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The url where the comment is created.",
                  "type": "nullable",
                  "value": {
                    "description": "The url where the comment is created.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpsertSchemaDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpsertSchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpsertSchemaDtoProperties",
                  "nameOverride": undefined,
                  "schema": "SchemaPropertiesDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "scripts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpsertSchemaDtoScripts",
                  "nameOverride": undefined,
                  "schema": "SchemaScriptsDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "fieldsInReferences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The names of the fields that should be used in references.",
                  "type": "nullable",
                  "value": {
                    "description": "The names of the fields that should be used in references.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "fieldsInLists",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The names of the fields that should be shown in lists, including meta fields.",
                  "type": "nullable",
                  "value": {
                    "description": "The names of the fields that should be shown in lists, including meta fields.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "fields",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional fields.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional fields.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "UpsertSchemaDtoFieldsItem",
                      "nameOverride": undefined,
                      "schema": "UpsertSchemaFieldDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previewUrls",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional preview urls.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional preview urls.",
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "description": undefined,
                      "type": "nullable",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "fieldRules",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional field Rules.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional field Rules.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "UpsertSchemaDtoFieldRulesItem",
                      "nameOverride": undefined,
                      "schema": "FieldRuleDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "category",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The category.",
                  "type": "nullable",
                  "value": {
                    "description": "The category.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isPublished",
              "schema": {
                "description": "Set it to true to autopublish the schema.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UpsertSchemaFieldDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpsertSchemaFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isHidden",
              "schema": {
                "description": "Defines if the field is hidden.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isLocked",
              "schema": {
                "description": "Defines if the field is locked.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isDisabled",
              "schema": {
                "description": "Defines if the field is disabled.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "partitioning",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Determines the optional partitioning of the field.",
                  "type": "nullable",
                  "value": {
                    "description": "Determines the optional partitioning of the field.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UpsertSchemaFieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "nested",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The nested fields.",
                  "type": "nullable",
                  "value": {
                    "description": "The nested fields.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "UpsertSchemaFieldDtoNestedItem",
                      "nameOverride": undefined,
                      "schema": "UpsertSchemaNestedFieldDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpsertSchemaNestedFieldDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpsertSchemaNestedFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isHidden",
              "schema": {
                "description": "Defines if the field is hidden.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isLocked",
              "schema": {
                "description": "Defines if the field is locked.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isDisabled",
              "schema": {
                "description": "Defines if the field is disabled.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UpsertSchemaNestedFieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "UsageRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UsageRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "limit",
              "schema": {
                "description": "The number of monthly api calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "numDays",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The number of days to check or null for the current month.",
                  "type": "nullable",
                  "value": {
                    "description": "The number of days to check or null for the current month.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UserDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": "The email of the user. Unique value.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "displayName",
              "schema": {
                "description": "The display name (usually first name and last name) of the user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "isLocked",
              "schema": {
                "description": "Determines if the user is locked.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "permissions",
              "schema": {
                "description": "Additional permissions for the user.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UserProperty": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UserProperty",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UsersDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UsersDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "total",
              "schema": {
                "description": "The total number of users.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The users.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UsersDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "UserDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "WebhookMethod": {
          "description": "",
          "generatedName": "WebhookMethod",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "POST",
              "nameOverride": undefined,
              "value": "POST",
            },
            {
              "generatedName": "PUT",
              "nameOverride": undefined,
              "value": "PUT",
            },
            {
              "generatedName": "GET",
              "nameOverride": undefined,
              "value": "GET",
            },
            {
              "generatedName": "DELETE",
              "nameOverride": undefined,
              "value": "DELETE",
            },
            {
              "generatedName": "PATCH",
              "nameOverride": undefined,
              "value": "PATCH",
            },
          ],
        },
        "WebhookRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": "The url to the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "method",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhookRuleActionDtoMethod",
                "nameOverride": undefined,
                "schema": "WebhookMethod",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "payload",
              "schema": {
                "description": "Leave it empty to use the full event as body.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "payloadType",
              "schema": {
                "description": "The mime type of the payload.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "headers",
              "schema": {
                "description": "The message headers in the format '[Key]=[Value]', one entry per line.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "sharedSecret",
              "schema": {
                "description": "The shared secret that is used to calculate the payload signature.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "WorkflowDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "WorkflowDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The workflow id.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the workflow.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the workflow.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "steps",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The workflow steps.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkflowDtoStepsValue",
                    "nameOverride": undefined,
                    "schema": "WorkflowStepDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "schemaIds",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The schema ids.",
                  "type": "nullable",
                  "value": {
                    "description": "The schema ids.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "initial",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The initial step.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "WorkflowStepDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorkflowStepDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "transitions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The transitions.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkflowStepDtoTransitionsValue",
                    "nameOverride": undefined,
                    "schema": "WorkflowTransitionDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "color",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional color.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional color.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "validate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "True if the content should be validated when moving to this step.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "noUpdate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Indicates if updates should not be allowed.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "noUpdateExpression",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional expression that must evaluate to true when you want to prevent updates.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional expression that must evaluate to true when you want to prevent updates.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "noUpdateRoles",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional list of roles to restrict the updates for users with these roles.",
                  "type": "nullable",
                  "value": {
                    "description": "Optional list of roles to restrict the updates for users with these roles.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "WorkflowTransitionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorkflowTransitionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "expression",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional expression.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional expression.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "roles",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The optional restricted role.",
                  "type": "nullable",
                  "value": {
                    "description": "The optional restricted role.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "WorkflowsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "WorkflowsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "items",
              "schema": {
                "description": "The workflow.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkflowsDtoItemsItem",
                  "nameOverride": undefined,
                  "schema": "WorkflowDto",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "errors",
              "schema": {
                "description": "The errros that should be fixed.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "squidex-oauth-auth": {
          "type": "bearer",
        },
      },
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "https://localhost:5001",
        },
      ],
      "tags": [],
      "title": "Squidex API",
      "variables": {
        "appName": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
        },
      },
    },
  },
  "rootPackage": {
    "file": "openapi.json",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser suger simple 1`] = `
{
  "files": {
    "swagger.json": {
      "dependencies": [],
      "description": "CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.",
      "endpoints": [
        {
          "authed": true,
          "description": "list all buyers by the given organization",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListBuyersByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListBuyersByOrganization",
          "path": "/org/{orgId}/buyer",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListBuyersByOrganizationResponseItem",
                "nameOverride": undefined,
                "schema": "shared.IdentityBuyer",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list buyers by organization",
          "tags": [
            "Buyer",
          ],
        },
        {
          "authed": true,
          "description": "get buyer by the given organization and buyer id",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "GetBuyerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetBuyer",
          "path": "/org/{orgId}/buyer/{buyerId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Buyer ID",
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetBuyerResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityBuyer",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get buyer",
          "tags": [
            "Buyer",
          ],
        },
        {
          "authed": true,
          "description": "update buyer name and description by the given organization and buyer id",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "UpdateBuyerNameDescriptionRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateBuyerNameDescription",
          "path": "/org/{orgId}/buyer/{buyerId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Buyer ID",
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateBuyerNameDescriptionRequest",
              "nameOverride": undefined,
              "schema": "github_com_sugerio_marketplace-service_rds-db_lib.UpdateBuyerNameDescriptionParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateBuyerNameDescriptionResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityBuyer",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "update buyer name and description",
          "tags": [
            "Buyer",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements of the given buyer",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListEntitlementsByBuyerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByBuyer",
          "path": "/org/{orgId}/buyer/{buyerId}/entitlement",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Buyer ID",
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsByBuyerResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements by buyer",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "Create a new draft offer or update the existing draft offer. When updating draft offer, the offer.ID is required.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "CreateOrUpdateDraftOfferRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateOrUpdateDraftOffer",
          "path": "/org/{orgId}/draftOffer",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateOrUpdateDraftOfferRequest",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateOrUpdateDraftOfferResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "create or update draft offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements under the organization",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListEntitlementsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlements",
          "path": "/org/{orgId}/entitlement",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "Get the entitlement by ID",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "GetEntitlementRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetEntitlement",
          "path": "/org/{orgId}/entitlement/{entitlementId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetEntitlementResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadEntitlement",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get entitlement",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "Add the credit amount to the given Entitlement. The credit amount is accumulated & saved in the current Entitlement Term of the gvien Entitlement.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "AddEntitlementCreditRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AddEntitlementCredit",
          "path": "/org/{orgId}/entitlement/{entitlementId}/addCredit",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AddEntitlementCreditRequest",
              "nameOverride": undefined,
              "schema": "shared.AddEntitlementCreditParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AddEntitlementCreditResponse",
              "nameOverride": undefined,
              "schema": "shared.AddEntitlementCreditResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "add entitlement credit",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "Update the name of the given Entitlement",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "UpdateEntitlementNameRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateEntitlementName",
          "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementName",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateEntitlementNameRequest",
              "nameOverride": undefined,
              "schema": "github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateEntitlementNameResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadEntitlement",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "update entitlement name",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "List all Entitlement Terms of the given Entitlement",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListEntitlementTermsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementTerms",
          "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementTermsResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlementTerm",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlement terms",
          "tags": [
            "Entitlement Term",
          ],
        },
        {
          "authed": true,
          "description": "Get the entitlement term by ID",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "GetEntitlementTermRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetEntitlementTerm",
          "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm/{entitlementTermId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Entitlement Term ID",
              "name": "entitlementTermId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetEntitlementTermResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadEntitlementTerm",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get entitlement term",
          "tags": [
            "Entitlement Term",
          ],
        },
        {
          "authed": true,
          "description": "list UsageRecordGroups for the given organization and entitlement",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "ListUsageRecordGroupsByEntitlementRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordGroupsByEntitlement",
          "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "end date (UTC) in YYYY-MM-DD format, default is today",
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination size, default 20, max value is 1000",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination offset, default 0",
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordGroupsByEntitlementResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordGroupsResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordGroups by entitlement",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "It is recommended to provide the ID in the request body CreateUsageRecordGroupParams, so the report can be deduplicated. All duplicate report will return error code 409.",
          "errorStatusCode": [
            400,
            409,
            500,
          ],
          "generatedRequestName": "ReportUsageRecordGroupRequest",
          "headers": [],
          "method": "POST",
          "operationId": "ReportUsageRecordGroup",
          "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ReportUsageRecordGroupRequest",
              "nameOverride": undefined,
              "schema": "shared.CreateUsageRecordGroupParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ReportUsageRecordGroupResponse",
              "nameOverride": undefined,
              "schema": "shared.MeteringUsageRecordGroup",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "report usageRecordGroup",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "List usageRecordReports for the given organization and entitlement. Filter by entitlementTermId if it is given.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "ListUsageRecordReportsByEntitlementRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordReportsByEntitlement",
          "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordReport",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "The Entitlement Term ID, if not given, return the UsageRecordReports under the Entitlement",
              "name": "entitlementTermId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "end date (UTC) in YYYY-MM-DD format, default is today",
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination size, default 20, max value is 1000",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination offset, default 0",
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordReportsByEntitlementResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordReportsResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordReports by entitlement",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "List all integrations for the given organization.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListIntegrationsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListIntegrationsByOrganization",
          "path": "/org/{orgId}/integration",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListIntegrationsByOrganizationResponseItem",
                "nameOverride": undefined,
                "schema": "shared.IdentityIntegration",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list integrations by organization",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "For each organization, partner & service, there should be at most one integration.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "CreateIntegrationRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateIntegration",
          "path": "/org/{orgId}/integration",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateIntegrationRequest",
              "nameOverride": undefined,
              "schema": "shared.CreateIntegrationParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateIntegrationResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityIntegration",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "create integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "Get the integration for the given organization, partner & service.",
          "errorStatusCode": [
            404,
            500,
          ],
          "generatedRequestName": "GetIntegrationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Cloud Partner",
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "GetIntegrationRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
              "variableReference": undefined,
            },
            {
              "description": "Partner Service",
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "GetIntegrationRequestService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetIntegrationResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityIntegration",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "Update the given integration.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "UpdateIntegrationRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Cloud Partner",
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "UpdateIntegrationRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
              "variableReference": undefined,
            },
            {
              "description": "Partner Service",
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "UpdateIntegrationRequestService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateIntegrationRequest",
              "nameOverride": undefined,
              "schema": "shared.UpdateIntegrationParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateIntegrationResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityIntegration",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "update integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "delete the integration for the given orgId, partner and service.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "DeleteIntegrationRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DeleteIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Cloud Partner",
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "DeleteIntegrationRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
              "variableReference": undefined,
            },
            {
              "description": "Partner Service",
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "DeleteIntegrationRequestService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if deletion is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "delete integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "Verify the given integration, check whether it works correctly.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "VerifyIntegrationRequest",
          "headers": [],
          "method": "POST",
          "operationId": "VerifyIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}/verify",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Cloud Partner",
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyIntegrationRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
              "variableReference": undefined,
            },
            {
              "description": "Partner Service",
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyIntegrationRequestService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "whether it is verified or not",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "verify integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "List all offers under the given organization.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListOffersByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOffersByOrganization",
          "path": "/org/{orgId}/offer",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListOffersByOrganizationResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadOffer",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list offers by organization",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "Create a private offer under the given organization.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "CreateOfferRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateOffer",
          "path": "/org/{orgId}/offer",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateOfferRequest",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateOfferResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "create offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "Get the offer by the given offer ID.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "GetOfferRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetOffer",
          "path": "/org/{orgId}/offer/{offerId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Offer ID",
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetOfferResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "Only the offer with status = "DRAFT" or "CREATE_FAILED" is allowed to be deleted.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "DeleteOfferRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DeleteOffer",
          "path": "/org/{orgId}/offer/{offerId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Offer ID",
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if deletion is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "delete offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "Only the offer with status = "PENDING_ACCEPTANCE" or "PENDING_CANCEL" is allowed to cancel.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "CancelOfferRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CancelOffer",
          "path": "/org/{orgId}/offer/{offerId}/cancel",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Offer ID",
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if cancellation is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "cancel offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements under the given offer",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListEntitlementsByOfferRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByOffer",
          "path": "/org/{orgId}/offer/{offerId}/entitlement",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Offer ID",
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsByOfferResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements by offer",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "List all long running operations under the given organization, offer, entitlement, crmOpportunity or partnerOpportunity. Only provide one filter on a request.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListOperationsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOperations",
          "path": "/org/{orgId}/operation",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "filter by offerId",
              "name": "offerId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "filter by entitlementId",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "filter by crmOpportunityId",
              "name": "crmOpportunityId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "filter by partnerOpportunityId",
              "name": "partnerOpportunityId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListOperationsResponseItem",
                "nameOverride": undefined,
                "schema": "shared.Operation",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list operations",
          "tags": [
            "Operation",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements under the given partner",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListEntitlementsByPartnerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByPartner",
          "path": "/org/{orgId}/partner/{partner}/entitlement",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Cloud Partner",
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListEntitlementsByPartnerRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsByPartnerResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements by partner",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": false,
          "description": "List all offers under the given organization & cloud partner.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListOffersByPartnerRequest",
          "headers": [
            {
              "description": "Bearer Access Token",
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "GET",
          "operationId": "ListOffersByPartner",
          "path": "/org/{orgId}/partner/{partner}/offer",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Cloud Partner",
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListOffersByPartnerRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListOffersByPartnerResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadOffer",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list offers by partner",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "list all products under the given organization and cloud partner",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListProductsByPartnerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListProductsByPartner",
          "path": "/org/{orgId}/partner/{partner}/product",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Cloud Partner",
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListProductsByPartnerRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListProductsByPartnerResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadProduct",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list products by partner",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "list the revenue records for the given organization, product, entitlement, or buyer.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "ListRevenueRecordsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListRevenueRecords",
          "path": "/org/{orgId}/partner/{partner}/revenueRecord",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Cloud Partner",
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListRevenueRecordsRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Filter revenue record details by the given product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filter revenue record details by the given entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filter revenue record details by the given buyer ID",
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "end date (UTC) in YYYY-MM-DD format, default is today",
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination size, default 20, max value is 1000",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination offset, default 0",
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListRevenueRecordsResponse",
              "nameOverride": undefined,
              "schema": "shared.ListRevenueRecordsResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list revenue records",
          "tags": [
            "Report",
          ],
        },
        {
          "authed": true,
          "description": "list the raw revenue record details for the given organization, product, entitlement, or buyer.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "ListRevenueRecordDetailsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListRevenueRecordDetails",
          "path": "/org/{orgId}/partner/{partner}/revenueRecordDetail",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Cloud Partner",
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListRevenueRecordDetailsRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "Filter revenue record details by the given product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filter revenue record details by the given entitlement ID",
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filter revenue record details by the given buyer ID",
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "end date (UTC) in YYYY-MM-DD format, default is today",
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination size, default 20, max value is 1000",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination offset, default 0",
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListRevenueRecordDetailsResponse",
              "nameOverride": undefined,
              "schema": "shared.ListRevenueRecordDetailsResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list revenue record details",
          "tags": [
            "Report",
          ],
        },
        {
          "authed": true,
          "description": "list all products under the given organization",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListProductsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListProductsByOrganization",
          "path": "/org/{orgId}/product",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListProductsByOrganizationResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadProduct",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list products by organization",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "get product by product id",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "GetProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetProduct",
          "path": "/org/{orgId}/product/{productId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetProductResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadProduct",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get product",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "currently only the Fulfillment URL is allowed to update via this API.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "UpdateProductRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateProduct",
          "path": "/org/{orgId}/product/{productId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateProductRequest",
              "nameOverride": undefined,
              "schema": "shared.UpdateProductParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateProductResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadProduct",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "update product",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "only the product with status = "CREATE_FAILED" is allowed to be deleted.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "DeleteProductRequest",
          "headers": [],
          "method": "DELETE",
          "operationId": "DeleteProduct",
          "path": "/org/{orgId}/product/{productId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if deletion is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "delete product",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "list all metering dimensions of the given product",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListProductMeteringDimensionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListProductMeteringDimensions",
          "path": "/org/{orgId}/product/{productId}/dimension",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListProductMeteringDimensionsResponseItem",
                "nameOverride": undefined,
                "schema": "shared.AwsSaasProductDimension",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list metering dimensions of product",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements under the given product",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListEntitlementsByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByProduct",
          "path": "/org/{orgId}/product/{productId}/entitlement",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsByProductResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements by product",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "List all offers under the given organization & product.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "ListOffersByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOffersByProduct",
          "path": "/org/{orgId}/product/{productId}/offer",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListOffersByProductResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadOffer",
                "type": "reference",
              },
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list offers by product",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "list UsageRecordGroups for the given organization and product",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "ListUsageRecordGroupsByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordGroupsByProduct",
          "path": "/org/{orgId}/product/{productId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "end date (UTC) in YYYY-MM-DD format, default is today",
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination size, default 20, max value is 1000",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination offset, default 0",
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordGroupsByProductResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordGroupsResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordGroups by product",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "List usageRecordReports for the given organization and product",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "ListUsageRecordReportsByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordReportsByProduct",
          "path": "/org/{orgId}/product/{productId}/usageRecordReport",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "Product ID",
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "end date (UTC) in YYYY-MM-DD format, default is today",
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination size, default 20, max value is 1000",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination offset, default 0",
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordReportsByProductResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordReportsResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordReports by product",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "Get the revenue report of the given organization, product, entitlement, or buyer.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "GetRevenueReportRequest",
          "headers": [],
          "method": "POST",
          "operationId": "GetRevenueReport",
          "path": "/org/{orgId}/revenueReport",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetRevenueReportRequest",
              "nameOverride": undefined,
              "schema": "shared.GetRevenueReportParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetRevenueReportResponse",
              "nameOverride": undefined,
              "schema": "shared.RevenueReport",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get revenue report",
          "tags": [
            "Report",
          ],
        },
        {
          "authed": true,
          "description": "list UsageRecordGroups under the given organization.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "ListUsageRecordGroupsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordGroupsByOrganization",
          "path": "/org/{orgId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "end date (UTC) in YYYY-MM-DD format, default is today",
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination size, default 20, max value is 1000",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination offset, default 0",
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordGroupsByOrganizationResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordGroupsResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordGroups by organization",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "get UsageRecordGroup for the given organization and usageRecordGroup ID",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "GetUsageRecordGroupRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetUsageRecordGroup",
          "path": "/org/{orgId}/usageRecordGroup/{usageRecordGroupId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "UsageRecordGroup ID",
              "name": "usageRecordGroupId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetUsageRecordGroupResponse",
              "nameOverride": undefined,
              "schema": "shared.MeteringUsageRecordGroup",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get usageRecordGroup",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "List usageRecordReports under the given organization",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "ListUsageRecordReportsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordReportsByOrganization",
          "path": "/org/{orgId}/usageRecordReport",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [
            {
              "description": "start date (UTC) in YYYY-MM-DD format, default is 30 days before the endDate",
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "end date (UTC) in YYYY-MM-DD format, default is today",
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination size, default 20, max value is 1000",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List pagination offset, default 0",
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordReportsByOrganizationResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordReportsResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordReports by organization",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "get the usageRecordReport for a given organization and usageRecordReport ID.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "GetUsageRecordReportRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetUsageRecordReport",
          "path": "/org/{orgId}/usageRecordReport/{usageRecordReportId}",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
            {
              "description": "UsageRecordReport ID",
              "name": "usageRecordReportId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetUsageRecordReportResponse",
              "nameOverride": undefined,
              "schema": "shared.MeteringUsageRecordReport",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get usageRecordReport",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "get the daily usage report of the given entitlement, the default timespan is lifetime.",
          "errorStatusCode": [
            400,
            500,
          ],
          "generatedRequestName": "GetUsageReportRequest",
          "headers": [],
          "method": "POST",
          "operationId": "GetUsageReport",
          "path": "/org/{orgId}/usageReport",
          "pathParameters": [
            {
              "description": "Organization ID",
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetUsageReportRequest",
              "nameOverride": undefined,
              "schema": "shared.GetUsageReportParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetUsageReportResponse",
              "nameOverride": undefined,
              "schema": "shared.UsageReport",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get usage report",
          "tags": [
            "Report",
          ],
        },
        {
          "authed": false,
          "description": "Get the Bearer Access Token by giving the Suger API Client ID & Client Secret.",
          "errorStatusCode": [
            500,
          ],
          "generatedRequestName": "GetApiClientAccessTokenRequest",
          "headers": [],
          "method": "POST",
          "operationId": "GetApiClientAccessToken",
          "path": "/public/apiClient/accessToken",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetApiClientAccessTokenRequest",
              "nameOverride": undefined,
              "schema": "shared.GetApiClientAccessTokenParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetApiClientAccessTokenResponse",
              "nameOverride": undefined,
              "schema": "shared.ApiClientAccessToken",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get api access token",
          "tags": [
            "API",
          ],
        },
      ],
      "errors": {
        "400": {
          "description": undefined,
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "type": "unknown",
          },
        },
        "404": {
          "description": undefined,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "409": {
          "description": undefined,
          "generatedName": "ConflictError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "500": {
          "description": undefined,
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "type": "unknown",
          },
        },
      },
      "nonRequestReferencedSchemas": [
        "shared.IdentityBuyer",
        "shared.WorkloadEntitlement",
        "shared.WorkloadOffer",
        "shared.AddEntitlementCreditResponse",
        "shared.WorkloadEntitlementTerm",
        "shared.ListUsageRecordGroupsResponse",
        "shared.MeteringUsageRecordGroup",
        "shared.ListUsageRecordReportsResponse",
        "shared.IdentityIntegration",
        "shared.Operation",
        "shared.WorkloadProduct",
        "shared.ListRevenueRecordsResponse",
        "shared.ListRevenueRecordDetailsResponse",
        "shared.AwsSaasProductDimension",
        "shared.RevenueReport",
        "shared.MeteringUsageRecordReport",
        "shared.UsageReport",
        "shared.ApiClientAccessToken",
        "AzureValidationResult",
        "AzureLocalizedDateTime",
        "AzureMarketplacePrivateOfferAcceptanceLink",
        "AzureMarketplacePrivateOfferBeneficiary",
        "AzureMarketplacePrivateOfferPricing",
        "AzureMarketplacePrivateOfferPromotionReference",
        "AzureMarketplaceValidation",
        "AzureMarketplacePrivateOfferBeneficiaryRecipient",
        "AzurePriceAndAvailabilityPrivateOfferPlan",
        "AzurePriceAndAvailabilityPrivateOfferPrice",
        "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
        "AzurePriceAndAvailabilityRecurrentPrice",
        "AzurePriceAndAvailabilityRecurrentPriceItem",
        "AzureMarketplaceTerm",
        "AzureMarketplacePrice",
        "AzurePriceCadence",
        "AzurePricingUnit",
        "AzurePrice",
        "AzureProductAvailability",
        "AzureProductBranch",
        "AzureTypeValue",
        "AzureProductListing",
        "AzureProductPackageConfiguration",
        "AzureProductProperty",
        "AzureProductSetup",
        "AzureProductSubmission",
        "AzureProductVariant",
        "AzureAudience",
        "AzureProductVariantCustomMeter",
        "AzureMarketState",
        "AzureMarket",
        "AzureProductVariantPriceSchedule",
        "AzureProductVariantTrial",
        "AzureProductListingAsset",
        "AzureListingContact",
        "AzureListingUri",
        "AzurePendingUpdateInfo",
        "AzureVariantResource",
        "AzureGovernmentCertification",
        "AzureProductFeatureAvailability",
        "AzureIncludedBaseQuantity",
        "AzureLocalizedTimeRange",
        "AzurePriceSchedule",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse",
        "sql.NullTime",
        "middleware.Metadata",
        "types.UsageRecordResult",
        "types.UsageRecord",
        "servicecontrol.Status",
        "servicecontrol.ReportError",
        "shared.CompanyInfo",
        "shared.AwsIntegrationCredential",
        "shared.AwsSaasProductDescription",
        "shared.AwsSaasProductPromotionalResources",
        "shared.AwsSaasProductSupportInformation",
        "shared.AwsSaasProductVersion",
        "shared.AwsSaasProductAdditionalResource",
        "shared.AwsSaasProductDeliveryOption",
        "shared.AwsSnsSubscriptionStatus",
        "shared.AzureBuyerInfo",
        "shared.AzureIntegrationCredential",
        "shared.AzureADIdentifier",
        "shared.AzureMarketplaceSubscriptionStatus",
        "shared.AzureTerm",
        "shared.AwsAccountIdentifier",
        "shared.GcpMarketplaceUserAccount",
        "shared.CommitDimensionTimeUnit",
        "shared.CommitDimensionType",
        "shared.IntegrationInfo",
        "shared.MeteringUsageRecordGroupMetaInfo",
        "types.Entitlement",
        "shared.AzureMarketplaceSubscription",
        "shared.CommitDimension",
        "shared.MeteringDimension",
        "shared.EulaType",
        "shared.GcpMarketplaceEntitlement",
        "shared.GcpPurchasePlan",
        "shared.PaymentInstallment",
        "shared.EntitlementTermType",
        "shared.GcpCommerceProducerExternalAccountSpec",
        "shared.GcpCommerceProducerMarketingSpec",
        "shared.GcpCommerceProducerPurchaseSpec",
        "shared.GcpCommerceProducerSupportSpec",
        "shared.GcpCommerceProducerPriceModel",
        "shared.GcpCommerceProducerPriceSubscription",
        "shared.GcpCommerceProducerPriceUsage",
        "shared.GcpCommerceProducerPrice",
        "shared.GcpCommerceProducerPriceTier",
        "shared.ValueType",
        "shared.GcpCommerceProducerPurchaseMetric",
        "shared.GcpCommerceProducerServiceBilling",
        "shared.GcpMarketplaceConsumer",
        "shared.GcpMarketplaceEntitlementState",
        "shared.GcpMarketplaceUserAccountApproval",
        "shared.GcpMarketplaceUserAccountState",
        "shared.GcpUserInfo",
        "shared.GcpMarketplaceUserAccountApprovalState",
        "shared.GcpCommerceProducerListingSpec",
        "shared.GcpCommerceProducerServiceConfig",
        "shared.GcpCommerceProducerPriceInfo",
        "shared.RevenueReportType",
        "shared.HubspotCrmCredential",
        "shared.BuyerInfo",
        "shared.AwsAceIntegration",
        "shared.AwsMarketplaceIntegration",
        "shared.AzureIntegration",
        "shared.GcpIntegration",
        "shared.HubspotCrmIntegration",
        "shared.SalesforceCrmIntegration",
        "shared.SlackIntegration",
        "shared.RevenueRecordDetail",
        "shared.RevenueRecord",
        "shared.UsageCount",
        "shared.MeteringUsageRecordReportInfo",
        "marketplacemetering.BatchMeterUsageOutput",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse",
        "servicecontrol.ReportResponse",
        "shared.NotificationEventAction",
        "shared.EntityType",
        "shared.NotificationEventStatus",
        "AzureMarketplacePrivateOffer",
        "shared.Contact",
        "shared.NotificationEvent",
        "shared.OperationType",
        "shared.AwsSaasProduct",
        "shared.AwsSnsSubscription",
        "AzureProduct",
        "shared.GcpProduct",
        "shared.RevenueRecordInfo",
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
        "shared.SalesforceCrmCredential",
        "shared.SalesforceSyncFilter",
        "slack.OAuthV2ResponseAuthedUser",
        "slack.OAuthV2ResponseEnterprise",
        "slack.OAuthResponseIncomingWebhook",
        "slack.OAuthV2ResponseTeam",
        "shared.EntitlementUsageRecord",
        "shared.EntitlementInfo",
        "shared.EntitlementTermInfo",
        "shared.OfferInfo",
        "shared.OfferMetaInfo",
        "shared.ProductInfo",
        "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag",
        "types.UsageAllocation",
        "types.UsageRecordResultStatus",
      ],
      "schemas": {
        "AzureAudience": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureAudience",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureGovernmentCertification": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureGovernmentCertification",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "validationResults",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureGovernmentCertificationValidationResultsItem",
                    "nameOverride": undefined,
                    "schema": "AzureValidationResult",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureIncludedBaseQuantity": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureIncludedBaseQuantity",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "isInfinite",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "recurringUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureIncludedBaseQuantityRecurringUnit",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Monthly",
                      "nameOverride": undefined,
                      "value": "Monthly",
                    },
                    {
                      "generatedName": "Annual",
                      "nameOverride": undefined,
                      "value": "Annual",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureListingContact": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureListingContact",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "phone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureListingContactType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "CustomerSupport",
                      "nameOverride": undefined,
                      "value": "CustomerSupport",
                    },
                    {
                      "generatedName": "Engineering",
                      "nameOverride": undefined,
                      "value": "Engineering",
                    },
                    {
                      "generatedName": "ChannelManager",
                      "nameOverride": undefined,
                      "value": "ChannelManager",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureListingUri": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureListingUri",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "displayText",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "subtype",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureLocalizedDateTime": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureLocalizedDateTime",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "dateTimeInUtc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "localizePerMarket",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureLocalizedTimeRange": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureLocalizedTimeRange",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "endAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureLocalizedTimeRangeEndAt",
                  "nameOverride": undefined,
                  "schema": "AzureLocalizedDateTime",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "startAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureLocalizedTimeRangeStartAt",
                  "nameOverride": undefined,
                  "schema": "AzureLocalizedDateTime",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarket",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "marketCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ISO Country Code",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketState": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketState",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "marketCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ISO Country Code",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketStateState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Disabled",
                      "nameOverride": undefined,
                      "value": "Disabled",
                    },
                    {
                      "generatedName": "Enabled",
                      "nameOverride": undefined,
                      "value": "Enabled",
                    },
                    {
                      "generatedName": "StopSelling",
                      "nameOverride": undefined,
                      "value": "StopSelling",
                    },
                    {
                      "generatedName": "Terminated",
                      "nameOverride": undefined,
                      "value": "Terminated",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrice",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ISO 4217 currency code",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "markets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "price",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "default 0",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "prices",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "type": "unknown",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOffer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOffer",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "$schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "acceptBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "in format YYYY-MM-DD",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "acceptanceLinks",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferAcceptanceLinksItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrivateOfferAcceptanceLink",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiaries",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "array of email addresses.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferBeneficiariesItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrivateOfferBeneficiary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "eTag",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "end",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "in format YYYY-MM-DD",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "in format of "private-offer/private-offer-durable-id"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastModified",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "in format YYYY-MM-DD",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "notificationContacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "array of email addresses of the users to be notified of any changes in the private offer status.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "preparedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "pricing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Up to 10 pricing entries are allowed.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferPricingItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrivateOfferPricing",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "privateOfferType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPrivateOfferType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "customerPromotion",
                      "nameOverride": undefined,
                      "value": "customerPromotion",
                    },
                    {
                      "generatedName": "cspPromotion",
                      "nameOverride": undefined,
                      "value": "cspPromotion",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "start",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "in format YYYY-MM-DD, if VariableStartDate = true, this field should be empty.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "draft",
                      "nameOverride": undefined,
                      "value": "draft",
                    },
                    {
                      "generatedName": "live",
                      "nameOverride": undefined,
                      "value": "live",
                    },
                    {
                      "generatedName": "withdrawn",
                      "nameOverride": undefined,
                      "value": "withdrawn",
                    },
                    {
                      "generatedName": "deleted",
                      "nameOverride": undefined,
                      "value": "deleted",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "subState",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferSubState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "pendingAcceptance",
                      "nameOverride": undefined,
                      "value": "pendingAcceptance",
                    },
                    {
                      "generatedName": "accepted",
                      "nameOverride": undefined,
                      "value": "accepted",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "termsAndConditionsDocSasUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "upgradedFrom",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferUpgradedFrom",
                  "nameOverride": undefined,
                  "schema": "AzureMarketplacePrivateOfferPromotionReference",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "validations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferValidationsItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplaceValidation",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "variableStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferAcceptanceLink": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferAcceptanceLink",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "beneficiaryId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Customer Billing Account ID.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferBeneficiary": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferBeneficiary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "beneficiaryRecipients",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferBeneficiaryBeneficiaryRecipientsItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrivateOfferBeneficiaryRecipient",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "the customer billing account id.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferBeneficiaryRecipient": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferBeneficiaryRecipient",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "recipientType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferBeneficiaryRecipientRecipientType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "cspCustomer",
                      "nameOverride": undefined,
                      "value": "cspCustomer",
                    },
                    {
                      "generatedName": "billingGroup",
                      "nameOverride": undefined,
                      "value": "billingGroup",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferPricing": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferPricing",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "discountPercentage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "between 0 and 100",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "discountType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPricingDiscountType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "percentage",
                      "nameOverride": undefined,
                      "value": "percentage",
                    },
                    {
                      "generatedName": "absolute",
                      "nameOverride": undefined,
                      "value": "absolute",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "originalPlan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "the pricing plan of the original plan.",
                  "file": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPricingOriginalPlan",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "plan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "in format of "plan/product-durable-id/plan-durable-id"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "planName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "planType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The type of the plan, FLAT_RATE or PER_USER.",
                  "generatedName": "AzureMarketplacePrivateOfferPricingPlanType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "FLAT_RATE",
                      "nameOverride": undefined,
                      "value": "FLAT_RATE",
                    },
                    {
                      "generatedName": "PER_USER",
                      "nameOverride": undefined,
                      "value": "PER_USER",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "priceDetails",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "privateOfferPlan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "the pricing plan of the private offer",
                  "file": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPricingPrivateOfferPlan",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "product",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "in format of "product/product-durable-id"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sugerOfferId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferPromotionReference": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferPromotionReference",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplaceTerm": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplaceTerm",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplaceTermType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "day",
                      "nameOverride": undefined,
                      "value": "day",
                    },
                    {
                      "generatedName": "week",
                      "nameOverride": undefined,
                      "value": "week",
                    },
                    {
                      "generatedName": "month",
                      "nameOverride": undefined,
                      "value": "month",
                    },
                    {
                      "generatedName": "year",
                      "nameOverride": undefined,
                      "value": "year",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "default 0",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplaceValidation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplaceValidation",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "$schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplaceValidationCode",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "businessValidationError",
                      "nameOverride": undefined,
                      "value": "businessValidationError",
                    },
                    {
                      "generatedName": "collectionLimitExceeded",
                      "nameOverride": undefined,
                      "value": "collectionLimitExceeded",
                    },
                    {
                      "generatedName": "invalidId",
                      "nameOverride": undefined,
                      "value": "invalidId",
                    },
                    {
                      "generatedName": "invalidEntityStatus",
                      "nameOverride": undefined,
                      "value": "invalidEntityStatus",
                    },
                    {
                      "generatedName": "invalidRequest",
                      "nameOverride": undefined,
                      "value": "invalidRequest",
                    },
                    {
                      "generatedName": "invalidResource",
                      "nameOverride": undefined,
                      "value": "invalidResource",
                    },
                    {
                      "generatedName": "invalidState",
                      "nameOverride": undefined,
                      "value": "invalidState",
                    },
                    {
                      "generatedName": "notDeployed",
                      "nameOverride": undefined,
                      "value": "notDeployed",
                    },
                    {
                      "generatedName": "notSupported",
                      "nameOverride": undefined,
                      "value": "notSupported",
                    },
                    {
                      "generatedName": "operationCanceled",
                      "nameOverride": undefined,
                      "value": "operationCanceled",
                    },
                    {
                      "generatedName": "productLocked",
                      "nameOverride": undefined,
                      "value": "productLocked",
                    },
                    {
                      "generatedName": "resourceNotFound",
                      "nameOverride": undefined,
                      "value": "resourceNotFound",
                    },
                    {
                      "generatedName": "schemaValidationError",
                      "nameOverride": undefined,
                      "value": "schemaValidationError",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "level",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplaceValidationLevel",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "informational",
                      "nameOverride": undefined,
                      "value": "informational",
                    },
                    {
                      "generatedName": "warning",
                      "nameOverride": undefined,
                      "value": "warning",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePendingUpdateInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePendingUpdateInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "updateType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePrice",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "currencyCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ISO currency code, Three characters",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "openPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "priceTierID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityPrivateOfferCustomMeters": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "meters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "conflict": [],
              "key": "priceInputOption",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "default "usd"",
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferCustomMetersPriceInputOption",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "perMarket",
                      "nameOverride": undefined,
                      "value": "perMarket",
                    },
                    {
                      "generatedName": "usd",
                      "nameOverride": undefined,
                      "value": "usd",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityPrivateOfferPlan": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlan",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "$schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "plan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "pricing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanPricing",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPrice",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "product",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "validations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanValidationsItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplaceValidation",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityPrivateOfferPrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityPrivateOfferPrice",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "customMeters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferPriceCustomMeters",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "recurrentPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferPriceRecurrentPrice",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityRecurrentPrice",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityRecurrentPrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityRecurrentPrice",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "priceInputOption",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "default "usd"",
                  "generatedName": "AzurePriceAndAvailabilityRecurrentPricePriceInputOption",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "perMarket",
                      "nameOverride": undefined,
                      "value": "perMarket",
                    },
                    {
                      "generatedName": "usd",
                      "nameOverride": undefined,
                      "value": "usd",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "prices",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzurePriceAndAvailabilityRecurrentPricePricesItem",
                    "nameOverride": undefined,
                    "schema": "AzurePriceAndAvailabilityRecurrentPriceItem",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityRecurrentPriceItem": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItem",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "billingTerm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemBillingTerm",
                  "nameOverride": undefined,
                  "schema": "AzureMarketplaceTerm",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "paymentOption",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemPaymentOption",
                  "nameOverride": undefined,
                  "schema": "AzureMarketplaceTerm",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "pricePerPaymentInUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "prices",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemPricesItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrice",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceCadence": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceCadence",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceCadenceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Month",
                      "nameOverride": undefined,
                      "value": "Month",
                    },
                    {
                      "generatedName": "Year",
                      "nameOverride": undefined,
                      "value": "Year",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceSchedule": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceSchedule",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "priceCadence",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceSchedulePriceCadence",
                  "nameOverride": undefined,
                  "schema": "AzurePriceCadence",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "pricingModel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceSchedulePricingModel",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Flat",
                      "nameOverride": undefined,
                      "value": "Flat",
                    },
                    {
                      "generatedName": "Recurring",
                      "nameOverride": undefined,
                      "value": "Recurring",
                    },
                    {
                      "generatedName": "Usage",
                      "nameOverride": undefined,
                      "value": "Usage",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "pricingUnits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzurePriceSchedulePricingUnitsItem",
                    "nameOverride": undefined,
                    "schema": "AzurePricingUnit",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "retailPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceScheduleRetailPrice",
                  "nameOverride": undefined,
                  "schema": "AzurePrice",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePricingUnit": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePricingUnit",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "isUnlimitedUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "lowerUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePricingUnitName",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "sharedcore",
                      "nameOverride": undefined,
                      "value": "sharedcore",
                    },
                    {
                      "generatedName": "transactions",
                      "nameOverride": undefined,
                      "value": "transactions",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "unitType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "upperUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "availabilities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductAvailabilitiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductAvailability",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "branches",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductBranchesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductBranch",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "externalIDs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductExternalIDsItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "isModularPublishing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "listings",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductListingsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductListing",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "packageConfigurations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductPackageConfigurationsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductPackageConfiguration",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductPropertiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductProperty",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "setup",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Not original fields. They are populated by other API calls",
                  "file": undefined,
                  "generatedName": "AzureProductSetup",
                  "nameOverride": undefined,
                  "schema": "AzureProductSetup",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "submissions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSubmissionsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductSubmission",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "variants",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductVariant",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductAvailability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductAvailability",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "emailAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductAvailabilityEmailAudiencesItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "enterpriseLicensing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "subscriptionAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductAvailabilitySubscriptionAudiencesItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductBranch": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductBranch",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "currentDraftInstanceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "module",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "variantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductFeatureAvailability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductFeatureAvailability",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "customMeters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityCustomMetersItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductVariantCustomMeter",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "isHidden",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "marketStates",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityMarketStatesItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketState",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "markets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityMarketsItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarket",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "priceSchedules",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityPriceSchedulesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductVariantPriceSchedule",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityPropertiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ResourceType = FeatureAvailability",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "subscriptionAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilitySubscriptionAudiencesItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "tenantAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityTenantAudiencesItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "trial",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureProductFeatureAvailabilityTrial",
                  "nameOverride": undefined,
                  "schema": "AzureProductVariantTrial",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductFeatureAvailabilityVisibility",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Public",
                      "nameOverride": undefined,
                      "value": "Public",
                    },
                    {
                      "generatedName": "Private",
                      "nameOverride": undefined,
                      "value": "Private",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductListing": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductListing",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "accessInformation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "assets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Not original fields. They are populated by other API calls",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductListingAssetsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductListingAsset",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "compatibleProducts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "gettingStartedInstructions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "keywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "languageCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "listingContacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductListingListingContactsItem",
                    "nameOverride": undefined,
                    "schema": "AzureListingContact",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "listingUris",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductListingListingUrisItem",
                    "nameOverride": undefined,
                    "schema": "AzureListingUri",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "productDisplayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "publisherName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductListingResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureListing",
                      "nameOverride": undefined,
                      "value": "AzureListing",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "shortDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "summary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductListingAsset": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductListingAsset",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fileName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fileSasUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "order",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "publisherDefinedSasUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductListingAssetResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ListingAsset",
                      "nameOverride": undefined,
                      "value": "ListingAsset",
                    },
                    {
                      "generatedName": "ListingImage",
                      "nameOverride": undefined,
                      "value": "ListingImage",
                    },
                    {
                      "generatedName": "ListingVideo",
                      "nameOverride": undefined,
                      "value": "ListingVideo",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductListingAssetState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "PendingUpload",
                      "nameOverride": undefined,
                      "value": "PendingUpload",
                    },
                    {
                      "generatedName": "Uploaded",
                      "nameOverride": undefined,
                      "value": "Uploaded",
                    },
                    {
                      "generatedName": "InProcessing",
                      "nameOverride": undefined,
                      "value": "InProcessing",
                    },
                    {
                      "generatedName": "Processed",
                      "nameOverride": undefined,
                      "value": "Processed",
                    },
                    {
                      "generatedName": "ProcessFailed",
                      "nameOverride": undefined,
                      "value": "ProcessFailed",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductPackageConfiguration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductPackageConfiguration",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "azureActiveDirectoryApplicationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "azureActiveDirectoryTenantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "connectionWebhook",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "landingPageUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductPackageConfigurationResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureSoftwareAsAServicePackageConfiguration",
                      "nameOverride": undefined,
                      "value": "AzureSoftwareAsAServicePackageConfiguration",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductProperty": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductProperty",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "additionalCategories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "appVersion",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "applicableProducts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "categories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "customAmendments",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "extendedProperties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "globalAmendmentTerms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "hideKeys",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "industries",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "leveledCategories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "leveledIndustries",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "marketingOnlyChange",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "productTags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "submissionVersion",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "termsOfUse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "useEnterpriseContract",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductSetup": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductSetup",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "callToAction",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSetupCallToAction",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "free",
                      "nameOverride": undefined,
                      "value": "free",
                    },
                    {
                      "generatedName": "FreeTrial",
                      "nameOverride": undefined,
                      "value": "free-trial",
                    },
                    {
                      "generatedName": "ContactMe",
                      "nameOverride": undefined,
                      "value": "contact-me",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "channelStates",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSetupChannelStatesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "enableTestDrive",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSetupResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureProductSetup",
                      "nameOverride": undefined,
                      "value": "AzureProductSetup",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "sellingOption",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSetupSellingOption",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ListingOnly",
                      "nameOverride": undefined,
                      "value": "ListingOnly",
                    },
                    {
                      "generatedName": "ListAndSell",
                      "nameOverride": undefined,
                      "value": "ListAndSell",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "testDriveType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "trialUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductSubmission": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductSubmission",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "areResourcesReady",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "pendingUpdateInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureProductSubmissionPendingUpdateInfo",
                  "nameOverride": undefined,
                  "schema": "AzurePendingUpdateInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "publishedTimeInUtc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "releaseNumber",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSubmissionResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Submission",
                      "nameOverride": undefined,
                      "value": "Submission",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "resources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSubmissionResourcesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSubmissionState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Inprogress",
                      "nameOverride": undefined,
                      "value": "Inprogress",
                    },
                    {
                      "generatedName": "Published",
                      "nameOverride": undefined,
                      "value": "Published",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "subState",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSubmissionSubState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "InDraft",
                      "nameOverride": undefined,
                      "value": "InDraft",
                    },
                    {
                      "generatedName": "Submitted",
                      "nameOverride": undefined,
                      "value": "Submitted",
                    },
                    {
                      "generatedName": "Failed",
                      "nameOverride": undefined,
                      "value": "Failed",
                    },
                    {
                      "generatedName": "FailedInCertification",
                      "nameOverride": undefined,
                      "value": "FailedInCertification",
                    },
                    {
                      "generatedName": "ReadyToPublish",
                      "nameOverride": undefined,
                      "value": "ReadyToPublish",
                    },
                    {
                      "generatedName": "Publishing",
                      "nameOverride": undefined,
                      "value": "Publishing",
                    },
                    {
                      "generatedName": "Published",
                      "nameOverride": undefined,
                      "value": "Published",
                    },
                    {
                      "generatedName": "InStore",
                      "nameOverride": undefined,
                      "value": "InStore",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "targets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSubmissionTargetsItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "variantResources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSubmissionVariantResourcesItem",
                    "nameOverride": undefined,
                    "schema": "AzureVariantResource",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariant": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariant",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "azureGovernmentCertifications",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantAzureGovernmentCertificationsItem",
                    "nameOverride": undefined,
                    "schema": "AzureGovernmentCertification",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "cloudAvailabilities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "conversionPaths",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "extendedProperties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantExtendedPropertiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "featureAvailabilities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Not original fields. They are populated by other API calls",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantFeatureAvailabilitiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductFeatureAvailability",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "leadGenID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "referenceVariantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureSkuVariant",
                      "nameOverride": undefined,
                      "value": "AzureSkuVariant",
                    },
                    {
                      "generatedName": "AzureTestDriveVariant",
                      "nameOverride": undefined,
                      "value": "AzureTestDriveVariant",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "InActive",
                      "nameOverride": undefined,
                      "value": "InActive",
                    },
                    {
                      "generatedName": "Active",
                      "nameOverride": undefined,
                      "value": "Active",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariantCustomMeter": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariantCustomMeter",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "displayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "includedBaseQuantities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantCustomMeterIncludedBaseQuantitiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureIncludedBaseQuantity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isEnabled",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "priceInUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "uniqueID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "unitOfMeasure",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariantPriceSchedule": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariantPriceSchedule",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "dateTimeRange",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureProductVariantPriceScheduleDateTimeRange",
                  "nameOverride": undefined,
                  "schema": "AzureLocalizedTimeRange",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "isBaseSchedule",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "There is only one base schedule.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "marketCodes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ISO country code",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "schedules",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantPriceScheduleSchedulesItem",
                    "nameOverride": undefined,
                    "schema": "AzurePriceSchedule",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariantTrial": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariantTrial",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "dateTimeRange",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureProductVariantTrialDateTimeRange",
                  "nameOverride": undefined,
                  "schema": "AzureLocalizedTimeRange",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "duration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "durationType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantTrialDurationType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Minute",
                      "nameOverride": undefined,
                      "value": "Minute",
                    },
                    {
                      "generatedName": "Days",
                      "nameOverride": undefined,
                      "value": "Days",
                    },
                    {
                      "generatedName": "Months",
                      "nameOverride": undefined,
                      "value": "Months",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantTrialType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "NoTrial",
                      "nameOverride": undefined,
                      "value": "NoTrial",
                    },
                    {
                      "generatedName": "TimedAccess",
                      "nameOverride": undefined,
                      "value": "TimedAccess",
                    },
                    {
                      "generatedName": "TimedUsage",
                      "nameOverride": undefined,
                      "value": "TimedUsage",
                    },
                    {
                      "generatedName": "Unlimited",
                      "nameOverride": undefined,
                      "value": "Unlimited",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureTypeValue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureTypeValue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureValidationResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureValidationResult",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "errorMessage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "memberNames",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureVariantResource": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureVariantResource",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "resources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureVariantResourceResourcesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "variantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTag",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "One part of a key-value pair that makes up a tag. A key is a label that acts
like a category for the specific tag values.

This member is required.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "One part of a key-value pair that makes up a tag. A value acts as a descriptor
within a tag category (key). The value can be empty or null.

This member is required.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "result",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponseResultItem",
                    "nameOverride": undefined,
                    "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessage",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "dimension",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Dimension identifier",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "effectiveStartTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Time in UTC when the usage event occurred",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "error",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageError",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "messageTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Time this message was created in UTC",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "planId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Plan associated with the purchased offer",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Number of units consumed",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Identifier of the resource against which usage is emitted",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Identifier of the managed app resource against which usage is emitted",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Status of the operation.",
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageStatus",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageEventId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier associated with the usage event",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "additionalInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "acceptedMessage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfoAcceptedMessage",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "dimension",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Dimension identifier",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "effectiveStartTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Time in UTC when the usage event occurred",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "messageTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Time this message was created in UTC",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "planId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Plan associated with the purchased offer",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Number of units consumed",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Identifier of the resource against which usage is emitted",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resourceUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Identifier of the managed app resource against which usage is emitted",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Status of the operation.",
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseStatus",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageEventId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Unique identifier associated with the usage event",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum": {
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Accepted",
              "nameOverride": "Accepted",
              "value": "Accepted",
            },
            {
              "generatedName": "Expired",
              "nameOverride": "Expired",
              "value": "Expired",
            },
            {
              "generatedName": "Duplicate",
              "nameOverride": "Duplicate",
              "value": "Duplicate",
            },
            {
              "generatedName": "Error",
              "nameOverride": "Error",
              "value": "Error",
            },
            {
              "generatedName": "ResourceNotFound",
              "nameOverride": "ResourceNotFound",
              "value": "ResourceNotFound",
            },
            {
              "generatedName": "ResourceNotAuthorized",
              "nameOverride": "ResourceNotAuthorized",
              "value": "ResourceNotAuthorized",
            },
            {
              "generatedName": "InvalidDimension",
              "nameOverride": "InvalidDimension",
              "value": "InvalidDimension",
            },
            {
              "generatedName": "InvalidQuantity",
              "nameOverride": "InvalidQuantity",
              "value": "InvalidQuantity",
            },
            {
              "generatedName": "BadArgument",
              "nameOverride": "BadArgument",
              "value": "BadArgument",
            },
          ],
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "agreementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "balanceImpacting",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "bankTraceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "billingAddressID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "brokerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "dataFeedProductID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "disbursementBillingEventID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "endUserAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fromAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "insertDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInsertDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoiceDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInvoiceDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoiceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "parentBillingEventID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "paymentDueDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventPaymentDueDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "toAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "transactionReferenceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "transactionType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usagePeriodEndDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodEndDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "usagePeriodStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodStartDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "azureAssetID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "azureBillingAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "azureCustomerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "azureOfferID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "azurePlanID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "billingModel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "earningUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "payoutStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "purchaseRecordID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "revenueUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "termEndDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "termStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsage",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "abandoned",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "accountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "charges",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "dueVendor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "googleEntity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "insightAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "paymentSchedule",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "paymentType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "prepayCredits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refundBalanceDeductedThisMonth",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refundBalanceOutstanding",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refundReason",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "released",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "resource",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sku",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "trialUse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "unit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "withheld",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.UpdateBuyerNameDescriptionParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "marketplacemetering.BatchMeterUsageOutput": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MarketplacemeteringBatchMeterUsageOutput",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "resultMetadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Metadata pertaining to the operation's result.",
                  "file": undefined,
                  "generatedName": "MarketplacemeteringBatchMeterUsageOutputResultMetadata",
                  "nameOverride": undefined,
                  "schema": "middleware.Metadata",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Contains all UsageRecords processed by BatchMeterUsage. These records were
either honored by AWS Marketplace Metering Service or were invalid. Invalid
records should be fixed before being resubmitted.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "MarketplacemeteringBatchMeterUsageOutputResultsItem",
                    "nameOverride": undefined,
                    "schema": "types.UsageRecordResult",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "unprocessedRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Contains all UsageRecords that were not processed by BatchMeterUsage. This is a
list of UsageRecords. You can retry the failed request by making another
BatchMeterUsage call with this list as input in the BatchMeterUsageRequest.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "MarketplacemeteringBatchMeterUsageOutputUnprocessedRecordsItem",
                    "nameOverride": undefined,
                    "schema": "types.UsageRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "middleware.Metadata": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "servicecontrol.ReportError": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ServicecontrolReportError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "operationId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "OperationId: The Operation.operation_id value from the request.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Status: Details of the error when processing the Operation.",
                  "file": undefined,
                  "generatedName": "ServicecontrolReportErrorStatus",
                  "nameOverride": undefined,
                  "schema": "servicecontrol.Status",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "servicecontrol.ReportResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ServicecontrolReportResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "reportErrors",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ReportErrors: Partial failures, one for each \`Operation\` in the
request that failed processing. There are three possible combinations
of the RPC status: 1. The combination of a successful RPC status and
an empty \`report_errors\` list indicates a complete success where all
\`Operations\` in the request are processed successfully. 2. The
combination of a successful RPC status and a non-empty
\`report_errors\` list indicates a partial success where some
\`Operations\` in the request succeeded. Each \`Operation\` that failed
processing has a corresponding item in this list. 3. A failed RPC
status indicates a general non-deterministic failure. When this
happens, it's impossible to know which of the 'Operations' in the
request succeeded or failed.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ServicecontrolReportResponseReportErrorsItem",
                    "nameOverride": undefined,
                    "schema": "servicecontrol.ReportError",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "serviceConfigId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ServiceConfigId: The actual config id used to process the request.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "serviceRolloutId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ServiceRolloutId: The current service rollout id used to process the
request.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "servicecontrol.Status": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ServicecontrolStatus",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Code: The status code, which should be an enum value of
google.rpc.Code.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "details",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Details: A list of messages that carry the error details. There is a
common set of message types for APIs to use.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "int",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Message: A developer-facing error message, which should be in
English. Any user-facing error message should be localized and sent
in the google.rpc.Status.details field, or localized by the client.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AddEntitlementCreditParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAddEntitlementCreditParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "creditAmountIncrement",
              "schema": {
                "description": "The amount to be added to the credit amount.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.AddEntitlementCreditResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAddEntitlementCreditResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "creditAmountIncrement",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount to be added to the credit amount.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementTermID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "newCreditAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The new credit amount after the increment.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ApiClientAccessToken": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedApiClientAccessToken",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The token expires in 1 hour",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsAccountIdentifier": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsAccountIdentifier",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "awsAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The AWS Account ID of the buyer in AWS Marketplace",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "awsCustomerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The AWS Customer ID of the buyer in AWS Marketplace",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "companyInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsAccountIdentifierCompanyInfo",
                  "nameOverride": undefined,
                  "schema": "shared.CompanyInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "dataFeedAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Account ID in AWS Marketplace Data Feed service",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsAceIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsAceIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsAceIntegrationCredential",
                  "nameOverride": undefined,
                  "schema": "shared.AwsIntegrationCredential",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "partnerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The partner ID of the ISV/Seller in AWS Partner Network.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "s3BucketName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Name of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "s3BucketRegion",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The region of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "secretKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsIntegrationCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsIntegrationCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "accessKeyId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The access key ID of the IAM user for Suger service to access the client's AWS services.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "iamUserArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ARN of the IAM user for Suger service to access the client's AWS services.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "secretAccessKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The secret access key of the IAM user for Suger service to access the client's AWS services.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsMarketplaceIntegration": {
          "allOf": [],
          "description": "The data struct to store integration info for Suger service to access the client's AWS services.",
          "generatedName": "SharedAwsMarketplaceIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The external ID for assuming IAM role. If empty, means no external ID set or needed. Otherwise, it should be auth_id in table identity.organization.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "iamRoleArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The AWS IAM role for Suger service to assume to access the client's AWS services.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "marketplaceStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "AWS Marketplace start date which comes from MDFS Full-Sync.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "mcasFullSyncDone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Is AWS Marketplace Commerce Analytics Service (MCAS) full-sync done.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "mcasIamRoleArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "IAM role ARN to allow AWS Marketplace to write to the S3 bucket and publish notifications to the SNS topic.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "mcasS3Bucket",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "S3 bucket for AWS Marketplace Commerce Analytics Service (MCAS)",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "mcasSnsTopic",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "SNS topic ARN for AWS Marketplace Commerce Analytics Service (MCAS)",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "mdfsFullSyncDone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Is AWS Marketplace Data Feeds Service (MDFS) full-sync done.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "mdfsKmsKeyArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "KMS Key ARN for the S3 bucket of AWS Marketplace Data Feeds Service (MDFS)",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "mdfsS3BucketArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "S3 bucket ARN for AWS Marketplace Data Feeds Service (MDFS)",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "policyArns",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The policy ARNs in the IAM role.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "revenueRecordFullSyncDone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Is AWS Marketplace Revenue Record full-sync done.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "Description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsSaasProductDescription",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSaasProductDescription",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "Dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedAwsSaasProductDimensionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSaasProductDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "PromotionalResources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsSaasProductPromotionalResources",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSaasProductPromotionalResources",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "SupportInformation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsSaasProductSupportInformation",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSaasProductSupportInformation",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "Versions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedAwsSaasProductVersionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSaasProductVersion",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "dataFeedProductId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The product Id in AWS Marketplace Data Feed Service.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "productId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductAdditionalResource": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductAdditionalResource",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "Text",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductDeliveryOption": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductDeliveryOption",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "FulfillmentUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductDescription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductDescription",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "AssociatedProducts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Categories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "EuW8Submitted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Highlights",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "LongDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Manufacturer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "ProductCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "ProductTitle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Registered",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "SearchKeywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "ShortDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Sku",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "UsW9Submitted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductDimension": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductDimension",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "Description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "Unit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductPromotionalResources": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductPromotionalResources",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "AdditionalResources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedAwsSaasProductPromotionalResourcesAdditionalResourcesItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSaasProductAdditionalResource",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "LogoUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductSupportInformation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductSupportInformation",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "Description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductVersion": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductVersion",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "DeliveryOptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedAwsSaasProductVersionDeliveryOptionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSaasProductDeliveryOption",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "Id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSnsSubscription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSnsSubscription",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "Endpoint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Protocol",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "Status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsSnsSubscriptionStatus",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSnsSubscriptionStatus",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "SubscriptionArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "TopicArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSnsSubscriptionStatus": {
          "description": undefined,
          "generatedName": "SharedAwsSnsSubscriptionStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UNKNOWN",
              "nameOverride": "UNKNOWN",
              "value": "UNKNOWN",
            },
            {
              "generatedName": "CONFIRMED",
              "nameOverride": "CONFIRMED",
              "value": "CONFIRMED",
            },
            {
              "generatedName": "PENDING_CONFIRMATION",
              "nameOverride": "PENDING_CONFIRMATION",
              "value": "PENDING_CONFIRMATION",
            },
          ],
        },
        "shared.AzureADIdentifier": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureAdIdentifier",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "buyerInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureAdIdentifierBuyerInfo",
                  "nameOverride": undefined,
                  "schema": "shared.AzureBuyerInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "companyInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureAdIdentifierCompanyInfo",
                  "nameOverride": undefined,
                  "schema": "shared.CompanyInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "emailId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Email address",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "objectId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "puid",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ID of the user, used as External ID of suger IdentityBuyer.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tenantId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureBuyerInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureBuyerInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "billingAccountId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "customerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "firstName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "cmaFullSyncDone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Is Azure Commercial Marketplace Analytics (CMA) full-sync done.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureIntegrationCredential",
                  "nameOverride": undefined,
                  "schema": "shared.AzureIntegrationCredential",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "secretKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureIntegrationCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureIntegrationCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "clientID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "clientSecret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expiresOn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The time when the access token expires.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The refresh token used to refresh the access token.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tenantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tokenScope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tokenType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureMarketplaceSubscription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureMarketplaceSubscription",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "allowedCustomerOperations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "SharedAzureMarketplaceSubscriptionAllowedCustomerOperationsItem",
                    "nameOverride": undefined,
                    "type": "enum",
                    "values": [
                      {
                        "generatedName": "Read",
                        "nameOverride": undefined,
                        "value": "Read",
                      },
                      {
                        "generatedName": "Update",
                        "nameOverride": undefined,
                        "value": "Update",
                      },
                      {
                        "generatedName": "Delete",
                        "nameOverride": undefined,
                        "value": "Delete",
                      },
                    ],
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "autoRenew",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "beneficiary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionBeneficiary",
                  "nameOverride": undefined,
                  "schema": "shared.AzureADIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fulfillmentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "isFreeTrial",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "isTest",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastModified",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "offerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "planId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "publisherId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "purchaser",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionPurchaser",
                  "nameOverride": undefined,
                  "schema": "shared.AzureADIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "saasSubscriptionStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionSaasSubscriptionStatus",
                  "nameOverride": undefined,
                  "schema": "shared.AzureMarketplaceSubscriptionStatus",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "sandboxType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionSandboxType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "None",
                      "nameOverride": undefined,
                      "value": "None",
                    },
                    {
                      "generatedName": "Csp",
                      "nameOverride": undefined,
                      "value": "Csp",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "sessionId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sessionMode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionSessionMode",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "None",
                      "nameOverride": undefined,
                      "value": "None",
                    },
                    {
                      "generatedName": "DryRun",
                      "nameOverride": undefined,
                      "value": "DryRun",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "storeFront",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "term",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionTerm",
                  "nameOverride": undefined,
                  "schema": "shared.AzureTerm",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureMarketplaceSubscriptionStatus": {
          "description": undefined,
          "generatedName": "SharedAzureMarketplaceSubscriptionStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "NotStarted",
              "nameOverride": "NotStarted",
              "value": "NotStarted",
            },
            {
              "generatedName": "PendingFulfillmentStart",
              "nameOverride": "PendingFulfillmentStart",
              "value": "PendingFulfillmentStart",
            },
            {
              "generatedName": "Subscribed",
              "nameOverride": "Subscribed",
              "value": "Subscribed",
            },
            {
              "generatedName": "Suspended",
              "nameOverride": "Suspended",
              "value": "Suspended",
            },
            {
              "generatedName": "Unsubscribed",
              "nameOverride": "Unsubscribed",
              "value": "Unsubscribed",
            },
          ],
        },
        "shared.AzureTerm": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureTerm",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "chargeDuration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "termUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.BuyerInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedBuyerInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "awsBuyer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Buyer from AWS Marketplace",
                  "file": undefined,
                  "generatedName": "SharedBuyerInfoAwsBuyer",
                  "nameOverride": undefined,
                  "schema": "shared.AwsAccountIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "azureBuyer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Buyer from Azure Marketplace",
                  "file": undefined,
                  "generatedName": "SharedBuyerInfoAzureBuyer",
                  "nameOverride": undefined,
                  "schema": "shared.AzureADIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "collectableAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount that the seller can collect. It excludes the marketplace commision fee.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "disbursedAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount that has been disbursed to the seller account.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpBuyer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Buyer from GCP Marketplace",
                  "file": undefined,
                  "generatedName": "SharedBuyerInfoGcpBuyer",
                  "nameOverride": undefined,
                  "schema": "shared.GcpMarketplaceUserAccount",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoicedAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount that the buyer has got invoiced.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.CommitDimension": {
          "allOf": [],
          "description": "The commit dimension. There may be one or more commit dimensions defined in single product, offer or entitlement.",
          "generatedName": "SharedCommitDimension",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "category",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "isUserCreated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Whether this commit dimension is newly created by user when creating AWS Marketplace Contract private offer.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "API name of the dimension",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "length",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The term length for the commit amount, such as 6 months, or 1 year. length is used together with timeUnit",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "maximumUsers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum number of users for PER_USER commit",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "minimumUsers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The minimum number of users for PER_USER commit",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Display name of the dimension",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The quantity of this commit.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "rate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The commit amount.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "timeUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The term unit for the commit amount.",
                  "file": undefined,
                  "generatedName": "SharedCommitDimensionTimeUnit",
                  "nameOverride": undefined,
                  "schema": "shared.CommitDimensionTimeUnit",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedCommitDimensionType",
                  "nameOverride": undefined,
                  "schema": "shared.CommitDimensionType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.CommitDimensionTimeUnit": {
          "description": undefined,
          "generatedName": "SharedCommitDimensionTimeUnit",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "DAY",
              "nameOverride": "DAY",
              "value": "DAY",
            },
            {
              "generatedName": "MONTH",
              "nameOverride": "MONTH",
              "value": "MONTH",
            },
            {
              "generatedName": "YEAR",
              "nameOverride": "YEAR",
              "value": "YEAR",
            },
          ],
        },
        "shared.CommitDimensionType": {
          "description": undefined,
          "generatedName": "SharedCommitDimensionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "FLAT_RATE",
              "nameOverride": "FLAT_RATE",
              "value": "FLAT_RATE",
            },
            {
              "generatedName": "PER_USER",
              "nameOverride": "PER_USER",
              "value": "PER_USER",
            },
          ],
        },
        "shared.CompanyInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedCompanyInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "addressLine1",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "addressLine2",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "city",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "country",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "emailDomain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "postalCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.Contact": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedContact",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "company",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.CreateIntegrationParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedCreateIntegrationParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SharedCreateIntegrationParamsInfo",
                "nameOverride": undefined,
                "schema": "shared.IntegrationInfo",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "SharedCreateIntegrationParamsPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": undefined,
                "generatedName": "SharedCreateIntegrationParamsService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                ],
              },
            },
          ],
          "type": "object",
        },
        "shared.CreateUsageRecordGroupParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedCreateUsageRecordGroupParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "uuid of the UsageRecordGroup (the size is up to 36 characters), if not provided, suger will generate one.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "metaInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "read-only, don't set it when reporting the usage record group.",
                  "file": undefined,
                  "generatedName": "SharedCreateUsageRecordGroupParamsMetaInfo",
                  "nameOverride": undefined,
                  "schema": "shared.MeteringUsageRecordGroupMetaInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "records",
              "schema": {
                "description": undefined,
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntitlementInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedEntitlementInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "autoRenew",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Is this Entitlement Auto Renew enabled.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "awsEntitlements",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Nullable. AWS Entitlements from AWS Marketplace.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoAwsEntitlementsItem",
                    "nameOverride": undefined,
                    "schema": "types.Entitlement",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "azureSubscriptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Nullable. Azure Subscriptions from Azure Marketplace.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoAzureSubscriptionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AzureMarketplaceSubscription",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "collectableAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount that the seller can collect. It excludes the marketplace commision fee.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "commitAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount that the buyer has committed to pay. It can be the sum of payment installments if applicable.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "commits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The dimensions for commit.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoCommitsItem",
                    "nameOverride": undefined,
                    "schema": "shared.CommitDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The default Currency is USD.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The dimensions for usage-based metering.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoDimensionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "disbursedAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount that has been disbursed to the seller account.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "discount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "eulaType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedEntitlementInfoEulaType",
                  "nameOverride": undefined,
                  "schema": "shared.EulaType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpEntitlements",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Nullable. GCP Entitlements from GCP Marketplace.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoGcpEntitlementsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpMarketplaceEntitlement",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpPlans",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Only applicable for GCP Marketplace Entitlements.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoGcpPlansItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpPurchasePlan",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "invoicedAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount that the buyer has got invoiced.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "paymentInstallments",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For flexible payment schedules",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoPaymentInstallmentsItem",
                    "nameOverride": undefined,
                    "schema": "shared.PaymentInstallment",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "refundCancelationPolicy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sellerNotes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntitlementTermInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedEntitlementTermInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedEntitlementTermInfoType",
                  "nameOverride": undefined,
                  "schema": "shared.EntitlementTermType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntitlementTermType": {
          "description": undefined,
          "generatedName": "SharedEntitlementTermType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "",
              "nameOverride": "Unknown",
              "value": "",
            },
            {
              "generatedName": "AutoRenew",
              "nameOverride": "AutoRenew",
              "value": "AutoRenew",
            },
            {
              "generatedName": "ManualRenew",
              "nameOverride": "ManualRenew",
              "value": "ManualRenew",
            },
            {
              "generatedName": "PlanChange",
              "nameOverride": "PlanChange",
              "value": "PlanChange",
            },
            {
              "generatedName": "QuantityChange",
              "nameOverride": "QuantityChange",
              "value": "QuantityChange",
            },
            {
              "generatedName": "Signup",
              "nameOverride": "Signup",
              "value": "Signup",
            },
          ],
        },
        "shared.EntitlementUsageRecord": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedEntitlementUsageRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "amounts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "keys",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "quantities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntityType": {
          "description": undefined,
          "generatedName": "SharedEntityType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ORGANIZATION",
              "nameOverride": "ORGANIZATION",
              "value": "ORGANIZATION",
            },
            {
              "generatedName": "PRODUCT",
              "nameOverride": "PRODUCT",
              "value": "PRODUCT",
            },
            {
              "generatedName": "OFFER",
              "nameOverride": "OFFER",
              "value": "OFFER",
            },
            {
              "generatedName": "ENTITLEMENT",
              "nameOverride": "ENTITLEMENT",
              "value": "ENTITLEMENT",
            },
            {
              "generatedName": "ENTITLEMENT_TERM",
              "nameOverride": "ENTITLEMENT_TERM",
              "value": "ENTITLEMENT_TERM",
            },
            {
              "generatedName": "INTEGRATION",
              "nameOverride": "INTEGRATION",
              "value": "INTEGRATION",
            },
          ],
        },
        "shared.EulaType": {
          "description": undefined,
          "generatedName": "SharedEulaType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "",
              "nameOverride": "UNKNOWN",
              "value": "",
            },
            {
              "generatedName": "SCMP",
              "nameOverride": "SCMP",
              "value": "SCMP",
            },
            {
              "generatedName": "ECMP",
              "nameOverride": "ECMP",
              "value": "ECMP",
            },
            {
              "generatedName": "CUSTOM",
              "nameOverride": "CUSTOM",
              "value": "CUSTOM",
            },
            {
              "generatedName": "ISV",
              "nameOverride": "ISV",
              "value": "ISV",
            },
            {
              "generatedName": "CURRENT",
              "nameOverride": "CURRENT",
              "value": "CURRENT",
            },
          ],
        },
        "shared.GcpCommerceProducerExternalAccountSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerExternalAccountSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "loginUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "signupUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "singleSignOnUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerListingSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerListingSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "externalAccountSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerListingSpecExternalAccountSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerExternalAccountSpec",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "listingType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerListingSpecListingType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "BillingIntegratedManagedService",
                      "nameOverride": undefined,
                      "value": "BillingIntegratedManagedService",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "marketingSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerListingSpecMarketingSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerMarketingSpec",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "purchaseSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerListingSpecPurchaseSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPurchaseSpec",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerMarketingSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerMarketingSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "displayNames",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "In format of "{provider-id}/{product-name}"",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "externalMarketingUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "icon",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "In format of "base64://..."",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "searchCategories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "searchDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "searchKeywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "shortTitle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "supportSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerMarketingSpecSupportSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerSupportSpec",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The product title.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPrice",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "currencyCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "ISO currency code, Three UPPER_CASE characters",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "nanos",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Decimal part of the price. For example, 2000000 = 0.002, 200000000 = 0.2",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "units",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Integer part of the price.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "priceModel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceInfoPriceModel",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPriceModel",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "subscriptionPlans",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Commit price plan, when priceModel = SUBSCRIPTION or SUBSCRIPTION_PLUS_USAGE.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPriceInfoSubscriptionPlansItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPriceSubscription",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "usageFees",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Usage based metering plan, when priceModel =  USAGE or SUBSCRIPTION_PLUS_USAGE",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPriceInfoUsageFeesItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPriceUsage",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceModel": {
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceModel",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "FREE",
              "nameOverride": "FREE",
              "value": "FREE",
            },
            {
              "generatedName": "SUBSCRIPTION",
              "nameOverride": "SUBSCRIPTION",
              "value": "SUBSCRIPTION",
            },
            {
              "generatedName": "USAGE",
              "nameOverride": "USAGE",
              "value": "USAGE",
            },
            {
              "generatedName": "SUBSCRIPTION_PLUS_USAGE",
              "nameOverride": "SUBSCRIPTION_PLUS_USAGE",
              "value": "SUBSCRIPTION_PLUS_USAGE",
            },
          ],
        },
        "shared.GcpCommerceProducerPriceSubscription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceSubscription",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "period",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceSubscriptionPeriod",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ONE_YEAR",
                      "nameOverride": undefined,
                      "value": "ONE_YEAR",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "price",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "the Monthly subscription fee as commit.",
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceSubscriptionPrice",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPrice",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "taxCategoryOverride",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceSubscriptionTaxCategoryOverride",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "TAX_CATEGORY_UNSPECIFIED",
                      "nameOverride": undefined,
                      "value": "TAX_CATEGORY_UNSPECIFIED",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceTier": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceTier",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "endUsageAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The usage amount below which this tier is effective.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "price",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The price of this tier",
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceTierPrice",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPrice",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "startUsageAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The usage amount beyond which this tier is effective.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceUsage": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceUsage",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "displayQuantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Default value is 1.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "metricId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "the usage metering dimension key",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "priceTiers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPriceUsagePriceTiersItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPriceTier",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "taxCategoryOverride",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceUsageTaxCategoryOverride",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "TAX_CATEGORY_UNSPECIFIED",
                      "nameOverride": undefined,
                      "value": "TAX_CATEGORY_UNSPECIFIED",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPurchaseMetric": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPurchaseMetric",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Description: A detailed description of the metric, which can be used in documentation.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "displayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "displayUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "displayUnitDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The usage metering dimension key, in format of "{plan_key}_{usage_dimension_key}"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "metricKind",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Name: The resource name of the metric descriptor, in format of "{service_name}/{plan_key}_{usage_dimension_key}"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportingUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "unit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "valueType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerPurchaseMetricValueType",
                  "nameOverride": undefined,
                  "schema": "shared.ValueType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPurchaseSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPurchaseSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "metrics",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPurchaseSpecMetricsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPurchaseMetric",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "purchaseOptionSpecs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPurchaseSpecPurchaseOptionSpecsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpPurchasePlan",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerServiceBilling": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerServiceBilling",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "metrics",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "in format of ["{product-name}.endpoints.{provider-id}.cloud.goog/{plan_key}_{usage_dimension_key}"]",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerServiceConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerServiceConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "billing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerServiceConfigBilling",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerServiceBilling",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "metrics",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Metrics: Defines the metrics used by this service.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerServiceConfigMetricsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPurchaseMetric",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "In format of "{product-name}.endpoints.{provider-id}.cloud.goog"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "producerProjectId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Product title",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerSupportSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerSupportSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "gcpProjectId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpProjectNumber",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "identityProviderId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partnerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The GCP Marketplace Partner ID, it is also called as Provider ID somewhere.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "pubsubTopic",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The resource name of the Pub/Sub topic to receive notifications from Google when a user signs up for your service, purchases a plan, or changes an existing plan.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportBucket",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The GCP storage bucket name to store the GCP Marketplace reports.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportFullSyncDone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Is GCP Marketplace Report full-sync done.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The UTC date when GCP Marketplace reprots start to generate.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "serviceAccountEmail",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "serviceNames",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The array of service resource names of the listings in GCP Marketplace.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "workloadIdentityPoolId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceConsumer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceConsumer",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "project",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The project name with format \`projects/\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceEntitlement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "account",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The resource name of the account that this entitlement is based on, if any, in format ""providers/{provider_id}/accounts/{account_id}"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "consumers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The resources using this entitlement, if applicable.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpMarketplaceEntitlementConsumersItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpMarketplaceConsumer",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "createTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Entitlement Id generated by GCP Marketplace. For Marketplace pub/sub event.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "inputProperties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The custom properties that were collected from the user to create this entitlement.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "messageToUser",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Provider-supplied message that is displayed to the end user. Currently this is used to communicate progress and ETA for
provisioning. This field can be updated only when a user is waiting for an action from the provider, i.e. entitlement state is
EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically when the entitlement state changes.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The resource name of the entitlement. Entitlement names have the form \`providers/{provider_id}/entitlements/{entitlement_id}\`.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "newOfferDuration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "in ISO 8601 duration format, such as "P2Y3M". For Marketplace pub/sub event.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "newOfferEndTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Output only. The end time of the new offer. Field is empty if the pending plan change is not moving to an offer.
If the offer was created with a term instead of a specified end date, this field is empty.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "newOfferStartTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Output only. The start time of the new offer. Field is empty if the pending plan change is not moving to an offer.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "newPendingOffer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the offer the entitlement is switching to upon a pending plan change. Only exists if the
pending plan change is moving to an offer. Format:
'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
'projects/{project}/services/{service}/standardOffers/{offer-id}',
depending on whether the offer is private or public.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "newPendingOfferDuration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The offer duration of the new offer in ISO 8601 duration format. Field is empty if the pending plan
change is not moving to an offer since the entitlement is not pending, only the plan change is pending.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "newPendingPlan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The identifier of the pending new plan. Required if the product has plans and the entitlement has a pending plan change.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "newPlan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "When the buyer changes plan, For Marketplace pub/sub event.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "offer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the offer that was procured. Field is empty if order was not made using an offer. Format:
'projects/{project}/services/{service}/privateOffers/{offer-id}' OR 'projects/{project}/services/{service}/standardOffers/{offer-id}',
depending on whether the offer is private or public.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "offerDuration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The offer duration of the current offer in ISO 8601 duration format. Field is empty if entitlement was not made using an offer, such as "P1Y", "P2M"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "offerEndTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Output only. End time for the Offer association corresponding to this entitlement. The field is only populated if the entitlement is currently associated with an Offer.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "plan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The identifier of the plan that was procured. Required if the product has plans.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "product",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The identifier of the entity that was purchased. This may actually represent a product, quote, or offer.
For Private offer, "projects/project-id/services/product-id.endpoints.partner-id.cloud.goog/privateOffers/private-offer-id"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "productExternalName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The identifier of the product that was procured.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "provider",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the service provider under Cloud Commerce platform that this entitlement was created against.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "quoteExternalName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The identifier of the quote that was used to procure, such as the private offer Id. Empty if the order is not purchased using a quote.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Enums of the Entitlement State. https://cloud.google.com/marketplace/docs/partners/commerce-procurement-api/reference/rest/v1/providers.entitlements#EntitlementState",
                  "file": undefined,
                  "generatedName": "SharedGcpMarketplaceEntitlementState",
                  "nameOverride": undefined,
                  "schema": "shared.GcpMarketplaceEntitlementState",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "subscriptionEndTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The End time for the subscription corresponding to this entitlement.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "updateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The last update timestamp. It is the endTime for the cancelled entitlement.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageReportingId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The consumerId to use when reporting usage through the Service Control API. See the consumerId field at
Reporting Metrics (https://cloud.google.com/service-control/reporting-metrics) for more details.
This field is present only if the product has usage-based billing configured.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceEntitlementState": {
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceEntitlementState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ENTITLEMENT_STATE_UNSPECIFIED",
              "nameOverride": "STATE_UNSPECIFIED",
              "value": "ENTITLEMENT_STATE_UNSPECIFIED",
            },
            {
              "generatedName": "ENTITLEMENT_ACTIVATION_REQUESTED",
              "nameOverride": "ACTIVATION_REQUESTED",
              "value": "ENTITLEMENT_ACTIVATION_REQUESTED",
            },
            {
              "generatedName": "ENTITLEMENT_ACTIVE",
              "nameOverride": "ACTIVE",
              "value": "ENTITLEMENT_ACTIVE",
            },
            {
              "generatedName": "ENTITLEMENT_PENDING_CANCELLATION",
              "nameOverride": "PENDING_CANCELLATION",
              "value": "ENTITLEMENT_PENDING_CANCELLATION",
            },
            {
              "generatedName": "ENTITLEMENT_CANCELLED",
              "nameOverride": "CANCELLED",
              "value": "ENTITLEMENT_CANCELLED",
            },
            {
              "generatedName": "ENTITLEMENT_PENDING_PLAN_CHANGE",
              "nameOverride": "PENDING_PLAN_CHANGE",
              "value": "ENTITLEMENT_PENDING_PLAN_CHANGE",
            },
            {
              "generatedName": "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL",
              "nameOverride": "PENDING_PLAN_CHANGE_APPROVAL",
              "value": "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL",
            },
            {
              "generatedName": "ENTITLEMENT_SUSPENDED",
              "nameOverride": "SUSPENDED",
              "value": "ENTITLEMENT_SUSPENDED",
            },
          ],
        },
        "shared.GcpMarketplaceUserAccount": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccount",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "approvals",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The approvals for this account, that are permitted or have been completed.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpMarketplaceUserAccountApprovalsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpMarketplaceUserAccountApproval",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "createTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "GCP Marketplace User Account ID.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "inputProperties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "RFC3339 UTC timestamp",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The resource name of the account. Account names have the form providers/{provider_id}/accounts/{account_id}.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "provider",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The identifier of the service provider (SaaS Seller) that this account was created against.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The state of the account. An account might not be able to make a purchase if the billing account is suspended, for example.",
                  "file": undefined,
                  "generatedName": "SharedGcpMarketplaceUserAccountState",
                  "nameOverride": undefined,
                  "schema": "shared.GcpMarketplaceUserAccountState",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "updateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "RFC3339 UTC timestamp",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "userInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpMarketplaceUserAccountUserInfo",
                  "nameOverride": undefined,
                  "schema": "shared.GcpUserInfo",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceUserAccountApproval": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccountApproval",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reason",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An explanation for the state of the approval.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpMarketplaceUserAccountApprovalState",
                  "nameOverride": undefined,
                  "schema": "shared.GcpMarketplaceUserAccountApprovalState",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "updateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "RFC3339 UTC timestamp",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceUserAccountApprovalState": {
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccountApprovalState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "STATE_UNSPECIFIED",
              "nameOverride": "STATE_UNSPECIFIED",
              "value": "STATE_UNSPECIFIED",
            },
            {
              "generatedName": "PENDING",
              "nameOverride": "PENDING",
              "value": "PENDING",
            },
            {
              "generatedName": "APPROVED",
              "nameOverride": "APPROVED",
              "value": "APPROVED",
            },
            {
              "generatedName": "REJECTED",
              "nameOverride": "REJECTED",
              "value": "REJECTED",
            },
          ],
        },
        "shared.GcpMarketplaceUserAccountState": {
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccountState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACCOUNT_STATE_UNSPECIFIED",
              "nameOverride": "UNSPECIFIED",
              "value": "ACCOUNT_STATE_UNSPECIFIED",
            },
            {
              "generatedName": "ACCOUNT_ACTIVE",
              "nameOverride": "ACTIVE",
              "value": "ACCOUNT_ACTIVE",
            },
          ],
        },
        "shared.GcpProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "createTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Nullable, GCP Marketplace Product UUID",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "listingSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpProductListingSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerListingSpec",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "marketplace",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpProductMarketplace",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MarketplacesGoogleCloud",
                      "nameOverride": undefined,
                      "value": "marketplaces/google-cloud",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "In format of "projects/{project-number}/listings/{product-name}.endpoints.{provider-id}.cloud.goog"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "In format of "services/{product-name}.endpoints.{provider-id}.cloud.goog"",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "serviceConfig",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpProductServiceConfig",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerServiceConfig",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpPurchasePlan": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpPurchasePlan",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Plan key.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "priceInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpPurchasePlanPriceInfo",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPriceInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "purchaseMode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpPurchasePlanPurchaseMode",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "PURCHASE_MODE_PUBLIC",
                      "nameOverride": undefined,
                      "value": "PURCHASE_MODE_PUBLIC",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Plan title",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpUserInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpUserInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "roles",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An array of strings representing the user's roles. Right now, it can be either: ** account_admin, which indicates that the user is a Billing Account Administrator of the billing account that purchased the product, or ** project_editor, which indicates that the user is a Project Editor, but not a Billing Administrator, of the project under that billing account.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "user_identity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The user's obfuscated GAIA ID, which can be used to initiate Open ID Connect.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GetApiClientAccessTokenParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGetApiClientAccessTokenParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the API Client.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "secret",
              "schema": {
                "description": "The secret of the API Client.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.GetRevenueReportParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGetRevenueReportParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional, if available, return the report for the Buyer.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional, if available, return the report for the Entitlement.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": "Required. If the productID & entitlementID are emtpy, return the report for the entire Organization.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": "Required.",
                "generatedName": "SharedGetRevenueReportParamsPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optional, if available, return the report for the Product.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SharedGetRevenueReportParamsReportType",
                "nameOverride": undefined,
                "schema": "shared.RevenueReportType",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": "Required.",
                "generatedName": "SharedGetRevenueReportParamsService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                ],
              },
            },
          ],
          "type": "object",
        },
        "shared.GetUsageReportParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGetUsageReportParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.HubspotCrmCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedHubspotCrmCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "acquiredOn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "UTC timestamp on receiving the auth response",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expiresIn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.HubspotCrmIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedHubspotCrmIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedHubspotCrmIntegrationCredential",
                  "nameOverride": undefined,
                  "schema": "shared.HubspotCrmCredential",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "portalId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Hubspot Account Id",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "secretKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.IdentityBuyer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedIdentityBuyer",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIdentityBuyerInfo",
                  "nameOverride": undefined,
                  "schema": "shared.BuyerInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityBuyerPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.IdentityIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedIdentityIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIdentityIntegrationInfo",
                  "nameOverride": undefined,
                  "schema": "shared.IntegrationInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdatedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityIntegrationPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityIntegrationService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityIntegrationStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "CREATED",
                      "nameOverride": undefined,
                      "value": "CREATED",
                    },
                    {
                      "generatedName": "VERIFIED",
                      "nameOverride": undefined,
                      "value": "VERIFIED",
                    },
                    {
                      "generatedName": "NOT_VERIFIED",
                      "nameOverride": undefined,
                      "value": "NOT_VERIFIED",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.IntegrationInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedIntegrationInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "awsAceIntegration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "AWS ACE Integration",
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoAwsAceIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.AwsAceIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "awsIntegration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "AWS Marketplace Integration",
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoAwsIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.AwsMarketplaceIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "azureIntegration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Azure Marketplace Integration",
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoAzureIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.AzureIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpIntegration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "GCP Marketplace Integration",
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoGcpIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.GcpIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "hubspotCrmIntegration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Integration for HubSpot CRM",
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoHubspotCrmIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.HubspotCrmIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "salesforceCrmIntegration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Integration for Salesforce CRM",
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoSalesforceCrmIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.SalesforceCrmIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "slackIntegration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoSlackIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.SlackIntegration",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListRevenueRecordDetailsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListRevenueRecordDetailsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "revenueRecordDetails",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedListRevenueRecordDetailsResponseRevenueRecordDetailsItem",
                    "nameOverride": undefined,
                    "schema": "shared.RevenueRecordDetail",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListRevenueRecordsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListRevenueRecordsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "revenueRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedListRevenueRecordsResponseRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "shared.RevenueRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListUsageRecordGroupsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListUsageRecordGroupsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageRecordGroups",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedListUsageRecordGroupsResponseUsageRecordGroupsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringUsageRecordGroup",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListUsageRecordReportsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListUsageRecordReportsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageRecordReports",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedListUsageRecordReportsResponseUsageRecordReportsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringUsageRecordReport",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringDimension": {
          "allOf": [],
          "description": "The dimension to meter usage in entitlement.",
          "generatedName": "SharedMeteringDimension",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "category",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "includedBaseQuantities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "how many quantities of this dimension are included in the commit.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedMeteringDimensionIncludedBaseQuantitiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureIncludedBaseQuantity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Display name of the dimension",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "rate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "usageCount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The current Dimension Usage Count. Available when call GetEntitlement API.",
                  "file": undefined,
                  "generatedName": "SharedMeteringDimensionUsageCount",
                  "nameOverride": undefined,
                  "schema": "shared.UsageCount",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "valueType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringDimensionValueType",
                  "nameOverride": undefined,
                  "schema": "shared.ValueType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordGroup": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordGroup",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "metaInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordGroupMetaInfo",
                  "nameOverride": undefined,
                  "schema": "shared.MeteringUsageRecordGroupMetaInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "records",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "serialID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageRecordReportID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordGroupMetaInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordGroupMetaInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "originRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The original records reported by the customer before convertion. If no dimension mapping is applied, this field is the same as the records field.",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordReport": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordReport",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementTermID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordReportInfo",
                  "nameOverride": undefined,
                  "schema": "shared.MeteringUsageRecordReportInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordReportInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordReportInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "awsMeteringResponse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The raw response from AWS metering service.",
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordReportInfoAwsMeteringResponse",
                  "nameOverride": undefined,
                  "schema": "marketplacemetering.BatchMeterUsageOutput",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "azureMeteringResponse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The raw response from Azure metering service.",
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordReportInfoAzureMeteringResponse",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "commitAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount of the commit if applicable.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "creditAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount of the credit if applicable.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "creditRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The credit usage records in the map of <DimensionKey, Count>",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "dimensionUnitPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unit price of each dimension in the map of <DimensionKey, UnitPrice>",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "endTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "time in UTC when the UsageRecordReport ends",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpMeteringResponse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The raw response from GCP metering service.",
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordReportInfoGcpMeteringResponse",
                  "nameOverride": undefined,
                  "schema": "servicecontrol.ReportResponse",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "includedRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The included usage records in the map of <DimensionKey, Count>",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "reportedRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The reported usage records in the map of <DimensionKey, Count>",
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "time in UTC when the UsageRecordReport starts",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageRecordGroupIds",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The IDs of UsageRecordGroups aggregated in this UsageRecordReport.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "usedCommitAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount of the used commit before the this usage record report if applicable.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usedCommitAmountIncrement",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount of the used commit increment in this usage record report if applicable.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usedCreditAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount of the used credit before the this usage record report if applicable.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usedCreditAmountIncrement",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The amount of the used credit increment in this usage record report if applicable.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.NotificationEvent": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedNotificationEvent",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedNotificationEventAction",
                  "nameOverride": undefined,
                  "schema": "shared.NotificationEventAction",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "entityID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entityStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entityType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedNotificationEventEntityType",
                  "nameOverride": undefined,
                  "schema": "shared.EntityType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "eventID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "notification event id.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "eventStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "notification event status.",
                  "file": undefined,
                  "generatedName": "SharedNotificationEventEventStatus",
                  "nameOverride": undefined,
                  "schema": "shared.NotificationEventStatus",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "timestamp of the event when it is updated.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "suger organization id.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "timestamp",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "timestamp of the event when it is scheduled or created.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.NotificationEventAction": {
          "description": undefined,
          "generatedName": "SharedNotificationEventAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACCEPT",
              "nameOverride": "ACCEPT",
              "value": "ACCEPT",
            },
            {
              "generatedName": "CREATE",
              "nameOverride": "CREATE",
              "value": "CREATE",
            },
            {
              "generatedName": "DELETE",
              "nameOverride": "DELETE",
              "value": "DELETE",
            },
            {
              "generatedName": "CANCEL",
              "nameOverride": "CANCEL",
              "value": "CANCEL",
            },
            {
              "generatedName": "PENDING_CANCEL",
              "nameOverride": "PENDING_CANCEL",
              "value": "PENDING_CANCEL",
            },
            {
              "generatedName": "EXPIRE",
              "nameOverride": "EXPIRE",
              "value": "EXPIRE",
            },
            {
              "generatedName": "REINSTATE",
              "nameOverride": "REINSTATE",
              "value": "REINSTATE",
            },
            {
              "generatedName": "SUSPEND",
              "nameOverride": "SUSPEND",
              "value": "SUSPEND",
            },
            {
              "generatedName": "UPDATE",
              "nameOverride": "UPDATE",
              "value": "UPDATE",
            },
            {
              "generatedName": "NOTIFY_CONTACTS",
              "nameOverride": "NOTIFY_CONTACTS",
              "value": "NOTIFY_CONTACTS",
            },
            {
              "generatedName": "TEST",
              "nameOverride": "TEST",
              "value": "TEST",
            },
          ],
        },
        "shared.NotificationEventStatus": {
          "description": undefined,
          "generatedName": "SharedNotificationEventStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "",
              "nameOverride": "UNKNOWN",
              "value": "",
            },
            {
              "generatedName": "SCHEDULED",
              "nameOverride": "SCHEDULED",
              "value": "SCHEDULED",
            },
            {
              "generatedName": "PENDING",
              "nameOverride": "PENDING",
              "value": "PENDING",
            },
            {
              "generatedName": "DONE",
              "nameOverride": "DONE",
              "value": "DONE",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": "FAILED",
              "value": "FAILED",
            },
          ],
        },
        "shared.OfferInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedOfferInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "azureOriginalPlan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The origin pricing of Azure plan. Only applicable for Azure Marketplace plans.",
                  "file": undefined,
                  "generatedName": "SharedOfferInfoAzureOriginalPlan",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "azurePrivateOffer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The private offer for Azure Marketplace. Only applicable for Azure Marketplace private offers.",
                  "file": undefined,
                  "generatedName": "SharedOfferInfoAzurePrivateOffer",
                  "nameOverride": undefined,
                  "schema": "AzureMarketplacePrivateOffer",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "azureProductVariant",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedOfferInfoAzureProductVariant",
                  "nameOverride": undefined,
                  "schema": "AzureProductVariant",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "buyerAwsAccountIds",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The buyers' AWS Account IDs of this offer.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "buyerAzureTenants",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The buyers' Azure tenants of this offer.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoBuyerAzureTenantsItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "commits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoCommitsItem",
                    "nameOverride": undefined,
                    "schema": "shared.CommitDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoDimensionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "discount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "eulaType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedOfferInfoEulaType",
                  "nameOverride": undefined,
                  "schema": "shared.EulaType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpMetrics",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Only applicable for GCP Marketplace Offers (the default or private offer)",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoGcpMetricsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPurchaseMetric",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpPlans",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Only applicable for GCP Marketplace Offers (the default or private offer).",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoGcpPlansItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpPurchasePlan",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "paymentInstallments",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For flexible payment schedule. Not empty if it is enabled.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoPaymentInstallmentsItem",
                    "nameOverride": undefined,
                    "schema": "shared.PaymentInstallment",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "privateOfferUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The URL of the private offer sent to buyers to accept. Only applicable for private offer.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refundCancelationPolicy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sellerNotes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The default visibility of offer is PRIVATE.",
                  "generatedName": "SharedOfferInfoVisibility",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "PRIVATE",
                      "nameOverride": undefined,
                      "value": "PRIVATE",
                    },
                    {
                      "generatedName": "PUBLIC",
                      "nameOverride": undefined,
                      "value": "PUBLIC",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.OfferMetaInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedOfferMetaInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "baseAgreementId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Applicable for AWS Marketplace only, when the IsAgreementBasedOffer is true.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "contacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The contacts of the offer to notify if any updates.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferMetaInfoContactsItem",
                    "nameOverride": undefined,
                    "schema": "shared.Contact",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "isAgreementBasedOffer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Applicable for AWS Marketplace only, If this offer is agreement based offer.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "isRenewalOffer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Applicable for AWS Marketplace only, If this offer is renewal offer.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "notifications",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The notifications of the offer if any updates. In most cases, it is to notify contacts/buyers when the offer is pending acceptance.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferMetaInfoNotificationsItem",
                    "nameOverride": undefined,
                    "schema": "shared.NotificationEvent",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.Operation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedOperation",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "endTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Operation ID.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedOperationType",
                  "nameOverride": undefined,
                  "schema": "shared.OperationType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.OperationType": {
          "description": undefined,
          "generatedName": "SharedOperationType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "TemporalWorkflow",
              "nameOverride": "OperationType_TemporalWorkflow",
              "value": "TemporalWorkflow",
            },
          ],
        },
        "shared.PaymentInstallment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedPaymentInstallment",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "chargeOn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ProductInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedProductInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "attributes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "awsSaasProduct",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedProductInfoAwsSaasProduct",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSaasProduct",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "awsSnsSubscriptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedProductInfoAwsSnsSubscriptionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSnsSubscription",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "azureProduct",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedProductInfoAzureProduct",
                  "nameOverride": undefined,
                  "schema": "AzureProduct",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "commits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedProductInfoCommitsItem",
                    "nameOverride": undefined,
                    "schema": "shared.CommitDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedProductInfoDimensionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpProduct",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedProductInfoGcpProduct",
                  "nameOverride": undefined,
                  "schema": "shared.GcpProduct",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "refundCancelationPolicy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "sellerNotes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueRecord": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "amount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The revenue amount for the revenue report",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "collectableAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The revenue amount that the seller/ISV can collect.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The currency of the revenue in ISO 4217 format, such as "USD".",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The date for the revenue report",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "disburseAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "disburseDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedRevenueRecordInfo",
                  "nameOverride": undefined,
                  "schema": "shared.RevenueRecordInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoiceAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "invoiceDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "paymentDueDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refundDisburseAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refundDisburseDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refundInvoiceAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refundInvoiceDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "taxAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueRecordDetail": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueRecordDetail",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "awsRevenueRecordDetail",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For AWS Marketplace",
                  "file": undefined,
                  "generatedName": "SharedRevenueRecordDetailAwsRevenueRecordDetail",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "azureRevenueRecordDetail",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For Azure Marketplace",
                  "file": undefined,
                  "generatedName": "SharedRevenueRecordDetailAzureRevenueRecordDetail",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpRevenueRecordDetail",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For GCP Marketplace",
                  "file": undefined,
                  "generatedName": "SharedRevenueRecordDetailGcpRevenueRecordDetail",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueRecordInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueRecordInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "awsRevenueRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For raw revenue records in AWS Marketplace",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedRevenueRecordInfoAwsRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "azureRevenueRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For raw revenue records in Azure Marketplace",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedRevenueRecordInfoAzureRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "gcpRevenueRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "For raw revenue records in GCP Marketplace",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedRevenueRecordInfoGcpRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueReport": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueReport",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedRevenueReportReportType",
                  "nameOverride": undefined,
                  "schema": "shared.RevenueReportType",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "revenueRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedRevenueReportRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "shared.RevenueRecord",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueReportType": {
          "description": undefined,
          "generatedName": "SharedRevenueReportType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "InvoicedAmount",
              "nameOverride": "InvoicedAmount",
              "value": "InvoicedAmount",
            },
            {
              "generatedName": "CollectableAmount",
              "nameOverride": "CollectableAmount",
              "value": "CollectableAmount",
            },
            {
              "generatedName": "DisbursedAmount",
              "nameOverride": "DisbursedAmount",
              "value": "DisbursedAmount",
            },
          ],
        },
        "shared.SalesforceCrmCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSalesforceCrmCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "exp",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "instance_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refresh_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.SalesforceCrmIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSalesforceCrmIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "System created",
                  "file": undefined,
                  "generatedName": "SharedSalesforceCrmIntegrationCredential",
                  "nameOverride": undefined,
                  "schema": "shared.SalesforceCrmCredential",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "filters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedSalesforceCrmIntegrationFiltersItem",
                    "nameOverride": undefined,
                    "schema": "shared.SalesforceSyncFilter",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "instanceUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "isSandbox",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "secretKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "subdomain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "User defined when setting up the integration",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.SalesforceSyncFilter": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSalesforceSyncFilter",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fieldName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "operator",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "type": "unknown",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.SlackIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSlackIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "appId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "authedUser",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedSlackIntegrationAuthedUser",
                  "nameOverride": undefined,
                  "schema": "slack.OAuthV2ResponseAuthedUser",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "botUserId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "enterprise",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedSlackIntegrationEnterprise",
                  "nameOverride": undefined,
                  "schema": "slack.OAuthV2ResponseEnterprise",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "expiresIn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "incomingWebhook",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedSlackIntegrationIncomingWebhook",
                  "nameOverride": undefined,
                  "schema": "slack.OAuthResponseIncomingWebhook",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "redirectUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "scope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The scope of the access token. multiple scopes are separated by comma.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "team",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedSlackIntegrationTeam",
                  "nameOverride": undefined,
                  "schema": "slack.OAuthV2ResponseTeam",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "tokenType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.UpdateIntegrationParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUpdateIntegrationParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SharedUpdateIntegrationParamsInfo",
                "nameOverride": undefined,
                "schema": "shared.IntegrationInfo",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "SharedUpdateIntegrationParamsPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": undefined,
                "generatedName": "SharedUpdateIntegrationParamsService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                ],
              },
            },
          ],
          "type": "object",
        },
        "shared.UpdateProductParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUpdateProductParams",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "fulfillmentUrl",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.UsageCount": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUsageCount",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "creditCount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The count of this dimension usage records that are handled as credit.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "includedCount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The count of this dimension usage records that are handled as included in IncludedBaseQuantity",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportedCount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The count of this dimension usage records that are reported to cloud vendors.",
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.UsageReport": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUsageReport",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "reportDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedUsageReportUsageRecordsItem",
                    "nameOverride": undefined,
                    "schema": "shared.EntitlementUsageRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ValueType": {
          "description": undefined,
          "generatedName": "SharedValueType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "VALUE_TYPE_UNSPECIFIED",
              "nameOverride": "UNSPECIFIED",
              "value": "VALUE_TYPE_UNSPECIFIED",
            },
            {
              "generatedName": "BOOL",
              "nameOverride": "BOOL",
              "value": "BOOL",
            },
            {
              "generatedName": "INT64",
              "nameOverride": "INT64",
              "value": "INT64",
            },
            {
              "generatedName": "DOUBLE",
              "nameOverride": "DOUBLE",
              "value": "DOUBLE",
            },
            {
              "generatedName": "STRING",
              "nameOverride": "STRING",
              "value": "STRING",
            },
            {
              "generatedName": "DISTRIBUTION",
              "nameOverride": "DISTRIBUTION",
              "value": "DISTRIBUTION",
            },
            {
              "generatedName": "MONEY",
              "nameOverride": "MONEY",
              "value": "MONEY",
            },
          ],
        },
        "shared.WorkloadEntitlement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "endTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "nullable",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementTermID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "externalBuyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "externalProductID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadEntitlementInfo",
                  "nameOverride": undefined,
                  "schema": "shared.EntitlementInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ACTIVE",
                      "nameOverride": undefined,
                      "value": "ACTIVE",
                    },
                    {
                      "generatedName": "CANCELLED",
                      "nameOverride": undefined,
                      "value": "CANCELLED",
                    },
                    {
                      "generatedName": "SUSPENDED",
                      "nameOverride": undefined,
                      "value": "SUSPENDED",
                    },
                    {
                      "generatedName": "PENDING_START",
                      "nameOverride": undefined,
                      "value": "PENDING_START",
                    },
                    {
                      "generatedName": "UNKNOWN",
                      "nameOverride": undefined,
                      "value": "UNKNOWN",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.WorkloadEntitlementTerm": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadEntitlementTerm",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "commitAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "creditAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "endTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "nullable",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "entitlementInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermEntitlementInfo",
                  "nameOverride": undefined,
                  "schema": "shared.EntitlementInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "externalEntitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermInfo",
                  "nameOverride": undefined,
                  "schema": "shared.EntitlementTermInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usedCommitAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usedCreditAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.WorkloadOffer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadOffer",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "endTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "nullable",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expireTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "nullable",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadOfferInfo",
                  "nameOverride": undefined,
                  "schema": "shared.OfferInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdatedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "metaInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadOfferMetaInfo",
                  "nameOverride": undefined,
                  "schema": "shared.OfferMetaInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "offerType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferOfferType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "DEFAULT",
                      "nameOverride": undefined,
                      "value": "DEFAULT",
                    },
                    {
                      "generatedName": "CONTRACT",
                      "nameOverride": undefined,
                      "value": "CONTRACT",
                    },
                    {
                      "generatedName": "SUBSCRIPTION",
                      "nameOverride": undefined,
                      "value": "SUBSCRIPTION",
                    },
                    {
                      "generatedName": "FREE_TRIAL",
                      "nameOverride": undefined,
                      "value": "FREE_TRIAL",
                    },
                    {
                      "generatedName": "FLAT_RATE",
                      "nameOverride": undefined,
                      "value": "FLAT_RATE",
                    },
                    {
                      "generatedName": "PER_USER",
                      "nameOverride": undefined,
                      "value": "PER_USER",
                    },
                    {
                      "generatedName": "PRIVATE",
                      "nameOverride": undefined,
                      "value": "PRIVATE",
                    },
                    {
                      "generatedName": "UNKNOWN",
                      "nameOverride": undefined,
                      "value": "UNKNOWN",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ACCEPTED",
                      "nameOverride": undefined,
                      "value": "ACCEPTED",
                    },
                    {
                      "generatedName": "PENDING_CREATE",
                      "nameOverride": undefined,
                      "value": "PENDING_CREATE",
                    },
                    {
                      "generatedName": "CREATE_FAILED",
                      "nameOverride": undefined,
                      "value": "CREATE_FAILED",
                    },
                    {
                      "generatedName": "CREATE_SUCCESS",
                      "nameOverride": undefined,
                      "value": "CREATE_SUCCESS",
                    },
                    {
                      "generatedName": "DRAFT",
                      "nameOverride": undefined,
                      "value": "DRAFT",
                    },
                    {
                      "generatedName": "EXPIRED",
                      "nameOverride": undefined,
                      "value": "EXPIRED",
                    },
                    {
                      "generatedName": "PENDING_ACCEPTANCE",
                      "nameOverride": undefined,
                      "value": "PENDING_ACCEPTANCE",
                    },
                    {
                      "generatedName": "PENDING_CANCEL",
                      "nameOverride": undefined,
                      "value": "PENDING_CANCEL",
                    },
                    {
                      "generatedName": "CANCEL_FAILED",
                      "nameOverride": undefined,
                      "value": "CANCEL_FAILED",
                    },
                    {
                      "generatedName": "CANCEL_SUCCESS",
                      "nameOverride": undefined,
                      "value": "CANCEL_SUCCESS",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.WorkloadProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "fulfillmentUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadProductInfo",
                  "nameOverride": undefined,
                  "schema": "shared.ProductInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "lastUpdatedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadProductPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "productType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadProductProductType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "UNKNOWN",
                      "nameOverride": undefined,
                      "value": "UNKNOWN",
                    },
                    {
                      "generatedName": "SUBSCRIPTION",
                      "nameOverride": undefined,
                      "value": "SUBSCRIPTION",
                    },
                    {
                      "generatedName": "CONTRACT",
                      "nameOverride": undefined,
                      "value": "CONTRACT",
                    },
                    {
                      "generatedName": "FLAT_RATE",
                      "nameOverride": undefined,
                      "value": "FLAT_RATE",
                    },
                    {
                      "generatedName": "PER_USER",
                      "nameOverride": undefined,
                      "value": "PER_USER",
                    },
                    {
                      "generatedName": "USAGE_BASED",
                      "nameOverride": undefined,
                      "value": "USAGE_BASED",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadProductService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthResponseIncomingWebhook": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthResponseIncomingWebhook",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "channel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "channel_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "configuration_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthV2ResponseAuthedUser": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthV2ResponseAuthedUser",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expires_in",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "refresh_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "scope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthV2ResponseEnterprise": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthV2ResponseEnterprise",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthV2ResponseTeam": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthV2ResponseTeam",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "sql.NullTime": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SqlNullTime",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "time",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "valid",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Valid is true if Time is not NULL",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "types.Entitlement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "customerIdentifier",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The customer identifier is a handle to each unique customer in an application.
Customer identifiers are obtained through the ResolveCustomer operation in AWS
Marketplace Metering Service.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "dimension",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The dimension for which the given entitlement applies. Dimensions represent
categories of capacity in a product and are specified when the product is listed
in AWS Marketplace.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "expirationDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The expiration date represents the minimum date through which this entitlement
is expected to remain valid. For contractual products listed on AWS Marketplace,
the expiration date is the date at which the customer will renew or cancel their
contract. Customers who are opting to renew their contract will still have
entitlements with an expiration date.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "productCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The product code for which the given entitlement applies. Product codes are
provided by AWS Marketplace when the product listing is created.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "type": "unknown",
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageAllocation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesUsageAllocation",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "allocatedUsageQuantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The total quantity allocated to this bucket of usage.

This member is required.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The set of tags that define the bucket of usage. For the bucket of items with no
tags, this parameter can be left out.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TypesUsageAllocationTagsItem",
                    "nameOverride": undefined,
                    "schema": "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageRecord": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesUsageRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "customerIdentifier",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The CustomerIdentifier is obtained through the ResolveCustomer operation and
represents an individual buyer in your application.

This member is required.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "dimension",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "During the process of registering a product on AWS Marketplace, dimensions are
specified. These represent different units of value in your application.

This member is required.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The quantity of usage consumed by the customer for the given dimension and time.
Defaults to 0 if not specified.",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "timestamp",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp, in UTC, for which the usage is being reported. Your application can
meter usage for up to one hour in the past. Make sure the timestamp value is not
before the start of the software usage.

This member is required.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageAllocations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The set of UsageAllocations to submit. The sum of all UsageAllocation quantities
must equal the Quantity of the UsageRecord.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TypesUsageRecordUsageAllocationsItem",
                    "nameOverride": undefined,
                    "schema": "types.UsageAllocation",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageRecordResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesUsageRecordResult",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "meteringRecordId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The MeteringRecordId is a unique identifier for this metering event.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The UsageRecordResultStatus indicates the status of an individual UsageRecord
processed by BatchMeterUsage.

* Success- The UsageRecord was accepted and
honored by BatchMeterUsage.

* CustomerNotSubscribed- The CustomerIdentifier
specified is not able to use your product. The UsageRecord was not honored.
There are three causes for this result:

* The customer identifier is
invalid.

* The customer identifier provided in the metering record does not
have an active agreement or subscription with this product. Future UsageRecords
for this customer will fail until the customer subscribes to your product.

*
The customer's AWS account was suspended.

* DuplicateRecord- Indicates that the
UsageRecord was invalid and not honored. A previously metered UsageRecord had
the same customer, dimension, and time, but a different quantity.",
                  "file": undefined,
                  "generatedName": "TypesUsageRecordResultStatus",
                  "nameOverride": undefined,
                  "schema": "types.UsageRecordResultStatus",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "usageRecord",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The UsageRecord that was part of the BatchMeterUsage request.",
                  "file": undefined,
                  "generatedName": "TypesUsageRecordResultUsageRecord",
                  "nameOverride": undefined,
                  "schema": "types.UsageRecord",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageRecordResultStatus": {
          "description": undefined,
          "generatedName": "TypesUsageRecordResultStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Success",
              "nameOverride": "Success",
              "value": "Success",
            },
            {
              "generatedName": "CustomerNotSubscribed",
              "nameOverride": "CustomerNotSubscribed",
              "value": "CustomerNotSubscribed",
            },
            {
              "generatedName": "DuplicateRecord",
              "nameOverride": "DuplicateRecord",
              "value": "DuplicateRecord",
            },
          ],
        },
      },
      "securitySchemes": {
        "BearerTokenAuth": {
          "headerName": "Authorization",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "//https://api.suger.cloud",
        },
      ],
      "tags": [],
      "title": "Suger API",
      "variables": {},
    },
  },
  "rootPackage": {
    "file": "swagger.json",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser vellum simple 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "
## Vellum API Documentation

### Welcome 👋
Welcome to Vellum's API documentation! Here you'll find information about the various endpoints available to you,
as well as the parameters and responses that they accept and return.

We will be exposing more and more of our APIs over time as they stabilize. If there is some action you can perform
via the UI that you wish you could perform via API, please let us know and we can expose it here in an unstable state.

### API Stability
Some of the APIs documented within are undergoing active development. Use the
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>
and
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>
tags to differentiate between those that are stable and those that are not.

### Base URLs
Some endpoints are hosted separately from the main Vellum API and therefore have a different base url. If this is
the case, they will say so in their description.

Unless otherwise specified, all endpoints use <code>https://api.vellum.ai</code> as their base URL.

### Official API Clients:
Vellum maintains official API clients for Python and Node/Typescript. We recommend using these clients to interact
with all stable endpoints. You can find them here:
- [Python](https://github.com/vocify/vellum-client-python)
- [Node/Typescript](https://github.com/vocify/vellum-client-node)
",
      "endpoints": [
        {
          "authed": true,
          "description": "
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to list documents. Optionally filter on supported fields.
",
          "errorStatusCode": [],
          "generatedRequestName": "DocumentsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "documents_list",
          "path": "/v1/documents",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Filter down to only those documents that are included in the specified index. You may provide either the Vellum-generated ID or the unique name of the index specified upon initial creation.",
              "name": "document_index_id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Number of results to return per page.",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The initial index from which to return the results.",
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Which field to use when ordering the results.",
              "name": "ordering",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": "ListDocumentsRequest",
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DocumentsListResponse",
              "nameOverride": undefined,
              "schema": "PaginatedSlimDocumentList",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "documents",
          ],
        },
        {
          "authed": true,
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Generate a completion using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "GenerateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "generate",
          "path": "/v1/generate",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GenerateRequest",
              "nameOverride": undefined,
              "schema": "GenerateRequestBodyRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GenerateResponse",
              "nameOverride": undefined,
              "schema": "GenerateResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "generate",
          ],
        },
        {
          "authed": true,
          "description": "
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Used to retrieve a model version given its ID.
",
          "errorStatusCode": [],
          "generatedRequestName": "ModelVersionsRetrieveRequest",
          "headers": [],
          "method": "GET",
          "operationId": "model_versions_retrieve",
          "path": "/v1/model-versions/{id}",
          "pathParameters": [
            {
              "description": "A UUID string identifying this model version.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
              "variableReference": undefined,
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ModelVersionsRetrieveResponse",
              "nameOverride": undefined,
              "schema": "ModelVersionRead",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "model-versions",
          ],
        },
        {
          "authed": true,
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Perform a search against a document index.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SearchRequest",
          "headers": [],
          "method": "POST",
          "operationId": "search",
          "path": "/v1/search",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SearchRequest",
              "nameOverride": undefined,
              "schema": "SearchRequestBodyRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SearchResponse",
              "nameOverride": undefined,
              "schema": "SearchResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [
            {
              "description": undefined,
              "name": "Predict",
              "url": "https://predict.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "search",
          ],
        },
        {
          "authed": true,
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to submit feedback regarding the quality of previously generated completions.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "SubmitCompletionActualsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "submit_completion_actuals",
          "path": "/v1/submit-completion-actuals",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SubmitCompletionActualsRequest",
              "nameOverride": undefined,
              "schema": "SubmitCompletionActualsRequestRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [
            {
              "description": undefined,
              "name": "Predict",
              "url": "https://predict.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "submit-completion-actuals",
          ],
        },
        {
          "authed": true,
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Upload a document to be indexed and used for search.

**Note:** Uses a base url of \`https://documents.vellum.ai\`.",
          "errorStatusCode": [
            400,
            404,
            500,
          ],
          "generatedRequestName": "DocumentsUploadRequest",
          "headers": [],
          "method": "POST",
          "operationId": "documents_upload",
          "path": "/v1/upload-document",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": "UploadDocumentRequestBodyRequest",
            "properties": [
              {
                "description": undefined,
                "key": "add_to_index_names",
                "schema": {
                  "json": {
                    "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                    "type": "nullable",
                    "value": {
                      "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                      "type": "array",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "external_id",
                "schema": {
                  "json": {
                    "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                    "type": "nullable",
                    "value": {
                      "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "label",
                "schema": {
                  "json": {
                    "description": "A human-friendly name for this document. Typically the filename.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "contents",
                "schema": {
                  "type": "file",
                },
              },
              {
                "description": undefined,
                "key": "keywords",
                "schema": {
                  "json": {
                    "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                    "type": "nullable",
                    "value": {
                      "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                      "type": "array",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  "type": "json",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DocumentsUploadResponse",
              "nameOverride": undefined,
              "schema": "UploadDocumentResponse",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [
            {
              "description": undefined,
              "name": "Documents",
              "url": "https://documents.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "documents",
          ],
        },
      ],
      "errors": {
        "400": {
          "description": undefined,
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "type": "unknown",
          },
        },
        "404": {
          "description": undefined,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "type": "unknown",
          },
        },
        "500": {
          "description": undefined,
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "type": "unknown",
          },
        },
      },
      "nonRequestReferencedSchemas": [
        "PaginatedSlimDocumentList",
        "GenerateResponse",
        "ModelVersionRead",
        "SearchResponse",
        "UploadDocumentResponse",
        "IndexingStateEnum",
        "FinishReasonEnum",
        "NormalizedLogProbs",
        "LogprobsEnum",
        "GenerateRequestRequest",
        "GenerateOptionsRequest",
        "GenerateResult",
        "GenerateResultData",
        "GenerateResultError",
        "EnrichedNormalizedCompletion",
        "ModelVersionSandboxSnapshot",
        "ModelVersionExecConfigParameters",
        "ModelTypeEnum",
        "ProviderEnum",
        "ModelVersionBuildConfig",
        "ModelVersionExecConfigRead",
        "NormalizedTokenLogProbs",
        "SlimDocument",
        "SearchRequestOptionsRequest",
        "SearchWeightsRequest",
        "SearchResultMergingRequest",
        "SearchFiltersRequest",
        "SearchResult",
        "Document",
        "ProcessingStateEnum",
        "StatusEnum",
        "DocumentDocumentToDocumentIndex",
        "SubmitCompletionActualRequest",
      ],
      "schemas": {
        "Document": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Document",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": "The human-readable name for the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "external_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
                  "type": "nullable",
                  "value": {
                    "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "DocumentDocumentToDocumentIndex": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DocumentDocumentToDocumentIndex",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "document_index_id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies the index this document is included in.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "indexing_state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An enum value representing where this document is along its indexing lifecycle for this index.",
                  "file": undefined,
                  "generatedName": "DocumentDocumentToDocumentIndexIndexingState",
                  "nameOverride": undefined,
                  "schema": "IndexingStateEnum",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "EnrichedNormalizedCompletion": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EnrichedNormalizedCompletion",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The Vellum-generated ID of the completion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "external_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
                  "type": "nullable",
                  "value": {
                    "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The text generated by the LLM.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "finish_reason",
              "schema": {
                "description": "The reason the generation finished.",
                "file": undefined,
                "generatedName": "EnrichedNormalizedCompletionFinishReason",
                "nameOverride": undefined,
                "schema": "FinishReasonEnum",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "logprobs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The logprobs of the completion. Only present if specified in the original request options.",
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "EnrichedNormalizedCompletionLogprobs",
                    "nameOverride": undefined,
                    "schema": "NormalizedLogProbs",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "model_version_id",
              "schema": {
                "description": "The ID of the model version used to generate this completion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "FinishReasonEnum": {
          "description": undefined,
          "generatedName": "FinishReasonEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "LENGTH",
              "nameOverride": undefined,
              "value": "LENGTH",
            },
            {
              "generatedName": "STOP",
              "nameOverride": undefined,
              "value": "STOP",
            },
            {
              "generatedName": "UNKNOWN",
              "nameOverride": undefined,
              "value": "UNKNOWN",
            },
          ],
        },
        "GenerateErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "detail",
              "schema": {
                "description": "Details about why the request failed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "GenerateOptionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateOptionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "logprobs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Which logprobs to include, if any. Defaults to NONE.",
                  "file": undefined,
                  "generatedName": "GenerateOptionsRequestLogprobs",
                  "nameOverride": undefined,
                  "schema": "LogprobsEnum",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "deployment_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the deployment. Must provide either this or deployment_name.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the deployment. Must provide either this or deployment_name.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "deployment_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the deployment. Must provide either this or deployment_id.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the deployment. Must provide either this or deployment_id.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "requests",
              "schema": {
                "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateRequestBodyRequestRequestsItem",
                  "nameOverride": undefined,
                  "schema": "GenerateRequestRequest",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "options",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Additional configuration that can be used to control what's included in the response.",
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "GenerateRequestBodyRequestOptions",
                    "nameOverride": undefined,
                    "schema": "GenerateOptionsRequest",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateRequestRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateRequestRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "input_values",
              "schema": {
                "description": "Key/value pairs for each template variable defined in the deployment's prompt.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "conflict": [],
              "key": "external_ids",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
                  "type": "nullable",
                  "value": {
                    "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": "The results of each generation request.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateResponseResultsItem",
                  "nameOverride": undefined,
                  "schema": "GenerateResult",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResult",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.",
                  "file": undefined,
                  "generatedName": "GenerateResultData",
                  "nameOverride": undefined,
                  "schema": "GenerateResultData",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "error",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.",
                  "file": undefined,
                  "generatedName": "GenerateResultError",
                  "nameOverride": undefined,
                  "schema": "GenerateResultError",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResultData": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResultData",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "completions",
              "schema": {
                "description": "The generated completions. This will generally be a list of length one.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateResultDataCompletionsItem",
                  "nameOverride": undefined,
                  "schema": "EnrichedNormalizedCompletion",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResultError": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResultError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "message",
              "schema": {
                "description": "The error message returned by the LLM provider.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "IndexingStateEnum": {
          "description": undefined,
          "generatedName": "IndexingStateEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "AWAITING_PROCESSING",
              "nameOverride": undefined,
              "value": "AWAITING_PROCESSING",
            },
            {
              "generatedName": "QUEUED",
              "nameOverride": undefined,
              "value": "QUEUED",
            },
            {
              "generatedName": "INDEXING",
              "nameOverride": undefined,
              "value": "INDEXING",
            },
            {
              "generatedName": "INDEXED",
              "nameOverride": undefined,
              "value": "INDEXED",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "LogprobsEnum": {
          "description": undefined,
          "generatedName": "LogprobsEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ALL",
              "nameOverride": undefined,
              "value": "ALL",
            },
            {
              "generatedName": "NONE",
              "nameOverride": undefined,
              "value": "NONE",
            },
          ],
        },
        "ModelTypeEnum": {
          "description": undefined,
          "generatedName": "ModelTypeEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "GENERATE",
              "nameOverride": undefined,
              "value": "GENERATE",
            },
            {
              "generatedName": "CLASSIFY",
              "nameOverride": undefined,
              "value": "CLASSIFY",
            },
          ],
        },
        "ModelVersionBuildConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionBuildConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "base_model",
              "schema": {
                "description": "The name of the base model used to create this model version, as identified by the LLM provider.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "sandbox_snapshot",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Information about the sandbox snapshot that was used to create this model version, if applicable.",
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ModelVersionBuildConfigSandboxSnapshot",
                    "nameOverride": undefined,
                    "schema": "ModelVersionSandboxSnapshot",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionExecConfigParameters": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionExecConfigParameters",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "temperature",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "max_tokens",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "stop",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "top_p",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "top_k",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "frequency_penalty",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "presence_penalty",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "logit_bias",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "description": undefined,
                      "type": "nullable",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionExecConfigRead": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionExecConfigRead",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "prompt_template",
              "schema": {
                "description": "The template used to generate prompts for this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "parameters",
              "schema": {
                "description": "The generation parameters that are passed to the LLM provider at runtime.",
                "file": undefined,
                "generatedName": "ModelVersionExecConfigReadParameters",
                "nameOverride": undefined,
                "schema": "ModelVersionExecConfigParameters",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "input_variables",
              "schema": {
                "description": "Names of the template variables specified in the prompt template.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionRead": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionRead",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "created",
              "schema": {
                "description": "Timestamp of when this model version was created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": "Human-friendly name for this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "model_type",
              "schema": {
                "description": "The type of task this model is used for.",
                "file": undefined,
                "generatedName": "ModelVersionReadModelType",
                "nameOverride": undefined,
                "schema": "ModelTypeEnum",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "provider",
              "schema": {
                "description": "Which LLM provider this model version is associated with.",
                "file": undefined,
                "generatedName": "ModelVersionReadProvider",
                "nameOverride": undefined,
                "schema": "ProviderEnum",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "external_id",
              "schema": {
                "description": "The unique id of this model version as it exists in the above provider's system.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "build_config",
              "schema": {
                "description": "Configuration used to build this model version.",
                "file": undefined,
                "generatedName": "ModelVersionReadBuildConfig",
                "nameOverride": undefined,
                "schema": "ModelVersionBuildConfig",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "exec_config",
              "schema": {
                "description": "Configuration used to execute this model version.",
                "file": undefined,
                "generatedName": "ModelVersionReadExecConfig",
                "nameOverride": undefined,
                "schema": "ModelVersionExecConfigRead",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionSandboxSnapshot": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionSandboxSnapshot",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "The ID of the sandbox snapshot.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "prompt_index",
              "schema": {
                "description": "The index of the prompt in the sandbox snapshot.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NormalizedLogProbs": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NormalizedLogProbs",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "tokens",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NormalizedLogProbsTokensItem",
                  "nameOverride": undefined,
                  "schema": "NormalizedTokenLogProbs",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "likelihood",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NormalizedTokenLogProbs": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NormalizedTokenLogProbs",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "token",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "logprob",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "top_logprobs",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "nullable",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "text_offset",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaginatedSlimDocumentList": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaginatedSlimDocumentList",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaginatedSlimDocumentListResultsItem",
                    "nameOverride": undefined,
                    "schema": "SlimDocument",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ProcessingStateEnum": {
          "description": undefined,
          "generatedName": "ProcessingStateEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "QUEUED",
              "nameOverride": undefined,
              "value": "QUEUED",
            },
            {
              "generatedName": "PROCESSING",
              "nameOverride": undefined,
              "value": "PROCESSING",
            },
            {
              "generatedName": "PROCESSED",
              "nameOverride": undefined,
              "value": "PROCESSED",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "ProviderEnum": {
          "description": undefined,
          "generatedName": "ProviderEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "OPENAI",
              "nameOverride": undefined,
              "value": "OPENAI",
            },
            {
              "generatedName": "COHERE",
              "nameOverride": undefined,
              "value": "COHERE",
            },
            {
              "generatedName": "ANTHROPIC",
              "nameOverride": undefined,
              "value": "ANTHROPIC",
            },
          ],
        },
        "SearchErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "detail",
              "schema": {
                "description": "Details about why the request failed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchFiltersRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchFiltersRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "external_ids",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The document external IDs to filter by",
                  "type": "nullable",
                  "value": {
                    "description": "The document external IDs to filter by",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "index_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the index to search against. Must provide either this or index_name.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the index to search against. Must provide either this or index_name.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "index_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the index to search against. Must provide either this or index_id.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the index to search against. Must provide either this or index_id.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "query",
              "schema": {
                "description": "The query to search for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "options",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Configuration options for the search.",
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SearchRequestBodyRequestOptions",
                    "nameOverride": undefined,
                    "schema": "SearchRequestOptionsRequest",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchRequestOptionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchRequestOptionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The maximum number of results to return.",
                  "type": "nullable",
                  "value": {
                    "description": "The maximum number of results to return.",
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "weights",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The weights to use for the search. Must add up to 1.0.",
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SearchRequestOptionsRequestWeights",
                    "nameOverride": undefined,
                    "schema": "SearchWeightsRequest",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "result_merging",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The configuration for merging results.",
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SearchRequestOptionsRequestResultMerging",
                    "nameOverride": undefined,
                    "schema": "SearchResultMergingRequest",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "filters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The filters to apply to the search.",
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SearchRequestOptionsRequestFilters",
                    "nameOverride": undefined,
                    "schema": "SearchFiltersRequest",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "results",
              "schema": {
                "description": "The results of the search. Each result represents a chunk that matches the search query.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SearchResponseResultsItem",
                  "nameOverride": undefined,
                  "schema": "SearchResult",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResult",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "document",
              "schema": {
                "description": "The document that contains the chunk that matched the search query.",
                "file": undefined,
                "generatedName": "SearchResultDocument",
                "nameOverride": undefined,
                "schema": "Document",
                "type": "reference",
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": "The text of the chunk that matched the search query.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "keywords",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": [],
              "key": "score",
              "schema": {
                "description": "A score representing how well the chunk matches the search query.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchResultMergingRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResultMergingRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "enabled",
              "schema": {
                "description": "Whether to enable merging results",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchWeightsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchWeightsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "semantic_similarity",
              "schema": {
                "description": "The relative weight to give to semantic similarity",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "keywords",
              "schema": {
                "description": "The relative weight to give to keyword matches",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SlimDocument": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlimDocument",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "external_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The external ID that was originally provided when uploading the document.",
                  "type": "nullable",
                  "value": {
                    "description": "The external ID that was originally provided when uploading the document.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "last_uploaded_at",
              "schema": {
                "description": "A timestamp representing when this document was most recently uploaded.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": "Human-friendly name for this document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "processing_state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The current processing state of the document",
                  "file": undefined,
                  "generatedName": "SlimDocumentProcessingState",
                  "nameOverride": undefined,
                  "schema": "ProcessingStateEnum",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The document's current status.",
                  "file": undefined,
                  "generatedName": "SlimDocumentStatus",
                  "nameOverride": undefined,
                  "schema": "StatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": [],
              "key": "keywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A list of keywords associated with this document. Originally provided when uploading the document.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "document_to_document_indexes",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SlimDocumentDocumentToDocumentIndexesItem",
                  "nameOverride": undefined,
                  "schema": "DocumentDocumentToDocumentIndex",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "StatusEnum": {
          "description": undefined,
          "generatedName": "StatusEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACTIVE",
              "nameOverride": undefined,
              "value": "ACTIVE",
            },
          ],
        },
        "SubmitCompletionActualRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
                  "type": "nullable",
                  "value": {
                    "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "external_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
                  "type": "nullable",
                  "value": {
                    "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "text",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Text representing what the completion _should_ have been.",
                  "type": "nullable",
                  "value": {
                    "description": "Text representing what the completion _should_ have been.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "quality",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
                  "type": "nullable",
                  "value": {
                    "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "timestamp",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
                  "type": "nullable",
                  "value": {
                    "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SubmitCompletionActualsErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualsErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "detail",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SubmitCompletionActualsRequestRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualsRequestRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "deployment_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The ID of the deployment. Must provide either this or deployment_name.",
                  "type": "nullable",
                  "value": {
                    "description": "The ID of the deployment. Must provide either this or deployment_name.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "deployment_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the deployment. Must provide either this or deployment_id.",
                  "type": "nullable",
                  "value": {
                    "description": "The name of the deployment. Must provide either this or deployment_id.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "actuals",
              "schema": {
                "description": "Feedback regarding the quality of previously generated completions",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SubmitCompletionActualsRequestRequestActualsItem",
                  "nameOverride": undefined,
                  "schema": "SubmitCompletionActualRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "detail",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "add_to_index_names",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                  "type": "nullable",
                  "value": {
                    "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "external_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                  "type": "nullable",
                  "value": {
                    "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": [],
              "key": "label",
              "schema": {
                "description": "A human-friendly name for this document. Typically the filename.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "contents",
              "schema": {
                "description": "The file contents of the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": [],
              "key": "keywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                  "type": "nullable",
                  "value": {
                    "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": [],
              "key": "document_id",
              "schema": {
                "description": "The ID of the newly created document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "apiKeyAuth": {
          "headerName": "X_API_KEY",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": "Default Server",
          "name": "Default",
          "url": "https://api.vellum.ai",
        },
      ],
      "tags": [],
      "title": "Vellum Client API",
      "variables": {},
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

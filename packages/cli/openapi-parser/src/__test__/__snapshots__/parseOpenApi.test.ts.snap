// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser devrev simple 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "DevRev's REST API.",
      "endpoints": [
        {
          "authed": true,
          "description": "Gets the download URL for the artifact.",
          "errors": [],
          "generatedRequestName": "ArtifactsLocateRequest",
          "headers": [],
          "method": "GET",
          "operationId": "artifacts-locate",
          "path": "/artifacts.locate",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ArtifactsLocateResponse",
              "nameOverride": undefined,
              "schema": "artifacts-locate-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "authed": true,
          "description": "Creates an artifact and generates an upload URL for its data.
",
          "errors": [],
          "generatedRequestName": "ArtifactsPrepareRequest",
          "headers": [],
          "method": "POST",
          "operationId": "artifacts-prepare",
          "path": "/artifacts.prepare",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ArtifactsPrepareRequest",
              "nameOverride": undefined,
              "schema": "artifacts-prepare-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ArtifactsPrepareResponse",
              "nameOverride": undefined,
              "schema": "artifacts-prepare-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "authed": true,
          "description": "Creates a JWT corresponding to the requested token type for the
authenticated user.
",
          "errors": [],
          "generatedRequestName": "AuthTokensCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-create",
          "path": "/auth-tokens.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensCreateRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensCreateResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-create-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Revokes the token that matches the given token ID issued under the
given Dev organization.
",
          "errors": [],
          "generatedRequestName": "AuthTokensDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-delete",
          "path": "/auth-tokens.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensDeleteRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Gets the token metadata corresponding to the given token ID under the
given Dev organization.
",
          "errors": [],
          "generatedRequestName": "AuthTokensGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "auth-tokens-get",
          "path": "/auth-tokens.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "token_id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensGetResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-get-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Gets the token metadata for all the tokens corresponding to the given
token type issued for a given subject.
",
          "errors": [],
          "generatedRequestName": "AuthTokensListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "auth-tokens-list",
          "path": "/auth-tokens.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensListRequestRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "subject",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensListResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-list-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Revokes all the tokens that matches the given token type created by the
authenticated user.
",
          "errors": [],
          "generatedRequestName": "AuthTokensSelfDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-self-delete",
          "path": "/auth-tokens.self.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensSelfDeleteRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-self-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Updates token metadata of a token issued under a given Dev
organization.
",
          "errors": [],
          "generatedRequestName": "AuthTokensUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "auth-tokens-update",
          "path": "/auth-tokens.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensUpdateRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensUpdateResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-update-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new enterprise authentication connection for a Dev
organization. This authentication connection will not be enabled by
default for the organization and the user will need to explicitly
enable this. Keep in mind that at a time, only one authentication
connection can be enabled for a Dev organization. At present, only 5
enterprise connections can be created by an organization.
",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-create",
          "path": "/dev-orgs.auth-connections.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsCreateRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsCreateResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-create-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Deletes an authentication connection. Only enterprise connections which
are explicitly set up for a Dev organization can be deleted. Default
connections can not be deleted using this method.
",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-delete",
          "path": "/dev-orgs.auth-connections.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsDeleteRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Retrieves the details for an authentication connection.",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-org-auth-connections-get",
          "path": "/dev-orgs.auth-connections.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsGetResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-get-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Lists all the authentication connections available for a Dev
organization. This list will include both social and enterprise
connections which are either available by default or are explicitly
created by the user.
",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-org-auth-connections-list",
          "path": "/dev-orgs.auth-connections.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsListResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-list-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Enable or disable an authentication connection for a Dev organization.
Currently, only 1 authentication connection can be enabled at a time.
When a new authentication connection is enabled, the connection which
is currently enabled for the Dev organization is automatically
disabled.
",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsToggleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-toggle",
          "path": "/dev-orgs.auth-connections.toggle",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsToggleRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-toggle-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Updates an authentication connection.",
          "errors": [],
          "generatedRequestName": "DevOrgAuthConnectionsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "dev-org-auth-connections-update",
          "path": "/dev-orgs.auth-connections.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsUpdateRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsUpdateResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-update-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Lists users within your organization.",
          "errors": [],
          "generatedRequestName": "DevUsersListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-users-list",
          "path": "/dev-users.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevUsersListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DevUsersListRequestStateItem",
                    "nameOverride": undefined,
                    "schema": "user-state",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevUsersListResponse",
              "nameOverride": undefined,
              "schema": "dev-users-list-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "authed": true,
          "description": "Gets the authenticated user's information.",
          "errors": [],
          "generatedRequestName": "DevUsersSelfRequest",
          "headers": [],
          "method": "GET",
          "operationId": "dev-users-self",
          "path": "/dev-users.self",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevUsersSelfResponse",
              "nameOverride": undefined,
              "schema": "dev-users-self-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "authed": true,
          "description": "Creates new [part](https://devrev.ai/docs/product/parts).",
          "errors": [],
          "generatedRequestName": "PartsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "parts-create",
          "path": "/parts.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsCreateRequest",
              "nameOverride": undefined,
              "schema": "parts-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsCreateResponse",
              "nameOverride": undefined,
              "schema": "parts-create-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Deletes a [part](https://devrev.ai/docs/product/parts).",
          "errors": [],
          "generatedRequestName": "PartsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "parts-delete",
          "path": "/parts.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsDeleteRequest",
              "nameOverride": undefined,
              "schema": "parts-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsDeleteResponse",
              "nameOverride": undefined,
              "schema": "parts-delete-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errors": [],
          "generatedRequestName": "PartsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "parts-get",
          "path": "/parts.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsGetResponse",
              "nameOverride": undefined,
              "schema": "parts-get-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).
",
          "errors": [],
          "generatedRequestName": "PartsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "parts-list",
          "path": "/parts.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartsListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartsListRequestTypeItem",
                    "nameOverride": undefined,
                    "schema": "part-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsListResponse",
              "nameOverride": undefined,
              "schema": "parts-list-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Updates a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errors": [],
          "generatedRequestName": "PartsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "parts-update",
          "path": "/parts.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsUpdateRequest",
              "nameOverride": undefined,
              "schema": "parts-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsUpdateResponse",
              "nameOverride": undefined,
              "schema": "parts-update-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Creates a Rev organization in the authenticated user's Dev
organization.
",
          "errors": [],
          "generatedRequestName": "RevOrgsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-create",
          "path": "/rev-orgs.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsCreateRequest",
              "nameOverride": undefined,
              "schema": "rev-orgs-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsCreateResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-create-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Deletes the Rev organization.",
          "errors": [],
          "generatedRequestName": "RevOrgsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-delete",
          "path": "/rev-orgs.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsDeleteRequest",
              "nameOverride": undefined,
              "schema": "rev-orgs-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsDeleteResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-delete-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Retrieves the Rev organization's information.",
          "errors": [],
          "generatedRequestName": "RevOrgsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "rev-orgs-get",
          "path": "/rev-orgs.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsGetResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-get-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Gets the list of Rev organizations' information belonging to the
authenticated user's Dev Organization which the user is also authorized
to access.
",
          "errors": [],
          "generatedRequestName": "RevOrgsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "rev-orgs-list",
          "path": "/rev-orgs.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "created_date.after",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "created_date.before",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "modified_date.after",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "modified_date.before",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsListResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-list-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Updates the Rev organization's information.",
          "errors": [],
          "generatedRequestName": "RevOrgsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "rev-orgs-update",
          "path": "/rev-orgs.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsUpdateRequest",
              "nameOverride": undefined,
              "schema": "rev-orgs-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsUpdateResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-update-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new tag, which is used to create associations between objects
and a logical concept denoted by the tag's name.
",
          "errors": [],
          "generatedRequestName": "TagsCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "tags-create",
          "path": "/tags.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsCreateRequest",
              "nameOverride": undefined,
              "schema": "tags-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsCreateResponse",
              "nameOverride": undefined,
              "schema": "tags-create-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Deletes a tag.",
          "errors": [],
          "generatedRequestName": "TagsDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "tags-delete",
          "path": "/tags.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsDeleteRequest",
              "nameOverride": undefined,
              "schema": "tags-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsDeleteResponse",
              "nameOverride": undefined,
              "schema": "tags-delete-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Gets a tag's information.",
          "errors": [],
          "generatedRequestName": "TagsGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "tags-get",
          "path": "/tags.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsGetResponse",
              "nameOverride": undefined,
              "schema": "tags-get-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Lists the available tags.",
          "errors": [],
          "generatedRequestName": "TagsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "tags-list",
          "path": "/tags.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsListResponse",
              "nameOverride": undefined,
              "schema": "tags-list-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Updates a tag's information.",
          "errors": [],
          "generatedRequestName": "TagsUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "tags-update",
          "path": "/tags.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsUpdateRequest",
              "nameOverride": undefined,
              "schema": "tags-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsUpdateResponse",
              "nameOverride": undefined,
              "schema": "tags-update-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new entry on an object's timeline.",
          "errors": [],
          "generatedRequestName": "TimelineEntriesCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "timeline-entries-create",
          "path": "/timeline-entries.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesCreateRequest",
              "nameOverride": undefined,
              "schema": "timeline-entries-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesCreateResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-create-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Gets an entry on an object's timeline.",
          "errors": [],
          "generatedRequestName": "TimelineEntriesGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "timeline-entries-get",
          "path": "/timeline-entries.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesGetResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-get-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Lists the timeline entries for an object.",
          "errors": [],
          "generatedRequestName": "TimelineEntriesListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "timeline-entries-list",
          "path": "/timeline-entries.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "object",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesListResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-list-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Updates an entry on an object's timeline.",
          "errors": [],
          "generatedRequestName": "TimelineEntriesUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "timeline-entries-update",
          "path": "/timeline-entries.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesUpdateRequest",
              "nameOverride": undefined,
              "schema": "timeline-entries-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesUpdateResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-update-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new webhook target.",
          "errors": [],
          "generatedRequestName": "WebhooksCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-create",
          "path": "/webhooks.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksCreateRequest",
              "nameOverride": undefined,
              "schema": "webhooks-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksCreateResponse",
              "nameOverride": undefined,
              "schema": "webhooks-create-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Deletes the requested webhook.",
          "errors": [],
          "generatedRequestName": "WebhooksDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-delete",
          "path": "/webhooks.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksDeleteRequest",
              "nameOverride": undefined,
              "schema": "webhooks-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksDeleteResponse",
              "nameOverride": undefined,
              "schema": "webhooks-delete-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Gets the requested webhook's information.",
          "errors": [],
          "generatedRequestName": "WebhooksGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "webhooks-get",
          "path": "/webhooks.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksGetResponse",
              "nameOverride": undefined,
              "schema": "webhooks-get-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Lists the webhooks.",
          "errors": [],
          "generatedRequestName": "WebhooksListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "webhooks-list",
          "path": "/webhooks.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksListResponse",
              "nameOverride": undefined,
              "schema": "webhooks-list-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Updates the requested webhook.",
          "errors": [],
          "generatedRequestName": "WebhooksUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "webhooks-update",
          "path": "/webhooks.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksUpdateRequest",
              "nameOverride": undefined,
              "schema": "webhooks-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksUpdateResponse",
              "nameOverride": undefined,
              "schema": "webhooks-update-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Creates new work ([issue](https://devrev.ai/docs/product/build),
[ticket](https://devrev.ai/docs/product/support)) item.
",
          "errors": [],
          "generatedRequestName": "WorksCreateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "works-create",
          "path": "/works.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksCreateRequest",
              "nameOverride": undefined,
              "schema": "works-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksCreateResponse",
              "nameOverride": undefined,
              "schema": "works-create-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Deletes a work item.",
          "errors": [],
          "generatedRequestName": "WorksDeleteRequest",
          "headers": [],
          "method": "POST",
          "operationId": "works-delete",
          "path": "/works.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksDeleteRequest",
              "nameOverride": undefined,
              "schema": "works-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksDeleteResponse",
              "nameOverride": undefined,
              "schema": "works-delete-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Exports a collection of work items.",
          "errors": [],
          "generatedRequestName": "WorksExportRequest",
          "headers": [],
          "method": "GET",
          "operationId": "works-export",
          "path": "/works.export",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "first",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksExportRequestIssuePriorityItem",
                    "nameOverride": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksExportRequestTicketSeverityItem",
                    "nameOverride": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksExportRequestTypeItem",
                    "nameOverride": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksExportResponse",
              "nameOverride": undefined,
              "schema": "works-export-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Gets a work item's information.",
          "errors": [],
          "generatedRequestName": "WorksGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "works-get",
          "path": "/works.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksGetResponse",
              "nameOverride": undefined,
              "schema": "works-get-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Lists a collection of work items.",
          "errors": [],
          "generatedRequestName": "WorksListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "works-list",
          "path": "/works.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksListRequestIssuePriorityItem",
                    "nameOverride": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksListRequestTicketSeverityItem",
                    "nameOverride": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksListRequestTypeItem",
                    "nameOverride": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksListResponse",
              "nameOverride": undefined,
              "schema": "works-list-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Updates a work item's information.",
          "errors": [],
          "generatedRequestName": "WorksUpdateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "works-update",
          "path": "/works.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksUpdateRequest",
              "nameOverride": undefined,
              "schema": "works-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksUpdateResponse",
              "nameOverride": undefined,
              "schema": "works-update-response",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
      ],
      "nonRequestReferencedSchemas": [
        "artifacts-locate-response",
        "artifacts-prepare-response",
        "auth-tokens-create-response",
        "auth-tokens-get-response",
        "auth-token-requested-token-type",
        "auth-tokens-list-response",
        "auth-tokens-update-response",
        "dev-org-auth-connections-create-response",
        "dev-org-auth-connections-get-response",
        "dev-org-auth-connections-list-response",
        "dev-org-auth-connections-update-response",
        "list-mode",
        "user-state",
        "dev-users-list-response",
        "dev-users-self-response",
        "parts-create-response",
        "parts-delete-response",
        "parts-get-response",
        "part-type",
        "parts-list-response",
        "parts-update-response",
        "rev-orgs-create-response",
        "rev-orgs-delete-response",
        "rev-orgs-get-response",
        "rev-orgs-list-response",
        "rev-orgs-update-response",
        "tags-create-response",
        "tags-delete-response",
        "tags-get-response",
        "tags-list-response",
        "tags-update-response",
        "timeline-entries-create-response",
        "timeline-entries-get-response",
        "timeline-entries-list-response",
        "timeline-entries-update-response",
        "webhooks-create-response",
        "webhooks-delete-response",
        "webhooks-get-response",
        "webhooks-list-response",
        "webhooks-update-response",
        "works-create-response",
        "works-delete-response",
        "issue-priority",
        "ticket-severity",
        "work-type",
        "works-export-response",
        "works-get-response",
        "works-list-response",
        "works-update-response",
        "atom-base-summary",
        "artifacts-prepare-response-form-data",
        "user-summary",
        "auth-connection-type",
        "auth-token-status",
        "auth-token-grant-type",
        "auth-tokens-rev-info",
        "auth-token-subject-token-type",
        "auth-token-token-type",
        "auth-token",
        "auth-tokens-org-traits",
        "auth-tokens-user-traits",
        "part-base",
        "part-base-summary",
        "dev-org-auth-connections-create-request-type",
        "auth-connection",
        "auth-connection-toggle",
        "dev-org-auth-connections-update-request-type",
        "external-identity",
        "user-base-summary",
        "dev-user",
        "error-bad-request-type",
        "error-forbidden-type",
        "error-internal-server-error-type",
        "error-not-found-type",
        "error-service-unavailable-type",
        "error-too-many-requests-type",
        "error-unauthorized-type",
        "part",
        "rev-org",
        "tag",
        "timeline-entry",
        "webhook",
        "work",
        "org-type",
        "artifact-summary",
        "tag-with-value",
        "parts-update-request-owned-by",
        "org-base-summary",
        "org-environment",
        "org-summary",
        "tag-summary",
        "tags-update-allowed-values",
        "group-summary",
        "timeline-comment-body-type",
        "timeline-entries-create-request-type",
        "timeline-entry-visibility",
        "timeline-entries-update-request-type",
        "timeline-entries-update-request-timeline-comment-artifacts",
        "timeline-entry-type",
        "atom-base",
        "user-type",
        "webhook-event-type",
        "webhook-status",
        "event-part-created",
        "event-part-deleted",
        "event-part-updated",
        "event-rev-org-created",
        "event-rev-org-deleted",
        "event-rev-org-updated",
        "event-tag-created",
        "event-tag-deleted",
        "event-tag-updated",
        "event-timeline-entry-created",
        "event-timeline-entry-deleted",
        "event-timeline-entry-updated",
        "webhook-event-verify",
        "event-webhook-created",
        "event-webhook-deleted",
        "event-webhook-updated",
        "event-work-created",
        "event-work-deleted",
        "event-work-updated",
        "webhooks-update-action",
        "webhooks-update-request-event-types",
        "part-summary",
        "stage",
        "stage-init",
        "set-tag-with-value",
        "works-update-request-artifact-ids",
        "works-update-request-owned-by",
        "works-update-request-reported-by",
        "stage-update",
        "works-update-request-tags",
      ],
      "schemas": {
        "artifact-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "ArtifactSummary",
          "nameOverride": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "artifacts-locate-response": {
          "allOf": [],
          "description": "The response to getting an artifact's download URL.",
          "generatedName": "ArtifactsLocateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "expires_at",
              "schema": {
                "description": "The expiration timestamp of the URL.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The artifact's download URL.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-request": {
          "allOf": [],
          "description": "The request to prepare a URL to upload a file.",
          "generatedName": "ArtifactsPrepareRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "file_name",
              "schema": {
                "description": "The name of the file that's being uploaded.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response": {
          "allOf": [],
          "description": "The response to preparing a URL to upload a file.",
          "generatedName": "ArtifactsPrepareResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "form_data",
              "schema": {
                "description": "The POST policy form data.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ArtifactsPrepareResponseFormDataItem",
                  "nameOverride": undefined,
                  "schema": "artifacts-prepare-response-form-data",
                  "type": "reference",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The generated artifact's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The URL that the file's data should be uploaded to.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response-form-data": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ArtifactsPrepareResponseFormData",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "key",
              "schema": {
                "description": "Key of the form field.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "Value corresponding to the key.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "atom-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AtomBaseCreatedBy",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "created_date",
              "schema": {
                "description": "Timestamp when the object was created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_id",
              "schema": {
                "description": "Human-readable object ID unique to the Dev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "modified_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AtomBaseModifiedBy",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "modified_date",
              "schema": {
                "description": "Timestamp when the object was last modified.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "atom-base-summary": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_id",
              "schema": {
                "description": "Human-readable object ID unique to the Dev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-connection": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "enabled",
                "schema": {
                  "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthConnectionType",
                  "nameOverride": undefined,
                  "schema": "auth-connection-type",
                  "type": "reference",
                },
              },
            ],
            "description": "Connection object that specifies the configuration for an
authentication connection that is set up for a Dev organization.
",
            "discriminantProperty": "type",
            "generatedName": "AuthConnection",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
                "nameOverride": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
                "nameOverride": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
                "nameOverride": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "social": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSocial",
                "nameOverride": undefined,
                "schema": "auth-connection-options-social",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
                "nameOverride": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "auth-connection-options-azure-ad": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an Azure AD
authentication connection.
",
          "generatedName": "AuthConnectionOptionsAzureAd",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "Client ID for the Azure authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client_secret",
              "schema": {
                "description": "Client secret for the Azure authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Domain URL of the Azure authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-google-apps": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a Google Apps
authentication connection.
",
          "generatedName": "AuthConnectionOptionsGoogleApps",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "Client ID for the Google Apps authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client_secret",
              "schema": {
                "description": "Client secret for the Google Apps authentication connection.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tenant_domain",
              "schema": {
                "description": "Tenant domain URL of the Google Apps authentication connection.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-oidc": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an OIDC
authentication connection.
",
          "generatedName": "AuthConnectionOptionsOidc",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "Client ID for the OIDC authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client_secret",
              "schema": {
                "description": "Client secret for the OIDC authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "issuer",
              "schema": {
                "description": "Issuer URL of the OIDC authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-saml": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a SAML
authentication connection.
",
          "generatedName": "AuthConnectionOptionsSaml",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "sign_in_endpoint",
              "schema": {
                "description": "Sign In endpoint for the SAML authentication connection.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "signing_cert",
              "schema": {
                "description": "Signing certificate for the SAML authentication connection.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-social": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "auth-connection-toggle": {
          "description": undefined,
          "generatedName": "AuthConnectionToggle",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "disable",
              "nameOverride": undefined,
              "value": "disable",
            },
            {
              "generatedName": "enable",
              "nameOverride": undefined,
              "value": "enable",
            },
          ],
        },
        "auth-connection-type": {
          "description": "Defines the type for the authentication connection. The configuration
for each authentication connection will depend on the type value.
",
          "generatedName": "AuthConnectionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "generatedName": "social",
              "nameOverride": undefined,
              "value": "social",
            },
            {
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "auth-token": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AuthToken",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "client_id",
              "schema": {
                "description": "An identifier that represents the application that requested the
token. Only applicable for application access tokens.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_at",
              "schema": {
                "description": "The time at which the token expires.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "issued_at",
              "schema": {
                "description": "The time at which the token was issued.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokenRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "scopes",
              "schema": {
                "description": "The scopes associated with the issued token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokenStatus",
                  "nameOverride": undefined,
                  "schema": "auth-token-status",
                  "type": "reference",
                },
              },
            },
            {
              "key": "subject",
              "schema": {
                "description": "The subject of the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-token-grant-type": {
          "description": "Specifies the process of obtaining a token.",
          "generatedName": "AuthTokenGrantType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UrnDevrevParamsOauthGrantTypeTokenIssue",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:grant-type:token-issue",
            },
            {
              "generatedName": "UrnIetfParamsOauthGrantTypeTokenExchange",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:grant-type:token-exchange",
            },
          ],
        },
        "auth-token-requested-token-type": {
          "description": "The type of the requested token.",
          "generatedName": "AuthTokenRequestedTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeAat",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeAatPublic",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat:public",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeDev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:dev",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypePat",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:pat",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeRev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:rev",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSession",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:session",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSessionDev0",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:session:dev0",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSys",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:sys",
            },
            {
              "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-status": {
          "description": "The status of the token.",
          "generatedName": "AuthTokenStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "expired",
              "nameOverride": undefined,
              "value": "expired",
            },
            {
              "generatedName": "revoked",
              "nameOverride": undefined,
              "value": "revoked",
            },
          ],
        },
        "auth-token-subject-token-type": {
          "description": "The type of the subject token.",
          "generatedName": "AuthTokenSubjectTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeJwtAuth0",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:auth0",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeJwtDev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:dev",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeRevinfo",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:revinfo",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeSysu",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:sysu",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfo",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo",
            },
            {
              "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfoProfile",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo:profile",
            },
            {
              "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-token-type": {
          "description": "The type of the issued token. Bearer is the only supported token type.
",
          "generatedName": "AuthTokenTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "bearer",
              "nameOverride": undefined,
              "value": "bearer",
            },
          ],
        },
        "auth-tokens-create-request": {
          "allOf": [],
          "description": "A request to create a new token corresponding to the requested token
type.
",
          "generatedName": "AuthTokensCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "aud",
              "schema": {
                "description": "The expected audience values with respect to the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "client_id",
              "schema": {
                "description": "An identifier that represents the application which is requesting
the token. If no client_id is present in the request to generate an
application access token (AAT), DevRev will generate a client_id.
This client_id is only associated with an AAT.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": "The expected validity lifetime of the token in number of days.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "grant_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestGrantType",
                  "nameOverride": undefined,
                  "schema": "auth-token-grant-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestRevInfo",
                  "nameOverride": undefined,
                  "schema": "auth-tokens-rev-info",
                  "type": "reference",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": "The requested set of scopes associated with the issued token. A
space-delimited list of values in which the order of values does
not matter.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subject_token",
              "schema": {
                "description": "Represents the entity that requests the token. Not required when
requesting an application access token (AAT).
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subject_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestSubjectTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-subject-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new token corresponding to the
requested token type.
",
          "generatedName": "AuthTokensCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "access_token",
              "schema": {
                "description": "The issued JSON Web Token (JWT) corresponding to the requested
token type.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "client_id",
              "schema": {
                "description": "An identifier that represents the application which is requesting
the token. Only present in a response corresponding to an
application access token (AAT).
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": "The validity lifetime of the token specified in seconds since Unix
epoch.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "refresh_token",
              "schema": {
                "description": "A token to refresh the issued token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": "The scopes associated with the issued token. A space-delimited list
of values in which the order of values does not matter.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AuthTokensCreateResponseTokenType",
                "nameOverride": undefined,
                "schema": "auth-token-token-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-delete-request": {
          "allOf": [],
          "description": "The request to revoke the token.",
          "generatedName": "AuthTokensDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token_id",
              "schema": {
                "description": "The unique identifier for the token under a given Dev organization.
If no token ID is provided, then the token ID will be set from the
JTI claim of the token in the authorization header.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-get-response": {
          "allOf": [],
          "description": "The response to get the token metadata.",
          "generatedName": "AuthTokensGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AuthTokensGetResponseToken",
                "nameOverride": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-list-response": {
          "allOf": [],
          "description": "The response to list the token metadata.",
          "generatedName": "AuthTokensListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tokens",
              "schema": {
                "description": "The list of token metadata.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensListResponseTokensItem",
                  "nameOverride": undefined,
                  "schema": "auth-token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-org-traits": {
          "allOf": [],
          "description": "Carries Rev org info.",
          "generatedName": "AuthTokensOrgTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The display name of the Rev org.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "The domain of the Rev org.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-rev-info": {
          "allOf": [],
          "description": "Carries info corresponding to the Rev user to be provisioned and/or
issue a Rev session token.
",
          "generatedName": "AuthTokensRevInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "org_ref",
              "schema": {
                "description": "An identifier which uniquely identifies a Rev org.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "org_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensRevInfoOrgTraits",
                  "nameOverride": undefined,
                  "schema": "auth-tokens-org-traits",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_user_id",
              "schema": {
                "description": "The unique ID of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "user_ref",
              "schema": {
                "description": "An identifier which uniquely identifies a Rev user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "user_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensRevInfoUserTraits",
                  "nameOverride": undefined,
                  "schema": "auth-tokens-user-traits",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-self-delete-request": {
          "allOf": [],
          "description": "The request to delete all the tokens created by the authenticated user,
that match with the provided token type.
",
          "generatedName": "AuthTokensSelfDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensSelfDeleteRequestRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-request": {
          "allOf": [],
          "description": "A request to update the token metadata.",
          "generatedName": "AuthTokensUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "token_id",
              "schema": {
                "description": "The unique identifier of the token under a given Dev organization.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-response": {
          "allOf": [],
          "description": "Response for the request to update the token metadata.",
          "generatedName": "AuthTokensUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AuthTokensUpdateResponseToken",
                "nameOverride": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-user-traits": {
          "allOf": [],
          "description": "Carries Rev user info.",
          "generatedName": "AuthTokensUserTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The display name of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "The email address of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "full_name",
              "schema": {
                "description": "The full name of the Rev user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "capability": {
          "description": undefined,
          "file": undefined,
          "generatedName": "Capability",
          "nameOverride": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "capability-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "CapabilitySummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "dev-org-auth-connections-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevOrgAuthConnectionsCreateRequestType",
                  "nameOverride": undefined,
                  "schema": "dev-org-auth-connections-create-request-type",
                  "type": "reference",
                },
              },
            ],
            "description": "Request to create a new enterprise authentication connection.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
                "nameOverride": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
                "nameOverride": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
                "nameOverride": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
                "nameOverride": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-create-request-type": {
          "description": "Defines the type for the authentication connection. Different types of
authentication connections have different configuration parameters.
",
          "generatedName": "DevOrgAuthConnectionsCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevOrgAuthConnectionsCreateResponseAuthConnection",
                "nameOverride": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-delete-request": {
          "allOf": [],
          "description": "Request to delete an enterprise authentication connection for a Dev
organization. A default connection and a connection which is currently
enabled cannot be deleted.
",
          "generatedName": "DevOrgAuthConnectionsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-get-response": {
          "allOf": [],
          "description": "Response object encapsulating the configuration details of an
authentication connection.
",
          "generatedName": "DevOrgAuthConnectionsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevOrgAuthConnectionsGetResponseAuthConnection",
                "nameOverride": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-list-response": {
          "allOf": [],
          "description": "Response object for the request to list all the social and enterprise
authentication connections configured for a Dev organization.
",
          "generatedName": "DevOrgAuthConnectionsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connections",
              "schema": {
                "description": "List of all the authentication connections currently configured for
a Dev organization.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevOrgAuthConnectionsListResponseAuthConnectionsItem",
                  "nameOverride": undefined,
                  "schema": "auth-connection",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-toggle-request": {
          "allOf": [],
          "description": "Request to enable or disable an authentication connection for a Dev
organization.
",
          "generatedName": "DevOrgAuthConnectionsToggleRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be toggled.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "toggle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevOrgAuthConnectionsToggleRequestToggle",
                  "nameOverride": undefined,
                  "schema": "auth-connection-toggle",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection which is to be updated.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevOrgAuthConnectionsUpdateRequestType",
                  "nameOverride": undefined,
                  "schema": "dev-org-auth-connections-update-request-type",
                  "type": "reference",
                },
              },
            ],
            "description": "Request to update an enterprise authentication connection for a Dev
organization.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
                "nameOverride": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmpty",
                "nameOverride": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
                "nameOverride": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
                "nameOverride": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
                "nameOverride": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-update-request-type": {
          "description": "Specifies the type for the authentication connection. Different types
of authentication connections have different configuration parameters
that can be updated.
",
          "generatedName": "DevOrgAuthConnectionsUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "generatedName": "none",
              "nameOverride": undefined,
              "value": "none",
            },
            {
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-update-response": {
          "allOf": [],
          "description": "Response for the request to update an enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevOrgAuthConnectionsUpdateResponseAuthConnection",
                "nameOverride": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-user": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserBase",
              "nameOverride": undefined,
              "schema": "user-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "DevUser",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "external_identities",
              "schema": {
                "description": "IDs of the Dev User outside the DevRev SOR.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DevUserExternalIdentitiesItem",
                    "nameOverride": undefined,
                    "schema": "external-identity",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-user-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "DevUserSummary",
          "nameOverride": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "dev-users-list-response": {
          "allOf": [],
          "description": "The response to listing the Dev users.",
          "generatedName": "DevUsersListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dev_users",
              "schema": {
                "description": "The list of Dev users.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevUsersListResponseDevUsersItem",
                  "nameOverride": undefined,
                  "schema": "dev-user",
                  "type": "reference",
                },
              },
            },
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-users-self-response": {
          "allOf": [],
          "description": "The response to getting the information for the authenticated user.
",
          "generatedName": "DevUsersSelfResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dev_user",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevUsersSelfResponseDevUser",
                "nameOverride": undefined,
                "schema": "dev-user",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "empty": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "enhancement": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartBase",
              "nameOverride": undefined,
              "schema": "part-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Enhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "target_close_date",
              "schema": {
                "description": "Timestamp when the enhancement is expected to be closed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "enhancement-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "EnhancementSummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "error-bad-request": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorBadRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ErrorBadRequestType",
                  "nameOverride": undefined,
                  "schema": "error-bad-request-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-bad-request": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-invalid-enum-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestInvalidEnumValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the field.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "field_name",
              "schema": {
                "description": "The field whose enum value is invalid.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "The value that was received.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-missing-required-field": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestMissingRequiredField",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "field_name",
              "schema": {
                "description": "The missing field's name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-parse-error": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-type": {
          "description": undefined,
          "generatedName": "ErrorBadRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "bad_request",
              "nameOverride": undefined,
              "value": "bad_request",
            },
            {
              "generatedName": "invalid_enum_value",
              "nameOverride": undefined,
              "value": "invalid_enum_value",
            },
            {
              "generatedName": "missing_required_field",
              "nameOverride": undefined,
              "value": "missing_required_field",
            },
            {
              "generatedName": "parse_error",
              "nameOverride": undefined,
              "value": "parse_error",
            },
            {
              "generatedName": "value_not_permitted",
              "nameOverride": undefined,
              "value": "value_not_permitted",
            },
          ],
        },
        "error-bad-request-value-not-permitted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestValueNotPermitted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "field_name",
              "schema": {
                "description": "The field whose value is not permitted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "reason",
              "schema": {
                "description": "The reason the value isn't permitted.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "message",
              "schema": {
                "description": "The message associated with the error.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorForbidden",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ErrorForbiddenType",
                  "nameOverride": undefined,
                  "schema": "error-forbidden-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden-forbidden": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-forbidden-type": {
          "description": undefined,
          "generatedName": "ErrorForbiddenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "forbidden",
              "nameOverride": undefined,
              "value": "forbidden",
            },
          ],
        },
        "error-internal-server-error": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorInternalServerError",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "reference_id",
              "schema": {
                "description": "A unique ID that's generated for the error that can be used for
inquiry.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ErrorInternalServerErrorType",
                  "nameOverride": undefined,
                  "schema": "error-internal-server-error-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-internal-server-error-internal-error": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-internal-server-error-type": {
          "description": undefined,
          "generatedName": "ErrorInternalServerErrorType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "internal_error",
              "nameOverride": undefined,
              "value": "internal_error",
            },
          ],
        },
        "error-not-found": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorNotFound",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ErrorNotFoundType",
                  "nameOverride": undefined,
                  "schema": "error-not-found-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-not-found-not-found": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-not-found-type": {
          "description": undefined,
          "generatedName": "ErrorNotFoundType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "not_found",
              "nameOverride": undefined,
              "value": "not_found",
            },
          ],
        },
        "error-service-unavailable": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorServiceUnavailable",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ErrorServiceUnavailableType",
                  "nameOverride": undefined,
                  "schema": "error-service-unavailable-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-service-unavailable-service-unavailable": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-service-unavailable-type": {
          "description": undefined,
          "generatedName": "ErrorServiceUnavailableType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "service_unavailable",
              "nameOverride": undefined,
              "value": "service_unavailable",
            },
          ],
        },
        "error-too-many-requests": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorTooManyRequests",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "retry_after",
              "schema": {
                "description": "The number of seconds after which the client should retry.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ErrorTooManyRequestsType",
                  "nameOverride": undefined,
                  "schema": "error-too-many-requests-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-too-many-requests-too-many-requests": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-too-many-requests-type": {
          "description": undefined,
          "generatedName": "ErrorTooManyRequestsType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "too_many_requests",
              "nameOverride": undefined,
              "value": "too_many_requests",
            },
          ],
        },
        "error-unauthorized": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorUnauthorized",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ErrorUnauthorizedType",
                  "nameOverride": undefined,
                  "schema": "error-unauthorized-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-unauthorized-type": {
          "description": undefined,
          "generatedName": "ErrorUnauthorizedType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "unauthenticated",
              "nameOverride": undefined,
              "value": "unauthenticated",
            },
          ],
        },
        "error-unauthorized-unauthenticated": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "event-part-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventPartCreatedPart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-part-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the part that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-part-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventPartUpdatedPart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventRevOrgCreatedRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the Rev organization that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventRevOrgUpdatedRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTagCreatedTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTagUpdatedTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTimelineEntryCreatedEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the timeline entry that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTimelineEntryUpdatedEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWebhookCreatedWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the webhook that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWebhookUpdatedWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWorkCreatedWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the work that was deleted.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-work-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWorkUpdatedWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "external-identity": {
          "description": "External identity of a user.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "feature": {
          "description": undefined,
          "file": undefined,
          "generatedName": "Feature",
          "nameOverride": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "feature-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "FeatureSummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "group-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "GroupSummary",
          "nameOverride": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "issue": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorkBase",
              "nameOverride": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Issue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "IssuePriority",
                  "nameOverride": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "issue-priority": {
          "description": "Priority of the work based upon impact and criticality.",
          "generatedName": "IssuePriority",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "p0",
              "nameOverride": undefined,
              "value": "p0",
            },
            {
              "generatedName": "p1",
              "nameOverride": undefined,
              "value": "p1",
            },
            {
              "generatedName": "p2",
              "nameOverride": undefined,
              "value": "p2",
            },
            {
              "generatedName": "p3",
              "nameOverride": undefined,
              "value": "p3",
            },
          ],
        },
        "list-mode": {
          "description": "The iteration mode to use. If "after", then entries after the provided
cursor will be returned, or if no cursor is provided, then from the
beginning. If "before", then entries before the provided cursor will be
returned, or if no cursor is provided, then from the end. Entries will
always be returned in the specified sort-by order.
",
          "generatedName": "ListMode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "after",
              "nameOverride": undefined,
              "value": "after",
            },
            {
              "generatedName": "before",
              "nameOverride": undefined,
              "value": "before",
            },
          ],
        },
        "org-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "Name of the Organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "Name of the Organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-environment": {
          "description": "The environment of the Org. Defaults to 'production' if not specified.
",
          "generatedName": "OrgEnvironment",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "production",
              "nameOverride": undefined,
              "value": "production",
            },
            {
              "generatedName": "staging",
              "nameOverride": undefined,
              "value": "staging",
            },
            {
              "generatedName": "test",
              "nameOverride": undefined,
              "value": "test",
            },
          ],
        },
        "org-summary": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "OrgSummaryType",
                  "nameOverride": undefined,
                  "schema": "org-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "OrgSummary",
            "nameOverride": undefined,
            "schemas": {
              "rev_org": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasRevOrgSummary",
                "nameOverride": undefined,
                "schema": "rev-org-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "org-type": {
          "description": undefined,
          "generatedName": "OrgType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "rev_org",
              "nameOverride": undefined,
              "value": "rev_org",
            },
          ],
        },
        "part": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartType",
                  "nameOverride": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Part",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCapability",
                "nameOverride": undefined,
                "schema": "capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEnhancement",
                "nameOverride": undefined,
                "schema": "enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasFeature",
                "nameOverride": undefined,
                "schema": "feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasProduct",
                "nameOverride": undefined,
                "schema": "product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": "The attached artifacts.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartBaseArtifactsItem",
                    "nameOverride": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "Description of the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "owned_by",
              "schema": {
                "description": "The users that own the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartBaseOwnedByItem",
                    "nameOverride": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "Tags associated with the object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartBaseTagsItem",
                    "nameOverride": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "part-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "part-summary": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartSummaryType",
                  "nameOverride": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartSummary",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCapabilitySummary",
                "nameOverride": undefined,
                "schema": "capability-summary",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEnhancementSummary",
                "nameOverride": undefined,
                "schema": "enhancement-summary",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasFeatureSummary",
                "nameOverride": undefined,
                "schema": "feature-summary",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasProductSummary",
                "nameOverride": undefined,
                "schema": "product-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-type": {
          "description": undefined,
          "generatedName": "PartType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "capability",
              "nameOverride": undefined,
              "value": "capability",
            },
            {
              "generatedName": "enhancement",
              "nameOverride": undefined,
              "value": "enhancement",
            },
            {
              "generatedName": "feature",
              "nameOverride": undefined,
              "value": "feature",
            },
            {
              "generatedName": "product",
              "nameOverride": undefined,
              "value": "product",
            },
          ],
        },
        "parts-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "Description of the part.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "Name of the part.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the part.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartsCreateRequestType",
                  "nameOverride": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestCapability",
                "nameOverride": undefined,
                "schema": "parts-create-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestEnhancement",
                "nameOverride": undefined,
                "schema": "parts-create-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestFeature",
                "nameOverride": undefined,
                "schema": "parts-create-request-feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestProduct",
                "nameOverride": undefined,
                "schema": "parts-create-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-create-request-capability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestCapability",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent product for the capability.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent part on which the enhancement is to be created.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "target_close_date",
              "schema": {
                "description": "Target close date by which enhancement is expected to be closed.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-feature": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestFeature",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent capability/feature for the feature.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-product": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PartsCreateResponsePart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the part to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-response": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PartsGetResponsePart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "parts",
              "schema": {
                "description": "The list of parts.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartsListResponsePartsItem",
                  "nameOverride": undefined,
                  "schema": "part",
                  "type": "reference",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "The updated description of the part.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the part to update.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "The updated name of the part.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartsUpdateRequestOwnedBy",
                    "nameOverride": undefined,
                    "schema": "parts-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartsUpdateRequestType",
                  "nameOverride": undefined,
                  "schema": "part-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestCapability",
                "nameOverride": undefined,
                "schema": "parts-update-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestEnhancement",
                "nameOverride": undefined,
                "schema": "parts-update-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestFeature",
                "nameOverride": undefined,
                "schema": "parts-update-request-feature",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmpty",
                "nameOverride": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestProduct",
                "nameOverride": undefined,
                "schema": "parts-update-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-update-request-capability": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "target_close_date",
              "schema": {
                "description": "Updates the target close date of the enhancement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-feature": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-product": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PartsUpdateResponsePart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "product": {
          "description": undefined,
          "file": undefined,
          "generatedName": "Product",
          "nameOverride": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "product-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "ProductSummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "rev-org": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "OrgBase",
              "nameOverride": undefined,
              "schema": "org-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevOrg",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description of the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a unique identifier for the Rev (customer)
organization from your primary customer system of records. If none
is specified, a system-generated identifier will be assigned to the
organization.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-org-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "RevOrgSummary",
          "nameOverride": undefined,
          "schema": "org-base-summary",
          "type": "reference",
        },
        "rev-orgs-create-request": {
          "allOf": [],
          "description": "Request object to create a new Rev organization in the Dev
organization.
",
          "generatedName": "RevOrgsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description of the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_name",
              "schema": {
                "description": "Name of the Rev organization.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsCreateRequestEnvironment",
                  "nameOverride": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tier",
              "schema": {
                "description": "The tier of the RevOrg.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-create-response": {
          "allOf": [],
          "description": "Response object for request to create a new Rev organization.
",
          "generatedName": "RevOrgsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RevOrgsCreateResponseRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-request": {
          "allOf": [],
          "description": "Request object to delete a Rev organization.",
          "generatedName": "RevOrgsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-response": {
          "description": "The response to deleting a Rev organization.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "rev-orgs-get-response": {
          "allOf": [],
          "description": "The response to getting a Rev organization's information.",
          "generatedName": "RevOrgsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RevOrgsGetResponseRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-list-response": {
          "allOf": [],
          "description": "The response to getting a list of Rev organizations' information.
",
          "generatedName": "RevOrgsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_orgs",
              "schema": {
                "description": "List with all of the Rev organizations' information.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsListResponseRevOrgsItem",
                  "nameOverride": undefined,
                  "schema": "rev-org",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-request": {
          "allOf": [],
          "description": "Request object to update information of the Rev organization.
",
          "generatedName": "RevOrgsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description of the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_name",
              "schema": {
                "description": "Customer chosen name for the Rev organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "domain",
              "schema": {
                "description": "Company's domain name. Example - 'devrev.ai'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsUpdateRequestEnvironment",
                  "nameOverride": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "tier",
              "schema": {
                "description": "The tier of the RevOrg.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-response": {
          "allOf": [],
          "description": "Response object to updating Rev organization's information.",
          "generatedName": "RevOrgsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RevOrgsUpdateResponseRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-user-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserBaseSummary",
              "nameOverride": undefined,
              "schema": "user-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevUserSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "external_ref",
              "schema": {
                "description": "External ref is a mutable unique identifier for a user within the
Rev organization from your primary customer record. If none is
available, a good alternative is the email address/phone number
which could uniquely identify the user. If none is specified, a
system-generated identifier will be assigned to the user.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevUserSummaryRevOrg",
                  "nameOverride": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "set-tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SetTagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage": {
          "allOf": [],
          "description": "Describes the current stage of a work item.",
          "generatedName": "Stage",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Current stage name of the work item.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "stage-init": {
          "allOf": [],
          "description": "Sets an object's initial stage.",
          "generatedName": "StageInit",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the stage.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage-update": {
          "allOf": [],
          "description": "Updates an object's stage.",
          "generatedName": "StageUpdate",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The updated name of the stage, otherwise unchanged if not set.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "sys-user-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "SysUserSummary",
          "nameOverride": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "tag": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Tag",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the tag, where a value is provided when a
tag is associated with an object. If empty, then no value should be
provided when the association is made.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "An informative description for the tag that should provide context
on the tag's purpose and usage.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tag-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TagSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagWithValueTag",
                "nameOverride": undefined,
                "schema": "tag-summary",
                "type": "reference",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "The value for the object's association with the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-create-request": {
          "allOf": [],
          "description": "The request to create a new tag.",
          "generatedName": "TagsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the tag, or empty if no values are
permitted.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The description for the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name for the tag, which must be unique across all tags.
",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-create-response": {
          "allOf": [],
          "description": "The response to creating a new tag.",
          "generatedName": "TagsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsCreateResponseTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-request": {
          "allOf": [],
          "description": "The request to delete a tag.",
          "generatedName": "TagsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag to delete.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-response": {
          "description": "The response for deleting a tag.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "tags-get-response": {
          "allOf": [],
          "description": "The response to getting a tag's information.",
          "generatedName": "TagsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsGetResponseTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-list-response": {
          "allOf": [],
          "description": "The response to listing the tags.",
          "generatedName": "TagsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "The list of tags.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsListResponseTagsItem",
                  "nameOverride": undefined,
                  "schema": "tag",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-allowed-values": {
          "allOf": [],
          "description": "Specifies an update to a tag's allowed values.",
          "generatedName": "TagsUpdateAllowedValues",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the allowed values for the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-request": {
          "allOf": [],
          "description": "The request to update a tag.",
          "generatedName": "TagsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowed_values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsUpdateRequestAllowedValues",
                  "nameOverride": undefined,
                  "schema": "tags-update-allowed-values",
                  "type": "reference",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The updated description of the tag.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The ID of the tag to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The updated name of the tag. The name must be unique across all
tags.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-response": {
          "allOf": [],
          "description": "The response for updating a tag.",
          "generatedName": "TagsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsUpdateResponseTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ticket": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorkBase",
              "nameOverride": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Ticket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "group",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TicketGroup",
                  "nameOverride": undefined,
                  "schema": "group-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TicketRevOrg",
                  "nameOverride": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TicketSeverity",
                  "nameOverride": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ticket-severity": {
          "description": "Severity of the ticket.",
          "generatedName": "TicketSeverity",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "blocker",
              "nameOverride": undefined,
              "value": "blocker",
            },
            {
              "generatedName": "high",
              "nameOverride": undefined,
              "value": "high",
            },
            {
              "generatedName": "low",
              "nameOverride": undefined,
              "value": "low",
            },
            {
              "generatedName": "medium",
              "nameOverride": undefined,
              "value": "medium",
            },
          ],
        },
        "timeline-comment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntryBase",
              "nameOverride": undefined,
              "schema": "timeline-entry-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": "The artifacts for the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TimelineCommentArtifactsItem",
                    "nameOverride": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "The comment's body. If the comment has been deleted, then no body
will appear in the response.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineCommentBodyType",
                  "nameOverride": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "snap_kit_body",
              "schema": {
                "description": "The SnapKit Body of the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-comment-body-type": {
          "description": "The type of the body to use for the comment.",
          "generatedName": "TimelineCommentBodyType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "snap_kit",
              "nameOverride": undefined,
              "value": "snap_kit",
            },
            {
              "generatedName": "text",
              "nameOverride": undefined,
              "value": "text",
            },
          ],
        },
        "timeline-entries-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "object",
                "schema": {
                  "description": "The ID of the object to create the timeline entry for.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesCreateRequestType",
                  "nameOverride": undefined,
                  "schema": "timeline-entries-create-request-type",
                  "type": "reference",
                },
              },
              {
                "key": "visibility",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TimelineEntriesCreateRequestVisibility",
                    "nameOverride": undefined,
                    "schema": "timeline-entry-visibility",
                    "type": "reference",
                  },
                },
              },
            ],
            "description": "The request to create a timeline entry for an object.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTimelineEntriesCreateRequestTimelineComment",
                "nameOverride": undefined,
                "schema": "timeline-entries-create-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-create-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": "The IDs of the artifacts attached to the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "The comment's body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesCreateRequestTimelineCommentBodyType",
                  "nameOverride": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "snap_kit_body",
              "schema": {
                "description": "The SnapKit body of the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-create-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-create-response": {
          "allOf": [],
          "description": "The response to creating a timeline entry for an object.",
          "generatedName": "TimelineEntriesCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TimelineEntriesCreateResponseTimelineEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-get-response": {
          "allOf": [],
          "description": "The request to getting a timeline entry.",
          "generatedName": "TimelineEntriesGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TimelineEntriesGetResponseTimelineEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-list-response": {
          "allOf": [],
          "description": "The response to listing timeline entries for an object.",
          "generatedName": "TimelineEntriesListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timeline_entries",
              "schema": {
                "description": "The timeline entries for the object.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesListResponseTimelineEntriesItem",
                  "nameOverride": undefined,
                  "schema": "timeline-entry",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the timeline entry to update.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesUpdateRequestType",
                  "nameOverride": undefined,
                  "schema": "timeline-entries-update-request-type",
                  "type": "reference",
                },
              },
            ],
            "description": "The request to update a timeline entry.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTimelineEntriesUpdateRequestTimelineComment",
                "nameOverride": undefined,
                "schema": "timeline-entries-update-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-update-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
                  "nameOverride": undefined,
                  "schema": "timeline-entries-update-request-timeline-comment-artifacts",
                  "type": "reference",
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "The updated comment's body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentBodyType",
                  "nameOverride": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "snap_kit_body",
              "schema": {
                "description": "The SnapKit body of the comment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-timeline-comment-artifacts": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "add",
              "schema": {
                "description": "Adds the provided artifacts to the comment. An artifact cannot be
added more than once, i.e. nothing is done if the artifact is
already attached. Mutually exclusive with \`set\`.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "remove",
              "schema": {
                "description": "Removes the provided artifacts from the comment. If an artifact is
not present, then it's ignored. Mututally exclusive with \`set\`.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "set",
              "schema": {
                "description": "Sets the field to the provided artifacts.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-update-response": {
          "allOf": [],
          "description": "The response to updating a timeline entry.",
          "generatedName": "TimelineEntriesUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TimelineEntriesUpdateResponseTimelineEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entry": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntryType",
                  "nameOverride": undefined,
                  "schema": "timeline-entry-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "TimelineEntry",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTimelineComment",
                "nameOverride": undefined,
                "schema": "timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entry-base": {
          "description": undefined,
          "file": undefined,
          "generatedName": "TimelineEntryBase",
          "nameOverride": undefined,
          "schema": "atom-base",
          "type": "reference",
        },
        "timeline-entry-type": {
          "description": undefined,
          "generatedName": "TimelineEntryType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entry-visibility": {
          "description": "The visibility of the entry. If 'private', then the entry is only
visible to the creator, otherwise if not set, then the entry has
default visibility.
",
          "generatedName": "TimelineEntryVisibility",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "private",
              "nameOverride": undefined,
              "value": "private",
            },
          ],
        },
        "user-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The user's display name. The name is non-unique and mutable.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseDisplayPicture",
                  "nameOverride": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "Email address of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "full_name",
              "schema": {
                "description": "Full name of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "phone_numbers",
              "schema": {
                "description": "Phone numbers of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseState",
                  "nameOverride": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "display_name",
              "schema": {
                "description": "The user's display name. The name is non-unique and mutable.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseSummaryDisplayPicture",
                  "nameOverride": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "Email address of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "full_name",
              "schema": {
                "description": "Full name of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseSummaryState",
                  "nameOverride": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-state": {
          "description": "State of the user.",
          "generatedName": "UserState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "deactivated",
              "nameOverride": undefined,
              "value": "deactivated",
            },
            {
              "generatedName": "locked",
              "nameOverride": undefined,
              "value": "locked",
            },
            {
              "generatedName": "shadow",
              "nameOverride": undefined,
              "value": "shadow",
            },
            {
              "generatedName": "unassigned",
              "nameOverride": undefined,
              "value": "unassigned",
            },
          ],
        },
        "user-summary": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserSummaryType",
                  "nameOverride": undefined,
                  "schema": "user-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "UserSummary",
            "nameOverride": undefined,
            "schemas": {
              "dev_user": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasDevUserSummary",
                "nameOverride": undefined,
                "schema": "dev-user-summary",
                "type": "reference",
              },
              "rev_user": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasRevUserSummary",
                "nameOverride": undefined,
                "schema": "rev-user-summary",
                "type": "reference",
              },
              "sys_user": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSysUserSummary",
                "nameOverride": undefined,
                "schema": "sys-user-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "user-type": {
          "description": undefined,
          "generatedName": "UserType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "dev_user",
              "nameOverride": undefined,
              "value": "dev_user",
            },
            {
              "generatedName": "rev_user",
              "nameOverride": undefined,
              "value": "rev_user",
            },
            {
              "generatedName": "sys_user",
              "nameOverride": undefined,
              "value": "sys_user",
            },
          ],
        },
        "webhook": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Webhook",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "event_types",
              "schema": {
                "description": "The event types that the webhook will receive.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhookEventTypesItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "The secret to use for verifying webhook events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookStatus",
                  "nameOverride": undefined,
                  "schema": "webhook-status",
                  "type": "reference",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The event's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "part_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestPartCreated",
                  "nameOverride": undefined,
                  "schema": "event-part-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "part_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestPartDeleted",
                  "nameOverride": undefined,
                  "schema": "event-part-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "part_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestPartUpdated",
                  "nameOverride": undefined,
                  "schema": "event-part-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestRevOrgCreated",
                  "nameOverride": undefined,
                  "schema": "event-rev-org-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestRevOrgDeleted",
                  "nameOverride": undefined,
                  "schema": "event-rev-org-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "rev_org_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestRevOrgUpdated",
                  "nameOverride": undefined,
                  "schema": "event-rev-org-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tag_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTagCreated",
                  "nameOverride": undefined,
                  "schema": "event-tag-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tag_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTagDeleted",
                  "nameOverride": undefined,
                  "schema": "event-tag-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tag_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTagUpdated",
                  "nameOverride": undefined,
                  "schema": "event-tag-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timeline_entry_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTimelineEntryCreated",
                  "nameOverride": undefined,
                  "schema": "event-timeline-entry-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timeline_entry_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTimelineEntryDeleted",
                  "nameOverride": undefined,
                  "schema": "event-timeline-entry-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timeline_entry_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTimelineEntryUpdated",
                  "nameOverride": undefined,
                  "schema": "event-timeline-entry-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "Timestamp of the webhook's invocation for the event. Note this
should be used to protect against replay attacks, where the event
should only be processed if the timestamp isn't stale by several
seconds.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestType",
                  "nameOverride": undefined,
                  "schema": "webhook-event-type",
                  "type": "reference",
                },
              },
            },
            {
              "key": "verify",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestVerify",
                  "nameOverride": undefined,
                  "schema": "webhook-event-verify",
                  "type": "reference",
                },
              },
            },
            {
              "key": "webhook_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWebhookCreated",
                  "nameOverride": undefined,
                  "schema": "event-webhook-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "webhook_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWebhookDeleted",
                  "nameOverride": undefined,
                  "schema": "event-webhook-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "webhook_id",
              "schema": {
                "description": "ID of the webhook for the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "webhook_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWebhookUpdated",
                  "nameOverride": undefined,
                  "schema": "event-webhook-updated",
                  "type": "reference",
                },
              },
            },
            {
              "key": "work_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWorkCreated",
                  "nameOverride": undefined,
                  "schema": "event-work-created",
                  "type": "reference",
                },
              },
            },
            {
              "key": "work_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWorkDeleted",
                  "nameOverride": undefined,
                  "schema": "event-work-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "key": "work_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWorkUpdated",
                  "nameOverride": undefined,
                  "schema": "event-work-updated",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "challenge",
              "schema": {
                "description": "The challenge from the "verify" request, otherwise this should not
be set for other request types.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-type": {
          "description": "The event types that the webhook will receive.",
          "generatedName": "WebhookEventType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "part_created",
              "nameOverride": undefined,
              "value": "part_created",
            },
            {
              "generatedName": "part_deleted",
              "nameOverride": undefined,
              "value": "part_deleted",
            },
            {
              "generatedName": "part_updated",
              "nameOverride": undefined,
              "value": "part_updated",
            },
            {
              "generatedName": "rev_org_created",
              "nameOverride": undefined,
              "value": "rev_org_created",
            },
            {
              "generatedName": "rev_org_deleted",
              "nameOverride": undefined,
              "value": "rev_org_deleted",
            },
            {
              "generatedName": "rev_org_updated",
              "nameOverride": undefined,
              "value": "rev_org_updated",
            },
            {
              "generatedName": "tag_created",
              "nameOverride": undefined,
              "value": "tag_created",
            },
            {
              "generatedName": "tag_deleted",
              "nameOverride": undefined,
              "value": "tag_deleted",
            },
            {
              "generatedName": "tag_updated",
              "nameOverride": undefined,
              "value": "tag_updated",
            },
            {
              "generatedName": "timeline_entry_created",
              "nameOverride": undefined,
              "value": "timeline_entry_created",
            },
            {
              "generatedName": "timeline_entry_deleted",
              "nameOverride": undefined,
              "value": "timeline_entry_deleted",
            },
            {
              "generatedName": "timeline_entry_updated",
              "nameOverride": undefined,
              "value": "timeline_entry_updated",
            },
            {
              "generatedName": "verify",
              "nameOverride": undefined,
              "value": "verify",
            },
            {
              "generatedName": "webhook_created",
              "nameOverride": undefined,
              "value": "webhook_created",
            },
            {
              "generatedName": "webhook_deleted",
              "nameOverride": undefined,
              "value": "webhook_deleted",
            },
            {
              "generatedName": "webhook_updated",
              "nameOverride": undefined,
              "value": "webhook_updated",
            },
            {
              "generatedName": "work_created",
              "nameOverride": undefined,
              "value": "work_created",
            },
            {
              "generatedName": "work_deleted",
              "nameOverride": undefined,
              "value": "work_deleted",
            },
            {
              "generatedName": "work_updated",
              "nameOverride": undefined,
              "value": "work_updated",
            },
          ],
        },
        "webhook-event-verify": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventVerify",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "challenge",
              "schema": {
                "description": "The challenge that must be echoed in the response.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhook-status": {
          "description": "The status of the webhook.",
          "generatedName": "WebhookStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "inactive",
              "nameOverride": undefined,
              "value": "inactive",
            },
            {
              "generatedName": "unverified",
              "nameOverride": undefined,
              "value": "unverified",
            },
          ],
        },
        "webhooks-create-request": {
          "allOf": [],
          "description": "The request to create a new webhook.",
          "generatedName": "WebhooksCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "event_types",
              "schema": {
                "description": "The event types that the webhook endpoint will receive.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksCreateRequestEventTypesItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "The secret to use when verifying webhook events. If provided, the
secret must be between 8 and 32 bytes (inclusive). If not set, a
secret will be automatically generated and provided in the
response.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-create-response": {
          "allOf": [],
          "description": "The response to creating a new webhook.",
          "generatedName": "WebhooksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhooksCreateResponseWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-request": {
          "allOf": [],
          "description": "The request to delete a webhook.",
          "generatedName": "WebhooksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-response": {
          "description": "The response to deleting the webhook.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "webhooks-get-response": {
          "allOf": [],
          "description": "The response to getting the information for the webhook.",
          "generatedName": "WebhooksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhooksGetResponseWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-list-response": {
          "allOf": [],
          "description": "The response to listing the webhooks.",
          "generatedName": "WebhooksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhooks",
              "schema": {
                "description": "The list of webhooks.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhooksListResponseWebhooksItem",
                  "nameOverride": undefined,
                  "schema": "webhook",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-action": {
          "description": "The action to update the webhook's status.",
          "generatedName": "WebhooksUpdateAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "activate",
              "nameOverride": undefined,
              "value": "activate",
            },
            {
              "generatedName": "deactivate",
              "nameOverride": undefined,
              "value": "deactivate",
            },
          ],
        },
        "webhooks-update-request": {
          "allOf": [],
          "description": "The request to update a webhook.",
          "generatedName": "WebhooksUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhooksUpdateRequestAction",
                  "nameOverride": undefined,
                  "schema": "webhooks-update-action",
                  "type": "reference",
                },
              },
            },
            {
              "key": "event_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhooksUpdateRequestEventTypes",
                  "nameOverride": undefined,
                  "schema": "webhooks-update-request-event-types",
                  "type": "reference",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "If provided, updates the secret that's used when verifying webhook
events, which must be between 8 and 32 bytes (inclusive). Otherwise
if empty, then a new secret is generated. If the webhook is active,
then its status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The webhook's updated URL. If the webhook is active, then the
webhook's status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-request-event-types": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhooksUpdateRequestEventTypes",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "add",
              "schema": {
                "description": "The event types to add. If a provided event type is already set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksUpdateRequestEventTypesAddItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "remove",
              "schema": {
                "description": "The event types to remove. If a provided event type isn't set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksUpdateRequestEventTypesRemoveItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "set",
              "schema": {
                "description": "The updated event types, which will replace the webhook's current
event types. Note this is mutually exclusive with 'add' and
'remove'.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksUpdateRequestEventTypesSetItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-response": {
          "allOf": [],
          "description": "The response to updating the webhook.",
          "generatedName": "WebhooksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhooksUpdateResponseWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "work": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkType",
                  "nameOverride": undefined,
                  "schema": "work-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Work",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasIssue",
                "nameOverride": undefined,
                "schema": "issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTicket",
                "nameOverride": undefined,
                "schema": "ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "work-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "WorkBase",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkBaseAppliesToPart",
                  "nameOverride": undefined,
                  "schema": "part-summary",
                  "type": "reference",
                },
              },
            },
            {
              "key": "artifacts",
              "schema": {
                "description": "The artifacts attached to the work item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseArtifactsItem",
                    "nameOverride": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "body",
              "schema": {
                "description": "Body of the work object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "owned_by",
              "schema": {
                "description": "The users that own the work.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseOwnedByItem",
                    "nameOverride": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "reported_by",
              "schema": {
                "description": "Users that reported the work.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseReportedByItem",
                    "nameOverride": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "stage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkBaseStage",
                  "nameOverride": undefined,
                  "schema": "stage",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "Tags associated with the object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseTagsItem",
                    "nameOverride": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "target_close_date",
              "schema": {
                "description": "Timestamp when the work is expected to be complete.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "Title of the work object.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "work-type": {
          "description": undefined,
          "generatedName": "WorkType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "issue",
              "nameOverride": undefined,
              "value": "issue",
            },
            {
              "generatedName": "ticket",
              "nameOverride": undefined,
              "value": "ticket",
            },
          ],
        },
        "works-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "The [part](https://devrev.ai/docs/product/parts) that the work
applies to. Specifying a part is required when creating tickets and
issues.
",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": "The IDs of the artifacts to associate with the work item.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Body of the work object.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the work.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": "The users that reported the work.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksCreateRequestStage",
                    "nameOverride": undefined,
                    "schema": "stage-init",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": "Tags associated with the work item.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "WorksCreateRequestTagsItem",
                      "nameOverride": undefined,
                      "schema": "set-tag-with-value",
                      "type": "reference",
                    },
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Timestamp for when the work is expected to be complete.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Title of the work object.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksCreateRequestType",
                  "nameOverride": undefined,
                  "schema": "work-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksCreateRequestIssue",
                "nameOverride": undefined,
                "schema": "works-create-request-issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksCreateRequestTicket",
                "nameOverride": undefined,
                "schema": "works-create-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-create-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksCreateRequestIssuePriority",
                  "nameOverride": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "key": "sprint",
              "schema": {
                "description": "The sprint that the issue belongs to.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "group",
              "schema": {
                "description": "The group that the ticket is associated with.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": "The Rev organization that the ticket is associated with.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksCreateRequestTicketSeverity",
                  "nameOverride": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WorksCreateResponseWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The work's ID.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-response": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "works-export-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksExportResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "works",
              "schema": {
                "description": "The resulting collection of work items.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksExportResponseWorksItem",
                  "nameOverride": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WorksGetResponseWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "next_cursor",
              "schema": {
                "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prev_cursor",
              "schema": {
                "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "works",
              "schema": {
                "description": "The list of works.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksListResponseWorksItem",
                  "nameOverride": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "Updates the part that the work applies to.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestArtifacts",
                    "nameOverride": undefined,
                    "schema": "works-update-request-artifact-ids",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Updated body of the work object, or unchanged if not provided.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The work's ID.",
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestOwnedBy",
                    "nameOverride": undefined,
                    "schema": "works-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestReportedBy",
                    "nameOverride": undefined,
                    "schema": "works-update-request-reported-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestStage",
                    "nameOverride": undefined,
                    "schema": "stage-update",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": undefined,
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestTags",
                    "nameOverride": undefined,
                    "schema": "works-update-request-tags",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Updates the timestamp for when the work is expected to be complete.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Updated title of the work object, or unchanged if not provided.
",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "type",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksUpdateRequestType",
                  "nameOverride": undefined,
                  "schema": "work-type",
                  "type": "reference",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksUpdateRequestIssue",
                "nameOverride": undefined,
                "schema": "works-update-request-issue",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmpty",
                "nameOverride": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksUpdateRequestTicket",
                "nameOverride": undefined,
                "schema": "works-update-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-update-request-artifact-ids": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestArtifactIds",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the IDs to the provided artifact IDs.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksUpdateRequestIssuePriority",
                  "nameOverride": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "key": "sprint",
              "schema": {
                "description": "Updates the sprint that the issue belongs to.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-reported-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestReportedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the users that reported the work to the provided user IDs.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-tags": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTags",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "set",
              "schema": {
                "description": "Sets the provided tags on the work item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestTagsSetItem",
                    "nameOverride": undefined,
                    "schema": "set-tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "group",
              "schema": {
                "description": "The group that the ticket is associated with.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rev_org",
              "schema": {
                "description": "Updates the Rev organization that the ticket is associated with.
",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksUpdateRequestTicketSeverity",
                  "nameOverride": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WorksUpdateResponseWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "auth-token": {
          "headerName": "Authorization",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": "DevRev API endpoint.",
          "name": undefined,
          "url": "{protocol}://{hostname}",
        },
      ],
      "tags": [],
      "title": "DevRev REST API",
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser hathora simple 1`] = `
{
  "files": {
    "openapi.json": {
      "dependencies": [],
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetAppsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetApps",
          "path": "/apps/v1/list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetAppsResponseItem",
                "nameOverride": undefined,
                "schema": "ApplicationWithDeployment",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateAppRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateApp",
          "path": "/apps/v1/create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreateAppRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "authConfiguration",
                  "schema": {
                    "allOf": [],
                    "description": undefined,
                    "generatedName": "CreateAppRequestAuthConfiguration",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "key": "google",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "allOf": [],
                            "description": undefined,
                            "generatedName": "CreateAppRequestAuthConfigurationGoogle",
                            "nameOverride": undefined,
                            "properties": [
                              {
                                "key": "clientId",
                                "schema": {
                                  "description": undefined,
                                  "schema": {
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "object",
                          },
                        },
                      },
                      {
                        "key": "nickname",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "generatedName": "CreateAppRequestAuthConfigurationNickname",
                            "nameOverride": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "key": "anonymous",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "generatedName": "CreateAppRequestAuthConfigurationAnonymous",
                            "nameOverride": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
                {
                  "key": "appName",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateAppResponse",
              "nameOverride": undefined,
              "schema": "Application",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UpdateAppRequest",
          "headers": [],
          "method": "POST",
          "operationId": "UpdateApp",
          "path": "/apps/v1/update/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UpdateAppRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "UpdateAppRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "authConfiguration",
                  "schema": {
                    "allOf": [],
                    "description": undefined,
                    "generatedName": "UpdateAppRequestAuthConfiguration",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "key": "google",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "allOf": [],
                            "description": undefined,
                            "generatedName": "UpdateAppRequestAuthConfigurationGoogle",
                            "nameOverride": undefined,
                            "properties": [
                              {
                                "key": "clientId",
                                "schema": {
                                  "description": undefined,
                                  "schema": {
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "object",
                          },
                        },
                      },
                      {
                        "key": "nickname",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "generatedName": "UpdateAppRequestAuthConfigurationNickname",
                            "nameOverride": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "key": "anonymous",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "file": undefined,
                            "generatedName": "UpdateAppRequestAuthConfigurationAnonymous",
                            "nameOverride": undefined,
                            "schema": "Record_string.never_",
                            "type": "reference",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
                {
                  "key": "appName",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateAppResponse",
              "nameOverride": undefined,
              "schema": "Application",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetAppInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetAppInfo",
          "path": "/apps/v1/info/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetAppInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetAppInfoResponse",
              "nameOverride": undefined,
              "schema": "Application",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "DeleteAppRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteApp",
          "path": "/apps/v1/delete/{appId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeleteAppRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AppV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "LoginAnonymousRequest",
          "headers": [],
          "method": "POST",
          "operationId": "LoginAnonymous",
          "path": "/auth/v1/{appId}/login/anonymous",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LoginAnonymousRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginAnonymousResponse",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "LoginNicknameRequest",
          "headers": [],
          "method": "POST",
          "operationId": "LoginNickname",
          "path": "/auth/v1/{appId}/login/nickname",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LoginNicknameRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginNicknameRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "nickname",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginNicknameResponse",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "LoginGoogleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "LoginGoogle",
          "path": "/auth/v1/{appId}/login/google",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LoginGoogleRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginGoogleRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "idToken",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "LoginGoogleResponse",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "token",
                  "schema": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              ],
              "type": "object",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "AuthV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetBuildsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetBuilds",
          "path": "/builds/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetBuildsRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetBuildsResponseItem",
                "nameOverride": undefined,
                "schema": "Build",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetBuildInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetBuildInfo",
          "path": "/builds/v1/{appId}/info/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetBuildInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetBuildInfoRequestBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetBuildInfoResponse",
              "nameOverride": undefined,
              "schema": "Build",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateBuildRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateBuild",
          "path": "/builds/v1/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateBuildRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateBuildResponse",
              "nameOverride": undefined,
              "schema": "Build",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RunBuildRequest",
          "headers": [],
          "method": "POST",
          "operationId": "RunBuild",
          "path": "/builds/v1/{appId}/run/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RunBuildRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RunBuildRequestBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "DeleteBuildRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteBuild",
          "path": "/builds/v1/{appId}/delete/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeleteBuildRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeleteBuildRequestBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "BuildV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetDeploymentsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetDeployments",
          "path": "/deployments/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetDeploymentsRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetDeploymentsResponseItem",
                "nameOverride": undefined,
                "schema": "Deployment",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetDeploymentInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetDeploymentInfo",
          "path": "/deployments/v1/{appId}/info/{deploymentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetDeploymentInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetDeploymentInfoRequestDeploymentId",
                "nameOverride": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetDeploymentInfoResponse",
              "nameOverride": undefined,
              "schema": "Deployment",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateDeploymentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateDeployment",
          "path": "/deployments/v1/{appId}/create/{buildId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateDeploymentRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateDeploymentRequestBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateDeploymentRequest",
              "nameOverride": undefined,
              "schema": "DeploymentConfig",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateDeploymentResponse",
              "nameOverride": undefined,
              "schema": "Deployment",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "DeploymentV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetPingServiceEndpointsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetPingServiceEndpoints",
          "path": "/discovery/v1/ping",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetPingServiceEndpointsResponse",
              "nameOverride": undefined,
              "schema": "DiscoveryResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "DiscoveryV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreatePrivateLobbyDeprecatedRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePrivateLobbyDeprecated",
          "path": "/lobby/v1/{appId}/create/private",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePrivateLobbyDeprecatedRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePrivateLobbyDeprecatedRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePrivateLobbyDeprecatedResponse",
              "nameOverride": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreatePublicLobbyDeprecatedRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePublicLobbyDeprecated",
          "path": "/lobby/v1/{appId}/create/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePublicLobbyDeprecatedRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePublicLobbyDeprecatedRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePublicLobbyDeprecatedResponse",
              "nameOverride": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "ListActivePublicLobbiesDeprecatedRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "GET",
          "operationId": "ListActivePublicLobbiesDeprecated",
          "path": "/lobby/v1/{appId}/list",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListActivePublicLobbiesDeprecatedRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "local",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListActivePublicLobbiesDeprecatedRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListActivePublicLobbiesDeprecatedResponseItem",
                "nameOverride": undefined,
                "schema": "Lobby",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreatePrivateLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePrivateLobby",
          "path": "/lobby/v2/{appId}/create/private",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePrivateLobbyRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePrivateLobbyRequestRoomId",
                  "nameOverride": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreatePrivateLobbyRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreatePrivateLobbyRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePrivateLobbyResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreatePublicLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreatePublicLobby",
          "path": "/lobby/v2/{appId}/create/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreatePublicLobbyRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreatePublicLobbyRequestRoomId",
                  "nameOverride": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreatePublicLobbyRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreatePublicLobbyRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreatePublicLobbyResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateLocalLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreateLocalLobby",
          "path": "/lobby/v2/{appId}/create/local",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateLocalLobbyRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreateLocalLobbyRequestRoomId",
                  "nameOverride": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreateLocalLobbyRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateLocalLobbyRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateLocalLobbyResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateLobbyRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "POST",
          "operationId": "CreateLobby",
          "path": "/lobby/v2/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateLobbyRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreateLobbyRequestRoomId",
                  "nameOverride": undefined,
                  "schema": "RoomId",
                  "type": "reference",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreateLobbyRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "visibility",
                  "schema": {
                    "description": undefined,
                    "generatedName": "CreateLobbyRequestVisibility",
                    "nameOverride": undefined,
                    "type": "enum",
                    "values": [
                      {
                        "generatedName": "public",
                        "nameOverride": undefined,
                        "value": "public",
                      },
                      {
                        "generatedName": "private",
                        "nameOverride": undefined,
                        "value": "private",
                      },
                      {
                        "generatedName": "local",
                        "nameOverride": undefined,
                        "value": "local",
                      },
                    ],
                  },
                },
                {
                  "key": "initialConfig",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateLobbyRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateLobbyResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "ListActivePublicLobbiesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListActivePublicLobbies",
          "path": "/lobby/v2/{appId}/list/public",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListActivePublicLobbiesRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListActivePublicLobbiesRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListActivePublicLobbiesResponseItem",
                "nameOverride": undefined,
                "schema": "Lobby",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetLobbyInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLobbyInfo",
          "path": "/lobby/v2/{appId}/info/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLobbyInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLobbyInfoRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetLobbyInfoResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SetLobbyStateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SetLobbyState",
          "path": "/lobby/v2/{appId}/setState/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SetLobbyStateRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SetLobbyStateRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "SetLobbyStateRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "state",
                  "schema": {
                    "description": undefined,
                    "key": {
                      "type": "string",
                    },
                    "type": "map",
                    "value": {
                      "type": "unknown",
                    },
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SetLobbyStateResponse",
              "nameOverride": undefined,
              "schema": "Lobby",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LobbyV2",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetLogsForAppRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForApp",
          "path": "/logs/v1/{appId}/all",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForAppRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GetLogsForAppRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetLogsForProcessRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForProcess",
          "path": "/logs/v1/{appId}/process/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForProcessRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForProcessRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetLogsForDeploymentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetLogsForDeployment",
          "path": "/logs/v1/{appId}/deployment/{deploymentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForDeploymentRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetLogsForDeploymentRequestDeploymentId",
                "nameOverride": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "follow",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "tailLines",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "type": "unknown",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "LogV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetMetricsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetMetrics",
          "path": "/metrics/v1/{appId}/process/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetMetricsRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetMetricsRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "metrics",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "GetMetricsRequestMetricsItem",
                    "nameOverride": undefined,
                    "schema": "MetricName",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "end",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "start",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "step",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetMetricsResponse",
              "nameOverride": undefined,
              "schema": "MetricsResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "MetricsV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetRunningProcessesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetRunningProcesses",
          "path": "/processes/v1/{appId}/list/running",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetRunningProcessesRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GetRunningProcessesRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetRunningProcessesResponseItem",
                "nameOverride": undefined,
                "schema": "ProcessWithRooms",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetStoppedProcessesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetStoppedProcesses",
          "path": "/processes/v1/{appId}/list/stopped",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetStoppedProcessesRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "region",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GetStoppedProcessesRequestRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetStoppedProcessesResponseItem",
                "nameOverride": undefined,
                "schema": "Process",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetProcessInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetProcessInfo",
          "path": "/processes/v1/{appId}/info/{processId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetProcessInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetProcessInfoRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetProcessInfoResponse",
              "nameOverride": undefined,
              "schema": "Process",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "ProcessesV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CreateRoomRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateRoom",
          "path": "/rooms/v1/{appId}/create",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateRoomRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "allOf": [],
              "description": undefined,
              "generatedName": "CreateRoomRequest",
              "nameOverride": undefined,
              "properties": [
                {
                  "key": "region",
                  "schema": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CreateRoomRequestRegion",
                    "nameOverride": undefined,
                    "schema": "Region",
                    "type": "reference",
                  },
                },
              ],
              "type": "object",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateRoomResponse",
              "nameOverride": undefined,
              "schema": "RoomId",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetRoomInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetRoomInfo",
          "path": "/rooms/v1/{appId}/info/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetRoomInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetRoomInfoRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetRoomInfoResponse",
              "nameOverride": undefined,
              "schema": "Room",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetActiveRoomsForProcessRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetActiveRoomsForProcess",
          "path": "/rooms/v1/{appId}/list/{processId}/active",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetActiveRoomsForProcessRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetActiveRoomsForProcessRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetActiveRoomsForProcessResponseItem",
                "nameOverride": undefined,
                "schema": "RoomWithoutAllocations",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetInactiveRoomsForProcessRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetInactiveRoomsForProcess",
          "path": "/rooms/v1/{appId}/list/{processId}/inactive",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetInactiveRoomsForProcessRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetInactiveRoomsForProcessRequestProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetInactiveRoomsForProcessResponseItem",
                "nameOverride": undefined,
                "schema": "RoomWithoutAllocations",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "DestroyRoomRequest",
          "headers": [],
          "method": "POST",
          "operationId": "DestroyRoom",
          "path": "/rooms/v1/{appId}/destroy/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DestroyRoomRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DestroyRoomRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SuspendRoomRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SuspendRoom",
          "path": "/rooms/v1/{appId}/suspend/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SuspendRoomRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SuspendRoomRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "GetConnectionInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetConnectionInfo",
          "path": "/rooms/v1/{appId}/connectioninfo/{roomId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetConnectionInfoRequestAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "description": undefined,
              "name": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetConnectionInfoRequestRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Ok",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetConnectionInfoResponse",
              "nameOverride": undefined,
              "schema": "ConnectionInfo",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "RoomV1",
          ],
        },
      ],
      "nonRequestReferencedSchemas": [
        "ApplicationWithDeployment",
        "Record_string.never_",
        "Application",
        "AppId",
        "Build",
        "BuildId",
        "Deployment",
        "DeploymentId",
        "DiscoveryResponse",
        "Region",
        "RoomId",
        "Lobby",
        "ProcessId",
        "MetricName",
        "MetricsResponse",
        "ProcessWithRooms",
        "Process",
        "Room",
        "RoomWithoutAllocations",
        "ConnectionInfo",
        "OrgId",
        "PlanName",
        "TransportType",
        "MetricValue",
        "Record_Partial_MetricName_.MetricValue-Array_",
        "RoomAllocationId",
        "RoomStatus",
        "RoomAllocation",
        "Pick_Room.Exclude_keyofRoom.allocations__",
        "Omit_Room.allocations_",
        "StartingConnectionInfo",
        "ActiveConnectionInfo",
      ],
      "schemas": {
        "ActiveConnectionInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ActiveConnectionInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "ActiveConnectionInfoStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "active",
                    "nameOverride": undefined,
                    "value": "active",
                  },
                ],
              },
            },
            {
              "key": "transportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ActiveConnectionInfoTransportType",
                "nameOverride": undefined,
                "schema": "TransportType",
                "type": "reference",
              },
            },
            {
              "key": "port",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "host",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ActiveConnectionInfoRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "AppId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "Application": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Application",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deletedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deletedAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "orgId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ApplicationOrgId",
                "nameOverride": undefined,
                "schema": "OrgId",
                "type": "reference",
              },
            },
            {
              "key": "authConfiguration",
              "schema": {
                "allOf": [],
                "description": undefined,
                "generatedName": "ApplicationAuthConfiguration",
                "nameOverride": undefined,
                "properties": [
                  {
                    "key": "google",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "description": undefined,
                        "generatedName": "ApplicationAuthConfigurationGoogle",
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "key": "clientId",
                            "schema": {
                              "description": undefined,
                              "schema": {
                                "type": "string",
                              },
                              "type": "primitive",
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                  {
                    "key": "nickname",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "ApplicationAuthConfigurationNickname",
                        "nameOverride": undefined,
                        "schema": "Record_string.never_",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "key": "anonymous",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "ApplicationAuthConfigurationAnonymous",
                        "nameOverride": undefined,
                        "schema": "Record_string.never_",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            {
              "key": "appSecret",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "appName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ApplicationWithDeployment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Application",
              "nameOverride": undefined,
              "schema": "Application",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ApplicationWithDeployment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deployment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ApplicationWithDeploymentDeployment",
                  "nameOverride": undefined,
                  "schema": "Deployment",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Build": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Build",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "regionalContainerTags",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "allOf": [],
                  "description": undefined,
                  "generatedName": "BuildRegionalContainerTagsItem",
                  "nameOverride": undefined,
                  "properties": [
                    {
                      "key": "containerTag",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    {
                      "key": "region",
                      "schema": {
                        "description": undefined,
                        "file": undefined,
                        "generatedName": "BuildRegionalContainerTagsItemRegion",
                        "nameOverride": undefined,
                        "schema": "Region",
                        "type": "reference",
                      },
                    },
                  ],
                  "type": "object",
                },
              },
            },
            {
              "key": "imageSize",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "BuildStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "created",
                    "nameOverride": undefined,
                    "value": "created",
                  },
                  {
                    "generatedName": "running",
                    "nameOverride": undefined,
                    "value": "running",
                  },
                  {
                    "generatedName": "succeeded",
                    "nameOverride": undefined,
                    "value": "succeeded",
                  },
                  {
                    "generatedName": "failed",
                    "nameOverride": undefined,
                    "value": "failed",
                  },
                ],
              },
            },
            {
              "key": "deletedAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "finishedAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "startedAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "buildId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BuildBuildId",
                "nameOverride": undefined,
                "schema": "BuildId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BuildAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "BuildId": {
          "description": undefined,
          "schema": {
            "type": "double",
          },
          "type": "primitive",
        },
        "ConnectionInfo": {
          "oneOf": {
            "description": undefined,
            "generatedName": "ConnectionInfo",
            "nameOverride": undefined,
            "schemas": [
              {
                "description": undefined,
                "file": undefined,
                "generatedName": "ConnectionInfoConnectionInfo",
                "nameOverride": undefined,
                "schema": "StartingConnectionInfo",
                "type": "reference",
              },
              {
                "description": undefined,
                "file": undefined,
                "generatedName": "ConnectionInfoConnectionInfo",
                "nameOverride": undefined,
                "schema": "ActiveConnectionInfo",
                "type": "reference",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "Deployment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "DeploymentConfig",
              "nameOverride": undefined,
              "schema": "DeploymentConfig",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Deployment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requestedMemoryMB",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requestedCPU",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deploymentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DeploymentDeploymentId",
                  "nameOverride": undefined,
                  "schema": "DeploymentId",
                  "type": "reference",
                },
              },
            },
            {
              "key": "buildId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DeploymentBuildId",
                  "nameOverride": undefined,
                  "schema": "BuildId",
                  "type": "reference",
                },
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DeploymentAppId",
                  "nameOverride": undefined,
                  "schema": "AppId",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DeploymentConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DeploymentConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "env",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "allOf": [],
                  "description": undefined,
                  "generatedName": "DeploymentConfigEnvItem",
                  "nameOverride": undefined,
                  "properties": [
                    {
                      "key": "value",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    {
                      "key": "name",
                      "schema": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  ],
                  "type": "object",
                },
              },
            },
            {
              "key": "roomsPerProcess",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "planName",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeploymentConfigPlanName",
                "nameOverride": undefined,
                "schema": "PlanName",
                "type": "reference",
              },
            },
            {
              "key": "transportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DeploymentConfigTransportType",
                "nameOverride": undefined,
                "schema": "TransportType",
                "type": "reference",
              },
            },
            {
              "key": "containerPort",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DeploymentId": {
          "description": undefined,
          "schema": {
            "type": "double",
          },
          "type": "primitive",
        },
        "DiscoveryResponse": {
          "description": undefined,
          "type": "array",
          "value": {
            "allOf": [],
            "description": undefined,
            "generatedName": "DiscoveryResponseItem",
            "nameOverride": undefined,
            "properties": [
              {
                "key": "port",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "host",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "region",
                "schema": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DiscoveryResponseItemRegion",
                  "nameOverride": undefined,
                  "schema": "Region",
                  "type": "reference",
                },
              },
            ],
            "type": "object",
          },
        },
        "Lobby": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Lobby",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "key": "initialConfig",
              "schema": {
                "description": undefined,
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "key": "createdAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "local",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "visibility",
              "schema": {
                "description": undefined,
                "generatedName": "LobbyVisibility",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "private",
                    "nameOverride": undefined,
                    "value": "private",
                  },
                  {
                    "generatedName": "public",
                    "nameOverride": undefined,
                    "value": "public",
                  },
                  {
                    "generatedName": "local",
                    "nameOverride": undefined,
                    "value": "local",
                  },
                ],
              },
            },
            {
              "key": "region",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LobbyRegion",
                "nameOverride": undefined,
                "schema": "Region",
                "type": "reference",
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LobbyRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LobbyAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "MetricName": {
          "description": undefined,
          "generatedName": "MetricName",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "cpu",
              "nameOverride": undefined,
              "value": "cpu",
            },
            {
              "generatedName": "memory",
              "nameOverride": undefined,
              "value": "memory",
            },
            {
              "generatedName": "rate_egress",
              "nameOverride": undefined,
              "value": "rate_egress",
            },
            {
              "generatedName": "total_egress",
              "nameOverride": undefined,
              "value": "total_egress",
            },
          ],
        },
        "MetricValue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MetricValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "value",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "MetricsResponse": {
          "description": undefined,
          "file": undefined,
          "generatedName": "MetricsResponse",
          "nameOverride": undefined,
          "schema": "Record_Partial_MetricName_.MetricValue-Array_",
          "type": "reference",
        },
        "Omit_Room.allocations_": {
          "description": undefined,
          "file": undefined,
          "generatedName": "OmitRoomAllocations",
          "nameOverride": undefined,
          "schema": "Pick_Room.Exclude_keyofRoom.allocations__",
          "type": "reference",
        },
        "OrgId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "Pick_Room.Exclude_keyofRoom.allocations__": {
          "allOf": [],
          "description": "From T, pick a set of properties whose keys are in the union K",
          "generatedName": "PickRoomExcludeKeyofRoomAllocations",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PickRoomExcludeKeyofRoomAllocationsAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PickRoomExcludeKeyofRoomAllocationsRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PickRoomExcludeKeyofRoomAllocationsStatus",
                "nameOverride": undefined,
                "schema": "RoomStatus",
                "type": "reference",
              },
            },
            {
              "key": "currentAllocation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PickRoomExcludeKeyofRoomAllocationsCurrentAllocation",
                  "nameOverride": undefined,
                  "schema": "RoomAllocation",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "PlanName": {
          "description": undefined,
          "generatedName": "PlanName",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "tiny",
              "nameOverride": undefined,
              "value": "tiny",
            },
            {
              "generatedName": "small",
              "nameOverride": undefined,
              "value": "small",
            },
            {
              "generatedName": "medium",
              "nameOverride": undefined,
              "value": "medium",
            },
            {
              "generatedName": "large",
              "nameOverride": undefined,
              "value": "large",
            },
          ],
        },
        "Process": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Process",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "egressedBytes",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "idleSince",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "activeConnections",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "roomSlotsAvailable",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "draining",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "terminatedAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "stoppingAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "startedAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "startingAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "roomsPerProcess",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "port",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "host",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "region",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProcessRegion",
                "nameOverride": undefined,
                "schema": "Region",
                "type": "reference",
              },
            },
            {
              "key": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProcessProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
            {
              "key": "deploymentId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProcessDeploymentId",
                "nameOverride": undefined,
                "schema": "DeploymentId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProcessAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ProcessId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "ProcessWithRooms": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Process",
              "nameOverride": undefined,
              "schema": "Process",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ProcessWithRooms",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "rooms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ProcessWithRoomsRoomsItem",
                    "nameOverride": undefined,
                    "schema": "RoomWithoutAllocations",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "totalRooms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Record_Partial_MetricName_.MetricValue-Array_": {
          "allOf": [],
          "description": "Construct a type with a set of properties K of type T",
          "generatedName": "RecordPartialMetricNameMetricValueArray",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "cpu",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RecordPartialMetricNameMetricValueArrayCpuItem",
                    "nameOverride": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "memory",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RecordPartialMetricNameMetricValueArrayMemoryItem",
                    "nameOverride": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "rate_egress",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RecordPartialMetricNameMetricValueArrayRateEgressItem",
                    "nameOverride": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "total_egress",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RecordPartialMetricNameMetricValueArrayTotalEgressItem",
                    "nameOverride": undefined,
                    "schema": "MetricValue",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "Record_string.never_": {
          "allOf": [],
          "description": "Construct a type with a set of properties K of type T",
          "generatedName": "RecordStringNever",
          "nameOverride": undefined,
          "properties": [],
          "type": "object",
        },
        "Region": {
          "description": undefined,
          "generatedName": "Region",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Seattle",
              "nameOverride": undefined,
              "value": "Seattle",
            },
            {
              "generatedName": "Washington_DC",
              "nameOverride": undefined,
              "value": "Washington_DC",
            },
            {
              "generatedName": "Chicago",
              "nameOverride": undefined,
              "value": "Chicago",
            },
            {
              "generatedName": "London",
              "nameOverride": undefined,
              "value": "London",
            },
            {
              "generatedName": "Frankfurt",
              "nameOverride": undefined,
              "value": "Frankfurt",
            },
            {
              "generatedName": "Mumbai",
              "nameOverride": undefined,
              "value": "Mumbai",
            },
            {
              "generatedName": "Singapore",
              "nameOverride": undefined,
              "value": "Singapore",
            },
            {
              "generatedName": "Tokyo",
              "nameOverride": undefined,
              "value": "Tokyo",
            },
            {
              "generatedName": "Sydney",
              "nameOverride": undefined,
              "value": "Sydney",
            },
            {
              "generatedName": "Sao_Paulo",
              "nameOverride": undefined,
              "value": "Sao_Paulo",
            },
          ],
        },
        "Room": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Room",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currentAllocation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RoomCurrentAllocation",
                  "nameOverride": undefined,
                  "schema": "RoomAllocation",
                  "type": "reference",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomStatus",
                "nameOverride": undefined,
                "schema": "RoomStatus",
                "type": "reference",
              },
            },
            {
              "key": "allocations",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RoomAllocationsItem",
                  "nameOverride": undefined,
                  "schema": "RoomAllocation",
                  "type": "reference",
                },
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomAppId",
                "nameOverride": undefined,
                "schema": "AppId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RoomAllocation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RoomAllocation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "unscheduledAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scheduledAt",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "processId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomAllocationProcessId",
                "nameOverride": undefined,
                "schema": "ProcessId",
                "type": "reference",
              },
            },
            {
              "key": "roomAllocationId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RoomAllocationRoomAllocationId",
                "nameOverride": undefined,
                "schema": "RoomAllocationId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RoomAllocationId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "RoomId": {
          "description": undefined,
          "schema": {
            "type": "string",
          },
          "type": "primitive",
        },
        "RoomStatus": {
          "description": undefined,
          "generatedName": "RoomStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "scheduling",
              "nameOverride": undefined,
              "value": "scheduling",
            },
            {
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "generatedName": "suspended",
              "nameOverride": undefined,
              "value": "suspended",
            },
            {
              "generatedName": "destroyed",
              "nameOverride": undefined,
              "value": "destroyed",
            },
          ],
        },
        "RoomWithoutAllocations": {
          "description": undefined,
          "file": undefined,
          "generatedName": "RoomWithoutAllocations",
          "nameOverride": undefined,
          "schema": "Omit_Room.allocations_",
          "type": "reference",
        },
        "StartingConnectionInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StartingConnectionInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "StartingConnectionInfoStatus",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "starting",
                    "nameOverride": undefined,
                    "value": "starting",
                  },
                ],
              },
            },
            {
              "key": "roomId",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "StartingConnectionInfoRoomId",
                "nameOverride": undefined,
                "schema": "RoomId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "TransportType": {
          "description": undefined,
          "generatedName": "TransportType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "tcp",
              "nameOverride": undefined,
              "value": "tcp",
            },
            {
              "generatedName": "udp",
              "nameOverride": undefined,
              "value": "udp",
            },
            {
              "generatedName": "tls",
              "nameOverride": undefined,
              "value": "tls",
            },
          ],
        },
      },
      "securitySchemes": {
        "auth0": {
          "type": "bearer",
        },
      },
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "https://api.hathora.dev",
        },
        {
          "description": undefined,
          "name": undefined,
          "url": "/",
        },
      ],
      "tags": [],
      "title": "Hathora Cloud API",
    },
  },
  "rootPackage": {
    "file": "openapi.json",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser hume simple 1`] = `
{
  "files": {
    "openapi.yaml": {
      "dependencies": [],
      "description": "The Batch API provides access to Hume models through an asynchronous job-based interface. You can submit a job to have many different files processed in parallel. The status of a job can then be checked with the job ID. Email notifications are available to alert on completed jobs.",
      "endpoints": [
        {
          "authed": false,
          "description": "Sort and filter jobs.",
          "errors": [],
          "generatedRequestName": "ListJobsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "listJobs",
          "path": "/v0/batch/jobs",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ListJobsRequestStatusItem",
                    "nameOverride": undefined,
                    "schema": "Status",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": undefined,
              "name": "when",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListJobsRequestWhen",
                  "nameOverride": undefined,
                  "schema": "When",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "timestamp_ms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListJobsRequestSortBy",
                  "nameOverride": undefined,
                  "schema": "SortBy",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "direction",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ListJobsRequestDirection",
                  "nameOverride": undefined,
                  "schema": "Direction",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListJobsResponseItem",
                "nameOverride": undefined,
                "schema": "Job<Request>",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "List Jobs",
          "tags": [
            "[3] List Jobs",
          ],
        },
        {
          "authed": false,
          "description": "Start a new batch job.",
          "errors": [],
          "generatedRequestName": "StartJobRequest",
          "headers": [],
          "method": "POST",
          "operationId": "startJob",
          "path": "/v0/batch/jobs",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "json",
                "schema": {
                  "json": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "",
                    "nameOverride": undefined,
                    "schema": "BaseRequest",
                    "type": "reference",
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "json": {
                    "description": "Local media files (see recommended input filetypes) to be processed.

If you wish to supply more than 100 files, consider providing them as an archive (\`.zip\`, \`.tar.gz\`, \`.tar.bz2\`, \`.tar.xz\`).",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "json",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "StartJobResponse",
              "nameOverride": undefined,
              "schema": "JobId",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Start Job",
          "tags": [
            "[1] Start Job",
          ],
        },
        {
          "authed": false,
          "description": "Get the JSON predictions of a completed job.",
          "errors": [],
          "generatedRequestName": "GetJobPredictionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "getJobPredictions",
          "path": "/v0/batch/jobs/{id}/predictions",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "GetJobPredictionsResponseItem",
                "nameOverride": undefined,
                "schema": "SourceResult",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get Job Predictions",
          "tags": [
            "[2] Get Job Predictions",
          ],
        },
        {
          "authed": false,
          "description": "Get the artifacts ZIP of a completed job.",
          "errors": [],
          "generatedRequestName": "GetJobArtifactsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "getJobArtifacts",
          "path": "/v0/batch/jobs/{id}/artifacts",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get Job Artifacts",
          "tags": [
            "[2] Get Job Predictions",
          ],
        },
        {
          "authed": false,
          "description": "Get the request details and state of a given job.",
          "errors": [],
          "generatedRequestName": "GetJobDetailsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "getJobDetails",
          "path": "/v0/batch/jobs/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetJobDetailsResponse",
              "nameOverride": undefined,
              "schema": "Job<Request>",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "Get Job Details",
          "tags": [
            "[2] Get Job Predictions",
          ],
        },
      ],
      "nonRequestReferencedSchemas": [
        "Status",
        "When",
        "SortBy",
        "Direction",
        "Job<Request>",
        "BaseRequest",
        "JobId",
        "SourceResult",
        "Transcription",
        "TimeInterval",
        "EmotionScore",
        "DescriptionsScore",
        "Empty",
        "BoundingBox",
        "FacsScore",
        "BurstPrediction",
        "FacePrediction",
        "FacemeshPrediction",
        "LanguagePrediction",
        "NerPrediction",
        "ProsodyPrediction",
        "Request",
        "State",
        "Granularity",
        "PositionInterval",
        "SentimentScore",
        "ToxicityScore",
        "Face",
        "Prosody",
        "Language",
        "Ner",
        "Predictions<optional<Null>, FacePrediction>",
        "Predictions<optional<Null>, BurstPrediction>",
        "Predictions<optional<TranscriptionMetadata>, ProsodyPrediction>",
        "Predictions<optional<TranscriptionMetadata>, LanguagePrediction>",
        "Predictions<optional<TranscriptionMetadata>, NerPrediction>",
        "Predictions<optional<Null>, FacemeshPrediction>",
        "ModelsPredictions",
        "Null",
        "GroupedPredictions<BurstPrediction>",
        "GroupedPredictions<FacePrediction>",
        "GroupedPredictions<FacemeshPrediction>",
        "TranscriptionMetadata",
        "GroupedPredictions<LanguagePrediction>",
        "GroupedPredictions<NerPrediction>",
        "GroupedPredictions<ProsodyPrediction>",
        "Window",
        "File",
        "Prediction",
        "Error",
        "Source",
        "Results",
        "Url",
        "Bcp47Tag",
      ],
      "schemas": {
        "BaseRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BaseRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "models",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "allOf": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "Models",
                      "nameOverride": undefined,
                      "schema": "Models",
                      "type": "reference",
                    },
                  ],
                  "description": undefined,
                  "generatedName": "BaseRequestModels",
                  "nameOverride": undefined,
                  "properties": [],
                  "type": "object",
                },
              },
            },
            {
              "key": "transcription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BaseRequestTranscription",
                  "nameOverride": undefined,
                  "schema": "Transcription",
                  "type": "reference",
                },
              },
            },
            {
              "key": "urls",
              "schema": {
                "description": "URLs to the media files to be processed. Each must be a valid public URL to a media file (see recommended input filetypes) or an archive (\`.zip\`, \`.tar.gz\`, \`.tar.bz2\`, \`.tar.xz\`) of media files.

If you wish to supply more than 100 URLs, consider providing them as an archive (\`.zip\`, \`.tar.gz\`, \`.tar.bz2\`, \`.tar.xz\`).",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "callback_url",
              "schema": {
                "description": "If provided, a \`POST\` request will be made to the URL with the generated predictions on completion or the error message on failure.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "notify",
              "schema": {
                "description": "Whether to send an email notification to the user upon job completion/failure.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Bcp47Tag": {
          "description": undefined,
          "generatedName": "Bcp47Tag",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "zh",
              "nameOverride": undefined,
              "value": "zh",
            },
            {
              "generatedName": "da",
              "nameOverride": undefined,
              "value": "da",
            },
            {
              "generatedName": "nl",
              "nameOverride": undefined,
              "value": "nl",
            },
            {
              "generatedName": "en",
              "nameOverride": undefined,
              "value": "en",
            },
            {
              "generatedName": "EnAu",
              "nameOverride": undefined,
              "value": "en-AU",
            },
            {
              "generatedName": "EnIn",
              "nameOverride": undefined,
              "value": "en-IN",
            },
            {
              "generatedName": "EnNz",
              "nameOverride": undefined,
              "value": "en-NZ",
            },
            {
              "generatedName": "EnGb",
              "nameOverride": undefined,
              "value": "en-GB",
            },
            {
              "generatedName": "fr",
              "nameOverride": undefined,
              "value": "fr",
            },
            {
              "generatedName": "FrCa",
              "nameOverride": undefined,
              "value": "fr-CA",
            },
            {
              "generatedName": "de",
              "nameOverride": undefined,
              "value": "de",
            },
            {
              "generatedName": "hi",
              "nameOverride": undefined,
              "value": "hi",
            },
            {
              "generatedName": "HiLatn",
              "nameOverride": undefined,
              "value": "hi-Latn",
            },
            {
              "generatedName": "id",
              "nameOverride": undefined,
              "value": "id",
            },
            {
              "generatedName": "it",
              "nameOverride": undefined,
              "value": "it",
            },
            {
              "generatedName": "ja",
              "nameOverride": undefined,
              "value": "ja",
            },
            {
              "generatedName": "ko",
              "nameOverride": undefined,
              "value": "ko",
            },
            {
              "generatedName": "no",
              "nameOverride": undefined,
              "value": "no",
            },
            {
              "generatedName": "pl",
              "nameOverride": undefined,
              "value": "pl",
            },
            {
              "generatedName": "pt",
              "nameOverride": undefined,
              "value": "pt",
            },
            {
              "generatedName": "PtBr",
              "nameOverride": undefined,
              "value": "pt-BR",
            },
            {
              "generatedName": "PtPt",
              "nameOverride": undefined,
              "value": "pt-PT",
            },
            {
              "generatedName": "ru",
              "nameOverride": undefined,
              "value": "ru",
            },
            {
              "generatedName": "es",
              "nameOverride": undefined,
              "value": "es",
            },
            {
              "generatedName": "Es419",
              "nameOverride": undefined,
              "value": "es-419",
            },
            {
              "generatedName": "sv",
              "nameOverride": undefined,
              "value": "sv",
            },
            {
              "generatedName": "ta",
              "nameOverride": undefined,
              "value": "ta",
            },
            {
              "generatedName": "tr",
              "nameOverride": undefined,
              "value": "tr",
            },
            {
              "generatedName": "uk",
              "nameOverride": undefined,
              "value": "uk",
            },
          ],
        },
        "BoundingBox": {
          "allOf": [],
          "description": "A bounding box around a face.",
          "generatedName": "BoundingBox",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "x",
              "schema": {
                "description": "x-coordinate of bounding box top left corner.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "y",
              "schema": {
                "description": "y-coordinate of bounding box top left corner.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "w",
              "schema": {
                "description": "Bounding box width.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "h",
              "schema": {
                "description": "Bounding box height.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "BurstPrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BurstPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "time",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "BurstPredictionTime",
                "nameOverride": undefined,
                "schema": "TimeInterval",
                "type": "reference",
              },
            },
            {
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BurstPredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
            {
              "key": "descriptions",
              "schema": {
                "description": "Modality-specific descriptive features and their scores.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BurstPredictionDescriptionsItem",
                  "nameOverride": undefined,
                  "schema": "DescriptionsScore",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Completed": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Completed",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "created_timestamp_ms",
              "schema": {
                "description": "When this job was created (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "started_timestamp_ms",
              "schema": {
                "description": "When this job started (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "ended_timestamp_ms",
              "schema": {
                "description": "When this job ended (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "num_predictions",
              "schema": {
                "description": "The number of predictions that were generated by this job.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "num_errors",
              "schema": {
                "description": "The number of errors that occurred while running this job.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DescriptionsScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DescriptionsScore",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Name of the descriptive feature being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "score",
              "schema": {
                "description": "Embedding value for the descriptive feature being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Direction": {
          "description": undefined,
          "generatedName": "Direction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "asc",
              "nameOverride": undefined,
              "value": "asc",
            },
            {
              "generatedName": "desc",
              "nameOverride": undefined,
              "value": "desc",
            },
          ],
        },
        "EmotionScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EmotionScore",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Name of the emotion being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "score",
              "schema": {
                "description": "Embedding value for the emotion being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Empty": {
          "description": "To include predictions for this model type, set this field to \`{}\`. It is currently not configurable further.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "Error": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Error",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "message",
              "schema": {
                "description": "An error message.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "file",
              "schema": {
                "description": "A file path relative to the top level source URL or file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Face": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Face",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fps_pred",
              "schema": {
                "description": "Number of frames per second to process. Other frames will be omitted from the response. Set to \`0\` to process every frame.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prob_threshold",
              "schema": {
                "description": "Face detection probability threshold. Faces detected with a probability less than this threshold will be omitted from the response.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "identify_faces",
              "schema": {
                "description": "Whether to return identifiers for faces across frames. If \`true\`, unique identifiers will be assigned to face bounding boxes to differentiate different faces. If \`false\`, all faces will be tagged with an \`unknown\` ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "min_face_size",
              "schema": {
                "description": "Minimum bounding box side length in pixels to treat as a face. Faces detected with a bounding box side length in pixels less than this threshold will be omitted from the response.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "facs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FaceFacs",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
            {
              "key": "descriptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FaceDescriptions",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
            {
              "key": "save_faces",
              "schema": {
                "description": "Whether to extract and save the detected faces in the artifacts zip created by each job.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "FacePrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FacePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "frame",
              "schema": {
                "description": "Frame number",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "time",
              "schema": {
                "description": "Time in seconds when face detection occurred.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "prob",
              "schema": {
                "description": "The predicted probability that a detected face was actually a face.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "box",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "FacePredictionBox",
                "nameOverride": undefined,
                "schema": "BoundingBox",
                "type": "reference",
              },
            },
            {
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FacePredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
            {
              "key": "facs",
              "schema": {
                "description": "FACS 2.0 features and their scores.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "FacePredictionFacsItem",
                    "nameOverride": undefined,
                    "schema": "FacsScore",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "descriptions",
              "schema": {
                "description": "Modality-specific descriptive features and their scores.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "FacePredictionDescriptionsItem",
                    "nameOverride": undefined,
                    "schema": "DescriptionsScore",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "FacemeshPrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FacemeshPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FacemeshPredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "FacsScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FacsScore",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Name of the FACS 2.0 feature being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "score",
              "schema": {
                "description": "Embedding value for the FACS 2.0 feature being expressed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Failed": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Failed",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "created_timestamp_ms",
              "schema": {
                "description": "When this job was created (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "started_timestamp_ms",
              "schema": {
                "description": "When this job started (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "ended_timestamp_ms",
              "schema": {
                "description": "When this job ended (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "message",
              "schema": {
                "description": "An error message.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "File": {
          "allOf": [],
          "description": undefined,
          "generatedName": "File",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "filename",
              "schema": {
                "description": "The name of the file.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "content_type",
              "schema": {
                "description": "The content type of the file.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "md5sum",
              "schema": {
                "description": "The MD5 checksum of the file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Granularity": {
          "description": "The granularity at which to generate predictions. \`utterance\` corresponds to a natural pause or break in conversation, while \`conversational_turn\` corresponds to a change in speaker.",
          "generatedName": "Granularity",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "word",
              "nameOverride": undefined,
              "value": "word",
            },
            {
              "generatedName": "sentence",
              "nameOverride": undefined,
              "value": "sentence",
            },
            {
              "generatedName": "utterance",
              "nameOverride": undefined,
              "value": "utterance",
            },
            {
              "generatedName": "conversational_turn",
              "nameOverride": undefined,
              "value": "conversational_turn",
            },
          ],
        },
        "GroupedPredictions<BurstPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsBurstPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsBurstPredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "BurstPrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<FacePrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsFacePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsFacePredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "FacePrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<FacemeshPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsFacemeshPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsFacemeshPredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "FacemeshPrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<LanguagePrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsLanguagePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsLanguagePredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "LanguagePrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<NerPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsNerPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsNerPredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "NerPrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GroupedPredictions<ProsodyPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GroupedPredictionsProsodyPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "An automatically generated label to identify individuals in your media file. Will be \`unknown\` if you have chosen to disable identification, or if the model is unable to distinguish between individuals.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GroupedPredictionsProsodyPredictionPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "ProsodyPrediction",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "InProgress": {
          "allOf": [],
          "description": undefined,
          "generatedName": "InProgress",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "created_timestamp_ms",
              "schema": {
                "description": "When this job was created (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "started_timestamp_ms",
              "schema": {
                "description": "When this job started (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Job<Request>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "JobRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "user_id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "job_id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "request",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "JobRequestRequest",
                "nameOverride": undefined,
                "schema": "Request",
                "type": "reference",
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "JobRequestState",
                "nameOverride": undefined,
                "schema": "State",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "JobId": {
          "allOf": [],
          "description": undefined,
          "generatedName": "JobId",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "job_id",
              "schema": {
                "description": "The ID of the started job.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Language": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Language",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "granularity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguageGranularity",
                  "nameOverride": undefined,
                  "schema": "Granularity",
                  "type": "reference",
                },
              },
            },
            {
              "key": "identify_speakers",
              "schema": {
                "description": "Whether to return identifiers for speakers over time. If \`true\`, unique identifiers will be assigned to spoken words to differentiate different speakers. If \`false\`, all speakers will be tagged with an \`unknown\` ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sentiment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguageSentiment",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
            {
              "key": "toxicity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguageToxicity",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "LanguagePrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "LanguagePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "text",
              "schema": {
                "description": "A segment of text (like a word or a sentence).",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "position",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LanguagePredictionPosition",
                "nameOverride": undefined,
                "schema": "PositionInterval",
                "type": "reference",
              },
            },
            {
              "key": "time",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguagePredictionTime",
                  "nameOverride": undefined,
                  "schema": "TimeInterval",
                  "type": "reference",
                },
              },
            },
            {
              "key": "confidence",
              "schema": {
                "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence in this text.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "speaker_confidence",
              "schema": {
                "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "LanguagePredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
            {
              "key": "sentiment",
              "schema": {
                "description": "Sentiment predictions returned as a distribution. This model predicts the probability that a given text could be interpreted as having each sentiment level from \`1\` (negative) to \`9\` (positive).

Compared to returning one estimate of sentiment, this enables a more nuanced analysis of a text's meaning. For example, a text with very neutral sentiment would have an average rating of \`5\`. But also a text that could be interpreted as having very positive sentiment or very negative sentiment would also have an average rating of \`5\`. The average sentiment is less informative than the distribution over sentiment, so this API returns a value for each sentiment level.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "LanguagePredictionSentimentItem",
                    "nameOverride": undefined,
                    "schema": "SentimentScore",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "toxicity",
              "schema": {
                "description": "Toxicity predictions returned as probabilities that the text can be classified into the following categories: \`toxic\`, \`severe_toxic\`, \`obscene\`, \`threat\`, \`insult\`, and \`identity_hate\`.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "LanguagePredictionToxicityItem",
                    "nameOverride": undefined,
                    "schema": "ToxicityScore",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "Models": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Models",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "face",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsFace",
                  "nameOverride": undefined,
                  "schema": "Face",
                  "type": "reference",
                },
              },
            },
            {
              "key": "burst",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsBurst",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
            {
              "key": "prosody",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsProsody",
                  "nameOverride": undefined,
                  "schema": "Prosody",
                  "type": "reference",
                },
              },
            },
            {
              "key": "language",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsLanguage",
                  "nameOverride": undefined,
                  "schema": "Language",
                  "type": "reference",
                },
              },
            },
            {
              "key": "ner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsNer",
                  "nameOverride": undefined,
                  "schema": "Ner",
                  "type": "reference",
                },
              },
            },
            {
              "key": "facemesh",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsFacemesh",
                  "nameOverride": undefined,
                  "schema": "Empty",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelsPredictions": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelsPredictions",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "face",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsFace",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<Null>, FacePrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "key": "burst",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsBurst",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<Null>, BurstPrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "key": "prosody",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsProsody",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<TranscriptionMetadata>, ProsodyPrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "key": "language",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsLanguage",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<TranscriptionMetadata>, LanguagePrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "key": "ner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsNer",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<TranscriptionMetadata>, NerPrediction>",
                  "type": "reference",
                },
              },
            },
            {
              "key": "facemesh",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelsPredictionsFacemesh",
                  "nameOverride": undefined,
                  "schema": "Predictions<optional<Null>, FacemeshPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Ner": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Ner",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "identify_speakers",
              "schema": {
                "description": "Whether to return identifiers for speakers over time. If \`true\`, unique identifiers will be assigned to spoken words to differentiate different speakers. If \`false\`, all speakers will be tagged with an \`unknown\` ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NerPrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NerPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entity",
              "schema": {
                "description": "The recognized topic or entity.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "position",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "NerPredictionPosition",
                "nameOverride": undefined,
                "schema": "PositionInterval",
                "type": "reference",
              },
            },
            {
              "key": "entity_confidence",
              "schema": {
                "description": "Our NER model's relative confidence in the recognized topic or entity.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "support",
              "schema": {
                "description": "A measure of how often the entity is linked to by other entities.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "uri",
              "schema": {
                "description": "A URL which provides more information about the recognized topic or entity.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "link_word",
              "schema": {
                "description": "The specific word to which the emotion predictions are linked.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "time",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NerPredictionTime",
                  "nameOverride": undefined,
                  "schema": "TimeInterval",
                  "type": "reference",
                },
              },
            },
            {
              "key": "confidence",
              "schema": {
                "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence in this text.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "speaker_confidence",
              "schema": {
                "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NerPredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Null": {
          "description": "No associated metadata for this model. Value will be \`null\`.",
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "PositionInterval": {
          "allOf": [],
          "description": "Position of a segment of text within a larger document, measured in characters. Uses zero-based indexing. The beginning index is inclusive and the end index is exclusive.",
          "generatedName": "PositionInterval",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "begin",
              "schema": {
                "description": "The index of the first character in the text segment, inclusive.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "end",
              "schema": {
                "description": "The index of the last character in the text segment, exclusive.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Prediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Prediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "file",
              "schema": {
                "description": "A file path relative to the top level source URL or file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "models",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PredictionModels",
                "nameOverride": undefined,
                "schema": "ModelsPredictions",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<Null>, BurstPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalNullBurstPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullBurstPredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "Null",
                  "type": "reference",
                },
              },
            },
            {
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullBurstPredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<BurstPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<Null>, FacePrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalNullFacePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullFacePredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "Null",
                  "type": "reference",
                },
              },
            },
            {
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullFacePredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<FacePrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<Null>, FacemeshPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalNullFacemeshPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullFacemeshPredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "Null",
                  "type": "reference",
                },
              },
            },
            {
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalNullFacemeshPredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<FacemeshPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<TranscriptionMetadata>, LanguagePrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "TranscriptionMetadata",
                  "type": "reference",
                },
              },
            },
            {
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataLanguagePredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<LanguagePrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<TranscriptionMetadata>, NerPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalTranscriptionMetadataNerPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataNerPredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "TranscriptionMetadata",
                  "type": "reference",
                },
              },
            },
            {
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataNerPredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<NerPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Predictions<optional<TranscriptionMetadata>, ProsodyPrediction>": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPredictionMetadata",
                  "nameOverride": undefined,
                  "schema": "TranscriptionMetadata",
                  "type": "reference",
                },
              },
            },
            {
              "key": "grouped_predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PredictionsOptionalTranscriptionMetadataProsodyPredictionGroupedPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "GroupedPredictions<ProsodyPrediction>",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Prosody": {
          "allOf": [],
          "description": "NOTE: the \`granularity\` field is ignored if transcription is not enabled or if the \`window\` field has been set.",
          "generatedName": "Prosody",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "granularity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ProsodyGranularity",
                  "nameOverride": undefined,
                  "schema": "Granularity",
                  "type": "reference",
                },
              },
            },
            {
              "key": "identify_speakers",
              "schema": {
                "description": "Whether to return identifiers for speakers over time. If \`true\`, unique identifiers will be assigned to spoken words to differentiate different speakers. If \`false\`, all speakers will be tagged with an \`unknown\` ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "window",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ProsodyWindow",
                  "nameOverride": undefined,
                  "schema": "Window",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ProsodyPrediction": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ProsodyPrediction",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "text",
              "schema": {
                "description": "A segment of text (like a word or a sentence).",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "time",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ProsodyPredictionTime",
                "nameOverride": undefined,
                "schema": "TimeInterval",
                "type": "reference",
              },
            },
            {
              "key": "confidence",
              "schema": {
                "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence in this text.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "speaker_confidence",
              "schema": {
                "description": "Value between \`0.0\` and \`1.0\` that indicates our transcription model’s relative confidence that this text was spoken by this speaker.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "emotions",
              "schema": {
                "description": "A high-dimensional embedding in emotion space.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ProsodyPredictionEmotionsItem",
                  "nameOverride": undefined,
                  "schema": "EmotionScore",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Queued": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Queued",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "created_timestamp_ms",
              "schema": {
                "description": "When this job was created (Unix timestamp in milliseconds).",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Request",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "models",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "allOf": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "Models",
                      "nameOverride": undefined,
                      "schema": "Models",
                      "type": "reference",
                    },
                  ],
                  "description": undefined,
                  "generatedName": "RequestModels",
                  "nameOverride": undefined,
                  "properties": [],
                  "type": "object",
                },
              },
            },
            {
              "key": "transcription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RequestTranscription",
                  "nameOverride": undefined,
                  "schema": "Transcription",
                  "type": "reference",
                },
              },
            },
            {
              "key": "urls",
              "schema": {
                "description": "URLs to the media files to be processed. Each must be a valid public URL to a media file (see recommended input filetypes) or an archive (\`.zip\`, \`.tar.gz\`, \`.tar.bz2\`, \`.tar.xz\`) of media files.

If you wish to supply more than 100 URLs, consider providing them as an archive (\`.zip\`, \`.tar.gz\`, \`.tar.bz2\`, \`.tar.xz\`).",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "callback_url",
              "schema": {
                "description": "If provided, a \`POST\` request will be made to the URL with the generated predictions on completion or the error message on failure.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "notify",
              "schema": {
                "description": "Whether to send an email notification to the user upon job completion/failure.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "files",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RequestFilesItem",
                  "nameOverride": undefined,
                  "schema": "File",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Results": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Results",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "predictions",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ResultsPredictionsItem",
                  "nameOverride": undefined,
                  "schema": "Prediction",
                  "type": "reference",
                },
              },
            },
            {
              "key": "errors",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ResultsErrorsItem",
                  "nameOverride": undefined,
                  "schema": "Error",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SentimentScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SentimentScore",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Level of sentiment, ranging from \`1\` (negative) to \`9\` (positive)",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "score",
              "schema": {
                "description": "Prediction for this level of sentiment",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SortBy": {
          "description": undefined,
          "generatedName": "SortBy",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "created",
              "nameOverride": undefined,
              "value": "created",
            },
            {
              "generatedName": "started",
              "nameOverride": undefined,
              "value": "started",
            },
            {
              "generatedName": "ended",
              "nameOverride": undefined,
              "value": "ended",
            },
          ],
        },
        "Source": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Source",
            "nameOverride": undefined,
            "schemas": {
              "file": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSourceFile",
                "nameOverride": undefined,
                "schema": "Source_File",
                "type": "reference",
              },
              "url": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSourceUrl",
                "nameOverride": undefined,
                "schema": "Source_Url",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "SourceResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SourceResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "source",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SourceResultSource",
                "nameOverride": undefined,
                "schema": "Source",
                "type": "reference",
              },
            },
            {
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SourceResultResults",
                  "nameOverride": undefined,
                  "schema": "Results",
                  "type": "reference",
                },
              },
            },
            {
              "key": "error",
              "schema": {
                "description": "An error message.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Source_File": {
          "description": undefined,
          "file": undefined,
          "generatedName": "SourceFile",
          "nameOverride": undefined,
          "schema": "File",
          "type": "reference",
        },
        "Source_Url": {
          "description": undefined,
          "file": undefined,
          "generatedName": "SourceUrl",
          "nameOverride": undefined,
          "schema": "Url",
          "type": "reference",
        },
        "State": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "State",
            "nameOverride": undefined,
            "schemas": {
              "COMPLETED": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStateCompleted",
                "nameOverride": undefined,
                "schema": "State_Completed",
                "type": "reference",
              },
              "FAILED": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStateFailed",
                "nameOverride": undefined,
                "schema": "State_Failed",
                "type": "reference",
              },
              "IN_PROGRESS": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStateInProgress",
                "nameOverride": undefined,
                "schema": "State_InProgress",
                "type": "reference",
              },
              "QUEUED": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStateQueued",
                "nameOverride": undefined,
                "schema": "State_Queued",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "State_Completed": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Completed",
              "nameOverride": undefined,
              "schema": "Completed",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "StateCompleted",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "State_Failed": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Failed",
              "nameOverride": undefined,
              "schema": "Failed",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "StateFailed",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "State_InProgress": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "InProgress",
              "nameOverride": undefined,
              "schema": "InProgress",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "StateInProgress",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "State_Queued": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Queued",
              "nameOverride": undefined,
              "schema": "Queued",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "StateQueued",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "Status": {
          "description": undefined,
          "generatedName": "Status",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "QUEUED",
              "nameOverride": undefined,
              "value": "QUEUED",
            },
            {
              "generatedName": "IN_PROGRESS",
              "nameOverride": undefined,
              "value": "IN_PROGRESS",
            },
            {
              "generatedName": "COMPLETED",
              "nameOverride": undefined,
              "value": "COMPLETED",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "TimeInterval": {
          "allOf": [],
          "description": "A time range with a beginning and end, measured in seconds.",
          "generatedName": "TimeInterval",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "begin",
              "schema": {
                "description": "Beginning of time range in seconds.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "end",
              "schema": {
                "description": "End of time range in seconds.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ToxicityScore": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ToxicityScore",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Category of toxicity.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "score",
              "schema": {
                "description": "Prediction for this category of toxicity",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "Transcription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Transcription",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "language",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "allOf": [
                    {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "Bcp47Tag",
                      "nameOverride": undefined,
                      "schema": "Bcp47Tag",
                      "type": "reference",
                    },
                  ],
                  "description": undefined,
                  "generatedName": "TranscriptionLanguage",
                  "nameOverride": undefined,
                  "properties": [],
                  "type": "object",
                },
              },
            },
          ],
          "type": "object",
        },
        "TranscriptionMetadata": {
          "allOf": [],
          "description": "Transcription metadata for your media file.",
          "generatedName": "TranscriptionMetadata",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "confidence",
              "schema": {
                "description": "Value between \`0.0\` and \`1.0\` indicating our transcription model’s relative confidence in the transcription of your media file.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "detected_language",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TranscriptionMetadataDetectedLanguage",
                  "nameOverride": undefined,
                  "schema": "Bcp47Tag",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "Url": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Url",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "url",
              "schema": {
                "description": "The URL of the source media file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "When": {
          "description": undefined,
          "generatedName": "When",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "created_before",
              "nameOverride": undefined,
              "value": "created_before",
            },
            {
              "generatedName": "created_after",
              "nameOverride": undefined,
              "value": "created_after",
            },
          ],
        },
        "Window": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Window",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "length",
              "schema": {
                "description": "The length of the sliding window.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "step",
              "schema": {
                "description": "The step size of the sliding window.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {},
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "https://api.hume.ai",
        },
      ],
      "tags": [],
      "title": "Hume AI Batch API",
    },
  },
  "rootPackage": {
    "file": "openapi.yaml",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser squidex simple 1`] = `
{
  "files": {
    "openapi.json": {
      "dependencies": [],
      "description": undefined,
      "endpoints": [
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UserManagementGetUsersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "UserManagement_GetUsers",
          "path": "/api/user-management",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "query",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "skip",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "take",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Users returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementGetUsersResponse",
              "nameOverride": undefined,
              "schema": "UsersDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "getUsers",
          },
          "server": [],
          "summary": "Get users by query.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UserManagementPostUserRequest",
          "headers": [],
          "method": "POST",
          "operationId": "UserManagement_PostUser",
          "path": "/api/user-management",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementPostUserRequest",
              "nameOverride": undefined,
              "schema": "CreateUserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "User created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementPostUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "postUser",
          },
          "server": [],
          "summary": "Create a new user.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UserManagementGetUserRequest",
          "headers": [],
          "method": "GET",
          "operationId": "UserManagement_GetUser",
          "path": "/api/user-management/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementGetUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "getUser",
          },
          "server": [],
          "summary": "Get a user by ID.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UserManagementPutUserRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "UserManagement_PutUser",
          "path": "/api/user-management/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementPutUserRequest",
              "nameOverride": undefined,
              "schema": "UpdateUserDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "User created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementPutUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "putUser",
          },
          "server": [],
          "summary": "Update a user.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UserManagementDeleteUserRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UserManagement_DeleteUser",
          "path": "/api/user-management/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "deleteUser",
          },
          "server": [],
          "summary": "Delete a User.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UserManagementLockUserRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "UserManagement_LockUser",
          "path": "/api/user-management/{id}/lock",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User locked.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementLockUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "lockUser",
          },
          "server": [],
          "summary": "Lock a user.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UserManagementUnlockUserRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "UserManagement_UnlockUser",
          "path": "/api/user-management/{id}/unlock",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User unlocked.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserManagementUnlockUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "userManagement",
            "methodName": "unlockUser",
          },
          "server": [],
          "summary": "Unlock a user.",
          "tags": [
            "UserManagement",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsersGetUserResourcesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Users_GetUserResources",
          "path": "/api",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User resources returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UsersGetUserResourcesResponse",
              "nameOverride": undefined,
              "schema": "ResourcesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "users",
            "methodName": "getUserResources",
          },
          "server": [],
          "summary": "Get the user resources.",
          "tags": [
            "Users",
          ],
        },
        {
          "authed": true,
          "description": "Search the user by query that contains the email address or the part of the email address.",
          "errors": [],
          "generatedRequestName": "UsersGetUsersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Users_GetUsers",
          "path": "/api/users",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "query",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Users returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UsersGetUsersResponseItem",
                "nameOverride": undefined,
                "schema": "UserDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "users",
            "methodName": "getUsers",
          },
          "server": [],
          "summary": "Get users by query.",
          "tags": [
            "Users",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsersGetUserRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Users_GetUser",
          "path": "/api/users/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "User found.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UsersGetUserResponse",
              "nameOverride": undefined,
              "schema": "UserDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "users",
            "methodName": "getUser",
          },
          "server": [],
          "summary": "Get user by id.",
          "tags": [
            "Users",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsersGetUserPictureRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Users_GetUserPicture",
          "path": "/api/users/{id}/picture",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "users",
            "methodName": "getUserPicture",
          },
          "server": [],
          "summary": "Get user picture by id.",
          "tags": [
            "Users",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TranslationsPostTranslationRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Translations_PostTranslation",
          "path": "/api/apps/{app}/translations",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TranslationsPostTranslationRequest",
              "nameOverride": undefined,
              "schema": "TranslateDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Text translated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TranslationsPostTranslationResponse",
              "nameOverride": undefined,
              "schema": "TranslationDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "translations",
            "methodName": "postTranslation",
          },
          "server": [],
          "summary": "Translate a text.",
          "tags": [
            "Translations",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TemplatesGetTemplatesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Templates_GetTemplates",
          "path": "/api/templates",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Templates returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TemplatesGetTemplatesResponse",
              "nameOverride": undefined,
              "schema": "TemplatesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "templates",
            "methodName": "getTemplates",
          },
          "server": [],
          "summary": "Get all templates.",
          "tags": [
            "Templates",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TemplatesGetTemplateRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Templates_GetTemplate",
          "path": "/api/templates/{name}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "name",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Template returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TemplatesGetTemplateResponse",
              "nameOverride": undefined,
              "schema": "TemplateDetailsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "templates",
            "methodName": "getTemplate",
          },
          "server": [],
          "summary": "Get template details.",
          "tags": [
            "Templates",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TeamContributorsGetContributorsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "TeamContributors_GetContributors",
          "path": "/api/teams/{team}/contributors",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributors returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamContributorsGetContributorsResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "getContributors",
          },
          "server": [],
          "summary": "Get team contributors.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TeamContributorsPostContributorRequest",
          "headers": [],
          "method": "POST",
          "operationId": "TeamContributors_PostContributor",
          "path": "/api/teams/{team}/contributors",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamContributorsPostContributorRequest",
              "nameOverride": undefined,
              "schema": "AssignContributorDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor assigned to team.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamContributorsPostContributorResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "postContributor",
          },
          "server": [],
          "summary": "Assign contributor to team.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TeamContributorsDeleteMyselfRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "TeamContributors_DeleteMyself",
          "path": "/api/teams/{team}/contributors/me",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamContributorsDeleteMyselfResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "deleteMyself",
          },
          "server": [],
          "summary": "Remove yourself.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TeamContributorsDeleteContributorRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "TeamContributors_DeleteContributor",
          "path": "/api/teams/{team}/contributors/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamContributorsDeleteContributorResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "deleteContributor",
          },
          "server": [],
          "summary": "Remove contributor.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": "You can only retrieve the list of teams when you are authenticated as a user (OpenID implicit flow).
You will retrieve all teams, where you are assigned as a contributor.",
          "errors": [],
          "generatedRequestName": "TeamsGetTeamsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Teams_GetTeams",
          "path": "/api/teams",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Teams returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TeamsGetTeamsResponseItem",
                "nameOverride": undefined,
                "schema": "TeamDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "getTeams",
          },
          "server": [],
          "summary": "Get your teams.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": "You can only create an team when you are authenticated as a user (OpenID implicit flow).
You will be assigned as owner of the new team automatically.",
          "errors": [],
          "generatedRequestName": "TeamsPostTeamRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Teams_PostTeam",
          "path": "/api/teams",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPostTeamRequest",
              "nameOverride": undefined,
              "schema": "CreateTeamDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Team created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPostTeamResponse",
              "nameOverride": undefined,
              "schema": "TeamDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "postTeam",
          },
          "server": [],
          "summary": "Create a new team.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TeamsGetTeamRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Teams_GetTeam",
          "path": "/api/teams/{team}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Teams returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsGetTeamResponse",
              "nameOverride": undefined,
              "schema": "TeamDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "getTeam",
          },
          "server": [],
          "summary": "Get an team by name.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TeamsPutTeamRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Teams_PutTeam",
          "path": "/api/teams/{team}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPutTeamRequest",
              "nameOverride": undefined,
              "schema": "UpdateTeamDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Team updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamsPutTeamResponse",
              "nameOverride": undefined,
              "schema": "TeamDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "teams",
            "methodName": "putTeam",
          },
          "server": [],
          "summary": "Update the team.",
          "tags": [
            "Teams",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsagesGetLogRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetLog",
          "path": "/api/apps/{app}/usages/log",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Usage tracking results returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UsagesGetLogResponse",
              "nameOverride": undefined,
              "schema": "LogDownloadDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getLog",
          },
          "server": [],
          "summary": "Get api calls as log file.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsagesGetUsagesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetUsages",
          "path": "/api/apps/{app}/usages/calls/{fromDate}/{toDate}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "fromDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "toDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "API call returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UsagesGetUsagesResponse",
              "nameOverride": undefined,
              "schema": "CallsUsageDtoDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getUsages",
          },
          "server": [],
          "summary": "Get api calls in date range.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsagesGetUsagesForTeamRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetUsagesForTeam",
          "path": "/api/teams/{team}/usages/calls/{fromDate}/{toDate}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "fromDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "toDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "API call returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UsagesGetUsagesForTeamResponse",
              "nameOverride": undefined,
              "schema": "CallsUsageDtoDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getUsagesForTeam",
          },
          "server": [],
          "summary": "Get api calls in date range for team.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsagesGetCurrentStorageSizeRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetCurrentStorageSize",
          "path": "/api/apps/{app}/usages/storage/today",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Storage usage returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UsagesGetCurrentStorageSizeResponse",
              "nameOverride": undefined,
              "schema": "CurrentStorageDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getCurrentStorageSize",
          },
          "server": [],
          "summary": "Get total asset size.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsagesGetTeamCurrentStorageSizeForTeamRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetTeamCurrentStorageSizeForTeam",
          "path": "/api/teams/{team}/usages/storage/today",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Storage usage returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UsagesGetTeamCurrentStorageSizeForTeamResponse",
              "nameOverride": undefined,
              "schema": "CurrentStorageDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getTeamCurrentStorageSizeForTeam",
          },
          "server": [],
          "summary": "Get total asset size by team.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsagesGetStorageSizesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetStorageSizes",
          "path": "/api/apps/{app}/usages/storage/{fromDate}/{toDate}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "fromDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "toDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Storage usage returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UsagesGetStorageSizesResponseItem",
                "nameOverride": undefined,
                "schema": "StorageUsagePerDateDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getStorageSizes",
          },
          "server": [],
          "summary": "Get asset usage by date.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UsagesGetStorageSizesForTeamRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Usages_GetStorageSizesForTeam",
          "path": "/api/teams/{team}/usages/storage/{fromDate}/{toDate}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "fromDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "toDate",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Storage usage returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UsagesGetStorageSizesForTeamResponseItem",
                "nameOverride": undefined,
                "schema": "StorageUsagePerDateDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "statistics",
            "methodName": "getStorageSizesForTeam",
          },
          "server": [],
          "summary": "Get asset usage by date for team.",
          "tags": [
            "Statistics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SearchGetSearchResultsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Search_GetSearchResults",
          "path": "/api/apps/{app}/search",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "query",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Search results returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SearchGetSearchResultsResponseItem",
                "nameOverride": undefined,
                "schema": "SearchResultDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "search",
            "methodName": "getSearchResults",
          },
          "server": [],
          "summary": "Get search results.",
          "tags": [
            "Search",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemaFieldsPostFieldRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SchemaFields_PostField",
          "path": "/api/apps/{app}/schemas/{schema}/fields",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPostFieldRequest",
              "nameOverride": undefined,
              "schema": "AddFieldDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPostFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "postField",
          },
          "server": [],
          "summary": "Add a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemaFieldsPostNestedFieldRequest",
          "headers": [],
          "method": "POST",
          "operationId": "SchemaFields_PostNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPostNestedFieldRequest",
              "nameOverride": undefined,
              "schema": "AddFieldDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPostNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "postNestedField",
          },
          "server": [],
          "summary": "Add a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemaFieldsPutSchemaUiFieldsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutSchemaUIFields",
          "path": "/api/apps/{app}/schemas/{schema}/fields/ui",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutSchemaUiFieldsRequest",
              "nameOverride": undefined,
              "schema": "ConfigureUIFieldsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema UI fields defined.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutSchemaUiFieldsResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putSchemaUIFields",
          },
          "server": [],
          "summary": "Configure UI fields.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemaFieldsPutSchemaFieldOrderingRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutSchemaFieldOrdering",
          "path": "/api/apps/{app}/schemas/{schema}/fields/ordering",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutSchemaFieldOrderingRequest",
              "nameOverride": undefined,
              "schema": "ReorderFieldsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema fields reordered.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutSchemaFieldOrderingResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putSchemaFieldOrdering",
          },
          "server": [],
          "summary": "Reorder all fields.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemaFieldsPutNestedFieldOrderingRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutNestedFieldOrdering",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/ordering",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutNestedFieldOrderingRequest",
              "nameOverride": undefined,
              "schema": "ReorderFieldsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema fields reordered.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutNestedFieldOrderingResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putNestedFieldOrdering",
          },
          "server": [],
          "summary": "Reorder all nested fields.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemaFieldsPutFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutFieldRequest",
              "nameOverride": undefined,
              "schema": "UpdateFieldDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putField",
          },
          "server": [],
          "summary": "Update a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemaFieldsDeleteFieldRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "SchemaFields_DeleteField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsDeleteFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "deleteField",
          },
          "server": [],
          "summary": "Delete a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemaFieldsPutNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_PutNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutNestedFieldRequest",
              "nameOverride": undefined,
              "schema": "UpdateFieldDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsPutNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putNestedField",
          },
          "server": [],
          "summary": "Update a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemaFieldsDeleteNestedFieldRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "SchemaFields_DeleteNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsDeleteNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "deleteNestedField",
          },
          "server": [],
          "summary": "Delete a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A locked field cannot be updated or deleted.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsLockFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_LockField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/lock",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field shown.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsLockFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "lockField",
          },
          "server": [],
          "summary": "Lock a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A locked field cannot be edited or deleted.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsLockNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_LockNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/lock",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field hidden.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsLockNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "lockNestedField",
          },
          "server": [],
          "summary": "Lock a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsHideFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_HideField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/hide",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field hidden.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsHideFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "hideField",
          },
          "server": [],
          "summary": "Hide a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsHideNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_HideNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/hide",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field hidden.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsHideNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "hideNestedField",
          },
          "server": [],
          "summary": "Hide a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsShowFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_ShowField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/show",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field shown.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsShowFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "showField",
          },
          "server": [],
          "summary": "Show a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsShowNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_ShowNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/show",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field shown.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsShowNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "showNestedField",
          },
          "server": [],
          "summary": "Show a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsEnableFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_EnableField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/enable",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field enabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsEnableFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "enableField",
          },
          "server": [],
          "summary": "Enable a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsEnableNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_EnableNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/enable",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field enabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsEnableNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "enableNestedField",
          },
          "server": [],
          "summary": "Enable a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsDisableFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_DisableField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/disable",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field disabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsDisableFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "disableField",
          },
          "server": [],
          "summary": "Disable a schema field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "errors": [],
          "generatedRequestName": "SchemaFieldsDisableNestedFieldRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "SchemaFields_DisableNestedField",
          "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/disable",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema field disabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemaFieldsDisableNestedFieldResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "disableNestedField",
          },
          "server": [],
          "summary": "Disable a nested field.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasGetSchemasRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Schemas_GetSchemas",
          "path": "/api/apps/{app}/schemas",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schemas returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasGetSchemasResponse",
              "nameOverride": undefined,
              "schema": "SchemasDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "getSchemas",
          },
          "server": [],
          "summary": "Get schemas.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasPostSchemaRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Schemas_PostSchema",
          "path": "/api/apps/{app}/schemas",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPostSchemaRequest",
              "nameOverride": undefined,
              "schema": "CreateSchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPostSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "postSchema",
          },
          "server": [],
          "summary": "Create a new schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasGetSchemaRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Schemas_GetSchema",
          "path": "/api/apps/{app}/schemas/{schema}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema found.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasGetSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "getSchema",
          },
          "server": [],
          "summary": "Get a schema by name.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasPutSchemaRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutSchema",
          "path": "/api/apps/{app}/schemas/{schema}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaRequest",
              "nameOverride": undefined,
              "schema": "UpdateSchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putSchema",
          },
          "server": [],
          "summary": "Update a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasDeleteSchemaRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Schemas_DeleteSchema",
          "path": "/api/apps/{app}/schemas/{schema}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "deleteSchema",
          },
          "server": [],
          "summary": "Delete a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasPutSchemaSyncRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutSchemaSync",
          "path": "/api/apps/{app}/schemas/{schema}/sync",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaSyncRequest",
              "nameOverride": undefined,
              "schema": "SynchronizeSchemaDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutSchemaSyncResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putSchemaSync",
          },
          "server": [],
          "summary": "Synchronize a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasPutCategoryRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutCategory",
          "path": "/api/apps/{app}/schemas/{schema}/category",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutCategoryRequest",
              "nameOverride": undefined,
              "schema": "ChangeCategoryDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutCategoryResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putCategory",
          },
          "server": [],
          "summary": "Update a schema category.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasPutPreviewUrlsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutPreviewUrls",
          "path": "/api/apps/{app}/schemas/{schema}/preview-urls",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutPreviewUrlsRequest",
              "nameOverride": undefined,
              "schema": "ConfigurePreviewUrlsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutPreviewUrlsResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putPreviewUrls",
          },
          "server": [],
          "summary": "Update the preview urls.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasPutScriptsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutScripts",
          "path": "/api/apps/{app}/schemas/{schema}/scripts",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutScriptsRequest",
              "nameOverride": undefined,
              "schema": "SchemaScriptsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutScriptsResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putScripts",
          },
          "server": [],
          "summary": "Update the scripts.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasPutRulesRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PutRules",
          "path": "/api/apps/{app}/schemas/{schema}/rules",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutRulesRequest",
              "nameOverride": undefined,
              "schema": "ConfigureFieldRulesDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPutRulesResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "putRules",
          },
          "server": [],
          "summary": "Update the rules.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasPublishSchemaRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_PublishSchema",
          "path": "/api/apps/{app}/schemas/{schema}/publish",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema published.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasPublishSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "publishSchema",
          },
          "server": [],
          "summary": "Publish a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "SchemasUnpublishSchemaRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Schemas_UnpublishSchema",
          "path": "/api/apps/{app}/schemas/{schema}/unpublish",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Schema unpublished.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SchemasUnpublishSchemaResponse",
              "nameOverride": undefined,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "schemas",
            "methodName": "unpublishSchema",
          },
          "server": [],
          "summary": "Unpublish a schema.",
          "tags": [
            "Schemas",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesGetActionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetActions",
          "path": "/api/rules/actions",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule actions returned.",
            "schema": {
              "description": undefined,
              "key": {
                "type": "string",
              },
              "type": "map",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RulesGetActionsResponseValue",
                "nameOverride": undefined,
                "schema": "RuleElementDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getActions",
          },
          "server": [],
          "summary": "Get supported rule actions.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesGetRulesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetRules",
          "path": "/api/apps/{app}/rules",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rules returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesGetRulesResponse",
              "nameOverride": undefined,
              "schema": "RulesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getRules",
          },
          "server": [],
          "summary": "Get rules.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesPostRuleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Rules_PostRule",
          "path": "/api/apps/{app}/rules",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesPostRuleRequest",
              "nameOverride": undefined,
              "schema": "CreateRuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesPostRuleResponse",
              "nameOverride": undefined,
              "schema": "RuleDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "postRule",
          },
          "server": [],
          "summary": "Create a new rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesDeleteRuleRunRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Rules_DeleteRuleRun",
          "path": "/api/apps/{app}/rules/run",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteRuleRun",
          },
          "server": [],
          "summary": "Cancel the current run.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesPutRuleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_PutRule",
          "path": "/api/apps/{app}/rules/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesPutRuleRequest",
              "nameOverride": undefined,
              "schema": "UpdateRuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesPutRuleResponse",
              "nameOverride": undefined,
              "schema": "RuleDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "putRule",
          },
          "server": [],
          "summary": "Update a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesDeleteRuleRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Rules_DeleteRule",
          "path": "/api/apps/{app}/rules/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteRule",
          },
          "server": [],
          "summary": "Delete a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesEnableRuleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_EnableRule",
          "path": "/api/apps/{app}/rules/{id}/enable",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule enabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesEnableRuleResponse",
              "nameOverride": undefined,
              "schema": "RuleDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "enableRule",
          },
          "server": [],
          "summary": "Enable a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesDisableRuleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_DisableRule",
          "path": "/api/apps/{app}/rules/{id}/disable",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule disabled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesDisableRuleResponse",
              "nameOverride": undefined,
              "schema": "RuleDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "disableRule",
          },
          "server": [],
          "summary": "Disable a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesTriggerRuleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_TriggerRule",
          "path": "/api/apps/{app}/rules/{id}/trigger",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "triggerRule",
          },
          "server": [],
          "summary": "Trigger a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesPutRuleRunRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_PutRuleRun",
          "path": "/api/apps/{app}/rules/{id}/run",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "fromSnapshots",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "putRuleRun",
          },
          "server": [],
          "summary": "Run a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesDeleteRuleEventsRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Rules_DeleteRuleEvents",
          "path": "/api/apps/{app}/rules/{id}/events",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteRuleEvents",
          },
          "server": [],
          "summary": "Cancels all rule events.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesSimulatePostRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Rules_SimulatePOST",
          "path": "/api/apps/{app}/rules/simulate",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesSimulatePostRequest",
              "nameOverride": undefined,
              "schema": "CreateRuleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule simulated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesSimulatePostResponse",
              "nameOverride": undefined,
              "schema": "SimulatedRuleEventsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "simulatePOST",
          },
          "server": [],
          "summary": "Simulate a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesSimulateGetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_SimulateGET",
          "path": "/api/apps/{app}/rules/{id}/simulate",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule simulated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesSimulateGetResponse",
              "nameOverride": undefined,
              "schema": "SimulatedRuleEventsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "simulateGET",
          },
          "server": [],
          "summary": "Simulate a rule.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesGetEventsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetEvents",
          "path": "/api/apps/{app}/rules/events",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "ruleId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "skip",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "take",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule events returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RulesGetEventsResponse",
              "nameOverride": undefined,
              "schema": "RuleEventsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getEvents",
          },
          "server": [],
          "summary": "Get rule events.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesDeleteEventsRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Rules_DeleteEvents",
          "path": "/api/apps/{app}/rules/events",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteEvents",
          },
          "server": [],
          "summary": "Cancels all events.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesPutEventRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Rules_PutEvent",
          "path": "/api/apps/{app}/rules/events/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "putEvent",
          },
          "server": [],
          "summary": "Retry the event immediately.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesDeleteEventRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Rules_DeleteEvent",
          "path": "/api/apps/{app}/rules/events/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "deleteEvent",
          },
          "server": [],
          "summary": "Cancels an event.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesGetEventTypesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetEventTypes",
          "path": "/api/rules/eventtypes",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule events returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getEventTypes",
          },
          "server": [],
          "summary": "Provide a list of all event types that are used in rules.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RulesGetEventSchemaRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Rules_GetEventSchema",
          "path": "/api/rules/eventtypes/{type}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "type",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Rule event type found.",
            "schema": {
              "type": "unknown",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "rules",
            "methodName": "getEventSchema",
          },
          "server": [],
          "summary": "Provide the json schema for the event with the specified name.",
          "tags": [
            "Rules",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppPlansGetPlansRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppPlans_GetPlans",
          "path": "/api/apps/{app}/plans",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "App plan information returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppPlansGetPlansResponse",
              "nameOverride": undefined,
              "schema": "PlansDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "plans",
            "methodName": "getPlans",
          },
          "server": [],
          "summary": "Get app plan information.",
          "tags": [
            "Plans",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppPlansPutPlanRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppPlans_PutPlan",
          "path": "/api/apps/{app}/plan",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppPlansPutPlanRequest",
              "nameOverride": undefined,
              "schema": "ChangePlanDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Plan changed or redirect url returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppPlansPutPlanResponse",
              "nameOverride": undefined,
              "schema": "PlanChangedDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "plans",
            "methodName": "putPlan",
          },
          "server": [],
          "summary": "Change the app plan.",
          "tags": [
            "Plans",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TeamPlansGetTeamPlansRequest",
          "headers": [],
          "method": "GET",
          "operationId": "TeamPlans_GetTeamPlans",
          "path": "/api/teams/{team}/plans",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Team plan information returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamPlansGetTeamPlansResponse",
              "nameOverride": undefined,
              "schema": "PlansDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "plans",
            "methodName": "getTeamPlans",
          },
          "server": [],
          "summary": "Get team plan information.",
          "tags": [
            "Plans",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "TeamPlansPutTeamPlanRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "TeamPlans_PutTeamPlan",
          "path": "/api/teams/{team}/plan",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamPlansPutTeamPlanRequest",
              "nameOverride": undefined,
              "schema": "ChangePlanDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Plan changed or redirect url returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TeamPlansPutTeamPlanResponse",
              "nameOverride": undefined,
              "schema": "PlanChangedDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "plans",
            "methodName": "putTeamPlan",
          },
          "server": [],
          "summary": "Change the team plan.",
          "tags": [
            "Plans",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "PingGetInfoRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Ping_GetInfo",
          "path": "/api/info",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Infos returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PingGetInfoResponse",
              "nameOverride": undefined,
              "schema": "ExposedValues",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "ping",
            "methodName": "getInfo",
          },
          "server": [],
          "summary": "Get API information.",
          "tags": [
            "Ping",
          ],
        },
        {
          "authed": true,
          "description": "Can be used to test, if the Squidex API is alive and responding.",
          "errors": [],
          "generatedRequestName": "PingGetPingRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Ping_GetPing",
          "path": "/api/ping",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "ping",
            "methodName": "getPing",
          },
          "server": [],
          "summary": "Get ping status of the API.",
          "tags": [
            "Ping",
          ],
        },
        {
          "authed": true,
          "description": "Can be used to test, if the Squidex API is alive and responding.",
          "errors": [],
          "generatedRequestName": "PingGetAppPingRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Ping_GetAppPing",
          "path": "/api/ping/{app}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "ping",
            "methodName": "getAppPing",
          },
          "server": [],
          "summary": "Get ping status.",
          "tags": [
            "Ping",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "NewsGetNewsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "News_GetNews",
          "path": "/api/news/features",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Latest features returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "NewsGetNewsResponse",
              "nameOverride": undefined,
              "schema": "FeaturesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "news",
            "methodName": "getNews",
          },
          "server": [],
          "summary": "Get features since version.",
          "tags": [
            "News",
          ],
        },
        {
          "authed": true,
          "description": "Provide a list of supported language codes, following the ISO2Code standard.",
          "errors": [],
          "generatedRequestName": "LanguagesGetLanguagesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Languages_GetLanguages",
          "path": "/api/languages",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Supported language codes returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "LanguagesGetLanguagesResponseItem",
                "nameOverride": undefined,
                "schema": "LanguageDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "languages",
            "methodName": "getLanguages",
          },
          "server": [],
          "summary": "Get supported languages.",
          "tags": [
            "Languages",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "HistoryGetAppHistoryRequest",
          "headers": [],
          "method": "GET",
          "operationId": "History_GetAppHistory",
          "path": "/api/apps/{app}/history",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "channel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Events returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HistoryGetAppHistoryResponseItem",
                "nameOverride": undefined,
                "schema": "HistoryEventDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "history",
            "methodName": "getAppHistory",
          },
          "server": [],
          "summary": "Get historical events.",
          "tags": [
            "History",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "HistoryGetTeamHistoryRequest",
          "headers": [],
          "method": "GET",
          "operationId": "History_GetTeamHistory",
          "path": "/api/teams/{team}/history",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "channel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Events returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "HistoryGetTeamHistoryResponseItem",
                "nameOverride": undefined,
                "schema": "HistoryEventDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "history",
            "methodName": "getTeamHistory",
          },
          "server": [],
          "summary": "Get historical events for a team.",
          "tags": [
            "History",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "EventConsumersGetEventConsumersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "EventConsumers_GetEventConsumers",
          "path": "/api/event-consumers",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Event consumers returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "EventConsumersGetEventConsumersResponse",
              "nameOverride": undefined,
              "schema": "EventConsumersDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "eventConsumers",
            "methodName": "getEventConsumers",
          },
          "server": [],
          "summary": "Get event consumers.",
          "tags": [
            "EventConsumers",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "EventConsumersStartEventConsumerRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "EventConsumers_StartEventConsumer",
          "path": "/api/event-consumers/{consumerName}/start",
          "pathParameters": [
            {
              "description": undefined,
              "name": "consumerName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Event consumer started asynchronously.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "EventConsumersStartEventConsumerResponse",
              "nameOverride": undefined,
              "schema": "EventConsumerDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "eventConsumers",
            "methodName": "startEventConsumer",
          },
          "server": [],
          "summary": "Start an event consumer.",
          "tags": [
            "EventConsumers",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "EventConsumersStopEventConsumerRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "EventConsumers_StopEventConsumer",
          "path": "/api/event-consumers/{consumerName}/stop",
          "pathParameters": [
            {
              "description": undefined,
              "name": "consumerName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Event consumer stopped asynchronously.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "EventConsumersStopEventConsumerResponse",
              "nameOverride": undefined,
              "schema": "EventConsumerDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "eventConsumers",
            "methodName": "stopEventConsumer",
          },
          "server": [],
          "summary": "Stop an event consumer.",
          "tags": [
            "EventConsumers",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "EventConsumersResetEventConsumerRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "EventConsumers_ResetEventConsumer",
          "path": "/api/event-consumers/{consumerName}/reset",
          "pathParameters": [
            {
              "description": undefined,
              "name": "consumerName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Event consumer resetted asynchronously.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "EventConsumersResetEventConsumerResponse",
              "nameOverride": undefined,
              "schema": "EventConsumerDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "eventConsumers",
            "methodName": "resetEventConsumer",
          },
          "server": [],
          "summary": "Reset an event consumer.",
          "tags": [
            "EventConsumers",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "DiagnosticsGetDumpRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Diagnostics_GetDump",
          "path": "/api/diagnostics/dump",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "diagnostics",
            "methodName": "getDump",
          },
          "server": [],
          "summary": "Creates a dump and writes it into storage..",
          "tags": [
            "Diagnostics",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "DiagnosticsGetGcDumpRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Diagnostics_GetGCDump",
          "path": "/api/diagnostics/gcdump",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "diagnostics",
            "methodName": "getGCDump",
          },
          "server": [],
          "summary": "Creates a gc dump and writes it into storage.",
          "tags": [
            "Diagnostics",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsGetContentsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetContents",
          "path": "/api/content/{app}/{schema}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "ids",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "q",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contents returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetContentsResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContents",
          },
          "server": [],
          "summary": "Queries contents.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsPostContentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_PostContent",
          "path": "/api/content/{app}/{schema}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "Status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "Id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "Publish",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostContentRequestBody",
              "nameOverride": undefined,
              "schema": "ContentData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostContentResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "postContent",
          },
          "server": [],
          "summary": "Create a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsGetContentsPostRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_GetContentsPost",
          "path": "/api/content/{app}/{schema}/query",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetContentsPostRequest",
              "nameOverride": undefined,
              "schema": "QueryDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Contents returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetContentsPostResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContentsPost",
          },
          "server": [],
          "summary": "Queries contents.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsGetContentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetContentResponse",
              "nameOverride": undefined,
              "schema": "ContentDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContent",
          },
          "server": [],
          "summary": "Get a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsPostUpsertContentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_PostUpsertContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "Status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "Patch",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "Publish",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostUpsertContentRequestBody",
              "nameOverride": undefined,
              "schema": "ContentData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content created or updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostUpsertContentResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "postUpsertContent",
          },
          "server": [],
          "summary": "Upsert a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsPutContentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Contents_PutContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPutContentRequest",
              "nameOverride": undefined,
              "schema": "ContentData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPutContentResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "putContent",
          },
          "server": [],
          "summary": "Update a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsPatchContentRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Contents_PatchContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPatchContentRequest",
              "nameOverride": undefined,
              "schema": "ContentData",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content patched.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPatchContentResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "patchContent",
          },
          "server": [],
          "summary": "Patchs a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can create an generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsDeleteContentRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Contents_DeleteContent",
          "path": "/api/content/{app}/{schema}/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "CheckReferrers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "Permanent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "deleteContent",
          },
          "server": [],
          "summary": "Delete a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsGetContentValidityRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetContentValidity",
          "path": "/api/content/{app}/{schema}/{id}/validity",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContentValidity",
          },
          "server": [],
          "summary": "Get a content item validity.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsGetReferencesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetReferences",
          "path": "/api/content/{app}/{schema}/{id}/references",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "q",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contents returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetReferencesResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getReferences",
          },
          "server": [],
          "summary": "Get all references of a content.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsGetReferencingRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetReferencing",
          "path": "/api/content/{app}/{schema}/{id}/referencing",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "q",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsGetReferencingResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getReferencing",
          },
          "server": [],
          "summary": "Get a referencing contents of a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsGetContentVersionRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Contents_GetContentVersion",
          "path": "/api/content/{app}/{schema}/{id}/{version}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "version",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "getContentVersion",
          },
          "server": [],
          "summary": "Get a content by version.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsPostContentsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_PostContents",
          "path": "/api/content/{app}/{schema}/import",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPostContentsRequest",
              "nameOverride": undefined,
              "schema": "ImportContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Contents created.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ContentsPostContentsResponseItem",
                "nameOverride": undefined,
                "schema": "BulkResultDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "postContents",
          },
          "server": [],
          "summary": "Import content items.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsBulkUpdateContentsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_BulkUpdateContents",
          "path": "/api/content/{app}/{schema}/bulk",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsBulkUpdateContentsRequest",
              "nameOverride": undefined,
              "schema": "BulkUpdateContentsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ContentsBulkUpdateContentsResponseItem",
                "nameOverride": undefined,
                "schema": "BulkResultDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "bulkUpdateContents",
          },
          "server": [],
          "summary": "Bulk update content items.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsPutContentStatusRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Contents_PutContentStatus",
          "path": "/api/content/{app}/{schema}/{id}/status",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPutContentStatusRequest",
              "nameOverride": undefined,
              "schema": "ChangeStatusDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Content status changed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsPutContentStatusResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "putContentStatus",
          },
          "server": [],
          "summary": "Change status of a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsDeleteContentStatusRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Contents_DeleteContentStatus",
          "path": "/api/content/{app}/{schema}/{id}/status",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content status change cancelled.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsDeleteContentStatusResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "deleteContentStatus",
          },
          "server": [],
          "summary": "Cancel status change of a content item.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsCreateDraftRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Contents_CreateDraft",
          "path": "/api/content/{app}/{schema}/{id}/draft",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content draft created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsCreateDraftResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "createDraft",
          },
          "server": [],
          "summary": "Create a new draft version.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "errors": [],
          "generatedRequestName": "ContentsDeleteVersionRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Contents_DeleteVersion",
          "path": "/api/content/{app}/{schema}/{id}/draft",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "schema",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Content draft deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ContentsDeleteVersionResponse",
              "nameOverride": undefined,
              "schema": "ContentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "contents",
            "methodName": "deleteVersion",
          },
          "server": [],
          "summary": "Delete the draft version.",
          "tags": [
            "Contents",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CommentsGetWatchingUsersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Comments_GetWatchingUsers",
          "path": "/api/apps/{app}/watching/{resource}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "resource",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Watching users returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "getWatchingUsers",
          },
          "server": [],
          "summary": "Get all watching users..",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": "When passing in a version you can retrieve all updates since then.",
          "errors": [],
          "generatedRequestName": "CommentsGetCommentsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Comments_GetComments",
          "path": "/api/apps/{app}/comments/{commentsId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "commentsId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Comments returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CommentsGetCommentsResponse",
              "nameOverride": undefined,
              "schema": "CommentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "getComments",
          },
          "server": [],
          "summary": "Get all comments.",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CommentsPostCommentRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Comments_PostComment",
          "path": "/api/apps/{app}/comments/{commentsId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "commentsId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CommentsPostCommentRequest",
              "nameOverride": undefined,
              "schema": "UpsertCommentDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Comment created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CommentsPostCommentResponse",
              "nameOverride": undefined,
              "schema": "CommentDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "postComment",
          },
          "server": [],
          "summary": "Create a new comment.",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CommentsPutCommentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Comments_PutComment",
          "path": "/api/apps/{app}/comments/{commentsId}/{commentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "commentsId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "commentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CommentsPutCommentRequest",
              "nameOverride": undefined,
              "schema": "UpsertCommentDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "putComment",
          },
          "server": [],
          "summary": "Update a comment.",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "CommentsDeleteCommentRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Comments_DeleteComment",
          "path": "/api/apps/{app}/comments/{commentsId}/{commentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "commentsId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "commentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "comments",
            "methodName": "deleteComment",
          },
          "server": [],
          "summary": "Delete a comment.",
          "tags": [
            "Comments",
          ],
        },
        {
          "authed": true,
          "description": "When passing in a version you can retrieve all updates since then.",
          "errors": [],
          "generatedRequestName": "UserNotificationsGetNotificationsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "UserNotifications_GetNotifications",
          "path": "/api/users/{userId}/notifications",
          "pathParameters": [
            {
              "description": undefined,
              "name": "userId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "All comments returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserNotificationsGetNotificationsResponse",
              "nameOverride": undefined,
              "schema": "CommentsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "notifications",
            "methodName": "getNotifications",
          },
          "server": [],
          "summary": "Get all notifications.",
          "tags": [
            "Notifications",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "UserNotificationsDeleteCommentRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UserNotifications_DeleteComment",
          "path": "/api/users/{userId}/notifications/{commentId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "userId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "commentId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "notifications",
            "methodName": "deleteComment",
          },
          "server": [],
          "summary": "Delete a notification.",
          "tags": [
            "Notifications",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "BackupContentGetBackupContentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "BackupContent_GetBackupContent",
          "path": "/api/apps/{app}/backups/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "getBackupContent",
          },
          "server": [],
          "summary": "Get the backup content.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "BackupsDeleteBackupRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Backups_DeleteBackup",
          "path": "/api/apps/{app}/backups/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "deleteBackup",
          },
          "server": [],
          "summary": "Delete a backup.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "BackupContentGetBackupContentV2Request",
          "headers": [],
          "method": "GET",
          "operationId": "BackupContent_GetBackupContentV2",
          "path": "/api/apps/backups/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "appId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "getBackupContentV2",
          },
          "server": [],
          "summary": "Get the backup content.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "BackupsGetBackupsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Backups_GetBackups",
          "path": "/api/apps/{app}/backups",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Backups returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "BackupsGetBackupsResponse",
              "nameOverride": undefined,
              "schema": "BackupJobsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "getBackups",
          },
          "server": [],
          "summary": "Get all backup jobs.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "BackupsPostBackupRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Backups_PostBackup",
          "path": "/api/apps/{app}/backups",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "postBackup",
          },
          "server": [],
          "summary": "Start a new backup.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RestoreGetRestoreJobRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Restore_GetRestoreJob",
          "path": "/api/apps/restore",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Status returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RestoreGetRestoreJobResponse",
              "nameOverride": undefined,
              "schema": "RestoreJobDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "getRestoreJob",
          },
          "server": [],
          "summary": "Get current restore status.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "RestorePostRestoreJobRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Restore_PostRestoreJob",
          "path": "/api/apps/restore",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RestorePostRestoreJobRequest",
              "nameOverride": undefined,
              "schema": "RestoreRequestDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "backups",
            "methodName": "postRestoreJob",
          },
          "server": [],
          "summary": "Restore a backup.",
          "tags": [
            "Backups",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetContentGetAssetContentBySlugRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AssetContent_GetAssetContentBySlug",
          "path": "/api/assets/{app}/{idOrSlug}/{more}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "idOrSlug",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "more",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "cache",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "download",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "width",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "height",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "quality",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetContentGetAssetContentBySlugRequestMode",
                  "nameOverride": undefined,
                  "schema": "ResizeMode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "bg",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "focusX",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "focusY",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "nofocus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "auto",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "force",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "format",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetContentGetAssetContentBySlugRequestFormat",
                  "nameOverride": undefined,
                  "schema": "ImageFormat",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssetContentBySlug",
          },
          "server": [],
          "summary": "Get the asset content.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetContentGetAssetContentRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AssetContent_GetAssetContent",
          "path": "/api/assets/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "version",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "cache",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "download",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "width",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "height",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "quality",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetContentGetAssetContentRequestMode",
                  "nameOverride": undefined,
                  "schema": "ResizeMode",
                  "type": "reference",
                },
              },
            },
            {
              "description": undefined,
              "name": "bg",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "focusX",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "focusY",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "float",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "nofocus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "auto",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "force",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "format",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetContentGetAssetContentRequestFormat",
                  "nameOverride": undefined,
                  "schema": "ImageFormat",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssetContent",
          },
          "server": [],
          "summary": "Get the asset content.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Get all asset folders for the app.",
          "errors": [],
          "generatedRequestName": "AssetFoldersGetAssetFoldersRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AssetFolders_GetAssetFolders",
          "path": "/api/apps/{app}/assets/folders",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "scope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetFoldersGetAssetFoldersRequestScope",
                  "nameOverride": undefined,
                  "schema": "AssetFolderScope",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset folders returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetFoldersGetAssetFoldersResponse",
              "nameOverride": undefined,
              "schema": "AssetFoldersDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssetFolders",
          },
          "server": [],
          "summary": "Get asset folders.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetFoldersPostAssetFolderRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AssetFolders_PostAssetFolder",
          "path": "/api/apps/{app}/assets/folders",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetFoldersPostAssetFolderRequest",
              "nameOverride": undefined,
              "schema": "CreateAssetFolderDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset folder created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetFoldersPostAssetFolderResponse",
              "nameOverride": undefined,
              "schema": "AssetFolderDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "postAssetFolder",
          },
          "server": [],
          "summary": "Create an asset folder.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetFoldersPutAssetFolderRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AssetFolders_PutAssetFolder",
          "path": "/api/apps/{app}/assets/folders/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetFoldersPutAssetFolderRequest",
              "nameOverride": undefined,
              "schema": "RenameAssetFolderDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset folder updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetFoldersPutAssetFolderResponse",
              "nameOverride": undefined,
              "schema": "AssetFolderDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAssetFolder",
          },
          "server": [],
          "summary": "Update an asset folder.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetFoldersDeleteAssetFolderRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "AssetFolders_DeleteAssetFolder",
          "path": "/api/apps/{app}/assets/folders/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "deleteAssetFolder",
          },
          "server": [],
          "summary": "Delete an asset folder.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetFoldersPutAssetFolderParentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AssetFolders_PutAssetFolderParent",
          "path": "/api/apps/{app}/assets/folders/{id}/parent",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetFoldersPutAssetFolderParentRequest",
              "nameOverride": undefined,
              "schema": "MoveAssetFolderDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset folder moved.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetFoldersPutAssetFolderParentResponse",
              "nameOverride": undefined,
              "schema": "AssetFolderDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAssetFolderParent",
          },
          "server": [],
          "summary": "Move an asset folder.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Get all tags for assets.",
          "errors": [],
          "generatedRequestName": "AssetsGetTagsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Assets_GetTags",
          "path": "/api/apps/{app}/assets/tags",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Assets tags returned.",
            "schema": {
              "description": undefined,
              "key": {
                "type": "string",
              },
              "type": "map",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getTags",
          },
          "server": [],
          "summary": "Get assets tags.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetsPutTagRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Assets_PutTag",
          "path": "/api/apps/{app}/assets/tags/{name}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "name",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutTagRequest",
              "nameOverride": undefined,
              "schema": "RenameTagDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset tag renamed and new tags returned.",
            "schema": {
              "description": undefined,
              "key": {
                "type": "string",
              },
              "type": "map",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putTag",
          },
          "server": [],
          "summary": "Rename an asset tag.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Get all assets for the app.",
          "errors": [],
          "generatedRequestName": "AssetsGetAssetsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Assets_GetAssets",
          "path": "/api/apps/{app}/assets",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "parentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "ids",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "q",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "$top",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "$skip",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "$orderby",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "$filter",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Assets returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsGetAssetsResponse",
              "nameOverride": undefined,
              "schema": "AssetsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssets",
          },
          "server": [],
          "summary": "Get assets.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
          "errors": [],
          "generatedRequestName": "AssetsPostAssetRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Assets_PostAsset",
          "path": "/api/apps/{app}/assets",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "ParentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "Id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "Duplicate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "File",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPostAssetResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "postAsset",
          },
          "server": [],
          "summary": "Upload a new asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Get all assets for the app.",
          "errors": [],
          "generatedRequestName": "AssetsGetAssetsPostRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Assets_GetAssetsPost",
          "path": "/api/apps/{app}/assets/query",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsGetAssetsPostRequest",
              "nameOverride": undefined,
              "schema": "QueryDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Assets returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsGetAssetsPostResponse",
              "nameOverride": undefined,
              "schema": "AssetsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAssetsPost",
          },
          "server": [],
          "summary": "Get assets.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetsGetAssetRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Assets_GetAsset",
          "path": "/api/apps/{app}/assets/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset found.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsGetAssetResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "getAsset",
          },
          "server": [],
          "summary": "Get an asset by id.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
          "errors": [],
          "generatedRequestName": "AssetsPostUpsertAssetRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Assets_PostUpsertAsset",
          "path": "/api/apps/{app}/assets/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "ParentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "Duplicate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "File",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset created or updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPostUpsertAssetResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "postUpsertAsset",
          },
          "server": [],
          "summary": "Upsert an asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetsPutAssetRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Assets_PutAsset",
          "path": "/api/apps/{app}/assets/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetRequest",
              "nameOverride": undefined,
              "schema": "AnnotateAssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAsset",
          },
          "server": [],
          "summary": "Update an asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetsDeleteAssetRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Assets_DeleteAsset",
          "path": "/api/apps/{app}/assets/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "CheckReferrers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "Permanent",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "deleteAsset",
          },
          "server": [],
          "summary": "Delete an asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetsBulkUpdateAssetsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Assets_BulkUpdateAssets",
          "path": "/api/apps/{app}/assets/bulk",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsBulkUpdateAssetsRequest",
              "nameOverride": undefined,
              "schema": "BulkUpdateAssetsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Assets created, update or delete.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AssetsBulkUpdateAssetsResponseItem",
                "nameOverride": undefined,
                "schema": "BulkResultDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "bulkUpdateAssets",
          },
          "server": [],
          "summary": "Bulk update assets.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": "Use multipart request to upload an asset.",
          "errors": [],
          "generatedRequestName": "AssetsPutAssetContentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Assets_PutAssetContent",
          "path": "/api/apps/{app}/assets/{id}/content",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetContentResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAssetContent",
          },
          "server": [],
          "summary": "Replace asset content.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AssetsPutAssetParentRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Assets_PutAssetParent",
          "path": "/api/apps/{app}/assets/{id}/parent",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetParentRequest",
              "nameOverride": undefined,
              "schema": "MoveAssetDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset moved.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AssetsPutAssetParentResponse",
              "nameOverride": undefined,
              "schema": "AssetDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "assets",
            "methodName": "putAssetParent",
          },
          "server": [],
          "summary": "Moves the asset.",
          "tags": [
            "Assets",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppAssetsGetAssetScriptsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppAssets_GetAssetScripts",
          "path": "/api/apps/{app}/assets/scripts",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset scripts returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppAssetsGetAssetScriptsResponse",
              "nameOverride": undefined,
              "schema": "AssetScriptsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getAssetScripts",
          },
          "server": [],
          "summary": "Get the app asset scripts.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppAssetsPutAssetScriptsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppAssets_PutAssetScripts",
          "path": "/api/apps/{app}/assets/scripts",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppAssetsPutAssetScriptsRequest",
              "nameOverride": undefined,
              "schema": "UpdateAssetScriptsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Asset scripts updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppAssetsPutAssetScriptsResponse",
              "nameOverride": undefined,
              "schema": "AssetScriptsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putAssetScripts",
          },
          "server": [],
          "summary": "Update the app asset scripts.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "Gets all configured clients for the app with the specified name.",
          "errors": [],
          "generatedRequestName": "AppClientsGetClientsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppClients_GetClients",
          "path": "/api/apps/{app}/clients",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Clients returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppClientsGetClientsResponse",
              "nameOverride": undefined,
              "schema": "ClientsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getClients",
          },
          "server": [],
          "summary": "Get app clients.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "Create a new client for the app with the specified name.
The client secret is auto generated on the server and returned. The client does not expire, the access token is valid for 30 days.",
          "errors": [],
          "generatedRequestName": "AppClientsPostClientRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppClients_PostClient",
          "path": "/api/apps/{app}/clients",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppClientsPostClientRequest",
              "nameOverride": undefined,
              "schema": "CreateClientDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Client created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppClientsPostClientResponse",
              "nameOverride": undefined,
              "schema": "ClientsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postClient",
          },
          "server": [],
          "summary": "Create a new app client.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "Only the display name can be changed, create a new client if necessary.",
          "errors": [],
          "generatedRequestName": "AppClientsPutClientRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppClients_PutClient",
          "path": "/api/apps/{app}/clients/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppClientsPutClientRequest",
              "nameOverride": undefined,
              "schema": "UpdateClientDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Client updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppClientsPutClientResponse",
              "nameOverride": undefined,
              "schema": "ClientsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putClient",
          },
          "server": [],
          "summary": "Updates an app client.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "The application that uses this client credentials cannot access the API after it has been revoked.",
          "errors": [],
          "generatedRequestName": "AppClientsDeleteClientRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "AppClients_DeleteClient",
          "path": "/api/apps/{app}/clients/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Client deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppClientsDeleteClientResponse",
              "nameOverride": undefined,
              "schema": "ClientsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteClient",
          },
          "server": [],
          "summary": "Revoke an app client.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppContributorsGetContributorsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppContributors_GetContributors",
          "path": "/api/apps/{app}/contributors",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributors returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppContributorsGetContributorsResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getContributors",
          },
          "server": [],
          "summary": "Get app contributors.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppContributorsPostContributorRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppContributors_PostContributor",
          "path": "/api/apps/{app}/contributors",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppContributorsPostContributorRequest",
              "nameOverride": undefined,
              "schema": "AssignContributorDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor assigned to app.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppContributorsPostContributorResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postContributor",
          },
          "server": [],
          "summary": "Assign contributor to app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppContributorsDeleteMyselfRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "AppContributors_DeleteMyself",
          "path": "/api/apps/{app}/contributors/me",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppContributorsDeleteMyselfResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteMyself",
          },
          "server": [],
          "summary": "Remove yourself.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppContributorsDeleteContributorRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "AppContributors_DeleteContributor",
          "path": "/api/apps/{app}/contributors/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Contributor removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppContributorsDeleteContributorResponse",
              "nameOverride": undefined,
              "schema": "ContributorsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteContributor",
          },
          "server": [],
          "summary": "Remove contributor.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppImageGetImageRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppImage_GetImage",
          "path": "/api/apps/{app}/image",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getImage",
          },
          "server": [],
          "summary": "Get the app image.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppsUploadImageRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Apps_UploadImage",
          "path": "/api/apps/{app}/image",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": undefined,
            "properties": [
              {
                "description": undefined,
                "key": "file",
                "schema": {
                  "type": "file",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App image uploaded.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsUploadImageResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "uploadImage",
          },
          "server": [],
          "summary": "Upload the app image.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppsDeleteImageRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Apps_DeleteImage",
          "path": "/api/apps/{app}/image",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "App image removed.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsDeleteImageResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteImage",
          },
          "server": [],
          "summary": "Remove the app image.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppLanguagesGetLanguagesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppLanguages_GetLanguages",
          "path": "/api/apps/{app}/languages",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Languages returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppLanguagesGetLanguagesResponse",
              "nameOverride": undefined,
              "schema": "AppLanguagesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getLanguages",
          },
          "server": [],
          "summary": "Get app languages.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppLanguagesPostLanguageRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppLanguages_PostLanguage",
          "path": "/api/apps/{app}/languages",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppLanguagesPostLanguageRequest",
              "nameOverride": undefined,
              "schema": "AddLanguageDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Language created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppLanguagesPostLanguageResponse",
              "nameOverride": undefined,
              "schema": "AppLanguagesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postLanguage",
          },
          "server": [],
          "summary": "Attaches an app language.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppLanguagesPutLanguageRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppLanguages_PutLanguage",
          "path": "/api/apps/{app}/languages/{language}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "language",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppLanguagesPutLanguageRequest",
              "nameOverride": undefined,
              "schema": "UpdateLanguageDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Language updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppLanguagesPutLanguageResponse",
              "nameOverride": undefined,
              "schema": "AppLanguagesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putLanguage",
          },
          "server": [],
          "summary": "Updates an app language.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppLanguagesDeleteLanguageRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "AppLanguages_DeleteLanguage",
          "path": "/api/apps/{app}/languages/{language}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "language",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Language deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppLanguagesDeleteLanguageResponse",
              "nameOverride": undefined,
              "schema": "AppLanguagesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteLanguage",
          },
          "server": [],
          "summary": "Deletes an app language.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppRolesGetRolesRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppRoles_GetRoles",
          "path": "/api/apps/{app}/roles",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Roles returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppRolesGetRolesResponse",
              "nameOverride": undefined,
              "schema": "RolesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getRoles",
          },
          "server": [],
          "summary": "Get app roles.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppRolesPostRoleRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppRoles_PostRole",
          "path": "/api/apps/{app}/roles",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppRolesPostRoleRequest",
              "nameOverride": undefined,
              "schema": "AddRoleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Role created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppRolesPostRoleResponse",
              "nameOverride": undefined,
              "schema": "RolesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postRole",
          },
          "server": [],
          "summary": "Add role to app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppRolesGetPermissionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppRoles_GetPermissions",
          "path": "/api/apps/{app}/roles/permissions",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "App permissions returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getPermissions",
          },
          "server": [],
          "summary": "Get app permissions.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppRolesPutRoleRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppRoles_PutRole",
          "path": "/api/apps/{app}/roles/{roleName}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "roleName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppRolesPutRoleRequest",
              "nameOverride": undefined,
              "schema": "UpdateRoleDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Role updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppRolesPutRoleResponse",
              "nameOverride": undefined,
              "schema": "RolesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putRole",
          },
          "server": [],
          "summary": "Update an app role.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppRolesDeleteRoleRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "AppRoles_DeleteRole",
          "path": "/api/apps/{app}/roles/{roleName}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "roleName",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Role deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppRolesDeleteRoleResponse",
              "nameOverride": undefined,
              "schema": "RolesDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteRole",
          },
          "server": [],
          "summary": "Remove role from app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).
You will retrieve all apps, where you are assigned as a contributor.",
          "errors": [],
          "generatedRequestName": "AppsGetAppsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Apps_GetApps",
          "path": "/api/apps",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Apps returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AppsGetAppsResponseItem",
                "nameOverride": undefined,
                "schema": "AppDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getApps",
          },
          "server": [],
          "summary": "Get your apps.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "You can only create an app when you are authenticated as a user (OpenID implicit flow).
You will be assigned as owner of the new app automatically.",
          "errors": [],
          "generatedRequestName": "AppsPostAppRequest",
          "headers": [],
          "method": "POST",
          "operationId": "Apps_PostApp",
          "path": "/api/apps",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostAppRequest",
              "nameOverride": undefined,
              "schema": "CreateAppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPostAppResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postApp",
          },
          "server": [],
          "summary": "Create a new app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).
You will retrieve all apps, where you are assigned as a contributor.",
          "errors": [],
          "generatedRequestName": "AppsGetTeamAppsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Apps_GetTeamApps",
          "path": "/api/teams/{team}/apps",
          "pathParameters": [
            {
              "description": undefined,
              "name": "team",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Apps returned.",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AppsGetTeamAppsResponseItem",
                "nameOverride": undefined,
                "schema": "AppDto",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getTeamApps",
          },
          "server": [],
          "summary": "Get team apps.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppsGetAppRequest",
          "headers": [],
          "method": "GET",
          "operationId": "Apps_GetApp",
          "path": "/api/apps/{app}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Apps returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsGetAppResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getApp",
          },
          "server": [],
          "summary": "Get an app by name.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppsPutAppRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Apps_PutApp",
          "path": "/api/apps/{app}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAppRequest",
              "nameOverride": undefined,
              "schema": "UpdateAppDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAppResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putApp",
          },
          "server": [],
          "summary": "Update the app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppsDeleteAppRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "Apps_DeleteApp",
          "path": "/api/apps/{app}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteApp",
          },
          "server": [],
          "summary": "Delete the app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppsPutAppTeamRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "Apps_PutAppTeam",
          "path": "/api/apps/{app}/team",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAppTeamRequest",
              "nameOverride": undefined,
              "schema": "TransferToTeamDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App transferred.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppsPutAppTeamResponse",
              "nameOverride": undefined,
              "schema": "AppDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putAppTeam",
          },
          "server": [],
          "summary": "Transfer the app.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppSettingsGetSettingsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppSettings_GetSettings",
          "path": "/api/apps/{app}/settings",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "App settings returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppSettingsGetSettingsResponse",
              "nameOverride": undefined,
              "schema": "AppSettingsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getSettings",
          },
          "server": [],
          "summary": "Get the app settings.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppSettingsPutSettingsRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppSettings_PutSettings",
          "path": "/api/apps/{app}/settings",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppSettingsPutSettingsRequest",
              "nameOverride": undefined,
              "schema": "UpdateAppSettingsDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "App updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppSettingsPutSettingsResponse",
              "nameOverride": undefined,
              "schema": "AppSettingsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putSettings",
          },
          "server": [],
          "summary": "Update the app settings.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppWorkflowsGetWorkflowsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "AppWorkflows_GetWorkflows",
          "path": "/api/apps/{app}/workflows",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Workflows returned.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppWorkflowsGetWorkflowsResponse",
              "nameOverride": undefined,
              "schema": "WorkflowsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "getWorkflows",
          },
          "server": [],
          "summary": "Get app workflow.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppWorkflowsPostWorkflowRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AppWorkflows_PostWorkflow",
          "path": "/api/apps/{app}/workflows",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppWorkflowsPostWorkflowRequest",
              "nameOverride": undefined,
              "schema": "AddWorkflowDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Workflow created.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppWorkflowsPostWorkflowResponse",
              "nameOverride": undefined,
              "schema": "WorkflowsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "postWorkflow",
          },
          "server": [],
          "summary": "Create a workflow.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppWorkflowsPutWorkflowRequest",
          "headers": [],
          "method": "PUT",
          "operationId": "AppWorkflows_PutWorkflow",
          "path": "/api/apps/{app}/workflows/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppWorkflowsPutWorkflowRequest",
              "nameOverride": undefined,
              "schema": "UpdateWorkflowDto",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Workflow updated.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppWorkflowsPutWorkflowResponse",
              "nameOverride": undefined,
              "schema": "WorkflowsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "putWorkflow",
          },
          "server": [],
          "summary": "Update a workflow.",
          "tags": [
            "Apps",
          ],
        },
        {
          "authed": true,
          "description": undefined,
          "errors": [],
          "generatedRequestName": "AppWorkflowsDeleteWorkflowRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "AppWorkflows_DeleteWorkflow",
          "path": "/api/apps/{app}/workflows/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "app",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Workflow deleted.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AppWorkflowsDeleteWorkflowResponse",
              "nameOverride": undefined,
              "schema": "WorkflowsDto",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": {
            "groupName": "apps",
            "methodName": "deleteWorkflow",
          },
          "server": [],
          "summary": "Delete a workflow.",
          "tags": [
            "Apps",
          ],
        },
      ],
      "nonRequestReferencedSchemas": [
        "UsersDto",
        "UserDto",
        "ResourcesDto",
        "TranslationDto",
        "TemplatesDto",
        "TemplateDetailsDto",
        "ContributorsDto",
        "TeamDto",
        "LogDownloadDto",
        "CallsUsageDtoDto",
        "CurrentStorageDto",
        "StorageUsagePerDateDto",
        "SearchResultDto",
        "SchemaDto",
        "SchemasDto",
        "RuleElementDto",
        "RulesDto",
        "RuleDto",
        "SimulatedRuleEventsDto",
        "RuleEventsDto",
        "PlansDto",
        "PlanChangedDto",
        "ExposedValues",
        "FeaturesDto",
        "LanguageDto",
        "HistoryEventDto",
        "EventConsumersDto",
        "EventConsumerDto",
        "ContentsDto",
        "ContentDto",
        "BulkResultDto",
        "CommentsDto",
        "CommentDto",
        "BackupJobsDto",
        "RestoreJobDto",
        "ResizeMode",
        "ImageFormat",
        "AssetFolderScope",
        "AssetFoldersDto",
        "AssetFolderDto",
        "AssetsDto",
        "AssetDto",
        "AssetScriptsDto",
        "ClientsDto",
        "AppDto",
        "AppLanguagesDto",
        "RolesDto",
        "AppSettingsDto",
        "WorkflowsDto",
        "StatusInfoDto",
        "ContentData",
        "ScheduleJobDto",
        "FieldDto",
        "ContentFieldData",
        "FieldPropertiesDto",
        "NestedFieldDto",
        "AssetPreviewMode",
        "LocalizedValueOfReadonlyListOfString",
        "AssetType",
        "LocalizedValueOfNullableBoolean",
        "BooleanFieldEditor",
        "LocalizedValueOfNullableInstant",
        "DateTimeFieldEditor",
        "DateTimeCalculatedDefaultValue",
        "GeolocationFieldEditor",
        "LocalizedValueOfNullableDouble",
        "NumberFieldEditor",
        "ReferencesFieldEditor",
        "LocalizedValueOfString",
        "StringContentType",
        "StringFieldEditor",
        "TagsFieldEditor",
        "UIFieldEditor",
        "ResourceLink",
        "ErrorDto",
        "BulkUpdateContentsJobDto",
        "QueryJsonDto",
        "BulkUpdateContentType",
        "SortNode",
        "PropertyPath",
        "SortOrder",
        "TranslationResultCode",
        "TemplateDto",
        "ContributorDto",
        "ContributorsMetadata",
        "CallsUsagePerDateDto",
        "SearchResultType",
        "SchemaType",
        "SchemaPropertiesDto",
        "SchemaScriptsDto",
        "FieldRuleDto",
        "FieldRuleAction",
        "UpsertSchemaFieldDto",
        "UpsertSchemaNestedFieldDto",
        "RuleElementPropertyDto",
        "RuleFieldEditor",
        "RuleTriggerDto",
        "RuleActionDto",
        "SchemaCondition",
        "ActionTypeEnum",
        "WebhookMethod",
        "SimulatedRuleEventDto",
        "SkipReason",
        "RuleEventDto",
        "RuleResult",
        "RuleJobResult",
        "PlanDto",
        "ReferralInfo",
        "PlansLockedReason",
        "FeatureDto",
        "BackupJobDto",
        "JobStatus",
        "AssetMeta",
        "BulkUpdateAssetsJobDto",
        "BulkUpdateAssetType",
        "ClientDto",
        "AppLanguageDto",
        "RoleDto",
        "PatternDto",
        "EditorDto",
        "WorkflowDto",
        "WorkflowStepDto",
        "WorkflowTransitionDto",
        "AddFieldDto",
        "ReorderFieldsDto",
        "UpdateFieldDto",
        "CreateRuleDto",
        "ChangePlanDto",
        "UpsertCommentDto",
        "QueryDto",
        "AssignContributorDto",
      ],
      "schemas": {
        "ActionTypeEnum": {
          "description": "",
          "generatedName": "ActionTypeEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Broadcast",
              "nameOverride": undefined,
              "value": "Broadcast",
            },
            {
              "generatedName": "User",
              "nameOverride": undefined,
              "value": "User",
            },
            {
              "generatedName": "Group",
              "nameOverride": undefined,
              "value": "Group",
            },
          ],
        },
        "AddFieldDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AddFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "partitioning",
              "schema": {
                "description": "Determines the optional partitioning of the field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AddFieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "AddLanguageDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AddLanguageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "language",
              "schema": {
                "description": "The language to add.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AddRoleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AddRoleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The role name.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AddWorkflowDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AddWorkflowDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the workflow.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AlgoliaRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AlgoliaRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "appId",
              "schema": {
                "description": "The application ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "apiKey",
              "schema": {
                "description": "The API key to grant access to Squidex.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "indexName",
              "schema": {
                "description": "The name of the index.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "document",
              "schema": {
                "description": "The optional custom document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "delete",
              "schema": {
                "description": "The condition when to delete the entry.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AllContentsByPostDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AllContentsByPostDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "ids",
              "schema": {
                "description": "The list of ids to query.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "scheduledFrom",
              "schema": {
                "description": "The start of the schedule.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scheduledTo",
              "schema": {
                "description": "The end of the schedule.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "referencing",
              "schema": {
                "description": "The ID of the referencing content item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "references",
              "schema": {
                "description": "The ID of the reference content item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "oData",
              "schema": {
                "description": "The optional odata query.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "q",
              "schema": {
                "type": "unknown",
              },
            },
          ],
          "type": "object",
        },
        "AnnotateAssetDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AnnotateAssetDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fileName",
              "schema": {
                "description": "The new name of the asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "slug",
              "schema": {
                "description": "The new slug of the asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isProtected",
              "schema": {
                "description": "True, when the asset is not public.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "The new asset tags.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "metadata",
              "schema": {
                "description": "The asset metadata.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AppDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AppDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "The optional label of the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The optional description of the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version of the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "The timestamp when the app has been created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": "The timestamp when the app has been modified last.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "teamId",
              "schema": {
                "description": "The ID of the team.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "permissions",
              "schema": {
                "description": "The permission level of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "canAccessApi",
              "schema": {
                "description": "Indicates if the user can access the api.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "canAccessContent",
              "schema": {
                "description": "Indicates if the user can access at least one content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "roleName",
              "schema": {
                "description": "The role name of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "roleProperties",
              "schema": {
                "description": "The properties from the role.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AppLanguageDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AppLanguageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "iso2Code",
              "schema": {
                "description": "The iso code of the language.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "englishName",
              "schema": {
                "description": "The english name of the language.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fallback",
              "schema": {
                "description": "The fallback languages.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "isMaster",
              "schema": {
                "description": "Indicates if the language is the master language.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isOptional",
              "schema": {
                "description": "Indicates if the language is optional.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AppLanguagesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AppLanguagesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The languages.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AppLanguagesDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "AppLanguageDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AppSettingsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AppSettingsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "patterns",
              "schema": {
                "description": "The configured app patterns.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AppSettingsDtoPatternsItem",
                    "nameOverride": undefined,
                    "schema": "PatternDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "editors",
              "schema": {
                "description": "The configured UI editors.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AppSettingsDtoEditorsItem",
                    "nameOverride": undefined,
                    "schema": "EditorDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "hideScheduler",
              "schema": {
                "description": "Hide the scheduler for content items.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "hideDateTimeModeButton",
              "schema": {
                "description": "Hide the datetime mode button.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version of the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ArrayFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ArrayFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "minItems",
              "schema": {
                "description": "The minimum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxItems",
              "schema": {
                "description": "The maximum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "uniqueFields",
              "schema": {
                "description": "The fields that must be unique.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetChangedRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AssetChangedRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "condition",
              "schema": {
                "description": "Javascript condition when to trigger.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "parentId",
              "schema": {
                "description": "The ID of the parent folder. Empty for files without parent.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fileName",
              "schema": {
                "description": "The file name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fileHash",
              "schema": {
                "description": "The file hash.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isProtected",
              "schema": {
                "description": "True, when the asset is not public.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "slug",
              "schema": {
                "description": "The slug.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mimeType",
              "schema": {
                "description": "The mime type.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fileType",
              "schema": {
                "description": "The file type.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metadataText",
              "schema": {
                "description": "The formatted text representation of the metadata.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "editToken",
              "schema": {
                "description": "The UI token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metadata",
              "schema": {
                "description": "The asset metadata.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "The asset tags.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "fileSize",
              "schema": {
                "description": "The size of the file in bytes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fileVersion",
              "schema": {
                "description": "The version of the file.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetDtoType",
                  "nameOverride": undefined,
                  "schema": "AssetType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": "The user that has created the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModifiedBy",
              "schema": {
                "description": "The user that has updated the asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "The date and time when the asset has been created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": "The date and time when the asset has been modified last.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version of the asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "_meta",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetDtoMeta",
                  "nameOverride": undefined,
                  "schema": "AssetMeta",
                  "type": "reference",
                },
              },
            },
            {
              "key": "isImage",
              "schema": {
                "description": "Determines of the created file is an image.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pixelWidth",
              "schema": {
                "description": "The width of the image in pixels if the asset is an image.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pixelHeight",
              "schema": {
                "description": "The height of the image in pixels if the asset is an image.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetFolderDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetFolderDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "parentId",
              "schema": {
                "description": "The ID of the parent folder. Empty for files without parent.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "folderName",
              "schema": {
                "description": "The folder name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version of the asset folder.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetFolderScope": {
          "description": "",
          "generatedName": "AssetFolderScope",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "PathAndItems",
              "nameOverride": undefined,
              "value": "PathAndItems",
            },
            {
              "generatedName": "Path",
              "nameOverride": undefined,
              "value": "Path",
            },
            {
              "generatedName": "Items",
              "nameOverride": undefined,
              "value": "Items",
            },
          ],
        },
        "AssetFoldersDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetFoldersDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "total",
              "schema": {
                "description": "The total number of assets.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "items",
              "schema": {
                "description": "The assets folders.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AssetFoldersDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "AssetFolderDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "path",
              "schema": {
                "description": "The path to the current folder.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AssetFoldersDtoPathItem",
                    "nameOverride": undefined,
                    "schema": "AssetFolderDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetMeta": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AssetMeta",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "isDuplicate",
              "schema": {
                "description": "Indicates whether the asset is a duplicate.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "AssetPreviewMode": {
          "description": "",
          "generatedName": "AssetPreviewMode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ImageAndFileName",
              "nameOverride": undefined,
              "value": "ImageAndFileName",
            },
            {
              "generatedName": "Image",
              "nameOverride": undefined,
              "value": "Image",
            },
            {
              "generatedName": "FileName",
              "nameOverride": undefined,
              "value": "FileName",
            },
          ],
        },
        "AssetScriptsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetScriptsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "query",
              "schema": {
                "description": "The script that is executed for each asset when querying assets.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "queryPre",
              "schema": {
                "description": "The script that is executed for all assets when querying assets.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "create",
              "schema": {
                "description": "The script that is executed when creating an asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "update",
              "schema": {
                "description": "The script that is executed when updating a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "annotate",
              "schema": {
                "description": "The script that is executed when annotating a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "move",
              "schema": {
                "description": "The script that is executed when moving a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "delete",
              "schema": {
                "description": "The script that is executed when deleting a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version of the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetType": {
          "description": "",
          "generatedName": "AssetType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Unknown",
              "nameOverride": undefined,
              "value": "Unknown",
            },
            {
              "generatedName": "Image",
              "nameOverride": undefined,
              "value": "Image",
            },
            {
              "generatedName": "Audio",
              "nameOverride": undefined,
              "value": "Audio",
            },
            {
              "generatedName": "Video",
              "nameOverride": undefined,
              "value": "Video",
            },
          ],
        },
        "AssetsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AssetsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "total",
              "schema": {
                "description": "The total number of assets.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "items",
              "schema": {
                "description": "The assets.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AssetsDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "AssetDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AssetsFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AssetsFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "previewMode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsFieldPropertiesDtoPreviewMode",
                  "nameOverride": undefined,
                  "schema": "AssetPreviewMode",
                  "type": "reference",
                },
              },
            },
            {
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfReadonlyListOfString",
                  "type": "reference",
                },
              },
            },
            {
              "key": "defaultValue",
              "schema": {
                "description": "The default value as a list of asset ids.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "folderId",
              "schema": {
                "description": "The initial id to the folder.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minItems",
              "schema": {
                "description": "The minimum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxItems",
              "schema": {
                "description": "The maximum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minSize",
              "schema": {
                "description": "The minimum file size in bytes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxSize",
              "schema": {
                "description": "The maximum file size in bytes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minWidth",
              "schema": {
                "description": "The minimum image width in pixels.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxWidth",
              "schema": {
                "description": "The maximum image width in pixels.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minHeight",
              "schema": {
                "description": "The minimum image height in pixels.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxHeight",
              "schema": {
                "description": "The maximum image height in pixels.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "aspectWidth",
              "schema": {
                "description": "The image aspect width in pixels.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "aspectHeight",
              "schema": {
                "description": "The image aspect height in pixels.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expectedType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AssetsFieldPropertiesDtoExpectedType",
                  "nameOverride": undefined,
                  "schema": "AssetType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "resolveFirst",
              "schema": {
                "description": "True to resolve first asset in the content list.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mustBeImage",
              "schema": {
                "description": "True to resolve first image in the content list.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resolveImage",
              "schema": {
                "description": "True to resolve first image in the content list.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "allowedExtensions",
              "schema": {
                "description": "The allowed file extensions.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "allowDuplicates",
              "schema": {
                "description": "True, if duplicate values are allowed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AssignContributorDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AssignContributorDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "contributorId",
              "schema": {
                "description": "The id or email of the user to add to the app.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "role",
              "schema": {
                "description": "The role of the contributor.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "invite",
              "schema": {
                "description": "Set to true to invite the user if he does not exist.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureQueueRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureQueueRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "connectionString",
              "schema": {
                "description": "The connection string to the storage account.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "queue",
              "schema": {
                "description": "The name of the queue.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "payload",
              "schema": {
                "description": "Leave it empty to use the full event as body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BackupJobDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "BackupJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the backup job.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "started",
              "schema": {
                "description": "The time when the job has been started.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "stopped",
              "schema": {
                "description": "The time when the job has been stopped.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "handledEvents",
              "schema": {
                "description": "The number of handled events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "handledAssets",
              "schema": {
                "description": "The number of handled assets.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BackupJobDtoStatus",
                  "nameOverride": undefined,
                  "schema": "JobStatus",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "BackupJobsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "BackupJobsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The backups.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BackupJobsDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "BackupJobDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "BooleanFieldEditor": {
          "description": "",
          "generatedName": "BooleanFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Checkbox",
              "nameOverride": undefined,
              "value": "Checkbox",
            },
            {
              "generatedName": "Toggle",
              "nameOverride": undefined,
              "value": "Toggle",
            },
          ],
        },
        "BooleanFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BooleanFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BooleanFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfNullableBoolean",
                  "type": "reference",
                },
              },
            },
            {
              "key": "defaultValue",
              "schema": {
                "description": "The default value for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "inlineEditable",
              "schema": {
                "description": "Indicates that the inline editor is enabled for this field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "editor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BooleanFieldPropertiesDtoEditor",
                  "nameOverride": undefined,
                  "schema": "BooleanFieldEditor",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "BulkResultDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkResultDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "error",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkResultDtoError",
                  "nameOverride": undefined,
                  "schema": "ErrorDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "jobIndex",
              "schema": {
                "description": "The index of the bulk job where the result belongs to. The order can change.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The ID of the entity that has been handled successfully or not.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contentId",
              "schema": {
                "description": "The ID of the entity that has been handled successfully or not.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BulkUpdateAssetType": {
          "description": "",
          "generatedName": "BulkUpdateAssetType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Annotate",
              "nameOverride": undefined,
              "value": "Annotate",
            },
            {
              "generatedName": "Move",
              "nameOverride": undefined,
              "value": "Move",
            },
            {
              "generatedName": "Delete",
              "nameOverride": undefined,
              "value": "Delete",
            },
          ],
        },
        "BulkUpdateAssetsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkUpdateAssetsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "jobs",
              "schema": {
                "description": "The contents to update or insert.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "BulkUpdateAssetsDtoJobsItem",
                    "nameOverride": undefined,
                    "schema": "BulkUpdateAssetsJobDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "checkReferrers",
              "schema": {
                "description": "True to check referrers of deleted assets.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "optimizeValidation",
              "schema": {
                "description": "True to turn off costly validation: Folder checks. Default: true.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "doNotScript",
              "schema": {
                "description": "True to turn off scripting for faster inserts. Default: true.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BulkUpdateAssetsJobDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkUpdateAssetsJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "An optional ID of the asset to update.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateAssetsJobDtoType",
                  "nameOverride": undefined,
                  "schema": "BulkUpdateAssetType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "parentId",
              "schema": {
                "description": "The parent folder id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fileName",
              "schema": {
                "description": "The new name of the asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "slug",
              "schema": {
                "description": "The new slug of the asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isProtected",
              "schema": {
                "description": "True, when the asset is not public.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "The new asset tags.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "metadata",
              "schema": {
                "description": "The asset metadata.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "key": "permanent",
              "schema": {
                "description": "True to delete the asset permanently.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expectedVersion",
              "schema": {
                "description": "The expected version.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BulkUpdateContentType": {
          "description": "",
          "generatedName": "BulkUpdateContentType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Upsert",
              "nameOverride": undefined,
              "value": "Upsert",
            },
            {
              "generatedName": "ChangeStatus",
              "nameOverride": undefined,
              "value": "ChangeStatus",
            },
            {
              "generatedName": "Create",
              "nameOverride": undefined,
              "value": "Create",
            },
            {
              "generatedName": "Delete",
              "nameOverride": undefined,
              "value": "Delete",
            },
            {
              "generatedName": "Patch",
              "nameOverride": undefined,
              "value": "Patch",
            },
            {
              "generatedName": "Update",
              "nameOverride": undefined,
              "value": "Update",
            },
            {
              "generatedName": "Validate",
              "nameOverride": undefined,
              "value": "Validate",
            },
          ],
        },
        "BulkUpdateContentsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkUpdateContentsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "jobs",
              "schema": {
                "description": "The contents to update or insert.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateContentsDtoJobsItem",
                  "nameOverride": undefined,
                  "schema": "BulkUpdateContentsJobDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "publish",
              "schema": {
                "description": "True to automatically publish the content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "doNotScript",
              "schema": {
                "description": "True to turn off scripting for faster inserts. Default: true.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "doNotValidate",
              "schema": {
                "description": "True to turn off validation for faster inserts. Default: false.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "doNotValidateWorkflow",
              "schema": {
                "description": "True to turn off validation of workflow rules. Default: false.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "checkReferrers",
              "schema": {
                "description": "True to check referrers of deleted contents.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "optimizeValidation",
              "schema": {
                "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "BulkUpdateContentsJobDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "BulkUpdateContentsJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "query",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateContentsJobDtoQuery",
                  "nameOverride": undefined,
                  "schema": "QueryJsonDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "An optional ID of the content to update.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "data",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateContentsJobDtoData",
                  "nameOverride": undefined,
                  "schema": "ContentData",
                  "type": "reference",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "The new status when the type is set to 'ChangeStatus' or 'Upsert'.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dueTime",
              "schema": {
                "description": "The due time.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "BulkUpdateContentsJobDtoType",
                  "nameOverride": undefined,
                  "schema": "BulkUpdateContentType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "schema",
              "schema": {
                "description": "The optional schema id or name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "patch",
              "schema": {
                "description": "Makes the update as patch.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "permanent",
              "schema": {
                "description": "True to delete the content permanently.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expectedCount",
              "schema": {
                "description": "The number of expected items. Set it to a higher number to update multiple items when a query is defined.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expectedVersion",
              "schema": {
                "description": "The expected version.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CallsUsageDtoDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CallsUsageDtoDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "totalCalls",
              "schema": {
                "description": "The total number of API calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "totalBytes",
              "schema": {
                "description": "The total number of bytes transferred.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "monthCalls",
              "schema": {
                "description": "The total number of API calls this month.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "monthBytes",
              "schema": {
                "description": "The total number of bytes transferred this month.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "blockingApiCalls",
              "schema": {
                "description": "The amount of calls that will block the app.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "allowedBytes",
              "schema": {
                "description": "The included API traffic.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "allowedCalls",
              "schema": {
                "description": "The included API calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "averageElapsedMs",
              "schema": {
                "description": "The average duration in milliseconds.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "details",
              "schema": {
                "description": "The statistics by date and group.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CallsUsageDtoDtoDetailsValueItem",
                    "nameOverride": undefined,
                    "schema": "CallsUsagePerDateDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CallsUsagePerDateDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CallsUsagePerDateDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "date",
              "schema": {
                "description": "The date when the usage was tracked.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "totalCalls",
              "schema": {
                "description": "The total number of API calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "totalBytes",
              "schema": {
                "description": "The total number of bytes transferred.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "averageElapsedMs",
              "schema": {
                "description": "The average duration in milliseconds.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ChangeCategoryDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ChangeCategoryDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the category.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ChangePlanDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ChangePlanDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "planId",
              "schema": {
                "description": "The new plan id.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ChangeStatusDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ChangeStatusDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": "The new status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "dueTime",
              "schema": {
                "description": "The due time.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "checkReferrers",
              "schema": {
                "description": "True to check referrers of this content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ClientDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ClientDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The client id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "The client secret.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The client name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "role",
              "schema": {
                "description": "The role of the client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "apiCallsLimit",
              "schema": {
                "description": "The number of allowed api calls per month for this client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "apiTrafficLimit",
              "schema": {
                "description": "The number of allowed api traffic bytes per month for this client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "allowAnonymous",
              "schema": {
                "description": "True to allow anonymous access without an access token for this client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ClientsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ClientsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The clients.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ClientsDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "ClientDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "CommentDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CommentDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the comment.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "time",
              "schema": {
                "description": "The time when the comment was created or updated last.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "user",
              "schema": {
                "description": "The user who created or updated the comment.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text of the comment.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The url where the comment is created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CommentRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CommentRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "text",
              "schema": {
                "description": "The comment text.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client",
              "schema": {
                "description": "An optional client name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CommentRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CommentRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "condition",
              "schema": {
                "description": "Javascript condition when to trigger.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CommentsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CommentsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdComments",
              "schema": {
                "description": "The created comments including the updates.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CommentsDtoCreatedCommentsItem",
                    "nameOverride": undefined,
                    "schema": "CommentDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "updatedComments",
              "schema": {
                "description": "The updates comments since the last version.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "CommentsDtoUpdatedCommentsItem",
                    "nameOverride": undefined,
                    "schema": "CommentDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "deletedComments",
              "schema": {
                "description": "The deleted comments since the last version.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The current version.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ComponentFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ComponentFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "schemaIds",
              "schema": {
                "description": "The ID of the embedded schemas.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ComponentsFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ComponentsFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "minItems",
              "schema": {
                "description": "The minimum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxItems",
              "schema": {
                "description": "The maximum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "schemaIds",
              "schema": {
                "description": "The ID of the embedded schemas.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "uniqueFields",
              "schema": {
                "description": "The fields that must be unique.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ConfigureFieldRulesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ConfigureFieldRulesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fieldRules",
              "schema": {
                "description": "The field rules to configure.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ConfigureFieldRulesDtoFieldRulesItem",
                    "nameOverride": undefined,
                    "schema": "FieldRuleDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ConfigurePreviewUrlsDto": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "ConfigureUIFieldsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ConfigureUiFieldsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fieldsInLists",
              "schema": {
                "description": "The name of fields that are used in content lists.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "fieldsInReferences",
              "schema": {
                "description": "The name of fields that are used in content references.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ContentChangedRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ContentChangedRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "schemas",
              "schema": {
                "description": "The schema settings.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ContentChangedRuleTriggerDtoSchemasItem",
                    "nameOverride": undefined,
                    "schema": "SchemaCondition",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "referencedSchemas",
              "schema": {
                "description": "The schema references.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ContentChangedRuleTriggerDtoReferencedSchemasItem",
                    "nameOverride": undefined,
                    "schema": "SchemaCondition",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "handleAll",
              "schema": {
                "description": "Determines whether the trigger should handle all content changes events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ContentData": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "file": undefined,
            "generatedName": "ContentDataValue",
            "nameOverride": undefined,
            "schema": "ContentFieldData",
            "type": "reference",
          },
        },
        "ContentDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ContentDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The if of the content item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": "The user that has created the content item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModifiedBy",
              "schema": {
                "description": "The user that has updated the content item.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "data",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "key": "referenceData",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ContentDtoReferenceData",
                  "nameOverride": undefined,
                  "schema": "ContentData",
                  "type": "reference",
                },
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "The date and time when the content item has been created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": "The date and time when the content item has been modified last.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "The status of the content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newStatus",
              "schema": {
                "description": "The new status of the content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "statusColor",
              "schema": {
                "description": "The color of the status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newStatusColor",
              "schema": {
                "description": "The color of the new status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "editToken",
              "schema": {
                "description": "The UI token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scheduleJob",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ContentDtoScheduleJob",
                  "nameOverride": undefined,
                  "schema": "ScheduleJobDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "schemaId",
              "schema": {
                "description": "The ID of the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "schemaName",
              "schema": {
                "description": "The name of the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "schemaDisplayName",
              "schema": {
                "description": "The display name of the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "referenceFields",
              "schema": {
                "description": "The reference fields.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ContentDtoReferenceFieldsItem",
                    "nameOverride": undefined,
                    "schema": "FieldDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "isDeleted",
              "schema": {
                "description": "Indicates whether the content is deleted.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version of the content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ContentFieldData": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "ContentsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ContentsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "total",
              "schema": {
                "description": "The total number of content items.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "items",
              "schema": {
                "description": "The content items.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ContentsDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "ContentDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "statuses",
              "schema": {
                "description": "The possible statuses.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ContentsDtoStatusesItem",
                    "nameOverride": undefined,
                    "schema": "StatusInfoDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ContributorDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ContributorDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "contributorId",
              "schema": {
                "description": "The ID of the user that contributes to the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contributorName",
              "schema": {
                "description": "The display name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contributorEmail",
              "schema": {
                "description": "The email address.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "role",
              "schema": {
                "description": "The role of the contributor.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ContributorsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ContributorsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The contributors.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ContributorsDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "ContributorDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "maxContributors",
              "schema": {
                "description": "The maximum number of allowed contributors.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "_meta",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ContributorsDtoMeta",
                  "nameOverride": undefined,
                  "schema": "ContributorsMetadata",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ContributorsMetadata": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ContributorsMetadata",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "isInvited",
              "schema": {
                "description": "Indicates whether the user has been invited.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "CreateAppDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateAppDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the app.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "template",
              "schema": {
                "description": "Initialize the app with the inbuilt template.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CreateAssetFolderDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateAssetFolderDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "folderName",
              "schema": {
                "description": "The name of the folder.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "parentId",
              "schema": {
                "description": "The ID of the parent folder.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CreateClientDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateClientDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the client.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "CreateContentRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateContentRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "data",
              "schema": {
                "description": "The content data.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "schema",
              "schema": {
                "description": "The name of the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client",
              "schema": {
                "description": "An optional client name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "publish",
              "schema": {
                "description": "Publish the content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CreateRuleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateRuleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "trigger",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateRuleDtoTrigger",
                "nameOverride": undefined,
                "schema": "RuleTriggerDto",
                "type": "reference",
              },
            },
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "CreateRuleDtoAction",
                "nameOverride": undefined,
                "schema": "RuleActionDto",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "CreateSchemaDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpsertSchemaDto",
              "nameOverride": undefined,
              "schema": "UpsertSchemaDto",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "CreateSchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "CreateSchemaDtoType",
                  "nameOverride": undefined,
                  "schema": "SchemaType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "isSingleton",
              "schema": {
                "description": "Set to true to allow a single content item only.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CreateTeamDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateTeamDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the team.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "CreateUserDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CreateUserDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "email",
              "schema": {
                "description": "The email of the user. Unique value.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "displayName",
              "schema": {
                "description": "The display name (usually first name and last name) of the user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "password",
              "schema": {
                "description": "The password of the user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "permissions",
              "schema": {
                "description": "Additional permissions for the user.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "CurrentStorageDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "CurrentStorageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "size",
              "schema": {
                "description": "The size in bytes.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "maxAllowed",
              "schema": {
                "description": "The maximum allowed asset size.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "DateTimeCalculatedDefaultValue": {
          "description": "",
          "generatedName": "DateTimeCalculatedDefaultValue",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Now",
              "nameOverride": undefined,
              "value": "Now",
            },
            {
              "generatedName": "Today",
              "nameOverride": undefined,
              "value": "Today",
            },
          ],
        },
        "DateTimeFieldEditor": {
          "description": "",
          "generatedName": "DateTimeFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Date",
              "nameOverride": undefined,
              "value": "Date",
            },
            {
              "generatedName": "DateTime",
              "nameOverride": undefined,
              "value": "DateTime",
            },
          ],
        },
        "DateTimeFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DateTimeFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DateTimeFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfNullableInstant",
                  "type": "reference",
                },
              },
            },
            {
              "key": "defaultValue",
              "schema": {
                "description": "The default value for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxValue",
              "schema": {
                "description": "The maximum allowed value for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minValue",
              "schema": {
                "description": "The minimum allowed value for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "format",
              "schema": {
                "description": "The format pattern when displayed in the UI.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "editor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DateTimeFieldPropertiesDtoEditor",
                  "nameOverride": undefined,
                  "schema": "DateTimeFieldEditor",
                  "type": "reference",
                },
              },
            },
            {
              "key": "calculatedDefaultValue",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DateTimeFieldPropertiesDtoCalculatedDefaultValue",
                  "nameOverride": undefined,
                  "schema": "DateTimeCalculatedDefaultValue",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "DiscourseRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DiscourseRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "url",
              "schema": {
                "description": "The url to the discourse server.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "apiKey",
              "schema": {
                "description": "The api key to authenticate to your discourse server.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "apiUsername",
              "schema": {
                "description": "The api username to authenticate to your discourse server.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text as markdown.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "The optional title when creating new topics.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "topic",
              "schema": {
                "description": "The optional topic id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "category",
              "schema": {
                "description": "The optional category id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "EditorDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EditorDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the editor.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The url to the editor.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ElasticSearchRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ElasticSearchRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "host",
              "schema": {
                "description": "The url to the instance or cluster.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "indexName",
              "schema": {
                "description": "The name of the index.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "username",
              "schema": {
                "description": "The optional username.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "password",
              "schema": {
                "description": "The optional password.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "document",
              "schema": {
                "description": "The optional custom document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "delete",
              "schema": {
                "description": "The condition when to delete the document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "EmailRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EmailRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "serverHost",
              "schema": {
                "description": "The IP address or host to the SMTP server.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serverPort",
              "schema": {
                "description": "The port to the SMTP server.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serverUsername",
              "schema": {
                "description": "The username for the SMTP server.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serverPassword",
              "schema": {
                "description": "The password for the SMTP server.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "messageFrom",
              "schema": {
                "description": "The email sending address.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "messageTo",
              "schema": {
                "description": "The email message will be sent to.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "messageSubject",
              "schema": {
                "description": "The subject line for this email message.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "messageBody",
              "schema": {
                "description": "The message body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ErrorDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "message",
              "schema": {
                "description": "Error message.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "errorCode",
              "schema": {
                "description": "The error code.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "traceId",
              "schema": {
                "description": "The optional trace id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": "Link to the error details.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "details",
              "schema": {
                "description": "Detailed error messages.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "statusCode",
              "schema": {
                "description": "Status code of the http response.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "EventConsumerDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "EventConsumerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "isStopped",
              "schema": {
                "description": "Indicates if the event consumer has been started.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isResetting",
              "schema": {
                "description": "Indicates if the event consumer is resetting at the moment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "count",
              "schema": {
                "description": "The number of handled events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the event consumer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "error",
              "schema": {
                "description": "The error details if the event consumer has been stopped after a failure.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "position",
              "schema": {
                "description": "The position within the vent stream.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "EventConsumersDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "EventConsumersDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The event consumers.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "EventConsumersDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "EventConsumerDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ExposedValues": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "FastlyRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FastlyRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "apiKey",
              "schema": {
                "description": "The API key to grant access to Squidex.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serviceId",
              "schema": {
                "description": "The ID of the fastly service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "FeatureDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FeatureDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the feature.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The description text.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "FeaturesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FeaturesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "features",
              "schema": {
                "description": "The latest features.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FeaturesDtoFeaturesItem",
                  "nameOverride": undefined,
                  "schema": "FeatureDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The recent version.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "FieldDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "FieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fieldId",
              "schema": {
                "description": "The ID of the field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isHidden",
              "schema": {
                "description": "Defines if the field is hidden.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isLocked",
              "schema": {
                "description": "Defines if the field is locked.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isDisabled",
              "schema": {
                "description": "Defines if the field is disabled.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partitioning",
              "schema": {
                "description": "Defines the partitioning of the field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "FieldDtoProperties",
                  "nameOverride": undefined,
                  "schema": "FieldPropertiesDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "nested",
              "schema": {
                "description": "The nested fields.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "FieldDtoNestedItem",
                    "nameOverride": undefined,
                    "schema": "NestedFieldDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "FieldPropertiesDto": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "label",
                "schema": {
                  "description": "Optional label for the editor.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "hints",
                "schema": {
                  "description": "Hints to describe the field.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "placeholder",
                "schema": {
                  "description": "Placeholder to show when no value has been entered.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "isRequired",
                "schema": {
                  "description": "Indicates if the field is required.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "isRequiredOnPublish",
                "schema": {
                  "description": "Indicates if the field is required when publishing.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "isHalfWidth",
                "schema": {
                  "description": "Indicates if the field should be rendered with half width only.",
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "editorUrl",
                "schema": {
                  "description": "Optional url to the editor.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": "Tags for automation processes.",
                  "type": "optional",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "fieldType",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "fieldType",
            "generatedName": "FieldPropertiesDto",
            "nameOverride": undefined,
            "schemas": {
              "Array": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasArrayFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "ArrayFieldPropertiesDto",
                "type": "reference",
              },
              "Assets": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAssetsFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "AssetsFieldPropertiesDto",
                "type": "reference",
              },
              "Boolean": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasBooleanFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "BooleanFieldPropertiesDto",
                "type": "reference",
              },
              "Component": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasComponentFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "ComponentFieldPropertiesDto",
                "type": "reference",
              },
              "Components": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasComponentsFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "ComponentsFieldPropertiesDto",
                "type": "reference",
              },
              "DateTime": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasDateTimeFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "DateTimeFieldPropertiesDto",
                "type": "reference",
              },
              "Geolocation": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasGeolocationFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "GeolocationFieldPropertiesDto",
                "type": "reference",
              },
              "Json": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasJsonFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "JsonFieldPropertiesDto",
                "type": "reference",
              },
              "Number": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasNumberFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "NumberFieldPropertiesDto",
                "type": "reference",
              },
              "References": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasReferencesFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "ReferencesFieldPropertiesDto",
                "type": "reference",
              },
              "String": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasStringFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "StringFieldPropertiesDto",
                "type": "reference",
              },
              "Tags": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTagsFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "TagsFieldPropertiesDto",
                "type": "reference",
              },
              "UI": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasUiFieldPropertiesDto",
                "nameOverride": undefined,
                "schema": "UIFieldPropertiesDto",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "FieldRuleAction": {
          "description": "",
          "generatedName": "FieldRuleAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Disable",
              "nameOverride": undefined,
              "value": "Disable",
            },
            {
              "generatedName": "Hide",
              "nameOverride": undefined,
              "value": "Hide",
            },
            {
              "generatedName": "Require",
              "nameOverride": undefined,
              "value": "Require",
            },
          ],
        },
        "FieldRuleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "FieldRuleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "FieldRuleDtoAction",
                "nameOverride": undefined,
                "schema": "FieldRuleAction",
                "type": "reference",
              },
            },
            {
              "key": "field",
              "schema": {
                "description": "The field to update.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "condition",
              "schema": {
                "description": "The condition.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "GeolocationFieldEditor": {
          "description": "",
          "generatedName": "GeolocationFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Map",
              "nameOverride": undefined,
              "value": "Map",
            },
          ],
        },
        "GeolocationFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GeolocationFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "editor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GeolocationFieldPropertiesDtoEditor",
                  "nameOverride": undefined,
                  "schema": "GeolocationFieldEditor",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "HistoryEventDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "HistoryEventDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "message",
              "schema": {
                "description": "The message for the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "eventType",
              "schema": {
                "description": "The type of the original event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "actor",
              "schema": {
                "description": "The user who called the action.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "eventId",
              "schema": {
                "description": "Gets a unique id for the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "The time when the event happened.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version identifier.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ImageFormat": {
          "description": "",
          "generatedName": "ImageFormat",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "AVIF",
              "nameOverride": undefined,
              "value": "AVIF",
            },
            {
              "generatedName": "BMP",
              "nameOverride": undefined,
              "value": "BMP",
            },
            {
              "generatedName": "GIF",
              "nameOverride": undefined,
              "value": "GIF",
            },
            {
              "generatedName": "JPEG",
              "nameOverride": undefined,
              "value": "JPEG",
            },
            {
              "generatedName": "PNG",
              "nameOverride": undefined,
              "value": "PNG",
            },
            {
              "generatedName": "TGA",
              "nameOverride": undefined,
              "value": "TGA",
            },
            {
              "generatedName": "TIFF",
              "nameOverride": undefined,
              "value": "TIFF",
            },
            {
              "generatedName": "WEBP",
              "nameOverride": undefined,
              "value": "WEBP",
            },
          ],
        },
        "ImportContentsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ImportContentsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "datas",
              "schema": {
                "description": "The data to import.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ImportContentsDtoDatasItem",
                  "nameOverride": undefined,
                  "schema": "ContentData",
                  "type": "reference",
                },
              },
            },
            {
              "key": "publish",
              "schema": {
                "description": "True to automatically publish the content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "doNotScript",
              "schema": {
                "description": "True to turn off scripting for faster inserts. Default: true.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "optimizeValidation",
              "schema": {
                "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "JobStatus": {
          "description": "",
          "generatedName": "JobStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Created",
              "nameOverride": undefined,
              "value": "Created",
            },
            {
              "generatedName": "Started",
              "nameOverride": undefined,
              "value": "Started",
            },
            {
              "generatedName": "Completed",
              "nameOverride": undefined,
              "value": "Completed",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
          ],
        },
        "JsonFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "JsonFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "graphQLSchema",
              "schema": {
                "description": "The GraphQL schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "LanguageDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "LanguageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "iso2Code",
              "schema": {
                "description": "The iso code of the language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "englishName",
              "schema": {
                "description": "The english name of the language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "nativeName",
              "schema": {
                "description": "The native name of the language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "LocalizedValueOfNullableBoolean": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        "LocalizedValueOfNullableDouble": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        "LocalizedValueOfNullableInstant": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        "LocalizedValueOfReadonlyListOfString": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "type": "array",
            "value": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        "LocalizedValueOfString": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "LogDownloadDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "LogDownloadDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "downloadUrl",
              "schema": {
                "description": "The url to download the log.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ManualRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ManualRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [],
          "type": "object",
        },
        "MediumRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MediumRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessToken",
              "schema": {
                "description": "The self issued access token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "The title, used for the url.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "content",
              "schema": {
                "description": "The content, either html or markdown.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "canonicalUrl",
              "schema": {
                "description": "The original home of this content, if it was originally published elsewhere.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "The optional comma separated list of tags.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "publicationId",
              "schema": {
                "description": "Optional publication id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isHtml",
              "schema": {
                "description": "Indicates whether the content is markdown or html.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "MoveAssetDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MoveAssetDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parentId",
              "schema": {
                "description": "The parent folder id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "MoveAssetFolderDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MoveAssetFolderDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "parentId",
              "schema": {
                "description": "The parent folder id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NestedFieldDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "NestedFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fieldId",
              "schema": {
                "description": "The ID of the field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isHidden",
              "schema": {
                "description": "Defines if the field is hidden.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isLocked",
              "schema": {
                "description": "Defines if the field is locked.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isDisabled",
              "schema": {
                "description": "Defines if the field is disabled.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NestedFieldDtoProperties",
                  "nameOverride": undefined,
                  "schema": "FieldPropertiesDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "NotificationRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NotificationRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "user",
              "schema": {
                "description": "The user id or email.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text to send.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The optional url to attach to the notification.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "client",
              "schema": {
                "description": "An optional client name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "NumberFieldEditor": {
          "description": "",
          "generatedName": "NumberFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Input",
              "nameOverride": undefined,
              "value": "Input",
            },
            {
              "generatedName": "Radio",
              "nameOverride": undefined,
              "value": "Radio",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
            {
              "generatedName": "Stars",
              "nameOverride": undefined,
              "value": "Stars",
            },
          ],
        },
        "NumberFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NumberFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NumberFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfNullableDouble",
                  "type": "reference",
                },
              },
            },
            {
              "key": "defaultValue",
              "schema": {
                "description": "The default value for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxValue",
              "schema": {
                "description": "The maximum allowed value for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minValue",
              "schema": {
                "description": "The minimum allowed value for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "allowedValues",
              "schema": {
                "description": "The allowed values for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "isUnique",
              "schema": {
                "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "inlineEditable",
              "schema": {
                "description": "Indicates that the inline editor is enabled for this field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "editor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NumberFieldPropertiesDtoEditor",
                  "nameOverride": undefined,
                  "schema": "NumberFieldEditor",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "OpenSearchRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "OpenSearchRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "host",
              "schema": {
                "description": "The url to the instance or cluster.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "indexName",
              "schema": {
                "description": "The name of the index.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "username",
              "schema": {
                "description": "The optional username.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "password",
              "schema": {
                "description": "The optional password.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "document",
              "schema": {
                "description": "The optional custom document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "delete",
              "schema": {
                "description": "The condition when to delete the document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PatternDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PatternDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the suggestion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "regex",
              "schema": {
                "description": "The regex pattern.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "message",
              "schema": {
                "description": "The regex message.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PlanChangedDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PlanChangedDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "redirectUri",
              "schema": {
                "description": "Optional redirect uri.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PlanDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PlanDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the plan.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the plan.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "costs",
              "schema": {
                "description": "The monthly costs of the plan.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "confirmText",
              "schema": {
                "description": "An optional confirm text for the monthly subscription.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "yearlyConfirmText",
              "schema": {
                "description": "An optional confirm text for the yearly subscription.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "yearlyCosts",
              "schema": {
                "description": "The yearly costs of the plan.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "yearlyId",
              "schema": {
                "description": "The yearly ID of the plan.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxApiBytes",
              "schema": {
                "description": "The maximum number of API traffic.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "maxApiCalls",
              "schema": {
                "description": "The maximum number of API calls.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "maxAssetSize",
              "schema": {
                "description": "The maximum allowed asset size.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "maxContributors",
              "schema": {
                "description": "The maximum number of contributors.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PlansDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PlansDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "plans",
              "schema": {
                "description": "The available plans.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PlansDtoPlansItem",
                  "nameOverride": undefined,
                  "schema": "PlanDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "currentPlanId",
              "schema": {
                "description": "The current plan id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planOwner",
              "schema": {
                "description": "The plan owner.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "portalLink",
              "schema": {
                "description": "The link to the management portal.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "referral",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PlansDtoReferral",
                  "nameOverride": undefined,
                  "schema": "ReferralInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "locked",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PlansDtoLocked",
                "nameOverride": undefined,
                "schema": "PlansLockedReason",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "PlansLockedReason": {
          "description": "",
          "generatedName": "PlansLockedReason",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "None",
              "nameOverride": undefined,
              "value": "None",
            },
            {
              "generatedName": "NotOwner",
              "nameOverride": undefined,
              "value": "NotOwner",
            },
            {
              "generatedName": "NoPermission",
              "nameOverride": undefined,
              "value": "NoPermission",
            },
            {
              "generatedName": "ManagedByTeam",
              "nameOverride": undefined,
              "value": "ManagedByTeam",
            },
          ],
        },
        "PrerenderRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PrerenderRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": "The prerender token from your account.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The url to recache.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "PropertyPath": {
          "description": undefined,
          "type": "array",
          "value": {
            "description": undefined,
            "schema": {
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "QueryDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "QueryDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "ids",
              "schema": {
                "description": "The optional list of ids to query.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "oData",
              "schema": {
                "description": "The optional odata query.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "q",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "key": "parentId",
              "schema": {
                "description": "The parent id (for assets).",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "QueryJsonDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "QueryJsonDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "filter",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "key": "fullText",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "skip",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "take",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "random",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "top",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "sort",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "QueryJsonDtoSortItem",
                    "nameOverride": undefined,
                    "schema": "SortNode",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ReferencesFieldEditor": {
          "description": "",
          "generatedName": "ReferencesFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "List",
              "nameOverride": undefined,
              "value": "List",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
            {
              "generatedName": "Tags",
              "nameOverride": undefined,
              "value": "Tags",
            },
            {
              "generatedName": "Checkboxes",
              "nameOverride": undefined,
              "value": "Checkboxes",
            },
            {
              "generatedName": "Input",
              "nameOverride": undefined,
              "value": "Input",
            },
          ],
        },
        "ReferencesFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ReferencesFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ReferencesFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfReadonlyListOfString",
                  "type": "reference",
                },
              },
            },
            {
              "key": "defaultValue",
              "schema": {
                "description": "The default value as a list of content ids.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "minItems",
              "schema": {
                "description": "The minimum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxItems",
              "schema": {
                "description": "The maximum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "allowDuplicates",
              "schema": {
                "description": "True, if duplicate values are allowed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resolveReference",
              "schema": {
                "description": "True to resolve references in the content list.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mustBePublished",
              "schema": {
                "description": "True when all references must be published.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "editor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ReferencesFieldPropertiesDtoEditor",
                  "nameOverride": undefined,
                  "schema": "ReferencesFieldEditor",
                  "type": "reference",
                },
              },
            },
            {
              "key": "schemaIds",
              "schema": {
                "description": "The ID of the referenced schemas.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ReferralInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ReferralInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "code",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "earned",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "condition",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RenameAssetFolderDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RenameAssetFolderDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "folderName",
              "schema": {
                "description": "The name of the folder.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RenameTagDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RenameTagDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tagName",
              "schema": {
                "description": "The new name for the tag.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "ReorderFieldsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ReorderFieldsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fieldIds",
              "schema": {
                "description": "The field ids in the target order.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ResizeMode": {
          "description": "",
          "generatedName": "ResizeMode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Crop",
              "nameOverride": undefined,
              "value": "Crop",
            },
            {
              "generatedName": "CropUpsize",
              "nameOverride": undefined,
              "value": "CropUpsize",
            },
            {
              "generatedName": "Pad",
              "nameOverride": undefined,
              "value": "Pad",
            },
            {
              "generatedName": "BoxPad",
              "nameOverride": undefined,
              "value": "BoxPad",
            },
            {
              "generatedName": "Max",
              "nameOverride": undefined,
              "value": "Max",
            },
            {
              "generatedName": "Min",
              "nameOverride": undefined,
              "value": "Min",
            },
            {
              "generatedName": "Stretch",
              "nameOverride": undefined,
              "value": "Stretch",
            },
          ],
        },
        "Resource": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Resource",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "_links",
              "schema": {
                "description": "The links.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ResourceLinksValue",
                  "nameOverride": undefined,
                  "schema": "ResourceLink",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ResourceLink": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ResourceLink",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "href",
              "schema": {
                "description": "The link url.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "method",
              "schema": {
                "description": "The link method.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "metadata",
              "schema": {
                "description": "Additional data about the link.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ResourcesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ResourcesDto",
          "nameOverride": undefined,
          "properties": [],
          "type": "object",
        },
        "RestoreJobDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RestoreJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "url",
              "schema": {
                "description": "The uri to load from.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "log",
              "schema": {
                "description": "The status log.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "started",
              "schema": {
                "description": "The time when the job has been started.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "stopped",
              "schema": {
                "description": "The time when the job has been stopped.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RestoreJobDtoStatus",
                "nameOverride": undefined,
                "schema": "JobStatus",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "RestoreRequestDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RestoreRequestDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The url to the restore file.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RoleDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RoleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The role name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "numClients",
              "schema": {
                "description": "The number of clients with this role.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "numContributors",
              "schema": {
                "description": "The number of contributors with this role.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isDefaultRole",
              "schema": {
                "description": "Indicates if the role is an builtin default role.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "permissions",
              "schema": {
                "description": "Associated list of permissions.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": "Associated list of UI properties.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "RolesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RolesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The roles.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RolesDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "RoleDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "RuleActionDto": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "actionType",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "actionType",
            "generatedName": "RuleActionDto",
            "nameOverride": undefined,
            "schemas": {
              "Algolia": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAlgoliaRuleActionDto",
                "nameOverride": undefined,
                "schema": "AlgoliaRuleActionDto",
                "type": "reference",
              },
              "AzureQueue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAzureQueueRuleActionDto",
                "nameOverride": undefined,
                "schema": "AzureQueueRuleActionDto",
                "type": "reference",
              },
              "Comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCommentRuleActionDto",
                "nameOverride": undefined,
                "schema": "CommentRuleActionDto",
                "type": "reference",
              },
              "CreateContent": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCreateContentRuleActionDto",
                "nameOverride": undefined,
                "schema": "CreateContentRuleActionDto",
                "type": "reference",
              },
              "Discourse": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasDiscourseRuleActionDto",
                "nameOverride": undefined,
                "schema": "DiscourseRuleActionDto",
                "type": "reference",
              },
              "ElasticSearch": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasElasticSearchRuleActionDto",
                "nameOverride": undefined,
                "schema": "ElasticSearchRuleActionDto",
                "type": "reference",
              },
              "Email": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmailRuleActionDto",
                "nameOverride": undefined,
                "schema": "EmailRuleActionDto",
                "type": "reference",
              },
              "Fastly": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasFastlyRuleActionDto",
                "nameOverride": undefined,
                "schema": "FastlyRuleActionDto",
                "type": "reference",
              },
              "Medium": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasMediumRuleActionDto",
                "nameOverride": undefined,
                "schema": "MediumRuleActionDto",
                "type": "reference",
              },
              "Notification": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasNotificationRuleActionDto",
                "nameOverride": undefined,
                "schema": "NotificationRuleActionDto",
                "type": "reference",
              },
              "OpenSearch": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasOpenSearchRuleActionDto",
                "nameOverride": undefined,
                "schema": "OpenSearchRuleActionDto",
                "type": "reference",
              },
              "Prerender": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPrerenderRuleActionDto",
                "nameOverride": undefined,
                "schema": "PrerenderRuleActionDto",
                "type": "reference",
              },
              "Script": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasScriptRuleActionDto",
                "nameOverride": undefined,
                "schema": "ScriptRuleActionDto",
                "type": "reference",
              },
              "SignalR": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSignalRRuleActionDto",
                "nameOverride": undefined,
                "schema": "SignalRRuleActionDto",
                "type": "reference",
              },
              "Slack": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSlackRuleActionDto",
                "nameOverride": undefined,
                "schema": "SlackRuleActionDto",
                "type": "reference",
              },
              "Tweet": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTweetRuleActionDto",
                "nameOverride": undefined,
                "schema": "TweetRuleActionDto",
                "type": "reference",
              },
              "Typesense": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTypesenseRuleActionDto",
                "nameOverride": undefined,
                "schema": "TypesenseRuleActionDto",
                "type": "reference",
              },
              "Webhook": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWebhookRuleActionDto",
                "nameOverride": undefined,
                "schema": "WebhookRuleActionDto",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "RuleDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RuleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the rule.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": "The user that has created the rule.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModifiedBy",
              "schema": {
                "description": "The user that has updated the rule.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "The date and time when the rule has been created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": "The date and time when the rule has been modified last.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version of the rule.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isEnabled",
              "schema": {
                "description": "Determines if the rule is enabled.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Optional rule name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "trigger",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RuleDtoTrigger",
                  "nameOverride": undefined,
                  "schema": "RuleTriggerDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RuleDtoAction",
                  "nameOverride": undefined,
                  "schema": "RuleActionDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "numSucceeded",
              "schema": {
                "description": "The number of completed executions.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "numFailed",
              "schema": {
                "description": "The number of failed executions.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastExecuted",
              "schema": {
                "description": "The date and time when the rule was executed the last time.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "RuleElementDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RuleElementDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Describes the action or trigger type.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "display",
              "schema": {
                "description": "The label for the action or trigger type.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "Optional title.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "iconColor",
              "schema": {
                "description": "The color for the icon.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "iconImage",
              "schema": {
                "description": "The image for the icon.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "readMore",
              "schema": {
                "description": "The optional link to the product that is integrated.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": "The properties.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RuleElementDtoPropertiesItem",
                  "nameOverride": undefined,
                  "schema": "RuleElementPropertyDto",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "RuleElementPropertyDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "RuleElementPropertyDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "editor",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RuleElementPropertyDtoEditor",
                "nameOverride": undefined,
                "schema": "RuleFieldEditor",
                "type": "reference",
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the editor.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "display",
              "schema": {
                "description": "The label to use.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "options",
              "schema": {
                "description": "The options, if the editor is a dropdown.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The optional description.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isFormattable",
              "schema": {
                "description": "Indicates if the property is formattable.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "isRequired",
              "schema": {
                "description": "Indicates if the property is required.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "RuleEventDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RuleEventDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "The time when the event has been created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The description.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "eventName",
              "schema": {
                "description": "The name of the event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastDump",
              "schema": {
                "description": "The last dump.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "numCalls",
              "schema": {
                "description": "The number of calls.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "nextAttempt",
              "schema": {
                "description": "The next attempt.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "result",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RuleEventDtoResult",
                  "nameOverride": undefined,
                  "schema": "RuleResult",
                  "type": "reference",
                },
              },
            },
            {
              "key": "jobResult",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RuleEventDtoJobResult",
                  "nameOverride": undefined,
                  "schema": "RuleJobResult",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "RuleEventsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RuleEventsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "total",
              "schema": {
                "description": "The total number of rule events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "items",
              "schema": {
                "description": "The rule events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RuleEventsDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "RuleEventDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "RuleFieldEditor": {
          "description": "",
          "generatedName": "RuleFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Checkbox",
              "nameOverride": undefined,
              "value": "Checkbox",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
            {
              "generatedName": "Email",
              "nameOverride": undefined,
              "value": "Email",
            },
            {
              "generatedName": "Javascript",
              "nameOverride": undefined,
              "value": "Javascript",
            },
            {
              "generatedName": "Number",
              "nameOverride": undefined,
              "value": "Number",
            },
            {
              "generatedName": "Password",
              "nameOverride": undefined,
              "value": "Password",
            },
            {
              "generatedName": "Text",
              "nameOverride": undefined,
              "value": "Text",
            },
            {
              "generatedName": "TextArea",
              "nameOverride": undefined,
              "value": "TextArea",
            },
            {
              "generatedName": "Url",
              "nameOverride": undefined,
              "value": "Url",
            },
          ],
        },
        "RuleJobResult": {
          "description": "",
          "generatedName": "RuleJobResult",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Pending",
              "nameOverride": undefined,
              "value": "Pending",
            },
            {
              "generatedName": "Success",
              "nameOverride": undefined,
              "value": "Success",
            },
            {
              "generatedName": "Retry",
              "nameOverride": undefined,
              "value": "Retry",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
            {
              "generatedName": "Cancelled",
              "nameOverride": undefined,
              "value": "Cancelled",
            },
          ],
        },
        "RuleResult": {
          "description": "",
          "generatedName": "RuleResult",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Pending",
              "nameOverride": undefined,
              "value": "Pending",
            },
            {
              "generatedName": "Success",
              "nameOverride": undefined,
              "value": "Success",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
            {
              "generatedName": "Timeout",
              "nameOverride": undefined,
              "value": "Timeout",
            },
          ],
        },
        "RuleTriggerDto": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "triggerType",
                "schema": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "triggerType",
            "generatedName": "RuleTriggerDto",
            "nameOverride": undefined,
            "schemas": {
              "AssetChanged": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAssetChangedRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "AssetChangedRuleTriggerDto",
                "type": "reference",
              },
              "Comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCommentRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "CommentRuleTriggerDto",
                "type": "reference",
              },
              "ContentChanged": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasContentChangedRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "ContentChangedRuleTriggerDto",
                "type": "reference",
              },
              "Manual": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasManualRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "ManualRuleTriggerDto",
                "type": "reference",
              },
              "SchemaChanged": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSchemaChangedRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "SchemaChangedRuleTriggerDto",
                "type": "reference",
              },
              "Usage": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasUsageRuleTriggerDto",
                "nameOverride": undefined,
                "schema": "UsageRuleTriggerDto",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "RulesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RulesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The rules.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "RulesDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "RuleDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "runningRuleId",
              "schema": {
                "description": "The ID of the rule that is currently rerunning.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ScheduleJobDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ScheduleJobDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the schedule job.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "The new status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "dueTime",
              "schema": {
                "description": "The target date and time when the content should be scheduled.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "color",
              "schema": {
                "description": "The color of the scheduled status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "scheduledBy",
              "schema": {
                "description": "The user who schedule the content.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SchemaChangedRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SchemaChangedRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "condition",
              "schema": {
                "description": "Javascript condition when to trigger.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaCondition": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SchemaCondition",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "schemaId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "condition",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "createdBy",
              "schema": {
                "description": "The user that has created the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModifiedBy",
              "schema": {
                "description": "The user that has updated the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the schema. Unique within the app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SchemaDtoType",
                  "nameOverride": undefined,
                  "schema": "SchemaType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "category",
              "schema": {
                "description": "The name of the category.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SchemaDtoProperties",
                  "nameOverride": undefined,
                  "schema": "SchemaPropertiesDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "isSingleton",
              "schema": {
                "description": "Indicates if the schema is a singleton.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isPublished",
              "schema": {
                "description": "Indicates if the schema is published.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "The date and time when the schema has been created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": "The date and time when the schema has been modified last.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version of the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scripts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SchemaDtoScripts",
                  "nameOverride": undefined,
                  "schema": "SchemaScriptsDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "previewUrls",
              "schema": {
                "description": "The preview Urls.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "fieldsInLists",
              "schema": {
                "description": "The name of fields that are used in content lists.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "fieldsInReferences",
              "schema": {
                "description": "The name of fields that are used in content references.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "fieldRules",
              "schema": {
                "description": "The field rules.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SchemaDtoFieldRulesItem",
                    "nameOverride": undefined,
                    "schema": "FieldRuleDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "fields",
              "schema": {
                "description": "The list of fields.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SchemaDtoFieldsItem",
                    "nameOverride": undefined,
                    "schema": "FieldDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SchemaPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "label",
              "schema": {
                "description": "Optional label for the editor.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "hints",
              "schema": {
                "description": "Hints to describe the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contentsSidebarUrl",
              "schema": {
                "description": "The url to a the sidebar plugin for content lists.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contentSidebarUrl",
              "schema": {
                "description": "The url to a the sidebar plugin for content items.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contentEditorUrl",
              "schema": {
                "description": "The url to the editor plugin.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "validateOnPublish",
              "schema": {
                "description": "True to validate the content items on publish.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "Tags for automation processes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaScriptsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SchemaScriptsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "query",
              "schema": {
                "description": "The script that is executed for each content when querying contents.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "queryPre",
              "schema": {
                "description": "The script that is executed for all contents when querying contents.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "create",
              "schema": {
                "description": "The script that is executed when creating a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "update",
              "schema": {
                "description": "The script that is executed when updating a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "delete",
              "schema": {
                "description": "The script that is executed when deleting a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "change",
              "schema": {
                "description": "The script that is executed when change a content status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SchemaType": {
          "description": "",
          "generatedName": "SchemaType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Default",
              "nameOverride": undefined,
              "value": "Default",
            },
            {
              "generatedName": "Singleton",
              "nameOverride": undefined,
              "value": "Singleton",
            },
            {
              "generatedName": "Component",
              "nameOverride": undefined,
              "value": "Component",
            },
          ],
        },
        "SchemasDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SchemasDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The schemas.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SchemasDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "SchemaDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ScriptRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ScriptRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "script",
              "schema": {
                "description": "The script to render.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResultDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SearchResultDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the search result.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SearchResultDtoType",
                  "nameOverride": undefined,
                  "schema": "SearchResultType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "An optional label.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResultType": {
          "description": "",
          "generatedName": "SearchResultType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Asset",
              "nameOverride": undefined,
              "value": "Asset",
            },
            {
              "generatedName": "Content",
              "nameOverride": undefined,
              "value": "Content",
            },
            {
              "generatedName": "Dashboard",
              "nameOverride": undefined,
              "value": "Dashboard",
            },
            {
              "generatedName": "Setting",
              "nameOverride": undefined,
              "value": "Setting",
            },
            {
              "generatedName": "Rule",
              "nameOverride": undefined,
              "value": "Rule",
            },
            {
              "generatedName": "Schema",
              "nameOverride": undefined,
              "value": "Schema",
            },
          ],
        },
        "SignalRRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SignalRRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "connectionString",
              "schema": {
                "description": "The connection string to the Azure SignalR.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "hubName",
              "schema": {
                "description": "The name of the hub.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SignalRRuleActionDtoAction",
                  "nameOverride": undefined,
                  "schema": "ActionTypeEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "methodName",
              "schema": {
                "description": "Set the Name of the hub method received by the customer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "target",
              "schema": {
                "description": "Define target users or groups by id or name. One item per line. Not needed for Broadcast action.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "payload",
              "schema": {
                "description": "Leave it empty to use the full event as body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SimulatedRuleEventDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SimulatedRuleEventDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "eventId",
              "schema": {
                "description": "The unique event id.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "uniqueId",
              "schema": {
                "description": "The the unique id of the simulated event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "eventName",
              "schema": {
                "description": "The name of the event.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "event",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "key": "enrichedEvent",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "key": "actionName",
              "schema": {
                "description": "The data for the action.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "actionData",
              "schema": {
                "description": "The name of the action.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "error",
              "schema": {
                "description": "The name of the event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "skipReasons",
              "schema": {
                "description": "The reason why the event has been skipped.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SimulatedRuleEventDtoSkipReasonsItem",
                  "nameOverride": undefined,
                  "schema": "SkipReason",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SimulatedRuleEventsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SimulatedRuleEventsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "total",
              "schema": {
                "description": "The total number of simulated rule events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "items",
              "schema": {
                "description": "The simulated rule events.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SimulatedRuleEventsDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "SimulatedRuleEventDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SkipReason": {
          "description": "",
          "generatedName": "SkipReason",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "None",
              "nameOverride": undefined,
              "value": "None",
            },
            {
              "generatedName": "ConditionDoesNotMatch",
              "nameOverride": undefined,
              "value": "ConditionDoesNotMatch",
            },
            {
              "generatedName": "ConditionPrecheckDoesNotMatch",
              "nameOverride": undefined,
              "value": "ConditionPrecheckDoesNotMatch",
            },
            {
              "generatedName": "Disabled",
              "nameOverride": undefined,
              "value": "Disabled",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
            {
              "generatedName": "FromRule",
              "nameOverride": undefined,
              "value": "FromRule",
            },
            {
              "generatedName": "NoAction",
              "nameOverride": undefined,
              "value": "NoAction",
            },
            {
              "generatedName": "NoTrigger",
              "nameOverride": undefined,
              "value": "NoTrigger",
            },
            {
              "generatedName": "TooOld",
              "nameOverride": undefined,
              "value": "TooOld",
            },
            {
              "generatedName": "WrongEvent",
              "nameOverride": undefined,
              "value": "WrongEvent",
            },
            {
              "generatedName": "WrongEventForTrigger",
              "nameOverride": undefined,
              "value": "WrongEventForTrigger",
            },
          ],
        },
        "SlackRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "webhookUrl",
              "schema": {
                "description": "The slack webhook url.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text that is sent as message to slack.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SortNode": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SortNode",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "path",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SortNodePath",
                "nameOverride": undefined,
                "schema": "PropertyPath",
                "type": "reference",
              },
            },
            {
              "key": "order",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SortNodeOrder",
                "nameOverride": undefined,
                "schema": "SortOrder",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "SortOrder": {
          "description": "",
          "generatedName": "SortOrder",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Ascending",
              "nameOverride": undefined,
              "value": "Ascending",
            },
            {
              "generatedName": "Descending",
              "nameOverride": undefined,
              "value": "Descending",
            },
          ],
        },
        "StatusInfoDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StatusInfoDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": "The name of the status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "color",
              "schema": {
                "description": "The color of the status.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "StorageUsagePerDateDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StorageUsagePerDateDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "date",
              "schema": {
                "description": "The date when the usage was tracked.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "totalCount",
              "schema": {
                "description": "The number of assets.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "totalSize",
              "schema": {
                "description": "The size in bytes.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "StringContentType": {
          "description": "",
          "generatedName": "StringContentType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Unspecified",
              "nameOverride": undefined,
              "value": "Unspecified",
            },
            {
              "generatedName": "Html",
              "nameOverride": undefined,
              "value": "Html",
            },
            {
              "generatedName": "Markdown",
              "nameOverride": undefined,
              "value": "Markdown",
            },
          ],
        },
        "StringFieldEditor": {
          "description": "",
          "generatedName": "StringFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Input",
              "nameOverride": undefined,
              "value": "Input",
            },
            {
              "generatedName": "Color",
              "nameOverride": undefined,
              "value": "Color",
            },
            {
              "generatedName": "Markdown",
              "nameOverride": undefined,
              "value": "Markdown",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
            {
              "generatedName": "Html",
              "nameOverride": undefined,
              "value": "Html",
            },
            {
              "generatedName": "Radio",
              "nameOverride": undefined,
              "value": "Radio",
            },
            {
              "generatedName": "RichText",
              "nameOverride": undefined,
              "value": "RichText",
            },
            {
              "generatedName": "Slug",
              "nameOverride": undefined,
              "value": "Slug",
            },
            {
              "generatedName": "StockPhoto",
              "nameOverride": undefined,
              "value": "StockPhoto",
            },
            {
              "generatedName": "TextArea",
              "nameOverride": undefined,
              "value": "TextArea",
            },
          ],
        },
        "StringFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "StringFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "StringFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfString",
                  "type": "reference",
                },
              },
            },
            {
              "key": "defaultValue",
              "schema": {
                "description": "The default value for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pattern",
              "schema": {
                "description": "The pattern to enforce a specific format for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "patternMessage",
              "schema": {
                "description": "The validation message for the pattern.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "folderId",
              "schema": {
                "description": "The initial id to the folder when the control supports file uploads.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minLength",
              "schema": {
                "description": "The minimum allowed length for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxLength",
              "schema": {
                "description": "The maximum allowed length for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minCharacters",
              "schema": {
                "description": "The minimum allowed of normal characters for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxCharacters",
              "schema": {
                "description": "The maximum allowed of normal characters for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minWords",
              "schema": {
                "description": "The minimum allowed number of words for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxWords",
              "schema": {
                "description": "The maximum allowed number of words for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "allowedValues",
              "schema": {
                "description": "The allowed values for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "schemaIds",
              "schema": {
                "description": "The allowed schema ids that can be embedded.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "isUnique",
              "schema": {
                "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isEmbeddable",
              "schema": {
                "description": "Indicates that other content items or references are embedded.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "inlineEditable",
              "schema": {
                "description": "Indicates that the inline editor is enabled for this field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "createEnum",
              "schema": {
                "description": "Indicates whether GraphQL Enum should be created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contentType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "StringFieldPropertiesDtoContentType",
                  "nameOverride": undefined,
                  "schema": "StringContentType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "editor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "StringFieldPropertiesDtoEditor",
                  "nameOverride": undefined,
                  "schema": "StringFieldEditor",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SynchronizeSchemaDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpsertSchemaDto",
              "nameOverride": undefined,
              "schema": "UpsertSchemaDto",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "SynchronizeSchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "noFieldDeletion",
              "schema": {
                "description": "True, when fields should not be deleted.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "noFieldRecreation",
              "schema": {
                "description": "True, when fields with different types should not be recreated.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TagsFieldEditor": {
          "description": "",
          "generatedName": "TagsFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Tags",
              "nameOverride": undefined,
              "value": "Tags",
            },
            {
              "generatedName": "Checkboxes",
              "nameOverride": undefined,
              "value": "Checkboxes",
            },
            {
              "generatedName": "Dropdown",
              "nameOverride": undefined,
              "value": "Dropdown",
            },
          ],
        },
        "TagsFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TagsFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "defaultValues",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsFieldPropertiesDtoDefaultValues",
                  "nameOverride": undefined,
                  "schema": "LocalizedValueOfReadonlyListOfString",
                  "type": "reference",
                },
              },
            },
            {
              "key": "defaultValue",
              "schema": {
                "description": "The default value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "minItems",
              "schema": {
                "description": "The minimum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maxItems",
              "schema": {
                "description": "The maximum allowed items for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "allowedValues",
              "schema": {
                "description": "The allowed values for the field value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "createEnum",
              "schema": {
                "description": "Indicates whether GraphQL Enum should be created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "editor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsFieldPropertiesDtoEditor",
                  "nameOverride": undefined,
                  "schema": "TagsFieldEditor",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "TeamDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TeamDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the team.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the team.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "version",
              "schema": {
                "description": "The version of the team.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "The timestamp when the team has been created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": "The timestamp when the team has been modified last.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "roleName",
              "schema": {
                "description": "The role name of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TemplateDetailsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TemplateDetailsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "details",
              "schema": {
                "description": "The details of the template.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TemplateDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TemplateDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the template.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "The title of the template.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The description of the template.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isStarter",
              "schema": {
                "description": "True, if the template is a starter.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TemplatesDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TemplatesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The event consumers.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TemplatesDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "TemplateDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "TransferToTeamDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TransferToTeamDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "teamId",
              "schema": {
                "description": "The ID of the team.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TranslateDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TranslateDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "text",
              "schema": {
                "description": "The text to translate.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "targetLanguage",
              "schema": {
                "description": "The target language.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "sourceLanguage",
              "schema": {
                "description": "The optional source language.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TranslationDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TranslationDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "result",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TranslationDtoResult",
                "nameOverride": undefined,
                "schema": "TranslationResultCode",
                "type": "reference",
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The translated text.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TranslationResultCode": {
          "description": "",
          "generatedName": "TranslationResultCode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Translated",
              "nameOverride": undefined,
              "value": "Translated",
            },
            {
              "generatedName": "LanguageNotSupported",
              "nameOverride": undefined,
              "value": "LanguageNotSupported",
            },
            {
              "generatedName": "NotTranslated",
              "nameOverride": undefined,
              "value": "NotTranslated",
            },
            {
              "generatedName": "NotConfigured",
              "nameOverride": undefined,
              "value": "NotConfigured",
            },
            {
              "generatedName": "Unauthorized",
              "nameOverride": undefined,
              "value": "Unauthorized",
            },
            {
              "generatedName": "Failed",
              "nameOverride": undefined,
              "value": "Failed",
            },
          ],
        },
        "TweetRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TweetRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessToken",
              "schema": {
                "description": " The generated access token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "accessSecret",
              "schema": {
                "description": " The generated access secret.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text that is sent as tweet to twitter.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "TypesenseRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesenseRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "host",
              "schema": {
                "description": "The url to the instance or cluster.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "indexName",
              "schema": {
                "description": "The name of the index.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "apiKey",
              "schema": {
                "description": "The api key.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "document",
              "schema": {
                "description": "The optional custom document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "delete",
              "schema": {
                "description": "The condition when to delete the document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UIFieldEditor": {
          "description": "",
          "generatedName": "UiFieldEditor",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Separator",
              "nameOverride": undefined,
              "value": "Separator",
            },
          ],
        },
        "UIFieldPropertiesDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UiFieldPropertiesDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "editor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UiFieldPropertiesDtoEditor",
                  "nameOverride": undefined,
                  "schema": "UIFieldEditor",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "UISettingsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UiSettingsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "canCreateApps",
              "schema": {
                "description": "True when the user can create apps.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "canCreateTeams",
              "schema": {
                "description": "True when the user can create teams.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UpdateAppDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateAppDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "label",
              "schema": {
                "description": "The optional label of your app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": "The optional description of your app.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateAppSettingsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateAppSettingsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "patterns",
              "schema": {
                "description": "The configured app patterns.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateAppSettingsDtoPatternsItem",
                  "nameOverride": undefined,
                  "schema": "PatternDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "editors",
              "schema": {
                "description": "The configured UI editors.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateAppSettingsDtoEditorsItem",
                  "nameOverride": undefined,
                  "schema": "EditorDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "hideScheduler",
              "schema": {
                "description": "Hide the scheduler for content items.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "hideDateTimeModeButton",
              "schema": {
                "description": "Hide the datetime mode button.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateAssetScriptsDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateAssetScriptsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "query",
              "schema": {
                "description": "The script that is executed for each asset when querying assets.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "queryPre",
              "schema": {
                "description": "The script that is executed for all assets when querying assets.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "create",
              "schema": {
                "description": "The script that is executed when creating an asset.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "update",
              "schema": {
                "description": "The script that is executed when updating a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "annotate",
              "schema": {
                "description": "The script that is executed when annotating a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "move",
              "schema": {
                "description": "The script that is executed when moving a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "delete",
              "schema": {
                "description": "The script that is executed when deleting a content.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateClientDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateClientDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The new display name of the client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "role",
              "schema": {
                "description": "The role of the client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "allowAnonymous",
              "schema": {
                "description": "True to allow anonymous access without an access token for this client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "apiCallsLimit",
              "schema": {
                "description": "The number of allowed api calls per month for this client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "apiTrafficLimit",
              "schema": {
                "description": "The number of allowed api traffic bytes per month for this client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateFieldDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UpdateFieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "UpdateLanguageDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateLanguageDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "isMaster",
              "schema": {
                "description": "Set the value to true to make the language the master.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isOptional",
              "schema": {
                "description": "Set the value to true to make the language optional.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fallback",
              "schema": {
                "description": "Optional fallback languages.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateRoleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateRoleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "permissions",
              "schema": {
                "description": "Associated list of permissions.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": "Associated list of UI properties.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateRuleDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateRuleDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "Optional rule name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "trigger",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateRuleDtoTrigger",
                  "nameOverride": undefined,
                  "schema": "RuleTriggerDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateRuleDtoAction",
                  "nameOverride": undefined,
                  "schema": "RuleActionDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "isEnabled",
              "schema": {
                "description": "Enable or disable the rule.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateSchemaDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateSchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "label",
              "schema": {
                "description": "Optional label for the editor.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "hints",
              "schema": {
                "description": "Hints to describe the schema.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contentsSidebarUrl",
              "schema": {
                "description": "The url to a the sidebar plugin for content lists.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contentSidebarUrl",
              "schema": {
                "description": "The url to a the sidebar plugin for content items.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contentEditorUrl",
              "schema": {
                "description": "The url to the editor plugin.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "validateOnPublish",
              "schema": {
                "description": "True to validate the content items on publish.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "Tags for automation processes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateSettingDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateSettingDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "value",
              "schema": {
                "type": "unknown",
              },
            },
          ],
          "type": "object",
        },
        "UpdateTeamDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateTeamDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the team.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UpdateUserDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateUserDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "email",
              "schema": {
                "description": "The email of the user. Unique value.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "displayName",
              "schema": {
                "description": "The display name (usually first name and last name) of the user.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "password",
              "schema": {
                "description": "The password of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "permissions",
              "schema": {
                "description": "Additional permissions for the user.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UpdateWorkflowDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpdateWorkflowDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the workflow.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "steps",
              "schema": {
                "description": "The workflow steps.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpdateWorkflowDtoStepsValue",
                  "nameOverride": undefined,
                  "schema": "WorkflowStepDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "schemaIds",
              "schema": {
                "description": "The schema ids.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "initial",
              "schema": {
                "description": "The initial step.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UpsertCommentDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpsertCommentDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "text",
              "schema": {
                "description": "The comment text.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "url",
              "schema": {
                "description": "The url where the comment is created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UpsertSchemaDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpsertSchemaDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpsertSchemaDtoProperties",
                  "nameOverride": undefined,
                  "schema": "SchemaPropertiesDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "scripts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UpsertSchemaDtoScripts",
                  "nameOverride": undefined,
                  "schema": "SchemaScriptsDto",
                  "type": "reference",
                },
              },
            },
            {
              "key": "fieldsInReferences",
              "schema": {
                "description": "The names of the fields that should be used in references.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "fieldsInLists",
              "schema": {
                "description": "The names of the fields that should be shown in lists, including meta fields.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "fields",
              "schema": {
                "description": "Optional fields.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "UpsertSchemaDtoFieldsItem",
                    "nameOverride": undefined,
                    "schema": "UpsertSchemaFieldDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "previewUrls",
              "schema": {
                "description": "The optional preview urls.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "fieldRules",
              "schema": {
                "description": "The optional field Rules.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "UpsertSchemaDtoFieldRulesItem",
                    "nameOverride": undefined,
                    "schema": "FieldRuleDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "category",
              "schema": {
                "description": "The category.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isPublished",
              "schema": {
                "description": "Set it to true to autopublish the schema.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UpsertSchemaFieldDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpsertSchemaFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "isHidden",
              "schema": {
                "description": "Defines if the field is hidden.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "isLocked",
              "schema": {
                "description": "Defines if the field is locked.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "isDisabled",
              "schema": {
                "description": "Defines if the field is disabled.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "partitioning",
              "schema": {
                "description": "Determines the optional partitioning of the field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UpsertSchemaFieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
            {
              "key": "nested",
              "schema": {
                "description": "The nested fields.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "UpsertSchemaFieldDtoNestedItem",
                    "nameOverride": undefined,
                    "schema": "UpsertSchemaNestedFieldDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UpsertSchemaNestedFieldDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UpsertSchemaNestedFieldDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The name of the field. Must be unique within the schema.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "isHidden",
              "schema": {
                "description": "Defines if the field is hidden.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "isLocked",
              "schema": {
                "description": "Defines if the field is locked.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "isDisabled",
              "schema": {
                "description": "Defines if the field is disabled.",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "UpsertSchemaNestedFieldDtoProperties",
                "nameOverride": undefined,
                "schema": "FieldPropertiesDto",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "UsageRuleTriggerDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UsageRuleTriggerDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "limit",
              "schema": {
                "description": "The number of monthly api calls.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "numDays",
              "schema": {
                "description": "The number of days to check or null for the current month.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "UserDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": "The email of the user. Unique value.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "displayName",
              "schema": {
                "description": "The display name (usually first name and last name) of the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isLocked",
              "schema": {
                "description": "Determines if the user is locked.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "permissions",
              "schema": {
                "description": "Additional permissions for the user.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UserProperty": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UserProperty",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "value",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UsersDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UsersDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "total",
              "schema": {
                "description": "The total number of users.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "items",
              "schema": {
                "description": "The users.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "UsersDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "UserDto",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "WebhookMethod": {
          "description": "",
          "generatedName": "WebhookMethod",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "POST",
              "nameOverride": undefined,
              "value": "POST",
            },
            {
              "generatedName": "PUT",
              "nameOverride": undefined,
              "value": "PUT",
            },
            {
              "generatedName": "GET",
              "nameOverride": undefined,
              "value": "GET",
            },
            {
              "generatedName": "DELETE",
              "nameOverride": undefined,
              "value": "DELETE",
            },
            {
              "generatedName": "PATCH",
              "nameOverride": undefined,
              "value": "PATCH",
            },
          ],
        },
        "WebhookRuleActionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookRuleActionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "url",
              "schema": {
                "description": "The url to the webhook.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "method",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookRuleActionDtoMethod",
                  "nameOverride": undefined,
                  "schema": "WebhookMethod",
                  "type": "reference",
                },
              },
            },
            {
              "key": "payload",
              "schema": {
                "description": "Leave it empty to use the full event as body.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "payloadType",
              "schema": {
                "description": "The mime type of the payload.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "headers",
              "schema": {
                "description": "The message headers in the format '[Key]=[Value]', one entry per line.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sharedSecret",
              "schema": {
                "description": "The shared secret that is used to calculate the payload signature.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "WorkflowDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "WorkflowDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The workflow id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The name of the workflow.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "steps",
              "schema": {
                "description": "The workflow steps.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "WorkflowDtoStepsValue",
                      "nameOverride": undefined,
                      "schema": "WorkflowStepDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "key": "schemaIds",
              "schema": {
                "description": "The schema ids.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "initial",
              "schema": {
                "description": "The initial step.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "WorkflowStepDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorkflowStepDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "transitions",
              "schema": {
                "description": "The transitions.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "WorkflowStepDtoTransitionsValue",
                      "nameOverride": undefined,
                      "schema": "WorkflowTransitionDto",
                      "type": "reference",
                    },
                  },
                },
              },
            },
            {
              "key": "color",
              "schema": {
                "description": "The optional color.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "validate",
              "schema": {
                "description": "True if the content should be validated when moving to this step.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "noUpdate",
              "schema": {
                "description": "Indicates if updates should not be allowed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "noUpdateExpression",
              "schema": {
                "description": "Optional expression that must evaluate to true when you want to prevent updates.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "noUpdateRoles",
              "schema": {
                "description": "Optional list of roles to restrict the updates for users with these roles.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "WorkflowTransitionDto": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorkflowTransitionDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "expression",
              "schema": {
                "description": "The optional expression.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "roles",
              "schema": {
                "description": "The optional restricted role.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "WorkflowsDto": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "Resource",
              "nameOverride": undefined,
              "schema": "Resource",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "WorkflowsDto",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "items",
              "schema": {
                "description": "The workflow.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkflowsDtoItemsItem",
                    "nameOverride": undefined,
                    "schema": "WorkflowDto",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "errors",
              "schema": {
                "description": "The errros that should be fixed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "squidex-oauth-auth": {
          "type": "bearer",
        },
      },
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "https://localhost:5001",
        },
      ],
      "tags": [],
      "title": "Squidex API",
    },
  },
  "rootPackage": {
    "file": "openapi.json",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser suger simple 1`] = `
{
  "files": {
    "swagger.json": {
      "dependencies": [],
      "description": "CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.",
      "endpoints": [
        {
          "authed": true,
          "description": "list all buyers by the given organization",
          "errors": [],
          "generatedRequestName": "ListBuyersByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListBuyersByOrganization",
          "path": "/org/{orgId}/buyer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListBuyersByOrganizationResponseItem",
                "nameOverride": undefined,
                "schema": "shared.IdentityBuyer",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list buyers by organization",
          "tags": [
            "Buyer",
          ],
        },
        {
          "authed": true,
          "description": "get buyer by the given organization and buyer id",
          "errors": [],
          "generatedRequestName": "GetBuyerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetBuyer",
          "path": "/org/{orgId}/buyer/{buyerId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetBuyerResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityBuyer",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get buyer",
          "tags": [
            "Buyer",
          ],
        },
        {
          "authed": true,
          "description": "update buyer name and description by the given organization and buyer id",
          "errors": [],
          "generatedRequestName": "UpdateBuyerNameDescriptionRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateBuyerNameDescription",
          "path": "/org/{orgId}/buyer/{buyerId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateBuyerNameDescriptionRequest",
              "nameOverride": undefined,
              "schema": "github_com_sugerio_marketplace-service_rds-db_lib.UpdateBuyerNameDescriptionParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateBuyerNameDescriptionResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityBuyer",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "update buyer name and description",
          "tags": [
            "Buyer",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements of the given buyer",
          "errors": [],
          "generatedRequestName": "ListEntitlementsByBuyerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByBuyer",
          "path": "/org/{orgId}/buyer/{buyerId}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsByBuyerResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements by buyer",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "Create a new draft offer or update the existing draft offer. When updating draft offer, the offer.ID is required.",
          "errors": [],
          "generatedRequestName": "CreateOrUpdateDraftOfferRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateOrUpdateDraftOffer",
          "path": "/org/{orgId}/draftOffer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateOrUpdateDraftOfferRequest",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateOrUpdateDraftOfferResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "create or update draft offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements under the organization",
          "errors": [],
          "generatedRequestName": "ListEntitlementsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlements",
          "path": "/org/{orgId}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "Get the entitlement by ID",
          "errors": [],
          "generatedRequestName": "GetEntitlementRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetEntitlement",
          "path": "/org/{orgId}/entitlement/{entitlementId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetEntitlementResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadEntitlement",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get entitlement",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "Add the credit amount to the given Entitlement. The credit amount is accumulated & saved in the current Entitlement Term of the gvien Entitlement.",
          "errors": [],
          "generatedRequestName": "AddEntitlementCreditRequest",
          "headers": [],
          "method": "POST",
          "operationId": "AddEntitlementCredit",
          "path": "/org/{orgId}/entitlement/{entitlementId}/addCredit",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AddEntitlementCreditRequest",
              "nameOverride": undefined,
              "schema": "shared.AddEntitlementCreditParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AddEntitlementCreditResponse",
              "nameOverride": undefined,
              "schema": "shared.AddEntitlementCreditResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "add entitlement credit",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "Update the name of the given Entitlement",
          "errors": [],
          "generatedRequestName": "UpdateEntitlementNameRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateEntitlementName",
          "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementName",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateEntitlementNameRequest",
              "nameOverride": undefined,
              "schema": "github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateEntitlementNameResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadEntitlement",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "update entitlement name",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "List all Entitlement Terms of the given Entitlement",
          "errors": [],
          "generatedRequestName": "ListEntitlementTermsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementTerms",
          "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementTermsResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlementTerm",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlement terms",
          "tags": [
            "Entitlement Term",
          ],
        },
        {
          "authed": true,
          "description": "Get the entitlement term by ID",
          "errors": [],
          "generatedRequestName": "GetEntitlementTermRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetEntitlementTerm",
          "path": "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm/{entitlementTermId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementTermId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetEntitlementTermResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadEntitlementTerm",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get entitlement term",
          "tags": [
            "Entitlement Term",
          ],
        },
        {
          "authed": true,
          "description": "list UsageRecordGroups for the given organization and entitlement",
          "errors": [],
          "generatedRequestName": "ListUsageRecordGroupsByEntitlementRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordGroupsByEntitlement",
          "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordGroupsByEntitlementResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordGroupsResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordGroups by entitlement",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "It is recommended to provide the ID in the request body CreateUsageRecordGroupParams, so the report can be deduplicated. All duplicate report will return error code 409.",
          "errors": [],
          "generatedRequestName": "ReportUsageRecordGroupRequest",
          "headers": [],
          "method": "POST",
          "operationId": "ReportUsageRecordGroup",
          "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ReportUsageRecordGroupRequest",
              "nameOverride": undefined,
              "schema": "shared.CreateUsageRecordGroupParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ReportUsageRecordGroupResponse",
              "nameOverride": undefined,
              "schema": "shared.MeteringUsageRecordGroup",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "report usageRecordGroup",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "List usageRecordReports for the given organization and entitlement. Filter by entitlementTermId if it is given.",
          "errors": [],
          "generatedRequestName": "ListUsageRecordReportsByEntitlementRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordReportsByEntitlement",
          "path": "/org/{orgId}/entitlement/{entitlementId}/usageRecordReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "entitlementTermId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordReportsByEntitlementResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordReportsResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordReports by entitlement",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "List all integrations for the given organization.",
          "errors": [],
          "generatedRequestName": "ListIntegrationsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListIntegrationsByOrganization",
          "path": "/org/{orgId}/integration",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListIntegrationsByOrganizationResponseItem",
                "nameOverride": undefined,
                "schema": "shared.IdentityIntegration",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list integrations by organization",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "For each organization, partner & service, there should be at most one integration.",
          "errors": [],
          "generatedRequestName": "CreateIntegrationRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateIntegration",
          "path": "/org/{orgId}/integration",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateIntegrationRequest",
              "nameOverride": undefined,
              "schema": "shared.CreateIntegrationParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateIntegrationResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityIntegration",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "create integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "Get the integration for the given organization, partner & service.",
          "errors": [],
          "generatedRequestName": "GetIntegrationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "GetIntegrationRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "GetIntegrationRequestService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetIntegrationResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityIntegration",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "Update the given integration.",
          "errors": [],
          "generatedRequestName": "UpdateIntegrationRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "UpdateIntegrationRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "UpdateIntegrationRequestService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateIntegrationRequest",
              "nameOverride": undefined,
              "schema": "shared.UpdateIntegrationParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateIntegrationResponse",
              "nameOverride": undefined,
              "schema": "shared.IdentityIntegration",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "update integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "delete the integration for the given orgId, partner and service.",
          "errors": [],
          "generatedRequestName": "DeleteIntegrationRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "DeleteIntegrationRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "DeleteIntegrationRequestService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if deletion is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "delete integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "Verify the given integration, check whether it works correctly.",
          "errors": [],
          "generatedRequestName": "VerifyIntegrationRequest",
          "headers": [],
          "method": "POST",
          "operationId": "VerifyIntegration",
          "path": "/org/{orgId}/integration/{partner}/{service}/verify",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyIntegrationRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": "service",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyIntegrationRequestService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                  {
                    "generatedName": "CRM",
                    "nameOverride": undefined,
                    "value": "CRM",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "whether it is verified or not",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "verify integration",
          "tags": [
            "Integration",
          ],
        },
        {
          "authed": true,
          "description": "List all offers under the given organization.",
          "errors": [],
          "generatedRequestName": "ListOffersByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOffersByOrganization",
          "path": "/org/{orgId}/offer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListOffersByOrganizationResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadOffer",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list offers by organization",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "Create a private offer under the given organization.",
          "errors": [],
          "generatedRequestName": "CreateOfferRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CreateOffer",
          "path": "/org/{orgId}/offer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateOfferRequest",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "CreateOfferResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "create offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "Get the offer by the given offer ID.",
          "errors": [],
          "generatedRequestName": "GetOfferRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetOffer",
          "path": "/org/{orgId}/offer/{offerId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetOfferResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadOffer",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "Only the offer with status = "DRAFT" or "CREATE_FAILED" is allowed to be deleted.",
          "errors": [],
          "generatedRequestName": "DeleteOfferRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteOffer",
          "path": "/org/{orgId}/offer/{offerId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if deletion is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "delete offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "Only the offer with status = "PENDING_ACCEPTANCE" or "PENDING_CANCEL" is allowed to cancel.",
          "errors": [],
          "generatedRequestName": "CancelOfferRequest",
          "headers": [],
          "method": "POST",
          "operationId": "CancelOffer",
          "path": "/org/{orgId}/offer/{offerId}/cancel",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if cancellation is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "cancel offer",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements under the given offer",
          "errors": [],
          "generatedRequestName": "ListEntitlementsByOfferRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByOffer",
          "path": "/org/{orgId}/offer/{offerId}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsByOfferResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements by offer",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "List all long running operations under the given organization, offer, entitlement, crmOpportunity or partnerOpportunity. Only provide one filter on a request.",
          "errors": [],
          "generatedRequestName": "ListOperationsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOperations",
          "path": "/org/{orgId}/operation",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "offerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "crmOpportunityId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "partnerOpportunityId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListOperationsResponseItem",
                "nameOverride": undefined,
                "schema": "shared.Operation",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list operations",
          "tags": [
            "Operation",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements under the given partner",
          "errors": [],
          "generatedRequestName": "ListEntitlementsByPartnerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByPartner",
          "path": "/org/{orgId}/partner/{partner}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListEntitlementsByPartnerRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsByPartnerResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements by partner",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": false,
          "description": "List all offers under the given organization & cloud partner.",
          "errors": [],
          "generatedRequestName": "ListOffersByPartnerRequest",
          "headers": [
            {
              "description": undefined,
              "name": "Authorization",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "method": "GET",
          "operationId": "ListOffersByPartner",
          "path": "/org/{orgId}/partner/{partner}/offer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListOffersByPartnerRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListOffersByPartnerResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadOffer",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list offers by partner",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "list all products under the given organization and cloud partner",
          "errors": [],
          "generatedRequestName": "ListProductsByPartnerRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListProductsByPartner",
          "path": "/org/{orgId}/partner/{partner}/product",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListProductsByPartnerRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListProductsByPartnerResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadProduct",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list products by partner",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "list the revenue records for the given organization, product, entitlement, or buyer.",
          "errors": [],
          "generatedRequestName": "ListRevenueRecordsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListRevenueRecords",
          "path": "/org/{orgId}/partner/{partner}/revenueRecord",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListRevenueRecordsRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListRevenueRecordsResponse",
              "nameOverride": undefined,
              "schema": "shared.ListRevenueRecordsResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list revenue records",
          "tags": [
            "Report",
          ],
        },
        {
          "authed": true,
          "description": "list the raw revenue record details for the given organization, product, entitlement, or buyer.",
          "errors": [],
          "generatedRequestName": "ListRevenueRecordDetailsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListRevenueRecordDetails",
          "path": "/org/{orgId}/partner/{partner}/revenueRecordDetail",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "ListRevenueRecordDetailsRequestPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "entitlementId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "buyerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListRevenueRecordDetailsResponse",
              "nameOverride": undefined,
              "schema": "shared.ListRevenueRecordDetailsResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list revenue record details",
          "tags": [
            "Report",
          ],
        },
        {
          "authed": true,
          "description": "list all products under the given organization",
          "errors": [],
          "generatedRequestName": "ListProductsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListProductsByOrganization",
          "path": "/org/{orgId}/product",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListProductsByOrganizationResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadProduct",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list products by organization",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "get product by product id",
          "errors": [],
          "generatedRequestName": "GetProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetProduct",
          "path": "/org/{orgId}/product/{productId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetProductResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadProduct",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get product",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "currently only the Fulfillment URL is allowed to update via this API.",
          "errors": [],
          "generatedRequestName": "UpdateProductRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "UpdateProduct",
          "path": "/org/{orgId}/product/{productId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateProductRequest",
              "nameOverride": undefined,
              "schema": "shared.UpdateProductParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "UpdateProductResponse",
              "nameOverride": undefined,
              "schema": "shared.WorkloadProduct",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "update product",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "only the product with status = "CREATE_FAILED" is allowed to be deleted.",
          "errors": [],
          "generatedRequestName": "DeleteProductRequest",
          "headers": [],
          "method": "PATCH",
          "operationId": "DeleteProduct",
          "path": "/org/{orgId}/product/{productId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Empty string if deletion is successful",
            "schema": {
              "description": undefined,
              "schema": {
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "delete product",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "list all metering dimensions of the given product",
          "errors": [],
          "generatedRequestName": "ListProductMeteringDimensionsRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListProductMeteringDimensions",
          "path": "/org/{orgId}/product/{productId}/dimension",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListProductMeteringDimensionsResponseItem",
                "nameOverride": undefined,
                "schema": "shared.AwsSaasProductDimension",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list metering dimensions of product",
          "tags": [
            "Product",
          ],
        },
        {
          "authed": true,
          "description": "List all entitlements under the given product",
          "errors": [],
          "generatedRequestName": "ListEntitlementsByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListEntitlementsByProduct",
          "path": "/org/{orgId}/product/{productId}/entitlement",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListEntitlementsByProductResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadEntitlement",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list entitlements by product",
          "tags": [
            "Entitlement",
          ],
        },
        {
          "authed": true,
          "description": "List all offers under the given organization & product.",
          "errors": [],
          "generatedRequestName": "ListOffersByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListOffersByProduct",
          "path": "/org/{orgId}/product/{productId}/offer",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ListOffersByProductResponseItem",
                "nameOverride": undefined,
                "schema": "shared.WorkloadOffer",
                "type": "reference",
              },
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list offers by product",
          "tags": [
            "Offer",
          ],
        },
        {
          "authed": true,
          "description": "list UsageRecordGroups for the given organization and product",
          "errors": [],
          "generatedRequestName": "ListUsageRecordGroupsByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordGroupsByProduct",
          "path": "/org/{orgId}/product/{productId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordGroupsByProductResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordGroupsResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordGroups by product",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "List usageRecordReports for the given organization and product",
          "errors": [],
          "generatedRequestName": "ListUsageRecordReportsByProductRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordReportsByProduct",
          "path": "/org/{orgId}/product/{productId}/usageRecordReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "productId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordReportsByProductResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordReportsResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordReports by product",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "Get the revenue report of the given organization, product, entitlement, or buyer.",
          "errors": [],
          "generatedRequestName": "GetRevenueReportRequest",
          "headers": [],
          "method": "POST",
          "operationId": "GetRevenueReport",
          "path": "/org/{orgId}/revenueReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetRevenueReportRequest",
              "nameOverride": undefined,
              "schema": "shared.GetRevenueReportParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetRevenueReportResponse",
              "nameOverride": undefined,
              "schema": "shared.RevenueReport",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get revenue report",
          "tags": [
            "Report",
          ],
        },
        {
          "authed": true,
          "description": "list UsageRecordGroups under the given organization.",
          "errors": [],
          "generatedRequestName": "ListUsageRecordGroupsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordGroupsByOrganization",
          "path": "/org/{orgId}/usageRecordGroup",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordGroupsByOrganizationResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordGroupsResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordGroups by organization",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "get UsageRecordGroup for the given organization and usageRecordGroup ID",
          "errors": [],
          "generatedRequestName": "GetUsageRecordGroupRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetUsageRecordGroup",
          "path": "/org/{orgId}/usageRecordGroup/{usageRecordGroupId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "usageRecordGroupId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetUsageRecordGroupResponse",
              "nameOverride": undefined,
              "schema": "shared.MeteringUsageRecordGroup",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get usageRecordGroup",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "List usageRecordReports under the given organization",
          "errors": [],
          "generatedRequestName": "ListUsageRecordReportsByOrganizationRequest",
          "headers": [],
          "method": "GET",
          "operationId": "ListUsageRecordReportsByOrganization",
          "path": "/org/{orgId}/usageRecordReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [
            {
              "description": undefined,
              "name": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ListUsageRecordReportsByOrganizationResponse",
              "nameOverride": undefined,
              "schema": "shared.ListUsageRecordReportsResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "list usageRecordReports by organization",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "get the usageRecordReport for a given organization and usageRecordReport ID.",
          "errors": [],
          "generatedRequestName": "GetUsageRecordReportRequest",
          "headers": [],
          "method": "GET",
          "operationId": "GetUsageRecordReport",
          "path": "/org/{orgId}/usageRecordReport/{usageRecordReportId}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": undefined,
              "name": "usageRecordReportId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetUsageRecordReportResponse",
              "nameOverride": undefined,
              "schema": "shared.MeteringUsageRecordReport",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get usageRecordReport",
          "tags": [
            "Metering",
          ],
        },
        {
          "authed": true,
          "description": "get the daily usage report of the given entitlement, the default timespan is lifetime.",
          "errors": [],
          "generatedRequestName": "GetUsageReportRequest",
          "headers": [],
          "method": "POST",
          "operationId": "GetUsageReport",
          "path": "/org/{orgId}/usageReport",
          "pathParameters": [
            {
              "description": undefined,
              "name": "orgId",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetUsageReportRequest",
              "nameOverride": undefined,
              "schema": "shared.GetUsageReportParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetUsageReportResponse",
              "nameOverride": undefined,
              "schema": "shared.UsageReport",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get usage report",
          "tags": [
            "Report",
          ],
        },
        {
          "authed": false,
          "description": "Get the Bearer Access Token by giving the Suger API Client ID & Client Secret.",
          "errors": [],
          "generatedRequestName": "GetApiClientAccessTokenRequest",
          "headers": [],
          "method": "POST",
          "operationId": "GetApiClientAccessToken",
          "path": "/public/apiClient/accessToken",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetApiClientAccessTokenRequest",
              "nameOverride": undefined,
              "schema": "shared.GetApiClientAccessTokenParams",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "OK",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GetApiClientAccessTokenResponse",
              "nameOverride": undefined,
              "schema": "shared.ApiClientAccessToken",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": "get api access token",
          "tags": [
            "API",
          ],
        },
      ],
      "nonRequestReferencedSchemas": [
        "shared.IdentityBuyer",
        "shared.WorkloadEntitlement",
        "shared.WorkloadOffer",
        "shared.AddEntitlementCreditResponse",
        "shared.WorkloadEntitlementTerm",
        "shared.ListUsageRecordGroupsResponse",
        "shared.MeteringUsageRecordGroup",
        "shared.ListUsageRecordReportsResponse",
        "shared.IdentityIntegration",
        "shared.Operation",
        "shared.WorkloadProduct",
        "shared.ListRevenueRecordsResponse",
        "shared.ListRevenueRecordDetailsResponse",
        "shared.AwsSaasProductDimension",
        "shared.RevenueReport",
        "shared.MeteringUsageRecordReport",
        "shared.UsageReport",
        "shared.ApiClientAccessToken",
        "AzureValidationResult",
        "AzureLocalizedDateTime",
        "AzureMarketplacePrivateOfferAcceptanceLink",
        "AzureMarketplacePrivateOfferBeneficiary",
        "AzureMarketplacePrivateOfferPricing",
        "AzureMarketplacePrivateOfferPromotionReference",
        "AzureMarketplaceValidation",
        "AzureMarketplacePrivateOfferBeneficiaryRecipient",
        "AzurePriceAndAvailabilityPrivateOfferPlan",
        "AzurePriceAndAvailabilityPrivateOfferPrice",
        "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
        "AzurePriceAndAvailabilityRecurrentPrice",
        "AzurePriceAndAvailabilityRecurrentPriceItem",
        "AzureMarketplaceTerm",
        "AzureMarketplacePrice",
        "AzurePriceCadence",
        "AzurePricingUnit",
        "AzurePrice",
        "AzureProductAvailability",
        "AzureProductBranch",
        "AzureTypeValue",
        "AzureProductListing",
        "AzureProductPackageConfiguration",
        "AzureProductProperty",
        "AzureProductSetup",
        "AzureProductSubmission",
        "AzureProductVariant",
        "AzureAudience",
        "AzureProductVariantCustomMeter",
        "AzureMarketState",
        "AzureMarket",
        "AzureProductVariantPriceSchedule",
        "AzureProductVariantTrial",
        "AzureProductListingAsset",
        "AzureListingContact",
        "AzureListingUri",
        "AzurePendingUpdateInfo",
        "AzureVariantResource",
        "AzureGovernmentCertification",
        "AzureProductFeatureAvailability",
        "AzureIncludedBaseQuantity",
        "AzureLocalizedTimeRange",
        "AzurePriceSchedule",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse",
        "sql.NullTime",
        "middleware.Metadata",
        "types.UsageRecordResult",
        "types.UsageRecord",
        "servicecontrol.Status",
        "servicecontrol.ReportError",
        "shared.CompanyInfo",
        "shared.AwsIntegrationCredential",
        "shared.AwsSaasProductDescription",
        "shared.AwsSaasProductPromotionalResources",
        "shared.AwsSaasProductSupportInformation",
        "shared.AwsSaasProductVersion",
        "shared.AwsSaasProductAdditionalResource",
        "shared.AwsSaasProductDeliveryOption",
        "shared.AwsSnsSubscriptionStatus",
        "shared.AzureBuyerInfo",
        "shared.AzureIntegrationCredential",
        "shared.AzureADIdentifier",
        "shared.AzureMarketplaceSubscriptionStatus",
        "shared.AzureTerm",
        "shared.AwsAccountIdentifier",
        "shared.GcpMarketplaceUserAccount",
        "shared.CommitDimensionTimeUnit",
        "shared.CommitDimensionType",
        "shared.IntegrationInfo",
        "shared.MeteringUsageRecordGroupMetaInfo",
        "types.Entitlement",
        "shared.AzureMarketplaceSubscription",
        "shared.CommitDimension",
        "shared.MeteringDimension",
        "shared.EulaType",
        "shared.GcpMarketplaceEntitlement",
        "shared.GcpPurchasePlan",
        "shared.PaymentInstallment",
        "shared.EntitlementTermType",
        "shared.GcpCommerceProducerExternalAccountSpec",
        "shared.GcpCommerceProducerMarketingSpec",
        "shared.GcpCommerceProducerPurchaseSpec",
        "shared.GcpCommerceProducerSupportSpec",
        "shared.GcpCommerceProducerPriceModel",
        "shared.GcpCommerceProducerPriceSubscription",
        "shared.GcpCommerceProducerPriceUsage",
        "shared.GcpCommerceProducerPrice",
        "shared.GcpCommerceProducerPriceTier",
        "shared.ValueType",
        "shared.GcpCommerceProducerPurchaseMetric",
        "shared.GcpCommerceProducerServiceBilling",
        "shared.GcpMarketplaceConsumer",
        "shared.GcpMarketplaceEntitlementState",
        "shared.GcpMarketplaceUserAccountApproval",
        "shared.GcpMarketplaceUserAccountState",
        "shared.GcpUserInfo",
        "shared.GcpMarketplaceUserAccountApprovalState",
        "shared.GcpCommerceProducerListingSpec",
        "shared.GcpCommerceProducerServiceConfig",
        "shared.GcpCommerceProducerPriceInfo",
        "shared.RevenueReportType",
        "shared.HubspotCrmCredential",
        "shared.BuyerInfo",
        "shared.AwsAceIntegration",
        "shared.AwsMarketplaceIntegration",
        "shared.AzureIntegration",
        "shared.GcpIntegration",
        "shared.HubspotCrmIntegration",
        "shared.SalesforceCrmIntegration",
        "shared.SlackIntegration",
        "shared.RevenueRecordDetail",
        "shared.RevenueRecord",
        "shared.UsageCount",
        "shared.MeteringUsageRecordReportInfo",
        "marketplacemetering.BatchMeterUsageOutput",
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse",
        "servicecontrol.ReportResponse",
        "shared.NotificationEventAction",
        "shared.EntityType",
        "shared.NotificationEventStatus",
        "AzureMarketplacePrivateOffer",
        "shared.Contact",
        "shared.NotificationEvent",
        "shared.OperationType",
        "shared.AwsSaasProduct",
        "shared.AwsSnsSubscription",
        "AzureProduct",
        "shared.GcpProduct",
        "shared.RevenueRecordInfo",
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
        "shared.SalesforceCrmCredential",
        "shared.SalesforceSyncFilter",
        "slack.OAuthV2ResponseAuthedUser",
        "slack.OAuthV2ResponseEnterprise",
        "slack.OAuthResponseIncomingWebhook",
        "slack.OAuthV2ResponseTeam",
        "shared.EntitlementUsageRecord",
        "shared.EntitlementInfo",
        "shared.EntitlementTermInfo",
        "shared.OfferInfo",
        "shared.OfferMetaInfo",
        "shared.ProductInfo",
        "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag",
        "types.UsageAllocation",
        "types.UsageRecordResultStatus",
      ],
      "schemas": {
        "AzureAudience": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureAudience",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureGovernmentCertification": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureGovernmentCertification",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "validationResults",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureGovernmentCertificationValidationResultsItem",
                    "nameOverride": undefined,
                    "schema": "AzureValidationResult",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureIncludedBaseQuantity": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureIncludedBaseQuantity",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "isInfinite",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "recurringUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureIncludedBaseQuantityRecurringUnit",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Monthly",
                      "nameOverride": undefined,
                      "value": "Monthly",
                    },
                    {
                      "generatedName": "Annual",
                      "nameOverride": undefined,
                      "value": "Annual",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureListingContact": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureListingContact",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "phone",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureListingContactType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "CustomerSupport",
                      "nameOverride": undefined,
                      "value": "CustomerSupport",
                    },
                    {
                      "generatedName": "Engineering",
                      "nameOverride": undefined,
                      "value": "Engineering",
                    },
                    {
                      "generatedName": "ChannelManager",
                      "nameOverride": undefined,
                      "value": "ChannelManager",
                    },
                  ],
                },
              },
            },
            {
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureListingUri": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureListingUri",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "displayText",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subtype",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureLocalizedDateTime": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureLocalizedDateTime",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dateTimeInUtc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "localizePerMarket",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureLocalizedTimeRange": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureLocalizedTimeRange",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "endAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureLocalizedTimeRangeEndAt",
                  "nameOverride": undefined,
                  "schema": "AzureLocalizedDateTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "startAt",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureLocalizedTimeRangeStartAt",
                  "nameOverride": undefined,
                  "schema": "AzureLocalizedDateTime",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarket",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "marketCode",
              "schema": {
                "description": "ISO Country Code",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketState": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketState",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "marketCode",
              "schema": {
                "description": "ISO Country Code",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketStateState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Disabled",
                      "nameOverride": undefined,
                      "value": "Disabled",
                    },
                    {
                      "generatedName": "Enabled",
                      "nameOverride": undefined,
                      "value": "Enabled",
                    },
                    {
                      "generatedName": "StopSelling",
                      "nameOverride": undefined,
                      "value": "StopSelling",
                    },
                    {
                      "generatedName": "Terminated",
                      "nameOverride": undefined,
                      "value": "Terminated",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currency",
              "schema": {
                "description": "ISO 4217 currency code",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "markets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "price",
              "schema": {
                "description": "default 0",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prices",
              "schema": {
                "type": "unknown",
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOffer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOffer",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "$schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "acceptBy",
              "schema": {
                "description": "in format YYYY-MM-DD",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "acceptanceLinks",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferAcceptanceLinksItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrivateOfferAcceptanceLink",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "beneficiaries",
              "schema": {
                "description": "array of email addresses.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferBeneficiariesItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrivateOfferBeneficiary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "eTag",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "end",
              "schema": {
                "description": "in format YYYY-MM-DD",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "in format of "private-offer/private-offer-durable-id"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": "in format YYYY-MM-DD",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "notificationContacts",
              "schema": {
                "description": "array of email addresses of the users to be notified of any changes in the private offer status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "preparedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pricing",
              "schema": {
                "description": "Up to 10 pricing entries are allowed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferPricingItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrivateOfferPricing",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "privateOfferType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPrivateOfferType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "customerPromotion",
                      "nameOverride": undefined,
                      "value": "customerPromotion",
                    },
                    {
                      "generatedName": "cspPromotion",
                      "nameOverride": undefined,
                      "value": "cspPromotion",
                    },
                  ],
                },
              },
            },
            {
              "key": "resourceName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "start",
              "schema": {
                "description": "in format YYYY-MM-DD, if VariableStartDate = true, this field should be empty.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "draft",
                      "nameOverride": undefined,
                      "value": "draft",
                    },
                    {
                      "generatedName": "live",
                      "nameOverride": undefined,
                      "value": "live",
                    },
                    {
                      "generatedName": "withdrawn",
                      "nameOverride": undefined,
                      "value": "withdrawn",
                    },
                    {
                      "generatedName": "deleted",
                      "nameOverride": undefined,
                      "value": "deleted",
                    },
                  ],
                },
              },
            },
            {
              "key": "subState",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferSubState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "pendingAcceptance",
                      "nameOverride": undefined,
                      "value": "pendingAcceptance",
                    },
                    {
                      "generatedName": "accepted",
                      "nameOverride": undefined,
                      "value": "accepted",
                    },
                  ],
                },
              },
            },
            {
              "key": "termsAndConditionsDocSasUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "upgradedFrom",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferUpgradedFrom",
                  "nameOverride": undefined,
                  "schema": "AzureMarketplacePrivateOfferPromotionReference",
                  "type": "reference",
                },
              },
            },
            {
              "key": "validations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferValidationsItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplaceValidation",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "variableStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferAcceptanceLink": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferAcceptanceLink",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "beneficiaryId",
              "schema": {
                "description": "The Customer Billing Account ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "link",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferBeneficiary": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferBeneficiary",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "beneficiaryRecipients",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureMarketplacePrivateOfferBeneficiaryBeneficiaryRecipientsItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrivateOfferBeneficiaryRecipient",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "the customer billing account id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferBeneficiaryRecipient": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferBeneficiaryRecipient",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "recipientType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferBeneficiaryRecipientRecipientType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "cspCustomer",
                      "nameOverride": undefined,
                      "value": "cspCustomer",
                    },
                    {
                      "generatedName": "billingGroup",
                      "nameOverride": undefined,
                      "value": "billingGroup",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferPricing": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferPricing",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "discountPercentage",
              "schema": {
                "description": "between 0 and 100",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "discountType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPricingDiscountType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "percentage",
                      "nameOverride": undefined,
                      "value": "percentage",
                    },
                    {
                      "generatedName": "absolute",
                      "nameOverride": undefined,
                      "value": "absolute",
                    },
                  ],
                },
              },
            },
            {
              "key": "originalPlan",
              "schema": {
                "description": "the pricing plan of the original plan.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPricingOriginalPlan",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                  "type": "reference",
                },
              },
            },
            {
              "key": "plan",
              "schema": {
                "description": "in format of "plan/product-durable-id/plan-durable-id"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planType",
              "schema": {
                "description": "The type of the plan, FLAT_RATE or PER_USER.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPricingPlanType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "FLAT_RATE",
                      "nameOverride": undefined,
                      "value": "FLAT_RATE",
                    },
                    {
                      "generatedName": "PER_USER",
                      "nameOverride": undefined,
                      "value": "PER_USER",
                    },
                  ],
                },
              },
            },
            {
              "key": "priceDetails",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "privateOfferPlan",
              "schema": {
                "description": "the pricing plan of the private offer",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureMarketplacePrivateOfferPricingPrivateOfferPlan",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                  "type": "reference",
                },
              },
            },
            {
              "key": "product",
              "schema": {
                "description": "in format of "product/product-durable-id"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sugerOfferId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplacePrivateOfferPromotionReference": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplacePrivateOfferPromotionReference",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplaceTerm": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplaceTerm",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplaceTermType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "day",
                      "nameOverride": undefined,
                      "value": "day",
                    },
                    {
                      "generatedName": "week",
                      "nameOverride": undefined,
                      "value": "week",
                    },
                    {
                      "generatedName": "month",
                      "nameOverride": undefined,
                      "value": "month",
                    },
                    {
                      "generatedName": "year",
                      "nameOverride": undefined,
                      "value": "year",
                    },
                  ],
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "default 0",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureMarketplaceValidation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureMarketplaceValidation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "$schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplaceValidationCode",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "businessValidationError",
                      "nameOverride": undefined,
                      "value": "businessValidationError",
                    },
                    {
                      "generatedName": "collectionLimitExceeded",
                      "nameOverride": undefined,
                      "value": "collectionLimitExceeded",
                    },
                    {
                      "generatedName": "invalidId",
                      "nameOverride": undefined,
                      "value": "invalidId",
                    },
                    {
                      "generatedName": "invalidEntityStatus",
                      "nameOverride": undefined,
                      "value": "invalidEntityStatus",
                    },
                    {
                      "generatedName": "invalidRequest",
                      "nameOverride": undefined,
                      "value": "invalidRequest",
                    },
                    {
                      "generatedName": "invalidResource",
                      "nameOverride": undefined,
                      "value": "invalidResource",
                    },
                    {
                      "generatedName": "invalidState",
                      "nameOverride": undefined,
                      "value": "invalidState",
                    },
                    {
                      "generatedName": "notDeployed",
                      "nameOverride": undefined,
                      "value": "notDeployed",
                    },
                    {
                      "generatedName": "notSupported",
                      "nameOverride": undefined,
                      "value": "notSupported",
                    },
                    {
                      "generatedName": "operationCanceled",
                      "nameOverride": undefined,
                      "value": "operationCanceled",
                    },
                    {
                      "generatedName": "productLocked",
                      "nameOverride": undefined,
                      "value": "productLocked",
                    },
                    {
                      "generatedName": "resourceNotFound",
                      "nameOverride": undefined,
                      "value": "resourceNotFound",
                    },
                    {
                      "generatedName": "schemaValidationError",
                      "nameOverride": undefined,
                      "value": "schemaValidationError",
                    },
                  ],
                },
              },
            },
            {
              "key": "level",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureMarketplaceValidationLevel",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "informational",
                      "nameOverride": undefined,
                      "value": "informational",
                    },
                    {
                      "generatedName": "warning",
                      "nameOverride": undefined,
                      "value": "warning",
                    },
                  ],
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePendingUpdateInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePendingUpdateInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "updateType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currencyCode",
              "schema": {
                "description": "ISO currency code, Three characters",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "openPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceTierID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityPrivateOfferCustomMeters": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "meters",
              "schema": {
                "type": "unknown",
              },
            },
            {
              "key": "priceInputOption",
              "schema": {
                "description": "default "usd"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferCustomMetersPriceInputOption",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "perMarket",
                      "nameOverride": undefined,
                      "value": "perMarket",
                    },
                    {
                      "generatedName": "usd",
                      "nameOverride": undefined,
                      "value": "usd",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityPrivateOfferPlan": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlan",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "$schema",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "plan",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pricing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanPricing",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPrice",
                  "type": "reference",
                },
              },
            },
            {
              "key": "product",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "validations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzurePriceAndAvailabilityPrivateOfferPlanValidationsItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplaceValidation",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityPrivateOfferPrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityPrivateOfferPrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "customMeters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferPriceCustomMeters",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferCustomMeters",
                  "type": "reference",
                },
              },
            },
            {
              "key": "recurrentPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityPrivateOfferPriceRecurrentPrice",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityRecurrentPrice",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityRecurrentPrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityRecurrentPrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priceInputOption",
              "schema": {
                "description": "default "usd"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceAndAvailabilityRecurrentPricePriceInputOption",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "perMarket",
                      "nameOverride": undefined,
                      "value": "perMarket",
                    },
                    {
                      "generatedName": "usd",
                      "nameOverride": undefined,
                      "value": "usd",
                    },
                  ],
                },
              },
            },
            {
              "key": "prices",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzurePriceAndAvailabilityRecurrentPricePricesItem",
                    "nameOverride": undefined,
                    "schema": "AzurePriceAndAvailabilityRecurrentPriceItem",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceAndAvailabilityRecurrentPriceItem": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItem",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "billingTerm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemBillingTerm",
                  "nameOverride": undefined,
                  "schema": "AzureMarketplaceTerm",
                  "type": "reference",
                },
              },
            },
            {
              "key": "paymentOption",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemPaymentOption",
                  "nameOverride": undefined,
                  "schema": "AzureMarketplaceTerm",
                  "type": "reference",
                },
              },
            },
            {
              "key": "pricePerPaymentInUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prices",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzurePriceAndAvailabilityRecurrentPriceItemPricesItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketplacePrice",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceCadence": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceCadence",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceCadenceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Month",
                      "nameOverride": undefined,
                      "value": "Month",
                    },
                    {
                      "generatedName": "Year",
                      "nameOverride": undefined,
                      "value": "Year",
                    },
                  ],
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePriceSchedule": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePriceSchedule",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "priceCadence",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceSchedulePriceCadence",
                  "nameOverride": undefined,
                  "schema": "AzurePriceCadence",
                  "type": "reference",
                },
              },
            },
            {
              "key": "pricingModel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePriceSchedulePricingModel",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Flat",
                      "nameOverride": undefined,
                      "value": "Flat",
                    },
                    {
                      "generatedName": "Recurring",
                      "nameOverride": undefined,
                      "value": "Recurring",
                    },
                    {
                      "generatedName": "Usage",
                      "nameOverride": undefined,
                      "value": "Usage",
                    },
                  ],
                },
              },
            },
            {
              "key": "pricingUnits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzurePriceSchedulePricingUnitsItem",
                    "nameOverride": undefined,
                    "schema": "AzurePricingUnit",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "retailPrice",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzurePriceScheduleRetailPrice",
                  "nameOverride": undefined,
                  "schema": "AzurePrice",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzurePricingUnit": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzurePricingUnit",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "isUnlimitedUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lowerUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzurePricingUnitName",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "sharedcore",
                      "nameOverride": undefined,
                      "value": "sharedcore",
                    },
                    {
                      "generatedName": "transactions",
                      "nameOverride": undefined,
                      "value": "transactions",
                    },
                  ],
                },
              },
            },
            {
              "key": "unitType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "upperUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "availabilities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductAvailabilitiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductAvailability",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "branches",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductBranchesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductBranch",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "externalIDs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductExternalIDsItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isModularPublishing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "listings",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductListingsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductListing",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "packageConfigurations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductPackageConfigurationsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductPackageConfiguration",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductPropertiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductProperty",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "setup",
              "schema": {
                "description": "Not original fields. They are populated by other API calls",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureProductSetup",
                  "nameOverride": undefined,
                  "schema": "AzureProductSetup",
                  "type": "reference",
                },
              },
            },
            {
              "key": "submissions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSubmissionsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductSubmission",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "variants",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductVariant",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductAvailability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductAvailability",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "emailAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductAvailabilityEmailAudiencesItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "enterpriseLicensing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subscriptionAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductAvailabilitySubscriptionAudiencesItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductBranch": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductBranch",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currentDraftInstanceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "module",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "variantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductFeatureAvailability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductFeatureAvailability",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "customMeters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityCustomMetersItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductVariantCustomMeter",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isHidden",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "marketStates",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityMarketStatesItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarketState",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "markets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityMarketsItem",
                    "nameOverride": undefined,
                    "schema": "AzureMarket",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "priceSchedules",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityPriceSchedulesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductVariantPriceSchedule",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "properties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityPropertiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": "ResourceType = FeatureAvailability",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subscriptionAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilitySubscriptionAudiencesItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "tenantAudiences",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductFeatureAvailabilityTenantAudiencesItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "trial",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureProductFeatureAvailabilityTrial",
                  "nameOverride": undefined,
                  "schema": "AzureProductVariantTrial",
                  "type": "reference",
                },
              },
            },
            {
              "key": "visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductFeatureAvailabilityVisibility",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Public",
                      "nameOverride": undefined,
                      "value": "Public",
                    },
                    {
                      "generatedName": "Private",
                      "nameOverride": undefined,
                      "value": "Private",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductListing": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductListing",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessInformation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "assets",
              "schema": {
                "description": "Not original fields. They are populated by other API calls",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductListingAssetsItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductListingAsset",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "compatibleProducts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gettingStartedInstructions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "languageCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "listingContacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductListingListingContactsItem",
                    "nameOverride": undefined,
                    "schema": "AzureListingContact",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "listingUris",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductListingListingUrisItem",
                    "nameOverride": undefined,
                    "schema": "AzureListingUri",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "productDisplayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "publisherName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductListingResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureListing",
                      "nameOverride": undefined,
                      "value": "AzureListing",
                    },
                  ],
                },
              },
            },
            {
              "key": "shortDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "summary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductListingAsset": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductListingAsset",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fileName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fileSasUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "order",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "publisherDefinedSasUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductListingAssetResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ListingAsset",
                      "nameOverride": undefined,
                      "value": "ListingAsset",
                    },
                    {
                      "generatedName": "ListingImage",
                      "nameOverride": undefined,
                      "value": "ListingImage",
                    },
                    {
                      "generatedName": "ListingVideo",
                      "nameOverride": undefined,
                      "value": "ListingVideo",
                    },
                  ],
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductListingAssetState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "PendingUpload",
                      "nameOverride": undefined,
                      "value": "PendingUpload",
                    },
                    {
                      "generatedName": "Uploaded",
                      "nameOverride": undefined,
                      "value": "Uploaded",
                    },
                    {
                      "generatedName": "InProcessing",
                      "nameOverride": undefined,
                      "value": "InProcessing",
                    },
                    {
                      "generatedName": "Processed",
                      "nameOverride": undefined,
                      "value": "Processed",
                    },
                    {
                      "generatedName": "ProcessFailed",
                      "nameOverride": undefined,
                      "value": "ProcessFailed",
                    },
                  ],
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductPackageConfiguration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductPackageConfiguration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "azureActiveDirectoryApplicationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azureActiveDirectoryTenantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "connectionWebhook",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "landingPageUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductPackageConfigurationResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureSoftwareAsAServicePackageConfiguration",
                      "nameOverride": undefined,
                      "value": "AzureSoftwareAsAServicePackageConfiguration",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductProperty": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductProperty",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "additionalCategories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "appVersion",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "applicableProducts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "categories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "customAmendments",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "extendedProperties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "globalAmendmentTerms",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "hideKeys",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "industries",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "leveledCategories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "key": "leveledIndustries",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
            {
              "key": "marketingOnlyChange",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productTags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "submissionVersion",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "termsOfUse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "useEnterpriseContract",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductSetup": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductSetup",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "callToAction",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSetupCallToAction",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "free",
                      "nameOverride": undefined,
                      "value": "free",
                    },
                    {
                      "generatedName": "FreeTrial",
                      "nameOverride": undefined,
                      "value": "free-trial",
                    },
                    {
                      "generatedName": "ContactMe",
                      "nameOverride": undefined,
                      "value": "contact-me",
                    },
                  ],
                },
              },
            },
            {
              "key": "channelStates",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSetupChannelStatesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "enableTestDrive",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSetupResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureProductSetup",
                      "nameOverride": undefined,
                      "value": "AzureProductSetup",
                    },
                  ],
                },
              },
            },
            {
              "key": "sellingOption",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSetupSellingOption",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ListingOnly",
                      "nameOverride": undefined,
                      "value": "ListingOnly",
                    },
                    {
                      "generatedName": "ListAndSell",
                      "nameOverride": undefined,
                      "value": "ListAndSell",
                    },
                  ],
                },
              },
            },
            {
              "key": "testDriveType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "trialUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductSubmission": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductSubmission",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "areResourcesReady",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pendingUpdateInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureProductSubmissionPendingUpdateInfo",
                  "nameOverride": undefined,
                  "schema": "AzurePendingUpdateInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "publishedTimeInUtc",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "releaseNumber",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSubmissionResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Submission",
                      "nameOverride": undefined,
                      "value": "Submission",
                    },
                  ],
                },
              },
            },
            {
              "key": "resources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSubmissionResourcesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSubmissionState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Inprogress",
                      "nameOverride": undefined,
                      "value": "Inprogress",
                    },
                    {
                      "generatedName": "Published",
                      "nameOverride": undefined,
                      "value": "Published",
                    },
                  ],
                },
              },
            },
            {
              "key": "subState",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductSubmissionSubState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "InDraft",
                      "nameOverride": undefined,
                      "value": "InDraft",
                    },
                    {
                      "generatedName": "Submitted",
                      "nameOverride": undefined,
                      "value": "Submitted",
                    },
                    {
                      "generatedName": "Failed",
                      "nameOverride": undefined,
                      "value": "Failed",
                    },
                    {
                      "generatedName": "FailedInCertification",
                      "nameOverride": undefined,
                      "value": "FailedInCertification",
                    },
                    {
                      "generatedName": "ReadyToPublish",
                      "nameOverride": undefined,
                      "value": "ReadyToPublish",
                    },
                    {
                      "generatedName": "Publishing",
                      "nameOverride": undefined,
                      "value": "Publishing",
                    },
                    {
                      "generatedName": "Published",
                      "nameOverride": undefined,
                      "value": "Published",
                    },
                    {
                      "generatedName": "InStore",
                      "nameOverride": undefined,
                      "value": "InStore",
                    },
                  ],
                },
              },
            },
            {
              "key": "targets",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSubmissionTargetsItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "variantResources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductSubmissionVariantResourcesItem",
                    "nameOverride": undefined,
                    "schema": "AzureVariantResource",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariant": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariant",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "azureGovernmentCertifications",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantAzureGovernmentCertificationsItem",
                    "nameOverride": undefined,
                    "schema": "AzureGovernmentCertification",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "cloudAvailabilities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "conversionPaths",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "extendedProperties",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantExtendedPropertiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "featureAvailabilities",
              "schema": {
                "description": "Not original fields. They are populated by other API calls",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantFeatureAvailabilitiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureProductFeatureAvailability",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "leadGenID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "referenceVariantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantResourceType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AzureSkuVariant",
                      "nameOverride": undefined,
                      "value": "AzureSkuVariant",
                    },
                    {
                      "generatedName": "AzureTestDriveVariant",
                      "nameOverride": undefined,
                      "value": "AzureTestDriveVariant",
                    },
                  ],
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantState",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "InActive",
                      "nameOverride": undefined,
                      "value": "InActive",
                    },
                    {
                      "generatedName": "Active",
                      "nameOverride": undefined,
                      "value": "Active",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariantCustomMeter": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariantCustomMeter",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "displayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "includedBaseQuantities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantCustomMeterIncludedBaseQuantitiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureIncludedBaseQuantity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "isEnabled",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceInUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "uniqueID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "unitOfMeasure",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariantPriceSchedule": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariantPriceSchedule",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dateTimeRange",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureProductVariantPriceScheduleDateTimeRange",
                  "nameOverride": undefined,
                  "schema": "AzureLocalizedTimeRange",
                  "type": "reference",
                },
              },
            },
            {
              "key": "friendlyName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isBaseSchedule",
              "schema": {
                "description": "There is only one base schedule.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "marketCodes",
              "schema": {
                "description": "ISO country code",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "schedules",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureProductVariantPriceScheduleSchedulesItem",
                    "nameOverride": undefined,
                    "schema": "AzurePriceSchedule",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureProductVariantTrial": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureProductVariantTrial",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dateTimeRange",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AzureProductVariantTrialDateTimeRange",
                  "nameOverride": undefined,
                  "schema": "AzureLocalizedTimeRange",
                  "type": "reference",
                },
              },
            },
            {
              "key": "duration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "durationType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantTrialDurationType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "Minute",
                      "nameOverride": undefined,
                      "value": "Minute",
                    },
                    {
                      "generatedName": "Days",
                      "nameOverride": undefined,
                      "value": "Days",
                    },
                    {
                      "generatedName": "Months",
                      "nameOverride": undefined,
                      "value": "Months",
                    },
                  ],
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "AzureProductVariantTrialType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "NoTrial",
                      "nameOverride": undefined,
                      "value": "NoTrial",
                    },
                    {
                      "generatedName": "TimedAccess",
                      "nameOverride": undefined,
                      "value": "TimedAccess",
                    },
                    {
                      "generatedName": "TimedUsage",
                      "nameOverride": undefined,
                      "value": "TimedUsage",
                    },
                    {
                      "generatedName": "Unlimited",
                      "nameOverride": undefined,
                      "value": "Unlimited",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureTypeValue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureTypeValue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureValidationResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureValidationResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "errorMessage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "memberNames",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "AzureVariantResource": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AzureVariantResource",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "resources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "AzureVariantResourceResourcesItem",
                    "nameOverride": undefined,
                    "schema": "AzureTypeValue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "variantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComAwsAwsSdkGoV2ServiceMarketplacemeteringTypesTag",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "key",
              "schema": {
                "description": "One part of a key-value pair that makes up a tag. A key is a label that acts
like a category for the specific tag values.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "description": "One part of a key-value pair that makes up a tag. A value acts as a descriptor
within a tag category (key). The value can be empty or null.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "result",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponseResultItem",
                    "nameOverride": undefined,
                    "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessage",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dimension",
              "schema": {
                "description": "Dimension identifier",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "effectiveStartTime",
              "schema": {
                "description": "Time in UTC when the usage event occurred",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "error",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageError",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse",
                  "type": "reference",
                },
              },
            },
            {
              "key": "messageTime",
              "schema": {
                "description": "Time this message was created in UTC",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planId",
              "schema": {
                "description": "Plan associated with the purchased offer",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": "Number of units consumed",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceId",
              "schema": {
                "description": "Identifier of the resource against which usage is emitted",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceUri",
              "schema": {
                "description": "Identifier of the managed app resource against which usage is emitted",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "Status of the operation.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageBatchEventOkMessageStatus",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "usageEventId",
              "schema": {
                "description": "Unique identifier associated with the usage event",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "additionalInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "code",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "acceptedMessage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventConflictResponseAdditionalInfoAcceptedMessage",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "dimension",
              "schema": {
                "description": "Dimension identifier",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "effectiveStartTime",
              "schema": {
                "description": "Time in UTC when the usage event occurred",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "messageTime",
              "schema": {
                "description": "Time this message was created in UTC",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planId",
              "schema": {
                "description": "Plan associated with the purchased offer",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": "Number of units consumed",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceId",
              "schema": {
                "description": "Identifier of the resource against which usage is emitted",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resourceUri",
              "schema": {
                "description": "Identifier of the managed app resource against which usage is emitted",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "Status of the operation.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventOkResponseStatus",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "usageEventId",
              "schema": {
                "description": "Unique identifier associated with the usage event",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum": {
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Accepted",
              "nameOverride": "Accepted",
              "value": "Accepted",
            },
            {
              "generatedName": "Expired",
              "nameOverride": "Expired",
              "value": "Expired",
            },
            {
              "generatedName": "Duplicate",
              "nameOverride": "Duplicate",
              "value": "Duplicate",
            },
            {
              "generatedName": "Error",
              "nameOverride": "Error",
              "value": "Error",
            },
            {
              "generatedName": "ResourceNotFound",
              "nameOverride": "ResourceNotFound",
              "value": "ResourceNotFound",
            },
            {
              "generatedName": "ResourceNotAuthorized",
              "nameOverride": "ResourceNotAuthorized",
              "value": "ResourceNotAuthorized",
            },
            {
              "generatedName": "InvalidDimension",
              "nameOverride": "InvalidDimension",
              "value": "InvalidDimension",
            },
            {
              "generatedName": "InvalidQuantity",
              "nameOverride": "InvalidQuantity",
              "value": "InvalidQuantity",
            },
            {
              "generatedName": "BadArgument",
              "nameOverride": "BadArgument",
              "value": "BadArgument",
            },
          ],
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "agreementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "amount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "balanceImpacting",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "bankTraceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "billingAddressID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "brokerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dataFeedProductID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "disbursementBillingEventID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endUserAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fromAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "insertDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInsertDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "invoiceDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventInvoiceDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "invoiceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "parentBillingEventID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentDueDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventPaymentDueDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "toAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "transactionReferenceID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "transactionType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usagePeriodEndDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodEndDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
            {
              "key": "usagePeriodStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEventUsagePeriodStartDate",
                  "nameOverride": undefined,
                  "schema": "sql.NullTime",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingAzureCmaRevenue",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "azureAssetID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azureBillingAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azureCustomerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azureOfferID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "azurePlanID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "billingModel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "earningUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "payoutStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "purchaseRecordID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "revenueUsd",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "termEndDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "termStartDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibBillingGcpChargeUsage",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "abandoned",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "accountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "charges",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dueVendor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "googleEntity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "insightAccountID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentSchedule",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "prepayCredits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundBalanceDeductedThisMonth",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundBalanceOutstanding",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundReason",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "released",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "resource",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sku",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "trialUse",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "unit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "withheld",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.UpdateBuyerNameDescriptionParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateBuyerNameDescriptionParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GithubComSugerioMarketplaceServiceRdsDbLibUpdateEntitlementNameParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "marketplacemetering.BatchMeterUsageOutput": {
          "allOf": [],
          "description": undefined,
          "generatedName": "MarketplacemeteringBatchMeterUsageOutput",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "resultMetadata",
              "schema": {
                "description": "Metadata pertaining to the operation's result.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "MarketplacemeteringBatchMeterUsageOutputResultMetadata",
                  "nameOverride": undefined,
                  "schema": "middleware.Metadata",
                  "type": "reference",
                },
              },
            },
            {
              "key": "results",
              "schema": {
                "description": "Contains all UsageRecords processed by BatchMeterUsage. These records were
either honored by AWS Marketplace Metering Service or were invalid. Invalid
records should be fixed before being resubmitted.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "MarketplacemeteringBatchMeterUsageOutputResultsItem",
                    "nameOverride": undefined,
                    "schema": "types.UsageRecordResult",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "unprocessedRecords",
              "schema": {
                "description": "Contains all UsageRecords that were not processed by BatchMeterUsage. This is a
list of UsageRecords. You can retry the failed request by making another
BatchMeterUsage call with this list as input in the BatchMeterUsageRequest.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "MarketplacemeteringBatchMeterUsageOutputUnprocessedRecordsItem",
                    "nameOverride": undefined,
                    "schema": "types.UsageRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "middleware.Metadata": {
          "description": undefined,
          "key": {
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "servicecontrol.ReportError": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ServicecontrolReportError",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "operationId",
              "schema": {
                "description": "OperationId: The Operation.operation_id value from the request.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "Status: Details of the error when processing the Operation.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ServicecontrolReportErrorStatus",
                  "nameOverride": undefined,
                  "schema": "servicecontrol.Status",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "servicecontrol.ReportResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ServicecontrolReportResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "reportErrors",
              "schema": {
                "description": "ReportErrors: Partial failures, one for each \`Operation\` in the
request that failed processing. There are three possible combinations
of the RPC status: 1. The combination of a successful RPC status and
an empty \`report_errors\` list indicates a complete success where all
\`Operations\` in the request are processed successfully. 2. The
combination of a successful RPC status and a non-empty
\`report_errors\` list indicates a partial success where some
\`Operations\` in the request succeeded. Each \`Operation\` that failed
processing has a corresponding item in this list. 3. A failed RPC
status indicates a general non-deterministic failure. When this
happens, it's impossible to know which of the 'Operations' in the
request succeeded or failed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "ServicecontrolReportResponseReportErrorsItem",
                    "nameOverride": undefined,
                    "schema": "servicecontrol.ReportError",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "serviceConfigId",
              "schema": {
                "description": "ServiceConfigId: The actual config id used to process the request.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serviceRolloutId",
              "schema": {
                "description": "ServiceRolloutId: The current service rollout id used to process the
request.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "servicecontrol.Status": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ServicecontrolStatus",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "code",
              "schema": {
                "description": "Code: The status code, which should be an enum value of
google.rpc.Code.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "details",
              "schema": {
                "description": "Details: A list of messages that carry the error details. There is a
common set of message types for APIs to use.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "int",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": "Message: A developer-facing error message, which should be in
English. Any user-facing error message should be localized and sent
in the google.rpc.Status.details field, or localized by the client.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AddEntitlementCreditParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAddEntitlementCreditParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creditAmountIncrement",
              "schema": {
                "description": "The amount to be added to the credit amount.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.AddEntitlementCreditResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAddEntitlementCreditResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creditAmountIncrement",
              "schema": {
                "description": "The amount to be added to the credit amount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementTermID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newCreditAmount",
              "schema": {
                "description": "The new credit amount after the increment.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ApiClientAccessToken": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedApiClientAccessToken",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": "The token expires in 1 hour",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsAccountIdentifier": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsAccountIdentifier",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsAccountID",
              "schema": {
                "description": "The AWS Account ID of the buyer in AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "awsCustomerID",
              "schema": {
                "description": "The AWS Customer ID of the buyer in AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "companyInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsAccountIdentifierCompanyInfo",
                  "nameOverride": undefined,
                  "schema": "shared.CompanyInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "dataFeedAccountID",
              "schema": {
                "description": "The Account ID in AWS Marketplace Data Feed service",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsAceIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsAceIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsAceIntegrationCredential",
                  "nameOverride": undefined,
                  "schema": "shared.AwsIntegrationCredential",
                  "type": "reference",
                },
              },
            },
            {
              "key": "partnerId",
              "schema": {
                "description": "The partner ID of the ISV/Seller in AWS Partner Network.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "s3BucketName",
              "schema": {
                "description": "The Name of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "s3BucketRegion",
              "schema": {
                "description": "The region of the S3 bucket for AWS APN Customer Engagement Program (ACE) to sync the leads & opportunities.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "secretKey",
              "schema": {
                "description": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsIntegrationCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsIntegrationCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessKeyId",
              "schema": {
                "description": "The access key ID of the IAM user for Suger service to access the client's AWS services.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "iamUserArn",
              "schema": {
                "description": "The ARN of the IAM user for Suger service to access the client's AWS services.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "secretAccessKey",
              "schema": {
                "description": "The secret access key of the IAM user for Suger service to access the client's AWS services.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsMarketplaceIntegration": {
          "allOf": [],
          "description": "The data struct to store integration info for Suger service to access the client's AWS services.",
          "generatedName": "SharedAwsMarketplaceIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "externalID",
              "schema": {
                "description": "The external ID for assuming IAM role. If empty, means no external ID set or needed. Otherwise, it should be auth_id in table identity.organization.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "iamRoleArn",
              "schema": {
                "description": "The AWS IAM role for Suger service to assume to access the client's AWS services.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "marketplaceStartDate",
              "schema": {
                "description": "AWS Marketplace start date which comes from MDFS Full-Sync.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mcasFullSyncDone",
              "schema": {
                "description": "Is AWS Marketplace Commerce Analytics Service (MCAS) full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mcasIamRoleArn",
              "schema": {
                "description": "IAM role ARN to allow AWS Marketplace to write to the S3 bucket and publish notifications to the SNS topic.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mcasS3Bucket",
              "schema": {
                "description": "S3 bucket for AWS Marketplace Commerce Analytics Service (MCAS)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mcasSnsTopic",
              "schema": {
                "description": "SNS topic ARN for AWS Marketplace Commerce Analytics Service (MCAS)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mdfsFullSyncDone",
              "schema": {
                "description": "Is AWS Marketplace Data Feeds Service (MDFS) full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mdfsKmsKeyArn",
              "schema": {
                "description": "KMS Key ARN for the S3 bucket of AWS Marketplace Data Feeds Service (MDFS)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "mdfsS3BucketArn",
              "schema": {
                "description": "S3 bucket ARN for AWS Marketplace Data Feeds Service (MDFS)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "policyArns",
              "schema": {
                "description": "The policy ARNs in the IAM role.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "revenueRecordFullSyncDone",
              "schema": {
                "description": "Is AWS Marketplace Revenue Record full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsSaasProductDescription",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSaasProductDescription",
                  "type": "reference",
                },
              },
            },
            {
              "key": "Dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedAwsSaasProductDimensionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSaasProductDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "PromotionalResources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsSaasProductPromotionalResources",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSaasProductPromotionalResources",
                  "type": "reference",
                },
              },
            },
            {
              "key": "SupportInformation",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsSaasProductSupportInformation",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSaasProductSupportInformation",
                  "type": "reference",
                },
              },
            },
            {
              "key": "Versions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedAwsSaasProductVersionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSaasProductVersion",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "dataFeedProductId",
              "schema": {
                "description": "The product Id in AWS Marketplace Data Feed Service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductAdditionalResource": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductAdditionalResource",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Text",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductDeliveryOption": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductDeliveryOption",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "FulfillmentUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductDescription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductDescription",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "AssociatedProducts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Categories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "EuW8Submitted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Highlights",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "LongDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Manufacturer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "ProductCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "ProductTitle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Registered",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "SearchKeywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "ShortDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Sku",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "UsW9Submitted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Visibility",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductDimension": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductDimension",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "Unit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductPromotionalResources": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductPromotionalResources",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "AdditionalResources",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedAwsSaasProductPromotionalResourcesAdditionalResourcesItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSaasProductAdditionalResource",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "LogoUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductSupportInformation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductSupportInformation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSaasProductVersion": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSaasProductVersion",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "DeliveryOptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedAwsSaasProductVersionDeliveryOptionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSaasProductDeliveryOption",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "Id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSnsSubscription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAwsSnsSubscription",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "Endpoint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Protocol",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "Status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAwsSnsSubscriptionStatus",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSnsSubscriptionStatus",
                  "type": "reference",
                },
              },
            },
            {
              "key": "SubscriptionArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "TopicArn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AwsSnsSubscriptionStatus": {
          "description": undefined,
          "generatedName": "SharedAwsSnsSubscriptionStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "UNKNOWN",
              "nameOverride": "UNKNOWN",
              "value": "UNKNOWN",
            },
            {
              "generatedName": "CONFIRMED",
              "nameOverride": "CONFIRMED",
              "value": "CONFIRMED",
            },
            {
              "generatedName": "PENDING_CONFIRMATION",
              "nameOverride": "PENDING_CONFIRMATION",
              "value": "PENDING_CONFIRMATION",
            },
          ],
        },
        "shared.AzureADIdentifier": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureAdIdentifier",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureAdIdentifierBuyerInfo",
                  "nameOverride": undefined,
                  "schema": "shared.AzureBuyerInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "companyInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureAdIdentifierCompanyInfo",
                  "nameOverride": undefined,
                  "schema": "shared.CompanyInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "emailId",
              "schema": {
                "description": "Email address",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "objectId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "puid",
              "schema": {
                "description": "ID of the user, used as External ID of suger IdentityBuyer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tenantId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureBuyerInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureBuyerInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "billingAccountId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "customerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "firstName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "cmaFullSyncDone",
              "schema": {
                "description": "Is Azure Commercial Marketplace Analytics (CMA) full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureIntegrationCredential",
                  "nameOverride": undefined,
                  "schema": "shared.AzureIntegrationCredential",
                  "type": "reference",
                },
              },
            },
            {
              "key": "secretKey",
              "schema": {
                "description": "The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureIntegrationCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureIntegrationCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "clientID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "clientSecret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expiresOn",
              "schema": {
                "description": "The time when the access token expires.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refreshToken",
              "schema": {
                "description": "The refresh token used to refresh the access token.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tenantID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tokenScope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tokenType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureMarketplaceSubscription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureMarketplaceSubscription",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allowedCustomerOperations",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "SharedAzureMarketplaceSubscriptionAllowedCustomerOperationsItem",
                    "nameOverride": undefined,
                    "type": "enum",
                    "values": [
                      {
                        "generatedName": "Read",
                        "nameOverride": undefined,
                        "value": "Read",
                      },
                      {
                        "generatedName": "Update",
                        "nameOverride": undefined,
                        "value": "Update",
                      },
                      {
                        "generatedName": "Delete",
                        "nameOverride": undefined,
                        "value": "Delete",
                      },
                    ],
                  },
                },
              },
            },
            {
              "key": "autoRenew",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "beneficiary",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionBeneficiary",
                  "nameOverride": undefined,
                  "schema": "shared.AzureADIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "key": "created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fulfillmentId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isFreeTrial",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isTest",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastModified",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "planId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "publisherId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "purchaser",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionPurchaser",
                  "nameOverride": undefined,
                  "schema": "shared.AzureADIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "saasSubscriptionStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionSaasSubscriptionStatus",
                  "nameOverride": undefined,
                  "schema": "shared.AzureMarketplaceSubscriptionStatus",
                  "type": "reference",
                },
              },
            },
            {
              "key": "sandboxType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionSandboxType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "None",
                      "nameOverride": undefined,
                      "value": "None",
                    },
                    {
                      "generatedName": "Csp",
                      "nameOverride": undefined,
                      "value": "Csp",
                    },
                  ],
                },
              },
            },
            {
              "key": "sessionId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sessionMode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionSessionMode",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "None",
                      "nameOverride": undefined,
                      "value": "None",
                    },
                    {
                      "generatedName": "DryRun",
                      "nameOverride": undefined,
                      "value": "DryRun",
                    },
                  ],
                },
              },
            },
            {
              "key": "storeFront",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "term",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedAzureMarketplaceSubscriptionTerm",
                  "nameOverride": undefined,
                  "schema": "shared.AzureTerm",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.AzureMarketplaceSubscriptionStatus": {
          "description": undefined,
          "generatedName": "SharedAzureMarketplaceSubscriptionStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "NotStarted",
              "nameOverride": "NotStarted",
              "value": "NotStarted",
            },
            {
              "generatedName": "PendingFulfillmentStart",
              "nameOverride": "PendingFulfillmentStart",
              "value": "PendingFulfillmentStart",
            },
            {
              "generatedName": "Subscribed",
              "nameOverride": "Subscribed",
              "value": "Subscribed",
            },
            {
              "generatedName": "Suspended",
              "nameOverride": "Suspended",
              "value": "Suspended",
            },
            {
              "generatedName": "Unsubscribed",
              "nameOverride": "Unsubscribed",
              "value": "Unsubscribed",
            },
          ],
        },
        "shared.AzureTerm": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedAzureTerm",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "chargeDuration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "startDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "termUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.BuyerInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedBuyerInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsBuyer",
              "schema": {
                "description": "Buyer from AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedBuyerInfoAwsBuyer",
                  "nameOverride": undefined,
                  "schema": "shared.AwsAccountIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureBuyer",
              "schema": {
                "description": "Buyer from Azure Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedBuyerInfoAzureBuyer",
                  "nameOverride": undefined,
                  "schema": "shared.AzureADIdentifier",
                  "type": "reference",
                },
              },
            },
            {
              "key": "collectableAmount",
              "schema": {
                "description": "The amount that the seller can collect. It excludes the marketplace commision fee.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "disbursedAmount",
              "schema": {
                "description": "The amount that has been disbursed to the seller account.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpBuyer",
              "schema": {
                "description": "Buyer from GCP Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedBuyerInfoGcpBuyer",
                  "nameOverride": undefined,
                  "schema": "shared.GcpMarketplaceUserAccount",
                  "type": "reference",
                },
              },
            },
            {
              "key": "invoicedAmount",
              "schema": {
                "description": "The amount that the buyer has got invoiced.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.CommitDimension": {
          "allOf": [],
          "description": "The commit dimension. There may be one or more commit dimensions defined in single product, offer or entitlement.",
          "generatedName": "SharedCommitDimension",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "category",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isUserCreated",
              "schema": {
                "description": "Whether this commit dimension is newly created by user when creating AWS Marketplace Contract private offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "key",
              "schema": {
                "description": "API name of the dimension",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "length",
              "schema": {
                "description": "The term length for the commit amount, such as 6 months, or 1 year. length is used together with timeUnit",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "maximumUsers",
              "schema": {
                "description": "The maximum number of users for PER_USER commit",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "minimumUsers",
              "schema": {
                "description": "The minimum number of users for PER_USER commit",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Display name of the dimension",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": "The quantity of this commit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rate",
              "schema": {
                "description": "The commit amount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timeUnit",
              "schema": {
                "description": "The term unit for the commit amount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedCommitDimensionTimeUnit",
                  "nameOverride": undefined,
                  "schema": "shared.CommitDimensionTimeUnit",
                  "type": "reference",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedCommitDimensionType",
                  "nameOverride": undefined,
                  "schema": "shared.CommitDimensionType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.CommitDimensionTimeUnit": {
          "description": undefined,
          "generatedName": "SharedCommitDimensionTimeUnit",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "DAY",
              "nameOverride": "DAY",
              "value": "DAY",
            },
            {
              "generatedName": "MONTH",
              "nameOverride": "MONTH",
              "value": "MONTH",
            },
            {
              "generatedName": "YEAR",
              "nameOverride": "YEAR",
              "value": "YEAR",
            },
          ],
        },
        "shared.CommitDimensionType": {
          "description": undefined,
          "generatedName": "SharedCommitDimensionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "FLAT_RATE",
              "nameOverride": "FLAT_RATE",
              "value": "FLAT_RATE",
            },
            {
              "generatedName": "PER_USER",
              "nameOverride": "PER_USER",
              "value": "PER_USER",
            },
          ],
        },
        "shared.CompanyInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedCompanyInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "addressLine1",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "addressLine2",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "city",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "country",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "emailDomain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "postalCode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.Contact": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedContact",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "company",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.CreateIntegrationParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedCreateIntegrationParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SharedCreateIntegrationParamsInfo",
                "nameOverride": undefined,
                "schema": "shared.IntegrationInfo",
                "type": "reference",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "SharedCreateIntegrationParamsPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "generatedName": "SharedCreateIntegrationParamsService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                ],
              },
            },
          ],
          "type": "object",
        },
        "shared.CreateUsageRecordGroupParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedCreateUsageRecordGroupParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "uuid of the UsageRecordGroup (the size is up to 36 characters), if not provided, suger will generate one.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metaInfo",
              "schema": {
                "description": "read-only, don't set it when reporting the usage record group.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedCreateUsageRecordGroupParamsMetaInfo",
                  "nameOverride": undefined,
                  "schema": "shared.MeteringUsageRecordGroupMetaInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "records",
              "schema": {
                "description": undefined,
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntitlementInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedEntitlementInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "autoRenew",
              "schema": {
                "description": "Is this Entitlement Auto Renew enabled.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "awsEntitlements",
              "schema": {
                "description": "Nullable. AWS Entitlements from AWS Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoAwsEntitlementsItem",
                    "nameOverride": undefined,
                    "schema": "types.Entitlement",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "azureSubscriptions",
              "schema": {
                "description": "Nullable. Azure Subscriptions from Azure Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoAzureSubscriptionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AzureMarketplaceSubscription",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "collectableAmount",
              "schema": {
                "description": "The amount that the seller can collect. It excludes the marketplace commision fee.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "commitAmount",
              "schema": {
                "description": "The amount that the buyer has committed to pay. It can be the sum of payment installments if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "commits",
              "schema": {
                "description": "The dimensions for commit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoCommitsItem",
                    "nameOverride": undefined,
                    "schema": "shared.CommitDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": "The default Currency is USD.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimensions",
              "schema": {
                "description": "The dimensions for usage-based metering.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoDimensionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "disbursedAmount",
              "schema": {
                "description": "The amount that has been disbursed to the seller account.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "discount",
              "schema": {
                "description": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "eulaType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedEntitlementInfoEulaType",
                  "nameOverride": undefined,
                  "schema": "shared.EulaType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpEntitlements",
              "schema": {
                "description": "Nullable. GCP Entitlements from GCP Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoGcpEntitlementsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpMarketplaceEntitlement",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "gcpPlans",
              "schema": {
                "description": "Only applicable for GCP Marketplace Entitlements.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoGcpPlansItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpPurchasePlan",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "invoicedAmount",
              "schema": {
                "description": "The amount that the buyer has got invoiced.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentInstallments",
              "schema": {
                "description": "For flexible payment schedules",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedEntitlementInfoPaymentInstallmentsItem",
                    "nameOverride": undefined,
                    "schema": "shared.PaymentInstallment",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "refundCancelationPolicy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sellerNotes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntitlementTermInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedEntitlementTermInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedEntitlementTermInfoType",
                  "nameOverride": undefined,
                  "schema": "shared.EntitlementTermType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntitlementTermType": {
          "description": undefined,
          "generatedName": "SharedEntitlementTermType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "",
              "nameOverride": "Unknown",
              "value": "",
            },
            {
              "generatedName": "AutoRenew",
              "nameOverride": "AutoRenew",
              "value": "AutoRenew",
            },
            {
              "generatedName": "ManualRenew",
              "nameOverride": "ManualRenew",
              "value": "ManualRenew",
            },
            {
              "generatedName": "PlanChange",
              "nameOverride": "PlanChange",
              "value": "PlanChange",
            },
            {
              "generatedName": "QuantityChange",
              "nameOverride": "QuantityChange",
              "value": "QuantityChange",
            },
            {
              "generatedName": "Signup",
              "nameOverride": "Signup",
              "value": "Signup",
            },
          ],
        },
        "shared.EntitlementUsageRecord": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedEntitlementUsageRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "amounts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "keys",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "quantities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.EntityType": {
          "description": undefined,
          "generatedName": "SharedEntityType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ORGANIZATION",
              "nameOverride": "ORGANIZATION",
              "value": "ORGANIZATION",
            },
            {
              "generatedName": "PRODUCT",
              "nameOverride": "PRODUCT",
              "value": "PRODUCT",
            },
            {
              "generatedName": "OFFER",
              "nameOverride": "OFFER",
              "value": "OFFER",
            },
            {
              "generatedName": "ENTITLEMENT",
              "nameOverride": "ENTITLEMENT",
              "value": "ENTITLEMENT",
            },
            {
              "generatedName": "ENTITLEMENT_TERM",
              "nameOverride": "ENTITLEMENT_TERM",
              "value": "ENTITLEMENT_TERM",
            },
            {
              "generatedName": "INTEGRATION",
              "nameOverride": "INTEGRATION",
              "value": "INTEGRATION",
            },
          ],
        },
        "shared.EulaType": {
          "description": undefined,
          "generatedName": "SharedEulaType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "",
              "nameOverride": "UNKNOWN",
              "value": "",
            },
            {
              "generatedName": "SCMP",
              "nameOverride": "SCMP",
              "value": "SCMP",
            },
            {
              "generatedName": "ECMP",
              "nameOverride": "ECMP",
              "value": "ECMP",
            },
            {
              "generatedName": "CUSTOM",
              "nameOverride": "CUSTOM",
              "value": "CUSTOM",
            },
            {
              "generatedName": "ISV",
              "nameOverride": "ISV",
              "value": "ISV",
            },
            {
              "generatedName": "CURRENT",
              "nameOverride": "CURRENT",
              "value": "CURRENT",
            },
          ],
        },
        "shared.GcpCommerceProducerExternalAccountSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerExternalAccountSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "loginUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "signupUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "singleSignOnUri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerListingSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerListingSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "externalAccountSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerListingSpecExternalAccountSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerExternalAccountSpec",
                  "type": "reference",
                },
              },
            },
            {
              "key": "listingType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerListingSpecListingType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "BillingIntegratedManagedService",
                      "nameOverride": undefined,
                      "value": "BillingIntegratedManagedService",
                    },
                  ],
                },
              },
            },
            {
              "key": "marketingSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerListingSpecMarketingSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerMarketingSpec",
                  "type": "reference",
                },
              },
            },
            {
              "key": "purchaseSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerListingSpecPurchaseSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPurchaseSpec",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerMarketingSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerMarketingSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "displayNames",
              "schema": {
                "description": "In format of "{provider-id}/{product-name}"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalMarketingUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "icon",
              "schema": {
                "description": "In format of "base64://..."",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "searchCategories",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "searchDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "searchKeywords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "shortTitle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "supportSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerMarketingSpecSupportSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerSupportSpec",
                  "type": "reference",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "The product title.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPrice": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPrice",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "currencyCode",
              "schema": {
                "description": "ISO currency code, Three UPPER_CASE characters",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "nanos",
              "schema": {
                "description": "Decimal part of the price. For example, 2000000 = 0.002, 200000000 = 0.2",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "units",
              "schema": {
                "description": "Integer part of the price.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceModel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceInfoPriceModel",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPriceModel",
                  "type": "reference",
                },
              },
            },
            {
              "key": "subscriptionPlans",
              "schema": {
                "description": "Commit price plan, when priceModel = SUBSCRIPTION or SUBSCRIPTION_PLUS_USAGE.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPriceInfoSubscriptionPlansItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPriceSubscription",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "usageFees",
              "schema": {
                "description": "Usage based metering plan, when priceModel =  USAGE or SUBSCRIPTION_PLUS_USAGE",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPriceInfoUsageFeesItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPriceUsage",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceModel": {
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceModel",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "FREE",
              "nameOverride": "FREE",
              "value": "FREE",
            },
            {
              "generatedName": "SUBSCRIPTION",
              "nameOverride": "SUBSCRIPTION",
              "value": "SUBSCRIPTION",
            },
            {
              "generatedName": "USAGE",
              "nameOverride": "USAGE",
              "value": "USAGE",
            },
            {
              "generatedName": "SUBSCRIPTION_PLUS_USAGE",
              "nameOverride": "SUBSCRIPTION_PLUS_USAGE",
              "value": "SUBSCRIPTION_PLUS_USAGE",
            },
          ],
        },
        "shared.GcpCommerceProducerPriceSubscription": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceSubscription",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "period",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceSubscriptionPeriod",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ONE_YEAR",
                      "nameOverride": undefined,
                      "value": "ONE_YEAR",
                    },
                  ],
                },
              },
            },
            {
              "key": "price",
              "schema": {
                "description": "the Monthly subscription fee as commit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceSubscriptionPrice",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPrice",
                  "type": "reference",
                },
              },
            },
            {
              "key": "taxCategoryOverride",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceSubscriptionTaxCategoryOverride",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "TAX_CATEGORY_UNSPECIFIED",
                      "nameOverride": undefined,
                      "value": "TAX_CATEGORY_UNSPECIFIED",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceTier": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceTier",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "endUsageAmount",
              "schema": {
                "description": "The usage amount below which this tier is effective.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "price",
              "schema": {
                "description": "The price of this tier",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceTierPrice",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPrice",
                  "type": "reference",
                },
              },
            },
            {
              "key": "startUsageAmount",
              "schema": {
                "description": "The usage amount beyond which this tier is effective.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPriceUsage": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPriceUsage",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "displayQuantity",
              "schema": {
                "description": "Default value is 1.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metricId",
              "schema": {
                "description": "the usage metering dimension key",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceTiers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPriceUsagePriceTiersItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPriceTier",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "taxCategoryOverride",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpCommerceProducerPriceUsageTaxCategoryOverride",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "TAX_CATEGORY_UNSPECIFIED",
                      "nameOverride": undefined,
                      "value": "TAX_CATEGORY_UNSPECIFIED",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPurchaseMetric": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPurchaseMetric",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": "Description: A detailed description of the metric, which can be used in documentation.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "displayName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "displayUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "displayUnitDescription",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "The usage metering dimension key, in format of "{plan_key}_{usage_dimension_key}"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metricKind",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Name: The resource name of the metric descriptor, in format of "{service_name}/{plan_key}_{usage_dimension_key}"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportingUnit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "unit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "valueType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerPurchaseMetricValueType",
                  "nameOverride": undefined,
                  "schema": "shared.ValueType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerPurchaseSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerPurchaseSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metrics",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPurchaseSpecMetricsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPurchaseMetric",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "purchaseOptionSpecs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerPurchaseSpecPurchaseOptionSpecsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpPurchasePlan",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerServiceBilling": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerServiceBilling",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "metrics",
              "schema": {
                "description": "in format of ["{product-name}.endpoints.{provider-id}.cloud.goog/{plan_key}_{usage_dimension_key}"]",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerServiceConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerServiceConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "billing",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpCommerceProducerServiceConfigBilling",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerServiceBilling",
                  "type": "reference",
                },
              },
            },
            {
              "key": "metrics",
              "schema": {
                "description": "Metrics: Defines the metrics used by this service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpCommerceProducerServiceConfigMetricsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPurchaseMetric",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "In format of "{product-name}.endpoints.{provider-id}.cloud.goog"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "producerProjectId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "The Product title",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpCommerceProducerSupportSpec": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpCommerceProducerSupportSpec",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "uri",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "gcpProjectId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpProjectNumber",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "identityProviderId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partnerId",
              "schema": {
                "description": "The GCP Marketplace Partner ID, it is also called as Provider ID somewhere.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "pubsubTopic",
              "schema": {
                "description": "The resource name of the Pub/Sub topic to receive notifications from Google when a user signs up for your service, purchases a plan, or changes an existing plan.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportBucket",
              "schema": {
                "description": "The GCP storage bucket name to store the GCP Marketplace reports.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportFullSyncDone",
              "schema": {
                "description": "Is GCP Marketplace Report full-sync done.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportStartDate",
              "schema": {
                "description": "The UTC date when GCP Marketplace reprots start to generate.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serviceAccountEmail",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serviceNames",
              "schema": {
                "description": "The array of service resource names of the listings in GCP Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "workloadIdentityPoolId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceConsumer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceConsumer",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "project",
              "schema": {
                "description": "The project name with format \`projects/\`.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceEntitlement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "account",
              "schema": {
                "description": "The resource name of the account that this entitlement is based on, if any, in format ""providers/{provider_id}/accounts/{account_id}"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "consumers",
              "schema": {
                "description": "The resources using this entitlement, if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpMarketplaceEntitlementConsumersItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpMarketplaceConsumer",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "createTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Entitlement Id generated by GCP Marketplace. For Marketplace pub/sub event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "inputProperties",
              "schema": {
                "description": "The custom properties that were collected from the user to create this entitlement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "messageToUser",
              "schema": {
                "description": "Provider-supplied message that is displayed to the end user. Currently this is used to communicate progress and ETA for
provisioning. This field can be updated only when a user is waiting for an action from the provider, i.e. entitlement state is
EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically when the entitlement state changes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The resource name of the entitlement. Entitlement names have the form \`providers/{provider_id}/entitlements/{entitlement_id}\`.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newOfferDuration",
              "schema": {
                "description": "in ISO 8601 duration format, such as "P2Y3M". For Marketplace pub/sub event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newOfferEndTime",
              "schema": {
                "description": "Output only. The end time of the new offer. Field is empty if the pending plan change is not moving to an offer.
If the offer was created with a term instead of a specified end date, this field is empty.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newOfferStartTime",
              "schema": {
                "description": "Output only. The start time of the new offer. Field is empty if the pending plan change is not moving to an offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newPendingOffer",
              "schema": {
                "description": "The name of the offer the entitlement is switching to upon a pending plan change. Only exists if the
pending plan change is moving to an offer. Format:
'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
'projects/{project}/services/{service}/standardOffers/{offer-id}',
depending on whether the offer is private or public.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newPendingOfferDuration",
              "schema": {
                "description": "The offer duration of the new offer in ISO 8601 duration format. Field is empty if the pending plan
change is not moving to an offer since the entitlement is not pending, only the plan change is pending.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newPendingPlan",
              "schema": {
                "description": "The identifier of the pending new plan. Required if the product has plans and the entitlement has a pending plan change.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "newPlan",
              "schema": {
                "description": "When the buyer changes plan, For Marketplace pub/sub event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offer",
              "schema": {
                "description": "The name of the offer that was procured. Field is empty if order was not made using an offer. Format:
'projects/{project}/services/{service}/privateOffers/{offer-id}' OR 'projects/{project}/services/{service}/standardOffers/{offer-id}',
depending on whether the offer is private or public.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerDuration",
              "schema": {
                "description": "The offer duration of the current offer in ISO 8601 duration format. Field is empty if entitlement was not made using an offer, such as "P1Y", "P2M"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerEndTime",
              "schema": {
                "description": "Output only. End time for the Offer association corresponding to this entitlement. The field is only populated if the entitlement is currently associated with an Offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "plan",
              "schema": {
                "description": "The identifier of the plan that was procured. Required if the product has plans.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "product",
              "schema": {
                "description": "The identifier of the entity that was purchased. This may actually represent a product, quote, or offer.
For Private offer, "projects/project-id/services/product-id.endpoints.partner-id.cloud.goog/privateOffers/private-offer-id"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productExternalName",
              "schema": {
                "description": "The identifier of the product that was procured.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "provider",
              "schema": {
                "description": "The ID of the service provider under Cloud Commerce platform that this entitlement was created against.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quoteExternalName",
              "schema": {
                "description": "The identifier of the quote that was used to procure, such as the private offer Id. Empty if the order is not purchased using a quote.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": "Enums of the Entitlement State. https://cloud.google.com/marketplace/docs/partners/commerce-procurement-api/reference/rest/v1/providers.entitlements#EntitlementState",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpMarketplaceEntitlementState",
                  "nameOverride": undefined,
                  "schema": "shared.GcpMarketplaceEntitlementState",
                  "type": "reference",
                },
              },
            },
            {
              "key": "subscriptionEndTime",
              "schema": {
                "description": "The End time for the subscription corresponding to this entitlement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "updateTime",
              "schema": {
                "description": "The last update timestamp. It is the endTime for the cancelled entitlement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageReportingId",
              "schema": {
                "description": "The consumerId to use when reporting usage through the Service Control API. See the consumerId field at
Reporting Metrics (https://cloud.google.com/service-control/reporting-metrics) for more details.
This field is present only if the product has usage-based billing configured.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceEntitlementState": {
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceEntitlementState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ENTITLEMENT_STATE_UNSPECIFIED",
              "nameOverride": "STATE_UNSPECIFIED",
              "value": "ENTITLEMENT_STATE_UNSPECIFIED",
            },
            {
              "generatedName": "ENTITLEMENT_ACTIVATION_REQUESTED",
              "nameOverride": "ACTIVATION_REQUESTED",
              "value": "ENTITLEMENT_ACTIVATION_REQUESTED",
            },
            {
              "generatedName": "ENTITLEMENT_ACTIVE",
              "nameOverride": "ACTIVE",
              "value": "ENTITLEMENT_ACTIVE",
            },
            {
              "generatedName": "ENTITLEMENT_PENDING_CANCELLATION",
              "nameOverride": "PENDING_CANCELLATION",
              "value": "ENTITLEMENT_PENDING_CANCELLATION",
            },
            {
              "generatedName": "ENTITLEMENT_CANCELLED",
              "nameOverride": "CANCELLED",
              "value": "ENTITLEMENT_CANCELLED",
            },
            {
              "generatedName": "ENTITLEMENT_PENDING_PLAN_CHANGE",
              "nameOverride": "PENDING_PLAN_CHANGE",
              "value": "ENTITLEMENT_PENDING_PLAN_CHANGE",
            },
            {
              "generatedName": "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL",
              "nameOverride": "PENDING_PLAN_CHANGE_APPROVAL",
              "value": "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL",
            },
            {
              "generatedName": "ENTITLEMENT_SUSPENDED",
              "nameOverride": "SUSPENDED",
              "value": "ENTITLEMENT_SUSPENDED",
            },
          ],
        },
        "shared.GcpMarketplaceUserAccount": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccount",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "approvals",
              "schema": {
                "description": "The approvals for this account, that are permitted or have been completed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedGcpMarketplaceUserAccountApprovalsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpMarketplaceUserAccountApproval",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "createTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "GCP Marketplace User Account ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "inputProperties",
              "schema": {
                "description": "RFC3339 UTC timestamp",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "int",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "The resource name of the account. Account names have the form providers/{provider_id}/accounts/{account_id}.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "provider",
              "schema": {
                "description": "The identifier of the service provider (SaaS Seller) that this account was created against.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": "The state of the account. An account might not be able to make a purchase if the billing account is suspended, for example.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpMarketplaceUserAccountState",
                  "nameOverride": undefined,
                  "schema": "shared.GcpMarketplaceUserAccountState",
                  "type": "reference",
                },
              },
            },
            {
              "key": "updateTime",
              "schema": {
                "description": "RFC3339 UTC timestamp",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "userInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpMarketplaceUserAccountUserInfo",
                  "nameOverride": undefined,
                  "schema": "shared.GcpUserInfo",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceUserAccountApproval": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccountApproval",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reason",
              "schema": {
                "description": "An explanation for the state of the approval.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpMarketplaceUserAccountApprovalState",
                  "nameOverride": undefined,
                  "schema": "shared.GcpMarketplaceUserAccountApprovalState",
                  "type": "reference",
                },
              },
            },
            {
              "key": "updateTime",
              "schema": {
                "description": "RFC3339 UTC timestamp",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpMarketplaceUserAccountApprovalState": {
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccountApprovalState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "STATE_UNSPECIFIED",
              "nameOverride": "STATE_UNSPECIFIED",
              "value": "STATE_UNSPECIFIED",
            },
            {
              "generatedName": "PENDING",
              "nameOverride": "PENDING",
              "value": "PENDING",
            },
            {
              "generatedName": "APPROVED",
              "nameOverride": "APPROVED",
              "value": "APPROVED",
            },
            {
              "generatedName": "REJECTED",
              "nameOverride": "REJECTED",
              "value": "REJECTED",
            },
          ],
        },
        "shared.GcpMarketplaceUserAccountState": {
          "description": undefined,
          "generatedName": "SharedGcpMarketplaceUserAccountState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACCOUNT_STATE_UNSPECIFIED",
              "nameOverride": "UNSPECIFIED",
              "value": "ACCOUNT_STATE_UNSPECIFIED",
            },
            {
              "generatedName": "ACCOUNT_ACTIVE",
              "nameOverride": "ACTIVE",
              "value": "ACCOUNT_ACTIVE",
            },
          ],
        },
        "shared.GcpProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Nullable, GCP Marketplace Product UUID",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "listingSpec",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpProductListingSpec",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerListingSpec",
                  "type": "reference",
                },
              },
            },
            {
              "key": "marketplace",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpProductMarketplace",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MarketplacesGoogleCloud",
                      "nameOverride": undefined,
                      "value": "marketplaces/google-cloud",
                    },
                  ],
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "In format of "projects/{project-number}/listings/{product-name}.endpoints.{provider-id}.cloud.goog"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": "In format of "services/{product-name}.endpoints.{provider-id}.cloud.goog"",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "serviceConfig",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpProductServiceConfig",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerServiceConfig",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpPurchasePlan": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpPurchasePlan",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "name",
              "schema": {
                "description": "The Plan key.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "priceInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedGcpPurchasePlanPriceInfo",
                  "nameOverride": undefined,
                  "schema": "shared.GcpCommerceProducerPriceInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "purchaseMode",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedGcpPurchasePlanPurchaseMode",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "PURCHASE_MODE_PUBLIC",
                      "nameOverride": undefined,
                      "value": "PURCHASE_MODE_PUBLIC",
                    },
                  ],
                },
              },
            },
            {
              "key": "title",
              "schema": {
                "description": "The Plan title",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GcpUserInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGcpUserInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "roles",
              "schema": {
                "description": "An array of strings representing the user's roles. Right now, it can be either: ** account_admin, which indicates that the user is a Billing Account Administrator of the billing account that purchased the product, or ** project_editor, which indicates that the user is a Project Editor, but not a Billing Administrator, of the project under that billing account.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "user_identity",
              "schema": {
                "description": "The user's obfuscated GAIA ID, which can be used to initiate Open ID Connect.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.GetApiClientAccessTokenParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGetApiClientAccessTokenParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the API Client.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "secret",
              "schema": {
                "description": "The secret of the API Client.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.GetRevenueReportParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGetRevenueReportParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerID",
              "schema": {
                "description": "Optional, if available, return the report for the Buyer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": "Optional, if available, return the report for the Entitlement.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": "Required. If the productID & entitlementID are emtpy, return the report for the entire Organization.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": "Required.",
                "generatedName": "SharedGetRevenueReportParamsPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": "Optional, if available, return the report for the Product.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportType",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SharedGetRevenueReportParamsReportType",
                "nameOverride": undefined,
                "schema": "shared.RevenueReportType",
                "type": "reference",
              },
            },
            {
              "key": "service",
              "schema": {
                "description": "Required.",
                "generatedName": "SharedGetRevenueReportParamsService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                ],
              },
            },
          ],
          "type": "object",
        },
        "shared.GetUsageReportParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedGetUsageReportParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.HubspotCrmCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedHubspotCrmCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "acquiredOn",
              "schema": {
                "description": "UTC timestamp on receiving the auth response",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expiresIn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.HubspotCrmIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedHubspotCrmIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "credential",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedHubspotCrmIntegrationCredential",
                  "nameOverride": undefined,
                  "schema": "shared.HubspotCrmCredential",
                  "type": "reference",
                },
              },
            },
            {
              "key": "portalId",
              "schema": {
                "description": "Hubspot Account Id",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "secretKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.IdentityBuyer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedIdentityBuyer",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIdentityBuyerInfo",
                  "nameOverride": undefined,
                  "schema": "shared.BuyerInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityBuyerPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.IdentityIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedIdentityIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIdentityIntegrationInfo",
                  "nameOverride": undefined,
                  "schema": "shared.IntegrationInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastUpdatedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityIntegrationPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityIntegrationService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedIdentityIntegrationStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "CREATED",
                      "nameOverride": undefined,
                      "value": "CREATED",
                    },
                    {
                      "generatedName": "VERIFIED",
                      "nameOverride": undefined,
                      "value": "VERIFIED",
                    },
                    {
                      "generatedName": "NOT_VERIFIED",
                      "nameOverride": undefined,
                      "value": "NOT_VERIFIED",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.IntegrationInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedIntegrationInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsAceIntegration",
              "schema": {
                "description": "AWS ACE Integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoAwsAceIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.AwsAceIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "awsIntegration",
              "schema": {
                "description": "AWS Marketplace Integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoAwsIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.AwsMarketplaceIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureIntegration",
              "schema": {
                "description": "Azure Marketplace Integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoAzureIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.AzureIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "gcpIntegration",
              "schema": {
                "description": "GCP Marketplace Integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoGcpIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.GcpIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "hubspotCrmIntegration",
              "schema": {
                "description": "Integration for HubSpot CRM",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoHubspotCrmIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.HubspotCrmIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "salesforceCrmIntegration",
              "schema": {
                "description": "Integration for Salesforce CRM",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoSalesforceCrmIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.SalesforceCrmIntegration",
                  "type": "reference",
                },
              },
            },
            {
              "key": "slackIntegration",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedIntegrationInfoSlackIntegration",
                  "nameOverride": undefined,
                  "schema": "shared.SlackIntegration",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListRevenueRecordDetailsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListRevenueRecordDetailsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "revenueRecordDetails",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedListRevenueRecordDetailsResponseRevenueRecordDetailsItem",
                    "nameOverride": undefined,
                    "schema": "shared.RevenueRecordDetail",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListRevenueRecordsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListRevenueRecordsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "revenueRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedListRevenueRecordsResponseRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "shared.RevenueRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListUsageRecordGroupsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListUsageRecordGroupsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecordGroups",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedListUsageRecordGroupsResponseUsageRecordGroupsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringUsageRecordGroup",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ListUsageRecordReportsResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedListUsageRecordReportsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "nextOffset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecordReports",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedListUsageRecordReportsResponseUsageRecordReportsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringUsageRecordReport",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringDimension": {
          "allOf": [],
          "description": "The dimension to meter usage in entitlement.",
          "generatedName": "SharedMeteringDimension",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "category",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "includedBaseQuantities",
              "schema": {
                "description": "how many quantities of this dimension are included in the commit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedMeteringDimensionIncludedBaseQuantitiesItem",
                    "nameOverride": undefined,
                    "schema": "AzureIncludedBaseQuantity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "key",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": "Display name of the dimension",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "rate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "usageCount",
              "schema": {
                "description": "The current Dimension Usage Count. Available when call GetEntitlement API.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringDimensionUsageCount",
                  "nameOverride": undefined,
                  "schema": "shared.UsageCount",
                  "type": "reference",
                },
              },
            },
            {
              "key": "valueType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringDimensionValueType",
                  "nameOverride": undefined,
                  "schema": "shared.ValueType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordGroup": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordGroup",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metaInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordGroupMetaInfo",
                  "nameOverride": undefined,
                  "schema": "shared.MeteringUsageRecordGroupMetaInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "records",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "serialID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecordReportID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordGroupMetaInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordGroupMetaInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "originRecords",
              "schema": {
                "description": "The original records reported by the customer before convertion. If no dimension mapping is applied, this field is the same as the records field.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordReport": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordReport",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementTermID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordReportInfo",
                  "nameOverride": undefined,
                  "schema": "shared.MeteringUsageRecordReportInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.MeteringUsageRecordReportInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedMeteringUsageRecordReportInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsMeteringResponse",
              "schema": {
                "description": "The raw response from AWS metering service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordReportInfoAwsMeteringResponse",
                  "nameOverride": undefined,
                  "schema": "marketplacemetering.BatchMeterUsageOutput",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureMeteringResponse",
              "schema": {
                "description": "The raw response from Azure metering service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordReportInfoAzureMeteringResponse",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse",
                  "type": "reference",
                },
              },
            },
            {
              "key": "commitAmount",
              "schema": {
                "description": "The amount of the commit if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creditAmount",
              "schema": {
                "description": "The amount of the credit if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creditRecords",
              "schema": {
                "description": "The credit usage records in the map of <DimensionKey, Count>",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "dimensionUnitPrice",
              "schema": {
                "description": "The unit price of each dimension in the map of <DimensionKey, UnitPrice>",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "endTime",
              "schema": {
                "description": "time in UTC when the UsageRecordReport ends",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpMeteringResponse",
              "schema": {
                "description": "The raw response from GCP metering service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedMeteringUsageRecordReportInfoGcpMeteringResponse",
                  "nameOverride": undefined,
                  "schema": "servicecontrol.ReportResponse",
                  "type": "reference",
                },
              },
            },
            {
              "key": "includedRecords",
              "schema": {
                "description": "The included usage records in the map of <DimensionKey, Count>",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "reportedRecords",
              "schema": {
                "description": "The reported usage records in the map of <DimensionKey, Count>",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "startTime",
              "schema": {
                "description": "time in UTC when the UsageRecordReport starts",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecordGroupIds",
              "schema": {
                "description": "The IDs of UsageRecordGroups aggregated in this UsageRecordReport.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "usedCommitAmount",
              "schema": {
                "description": "The amount of the used commit before the this usage record report if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCommitAmountIncrement",
              "schema": {
                "description": "The amount of the used commit increment in this usage record report if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCreditAmount",
              "schema": {
                "description": "The amount of the used credit before the this usage record report if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCreditAmountIncrement",
              "schema": {
                "description": "The amount of the used credit increment in this usage record report if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.NotificationEvent": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedNotificationEvent",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedNotificationEventAction",
                  "nameOverride": undefined,
                  "schema": "shared.NotificationEventAction",
                  "type": "reference",
                },
              },
            },
            {
              "key": "entityID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entityStatus",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entityType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedNotificationEventEntityType",
                  "nameOverride": undefined,
                  "schema": "shared.EntityType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "eventID",
              "schema": {
                "description": "notification event id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "eventStatus",
              "schema": {
                "description": "notification event status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedNotificationEventEventStatus",
                  "nameOverride": undefined,
                  "schema": "shared.NotificationEventStatus",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": "timestamp of the event when it is updated.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": "suger organization id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "timestamp of the event when it is scheduled or created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.NotificationEventAction": {
          "description": undefined,
          "generatedName": "SharedNotificationEventAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACCEPT",
              "nameOverride": "ACCEPT",
              "value": "ACCEPT",
            },
            {
              "generatedName": "CREATE",
              "nameOverride": "CREATE",
              "value": "CREATE",
            },
            {
              "generatedName": "DELETE",
              "nameOverride": "DELETE",
              "value": "DELETE",
            },
            {
              "generatedName": "CANCEL",
              "nameOverride": "CANCEL",
              "value": "CANCEL",
            },
            {
              "generatedName": "PENDING_CANCEL",
              "nameOverride": "PENDING_CANCEL",
              "value": "PENDING_CANCEL",
            },
            {
              "generatedName": "EXPIRE",
              "nameOverride": "EXPIRE",
              "value": "EXPIRE",
            },
            {
              "generatedName": "REINSTATE",
              "nameOverride": "REINSTATE",
              "value": "REINSTATE",
            },
            {
              "generatedName": "SUSPEND",
              "nameOverride": "SUSPEND",
              "value": "SUSPEND",
            },
            {
              "generatedName": "UPDATE",
              "nameOverride": "UPDATE",
              "value": "UPDATE",
            },
            {
              "generatedName": "NOTIFY_CONTACTS",
              "nameOverride": "NOTIFY_CONTACTS",
              "value": "NOTIFY_CONTACTS",
            },
            {
              "generatedName": "TEST",
              "nameOverride": "TEST",
              "value": "TEST",
            },
          ],
        },
        "shared.NotificationEventStatus": {
          "description": undefined,
          "generatedName": "SharedNotificationEventStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "",
              "nameOverride": "UNKNOWN",
              "value": "",
            },
            {
              "generatedName": "SCHEDULED",
              "nameOverride": "SCHEDULED",
              "value": "SCHEDULED",
            },
            {
              "generatedName": "PENDING",
              "nameOverride": "PENDING",
              "value": "PENDING",
            },
            {
              "generatedName": "DONE",
              "nameOverride": "DONE",
              "value": "DONE",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": "FAILED",
              "value": "FAILED",
            },
          ],
        },
        "shared.OfferInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedOfferInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "azureOriginalPlan",
              "schema": {
                "description": "The origin pricing of Azure plan. Only applicable for Azure Marketplace plans.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedOfferInfoAzureOriginalPlan",
                  "nameOverride": undefined,
                  "schema": "AzurePriceAndAvailabilityPrivateOfferPlan",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azurePrivateOffer",
              "schema": {
                "description": "The private offer for Azure Marketplace. Only applicable for Azure Marketplace private offers.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedOfferInfoAzurePrivateOffer",
                  "nameOverride": undefined,
                  "schema": "AzureMarketplacePrivateOffer",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureProductVariant",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedOfferInfoAzureProductVariant",
                  "nameOverride": undefined,
                  "schema": "AzureProductVariant",
                  "type": "reference",
                },
              },
            },
            {
              "key": "buyerAwsAccountIds",
              "schema": {
                "description": "The buyers' AWS Account IDs of this offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "buyerAzureTenants",
              "schema": {
                "description": "The buyers' Azure tenants of this offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoBuyerAzureTenantsItem",
                    "nameOverride": undefined,
                    "schema": "AzureAudience",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "commits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoCommitsItem",
                    "nameOverride": undefined,
                    "schema": "shared.CommitDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoDimensionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "discount",
              "schema": {
                "description": "The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0 which is no discount.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "eulaType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedOfferInfoEulaType",
                  "nameOverride": undefined,
                  "schema": "shared.EulaType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpMetrics",
              "schema": {
                "description": "Only applicable for GCP Marketplace Offers (the default or private offer)",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoGcpMetricsItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpCommerceProducerPurchaseMetric",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "gcpPlans",
              "schema": {
                "description": "Only applicable for GCP Marketplace Offers (the default or private offer).",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoGcpPlansItem",
                    "nameOverride": undefined,
                    "schema": "shared.GcpPurchasePlan",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "paymentInstallments",
              "schema": {
                "description": "For flexible payment schedule. Not empty if it is enabled.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferInfoPaymentInstallmentsItem",
                    "nameOverride": undefined,
                    "schema": "shared.PaymentInstallment",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "privateOfferUrl",
              "schema": {
                "description": "The URL of the private offer sent to buyers to accept. Only applicable for private offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundCancelationPolicy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sellerNotes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "visibility",
              "schema": {
                "description": "The default visibility of offer is PRIVATE.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedOfferInfoVisibility",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "PRIVATE",
                      "nameOverride": undefined,
                      "value": "PRIVATE",
                    },
                    {
                      "generatedName": "PUBLIC",
                      "nameOverride": undefined,
                      "value": "PUBLIC",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.OfferMetaInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedOfferMetaInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "baseAgreementId",
              "schema": {
                "description": "Applicable for AWS Marketplace only, when the IsAgreementBasedOffer is true.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "contacts",
              "schema": {
                "description": "The contacts of the offer to notify if any updates.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferMetaInfoContactsItem",
                    "nameOverride": undefined,
                    "schema": "shared.Contact",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "isAgreementBasedOffer",
              "schema": {
                "description": "Applicable for AWS Marketplace only, If this offer is agreement based offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isRenewalOffer",
              "schema": {
                "description": "Applicable for AWS Marketplace only, If this offer is renewal offer.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "notifications",
              "schema": {
                "description": "The notifications of the offer if any updates. In most cases, it is to notify contacts/buyers when the offer is pending acceptance.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedOfferMetaInfoNotificationsItem",
                    "nameOverride": undefined,
                    "schema": "shared.NotificationEvent",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.Operation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedOperation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "endTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": "Operation ID.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedOperationType",
                  "nameOverride": undefined,
                  "schema": "shared.OperationType",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.OperationType": {
          "description": undefined,
          "generatedName": "SharedOperationType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "TemporalWorkflow",
              "nameOverride": "OperationType_TemporalWorkflow",
              "value": "TemporalWorkflow",
            },
          ],
        },
        "shared.PaymentInstallment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedPaymentInstallment",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "amount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "chargeOn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ProductInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedProductInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "attributes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "awsSaasProduct",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedProductInfoAwsSaasProduct",
                  "nameOverride": undefined,
                  "schema": "shared.AwsSaasProduct",
                  "type": "reference",
                },
              },
            },
            {
              "key": "awsSnsSubscriptions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedProductInfoAwsSnsSubscriptionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.AwsSnsSubscription",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "azureProduct",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedProductInfoAzureProduct",
                  "nameOverride": undefined,
                  "schema": "AzureProduct",
                  "type": "reference",
                },
              },
            },
            {
              "key": "commits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedProductInfoCommitsItem",
                    "nameOverride": undefined,
                    "schema": "shared.CommitDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimensions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedProductInfoDimensionsItem",
                    "nameOverride": undefined,
                    "schema": "shared.MeteringDimension",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "eulaUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "gcpProduct",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedProductInfoGcpProduct",
                  "nameOverride": undefined,
                  "schema": "shared.GcpProduct",
                  "type": "reference",
                },
              },
            },
            {
              "key": "refundCancelationPolicy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "sellerNotes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueRecord": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "amount",
              "schema": {
                "description": "The revenue amount for the revenue report",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "collectableAmount",
              "schema": {
                "description": "The revenue amount that the seller/ISV can collect.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "currency",
              "schema": {
                "description": "The currency of the revenue in ISO 4217 format, such as "USD".",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "date",
              "schema": {
                "description": "The date for the revenue report",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "disburseAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "disburseDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedRevenueRecordInfo",
                  "nameOverride": undefined,
                  "schema": "shared.RevenueRecordInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "invoiceAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "invoiceDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "paymentDueDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundDisburseAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundDisburseDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundInvoiceAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refundInvoiceDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "taxAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueRecordDetail": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueRecordDetail",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsRevenueRecordDetail",
              "schema": {
                "description": "For AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedRevenueRecordDetailAwsRevenueRecordDetail",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
                  "type": "reference",
                },
              },
            },
            {
              "key": "azureRevenueRecordDetail",
              "schema": {
                "description": "For Azure Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedRevenueRecordDetailAzureRevenueRecordDetail",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
                  "type": "reference",
                },
              },
            },
            {
              "key": "gcpRevenueRecordDetail",
              "schema": {
                "description": "For GCP Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedRevenueRecordDetailGcpRevenueRecordDetail",
                  "nameOverride": undefined,
                  "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueRecordInfo": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueRecordInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "awsRevenueRecords",
              "schema": {
                "description": "For raw revenue records in AWS Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedRevenueRecordInfoAwsRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "azureRevenueRecords",
              "schema": {
                "description": "For raw revenue records in Azure Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedRevenueRecordInfoAzureRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "gcpRevenueRecords",
              "schema": {
                "description": "For raw revenue records in GCP Marketplace",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedRevenueRecordInfoGcpRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueReport": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedRevenueReport",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedRevenueReportReportType",
                  "nameOverride": undefined,
                  "schema": "shared.RevenueReportType",
                  "type": "reference",
                },
              },
            },
            {
              "key": "revenueRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedRevenueReportRevenueRecordsItem",
                    "nameOverride": undefined,
                    "schema": "shared.RevenueRecord",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.RevenueReportType": {
          "description": undefined,
          "generatedName": "SharedRevenueReportType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "InvoicedAmount",
              "nameOverride": "InvoicedAmount",
              "value": "InvoicedAmount",
            },
            {
              "generatedName": "CollectableAmount",
              "nameOverride": "CollectableAmount",
              "value": "CollectableAmount",
            },
            {
              "generatedName": "DisbursedAmount",
              "nameOverride": "DisbursedAmount",
              "value": "DisbursedAmount",
            },
          ],
        },
        "shared.SalesforceCrmCredential": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSalesforceCrmCredential",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "exp",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "instance_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refresh_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.SalesforceCrmIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSalesforceCrmIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "credential",
              "schema": {
                "description": "System created",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedSalesforceCrmIntegrationCredential",
                  "nameOverride": undefined,
                  "schema": "shared.SalesforceCrmCredential",
                  "type": "reference",
                },
              },
            },
            {
              "key": "filters",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedSalesforceCrmIntegrationFiltersItem",
                    "nameOverride": undefined,
                    "schema": "shared.SalesforceSyncFilter",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "key": "instanceUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "isSandbox",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "secretKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "subdomain",
              "schema": {
                "description": "User defined when setting up the integration",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.SalesforceSyncFilter": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSalesforceSyncFilter",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fieldName",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "operator",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "type": "unknown",
              },
            },
          ],
          "type": "object",
        },
        "shared.SlackIntegration": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedSlackIntegration",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "appId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "authedUser",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedSlackIntegrationAuthedUser",
                  "nameOverride": undefined,
                  "schema": "slack.OAuthV2ResponseAuthedUser",
                  "type": "reference",
                },
              },
            },
            {
              "key": "botUserId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "enterprise",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedSlackIntegrationEnterprise",
                  "nameOverride": undefined,
                  "schema": "slack.OAuthV2ResponseEnterprise",
                  "type": "reference",
                },
              },
            },
            {
              "key": "expiresIn",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "incomingWebhook",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedSlackIntegrationIncomingWebhook",
                  "nameOverride": undefined,
                  "schema": "slack.OAuthResponseIncomingWebhook",
                  "type": "reference",
                },
              },
            },
            {
              "key": "redirectUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": "The scope of the access token. multiple scopes are separated by comma.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "team",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedSlackIntegrationTeam",
                  "nameOverride": undefined,
                  "schema": "slack.OAuthV2ResponseTeam",
                  "type": "reference",
                },
              },
            },
            {
              "key": "tokenType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.UpdateIntegrationParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUpdateIntegrationParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "SharedUpdateIntegrationParamsInfo",
                "nameOverride": undefined,
                "schema": "shared.IntegrationInfo",
                "type": "reference",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "generatedName": "SharedUpdateIntegrationParamsPartner",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "AWS",
                    "nameOverride": undefined,
                    "value": "AWS",
                  },
                  {
                    "generatedName": "AZURE",
                    "nameOverride": undefined,
                    "value": "AZURE",
                  },
                  {
                    "generatedName": "GCP",
                    "nameOverride": undefined,
                    "value": "GCP",
                  },
                ],
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "generatedName": "SharedUpdateIntegrationParamsService",
                "nameOverride": undefined,
                "type": "enum",
                "values": [
                  {
                    "generatedName": "MARKETPLACE",
                    "nameOverride": undefined,
                    "value": "MARKETPLACE",
                  },
                ],
              },
            },
          ],
          "type": "object",
        },
        "shared.UpdateProductParams": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUpdateProductParams",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "fulfillmentUrl",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "shared.UsageCount": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUsageCount",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "creditCount",
              "schema": {
                "description": "The count of this dimension usage records that are handled as credit.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "includedCount",
              "schema": {
                "description": "The count of this dimension usage records that are handled as included in IncludedBaseQuantity",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportedCount",
              "schema": {
                "description": "The count of this dimension usage records that are reported to cloud vendors.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.UsageReport": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedUsageReport",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "reportDate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageRecords",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "SharedUsageReportUsageRecordsItem",
                    "nameOverride": undefined,
                    "schema": "shared.EntitlementUsageRecord",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.ValueType": {
          "description": undefined,
          "generatedName": "SharedValueType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "VALUE_TYPE_UNSPECIFIED",
              "nameOverride": "UNSPECIFIED",
              "value": "VALUE_TYPE_UNSPECIFIED",
            },
            {
              "generatedName": "BOOL",
              "nameOverride": "BOOL",
              "value": "BOOL",
            },
            {
              "generatedName": "INT64",
              "nameOverride": "INT64",
              "value": "INT64",
            },
            {
              "generatedName": "DOUBLE",
              "nameOverride": "DOUBLE",
              "value": "DOUBLE",
            },
            {
              "generatedName": "STRING",
              "nameOverride": "STRING",
              "value": "STRING",
            },
            {
              "generatedName": "DISTRIBUTION",
              "nameOverride": "DISTRIBUTION",
              "value": "DISTRIBUTION",
            },
            {
              "generatedName": "MONEY",
              "nameOverride": "MONEY",
              "value": "MONEY",
            },
          ],
        },
        "shared.WorkloadEntitlement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endTime",
              "schema": {
                "description": "nullable",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementTermID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalBuyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalProductID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadEntitlementInfo",
                  "nameOverride": undefined,
                  "schema": "shared.EntitlementInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ACTIVE",
                      "nameOverride": undefined,
                      "value": "ACTIVE",
                    },
                    {
                      "generatedName": "CANCELLED",
                      "nameOverride": undefined,
                      "value": "CANCELLED",
                    },
                    {
                      "generatedName": "SUSPENDED",
                      "nameOverride": undefined,
                      "value": "SUSPENDED",
                    },
                    {
                      "generatedName": "PENDING_START",
                      "nameOverride": undefined,
                      "value": "PENDING_START",
                    },
                    {
                      "generatedName": "UNKNOWN",
                      "nameOverride": undefined,
                      "value": "UNKNOWN",
                    },
                  ],
                },
              },
            },
            {
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.WorkloadEntitlementTerm": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadEntitlementTerm",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "buyerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "commitAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creditAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endTime",
              "schema": {
                "description": "nullable",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "entitlementInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermEntitlementInfo",
                  "nameOverride": undefined,
                  "schema": "shared.EntitlementInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "externalEntitlementID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermInfo",
                  "nameOverride": undefined,
                  "schema": "shared.EntitlementTermInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "offerID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadEntitlementTermService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "startTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCommitAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usedCreditAmount",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.WorkloadOffer": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadOffer",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "endTime",
              "schema": {
                "description": "nullable",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expireTime",
              "schema": {
                "description": "nullable",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadOfferInfo",
                  "nameOverride": undefined,
                  "schema": "shared.OfferInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastUpdatedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "metaInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadOfferMetaInfo",
                  "nameOverride": undefined,
                  "schema": "shared.OfferMetaInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "offerType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferOfferType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "DEFAULT",
                      "nameOverride": undefined,
                      "value": "DEFAULT",
                    },
                    {
                      "generatedName": "CONTRACT",
                      "nameOverride": undefined,
                      "value": "CONTRACT",
                    },
                    {
                      "generatedName": "SUBSCRIPTION",
                      "nameOverride": undefined,
                      "value": "SUBSCRIPTION",
                    },
                    {
                      "generatedName": "FREE_TRIAL",
                      "nameOverride": undefined,
                      "value": "FREE_TRIAL",
                    },
                    {
                      "generatedName": "FLAT_RATE",
                      "nameOverride": undefined,
                      "value": "FLAT_RATE",
                    },
                    {
                      "generatedName": "PER_USER",
                      "nameOverride": undefined,
                      "value": "PER_USER",
                    },
                    {
                      "generatedName": "PRIVATE",
                      "nameOverride": undefined,
                      "value": "PRIVATE",
                    },
                    {
                      "generatedName": "UNKNOWN",
                      "nameOverride": undefined,
                      "value": "UNKNOWN",
                    },
                  ],
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "productID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadOfferStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "ACCEPTED",
                      "nameOverride": undefined,
                      "value": "ACCEPTED",
                    },
                    {
                      "generatedName": "PENDING_CREATE",
                      "nameOverride": undefined,
                      "value": "PENDING_CREATE",
                    },
                    {
                      "generatedName": "CREATE_FAILED",
                      "nameOverride": undefined,
                      "value": "CREATE_FAILED",
                    },
                    {
                      "generatedName": "CREATE_SUCCESS",
                      "nameOverride": undefined,
                      "value": "CREATE_SUCCESS",
                    },
                    {
                      "generatedName": "DRAFT",
                      "nameOverride": undefined,
                      "value": "DRAFT",
                    },
                    {
                      "generatedName": "EXPIRED",
                      "nameOverride": undefined,
                      "value": "EXPIRED",
                    },
                    {
                      "generatedName": "PENDING_ACCEPTANCE",
                      "nameOverride": undefined,
                      "value": "PENDING_ACCEPTANCE",
                    },
                    {
                      "generatedName": "PENDING_CANCEL",
                      "nameOverride": undefined,
                      "value": "PENDING_CANCEL",
                    },
                    {
                      "generatedName": "CANCEL_FAILED",
                      "nameOverride": undefined,
                      "value": "CANCEL_FAILED",
                    },
                    {
                      "generatedName": "CANCEL_SUCCESS",
                      "nameOverride": undefined,
                      "value": "CANCEL_SUCCESS",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "shared.WorkloadProduct": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SharedWorkloadProduct",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "createdBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "creationTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "externalID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "fulfillmentUrl",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SharedWorkloadProductInfo",
                  "nameOverride": undefined,
                  "schema": "shared.ProductInfo",
                  "type": "reference",
                },
              },
            },
            {
              "key": "lastUpdateTime",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "lastUpdatedBy",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "organizationID",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "partner",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadProductPartner",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "AWS",
                      "nameOverride": undefined,
                      "value": "AWS",
                    },
                    {
                      "generatedName": "AZURE",
                      "nameOverride": undefined,
                      "value": "AZURE",
                    },
                    {
                      "generatedName": "GCP",
                      "nameOverride": undefined,
                      "value": "GCP",
                    },
                  ],
                },
              },
            },
            {
              "key": "productType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadProductProductType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "UNKNOWN",
                      "nameOverride": undefined,
                      "value": "UNKNOWN",
                    },
                    {
                      "generatedName": "SUBSCRIPTION",
                      "nameOverride": undefined,
                      "value": "SUBSCRIPTION",
                    },
                    {
                      "generatedName": "CONTRACT",
                      "nameOverride": undefined,
                      "value": "CONTRACT",
                    },
                    {
                      "generatedName": "FLAT_RATE",
                      "nameOverride": undefined,
                      "value": "FLAT_RATE",
                    },
                    {
                      "generatedName": "PER_USER",
                      "nameOverride": undefined,
                      "value": "PER_USER",
                    },
                    {
                      "generatedName": "USAGE_BASED",
                      "nameOverride": undefined,
                      "value": "USAGE_BASED",
                    },
                  ],
                },
              },
            },
            {
              "key": "service",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SharedWorkloadProductService",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "generatedName": "MARKETPLACE",
                      "nameOverride": undefined,
                      "value": "MARKETPLACE",
                    },
                  ],
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthResponseIncomingWebhook": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthResponseIncomingWebhook",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "channel",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "channel_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "configuration_url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthV2ResponseAuthedUser": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthV2ResponseAuthedUser",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "access_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expires_in",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "refresh_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "scope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthV2ResponseEnterprise": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthV2ResponseEnterprise",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "slack.OAuthV2ResponseTeam": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlackOAuthV2ResponseTeam",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "sql.NullTime": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SqlNullTime",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "time",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "valid",
              "schema": {
                "description": "Valid is true if Time is not NULL",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "types.Entitlement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesEntitlement",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "customerIdentifier",
              "schema": {
                "description": "The customer identifier is a handle to each unique customer in an application.
Customer identifiers are obtained through the ResolveCustomer operation in AWS
Marketplace Metering Service.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimension",
              "schema": {
                "description": "The dimension for which the given entitlement applies. Dimensions represent
categories of capacity in a product and are specified when the product is listed
in AWS Marketplace.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "expirationDate",
              "schema": {
                "description": "The expiration date represents the minimum date through which this entitlement
is expected to remain valid. For contractual products listed on AWS Marketplace,
the expiration date is the date at which the customer will renew or cancel their
contract. Customers who are opting to renew their contract will still have
entitlements with an expiration date.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "productCode",
              "schema": {
                "description": "The product code for which the given entitlement applies. Product codes are
provided by AWS Marketplace when the product listing is created.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "value",
              "schema": {
                "type": "unknown",
              },
            },
          ],
          "type": "object",
        },
        "types.UsageAllocation": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesUsageAllocation",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "allocatedUsageQuantity",
              "schema": {
                "description": "The total quantity allocated to this bucket of usage.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "tags",
              "schema": {
                "description": "The set of tags that define the bucket of usage. For the bucket of items with no
tags, this parameter can be left out.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TypesUsageAllocationTagsItem",
                    "nameOverride": undefined,
                    "schema": "github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageRecord": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesUsageRecord",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "customerIdentifier",
              "schema": {
                "description": "The CustomerIdentifier is obtained through the ResolveCustomer operation and
represents an individual buyer in your application.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "dimension",
              "schema": {
                "description": "During the process of registering a product on AWS Marketplace, dimensions are
specified. These represent different units of value in your application.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quantity",
              "schema": {
                "description": "The quantity of usage consumed by the customer for the given dimension and time.
Defaults to 0 if not specified.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "Timestamp, in UTC, for which the usage is being reported. Your application can
meter usage for up to one hour in the past. Make sure the timestamp value is not
before the start of the software usage.

This member is required.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "usageAllocations",
              "schema": {
                "description": "The set of UsageAllocations to submit. The sum of all UsageAllocation quantities
must equal the Quantity of the UsageRecord.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TypesUsageRecordUsageAllocationsItem",
                    "nameOverride": undefined,
                    "schema": "types.UsageAllocation",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageRecordResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TypesUsageRecordResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "meteringRecordId",
              "schema": {
                "description": "The MeteringRecordId is a unique identifier for this metering event.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "The UsageRecordResultStatus indicates the status of an individual UsageRecord
processed by BatchMeterUsage.

* Success- The UsageRecord was accepted and
honored by BatchMeterUsage.

* CustomerNotSubscribed- The CustomerIdentifier
specified is not able to use your product. The UsageRecord was not honored.
There are three causes for this result:

* The customer identifier is
invalid.

* The customer identifier provided in the metering record does not
have an active agreement or subscription with this product. Future UsageRecords
for this customer will fail until the customer subscribes to your product.

*
The customer's AWS account was suspended.

* DuplicateRecord- Indicates that the
UsageRecord was invalid and not honored. A previously metered UsageRecord had
the same customer, dimension, and time, but a different quantity.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TypesUsageRecordResultStatus",
                  "nameOverride": undefined,
                  "schema": "types.UsageRecordResultStatus",
                  "type": "reference",
                },
              },
            },
            {
              "key": "usageRecord",
              "schema": {
                "description": "The UsageRecord that was part of the BatchMeterUsage request.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TypesUsageRecordResultUsageRecord",
                  "nameOverride": undefined,
                  "schema": "types.UsageRecord",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "types.UsageRecordResultStatus": {
          "description": undefined,
          "generatedName": "TypesUsageRecordResultStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "Success",
              "nameOverride": "Success",
              "value": "Success",
            },
            {
              "generatedName": "CustomerNotSubscribed",
              "nameOverride": "CustomerNotSubscribed",
              "value": "CustomerNotSubscribed",
            },
            {
              "generatedName": "DuplicateRecord",
              "nameOverride": "DuplicateRecord",
              "value": "DuplicateRecord",
            },
          ],
        },
      },
      "securitySchemes": {
        "BearerTokenAuth": {
          "headerName": "Authorization",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": undefined,
          "name": undefined,
          "url": "//https://api.suger.cloud",
        },
      ],
      "tags": [],
      "title": "Suger API",
    },
  },
  "rootPackage": {
    "file": "swagger.json",
    "name": "",
    "subpackages": [],
  },
}
`;

exports[`open api parser vellum simple 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "
## Vellum API Documentation

### Welcome 👋
Welcome to Vellum's API documentation! Here you'll find information about the various endpoints available to you,
as well as the parameters and responses that they accept and return.

We will be exposing more and more of our APIs over time as they stabilize. If there is some action you can perform
via the UI that you wish you could perform via API, please let us know and we can expose it here in an unstable state.

### API Stability
Some of the APIs documented within are undergoing active development. Use the
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>
and
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>
tags to differentiate between those that are stable and those that are not.

### Base URLs
Some endpoints are hosted separately from the main Vellum API and therefore have a different base url. If this is
the case, they will say so in their description.

Unless otherwise specified, all endpoints use <code>https://api.vellum.ai</code> as their base URL.

### Official API Clients:
Vellum maintains official API clients for Python and Node/Typescript. We recommend using these clients to interact
with all stable endpoints. You can find them here:
- [Python](https://github.com/vocify/vellum-client-python)
- [Node/Typescript](https://github.com/vocify/vellum-client-node)
",
      "endpoints": [
        {
          "authed": true,
          "description": "
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to list documents. Optionally filter on supported fields.
",
          "errors": [],
          "generatedRequestName": "DocumentsListRequest",
          "headers": [],
          "method": "GET",
          "operationId": "documents_list",
          "path": "/v1/documents",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": undefined,
              "name": "document_index_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "offset",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": undefined,
              "name": "ordering",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": "ListDocumentsRequest",
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DocumentsListResponse",
              "nameOverride": undefined,
              "schema": "PaginatedSlimDocumentList",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "documents",
          ],
        },
        {
          "authed": true,
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Generate a completion using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errors": [],
          "generatedRequestName": "GenerateRequest",
          "headers": [],
          "method": "POST",
          "operationId": "generate",
          "path": "/v1/generate",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GenerateRequest",
              "nameOverride": undefined,
              "schema": "GenerateRequestBodyRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "GenerateResponse",
              "nameOverride": undefined,
              "schema": "GenerateResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "generate",
          ],
        },
        {
          "authed": true,
          "description": "
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Used to retrieve a model version given its ID.
",
          "errors": [],
          "generatedRequestName": "ModelVersionsRetrieveRequest",
          "headers": [],
          "method": "GET",
          "operationId": "model_versions_retrieve",
          "path": "/v1/model-versions/{id}",
          "pathParameters": [
            {
              "description": undefined,
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ModelVersionsRetrieveResponse",
              "nameOverride": undefined,
              "schema": "ModelVersionRead",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "model-versions",
          ],
        },
        {
          "authed": true,
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Perform a search against a document index.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errors": [],
          "generatedRequestName": "SearchRequest",
          "headers": [],
          "method": "POST",
          "operationId": "search",
          "path": "/v1/search",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SearchRequest",
              "nameOverride": undefined,
              "schema": "SearchRequestBodyRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SearchResponse",
              "nameOverride": undefined,
              "schema": "SearchResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [
            {
              "description": undefined,
              "name": "Predict",
              "url": "https://predict.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "search",
          ],
        },
        {
          "authed": true,
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to submit feedback regarding the quality of previously generated completions.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
          "errors": [],
          "generatedRequestName": "SubmitCompletionActualsRequest",
          "headers": [],
          "method": "POST",
          "operationId": "submit_completion_actuals",
          "path": "/v1/submit-completion-actuals",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "SubmitCompletionActualsRequest",
              "nameOverride": undefined,
              "schema": "SubmitCompletionActualsRequestRequest",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [
            {
              "description": undefined,
              "name": "Predict",
              "url": "https://predict.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "submit-completion-actuals",
          ],
        },
        {
          "authed": true,
          "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Upload a document to be indexed and used for search.

**Note:** Uses a base url of \`https://documents.vellum.ai\`.",
          "errors": [],
          "generatedRequestName": "DocumentsUploadRequest",
          "headers": [],
          "method": "POST",
          "operationId": "documents_upload",
          "path": "/v1/upload-document",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "name": "UploadDocumentRequestBodyRequest",
            "properties": [
              {
                "description": undefined,
                "key": "add_to_index_names",
                "schema": {
                  "json": {
                    "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "type": "array",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "external_id",
                "schema": {
                  "json": {
                    "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "label",
                "schema": {
                  "json": {
                    "description": "A human-friendly name for this document. Typically the filename.",
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "type": "json",
                },
              },
              {
                "description": undefined,
                "key": "contents",
                "schema": {
                  "type": "file",
                },
              },
              {
                "description": undefined,
                "key": "keywords",
                "schema": {
                  "json": {
                    "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "type": "array",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  "type": "json",
                },
              },
            ],
            "type": "multipart",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DocumentsUploadResponse",
              "nameOverride": undefined,
              "schema": "UploadDocumentResponse",
              "type": "reference",
            },
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [
            {
              "description": undefined,
              "name": "Documents",
              "url": "https://documents.vellum.ai",
            },
          ],
          "summary": undefined,
          "tags": [
            "documents",
          ],
        },
      ],
      "nonRequestReferencedSchemas": [
        "PaginatedSlimDocumentList",
        "GenerateResponse",
        "ModelVersionRead",
        "SearchResponse",
        "UploadDocumentResponse",
        "IndexingStateEnum",
        "FinishReasonEnum",
        "NormalizedLogProbs",
        "LogprobsEnum",
        "GenerateRequestRequest",
        "GenerateOptionsRequest",
        "GenerateResult",
        "GenerateResultData",
        "GenerateResultError",
        "EnrichedNormalizedCompletion",
        "ModelVersionSandboxSnapshot",
        "ModelVersionExecConfigParameters",
        "ModelTypeEnum",
        "ProviderEnum",
        "ModelVersionBuildConfig",
        "ModelVersionExecConfigRead",
        "NormalizedTokenLogProbs",
        "SlimDocument",
        "SearchRequestOptionsRequest",
        "SearchWeightsRequest",
        "SearchResultMergingRequest",
        "SearchFiltersRequest",
        "SearchResult",
        "Document",
        "ProcessingStateEnum",
        "StatusEnum",
        "DocumentDocumentToDocumentIndex",
        "SubmitCompletionActualRequest",
      ],
      "schemas": {
        "Document": {
          "allOf": [],
          "description": undefined,
          "generatedName": "Document",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "The human-readable name for the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "DocumentDocumentToDocumentIndex": {
          "allOf": [],
          "description": undefined,
          "generatedName": "DocumentDocumentToDocumentIndex",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this link.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "document_index_id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies the index this document is included in.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "indexing_state",
              "schema": {
                "description": "An enum value representing where this document is along its indexing lifecycle for this index.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DocumentDocumentToDocumentIndexIndexingState",
                  "nameOverride": undefined,
                  "schema": "IndexingStateEnum",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "EnrichedNormalizedCompletion": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EnrichedNormalizedCompletion",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The Vellum-generated ID of the completion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text generated by the LLM.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "finish_reason",
              "schema": {
                "description": "The reason the generation finished.",
                "file": undefined,
                "generatedName": "EnrichedNormalizedCompletionFinishReason",
                "nameOverride": undefined,
                "schema": "FinishReasonEnum",
                "type": "reference",
              },
            },
            {
              "key": "logprobs",
              "schema": {
                "description": "The logprobs of the completion. Only present if specified in the original request options.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "EnrichedNormalizedCompletionLogprobs",
                  "nameOverride": undefined,
                  "schema": "NormalizedLogProbs",
                  "type": "reference",
                },
              },
            },
            {
              "key": "model_version_id",
              "schema": {
                "description": "The ID of the model version used to generate this completion.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "FinishReasonEnum": {
          "description": undefined,
          "generatedName": "FinishReasonEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "LENGTH",
              "nameOverride": undefined,
              "value": "LENGTH",
            },
            {
              "generatedName": "STOP",
              "nameOverride": undefined,
              "value": "STOP",
            },
            {
              "generatedName": "UNKNOWN",
              "nameOverride": undefined,
              "value": "UNKNOWN",
            },
          ],
        },
        "GenerateErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": "Details about why the request failed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "GenerateOptionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateOptionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "logprobs",
              "schema": {
                "description": "Which logprobs to include, if any. Defaults to NONE.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateOptionsRequestLogprobs",
                  "nameOverride": undefined,
                  "schema": "LogprobsEnum",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deployment_id",
              "schema": {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deployment_name",
              "schema": {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "requests",
              "schema": {
                "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateRequestBodyRequestRequestsItem",
                  "nameOverride": undefined,
                  "schema": "GenerateRequestRequest",
                  "type": "reference",
                },
              },
            },
            {
              "key": "options",
              "schema": {
                "description": "Additional configuration that can be used to control what's included in the response.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateRequestBodyRequestOptions",
                  "nameOverride": undefined,
                  "schema": "GenerateOptionsRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateRequestRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateRequestRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "input_values",
              "schema": {
                "description": "Key/value pairs for each template variable defined in the deployment's prompt.",
                "key": {
                  "type": "string",
                },
                "type": "map",
                "value": {
                  "type": "unknown",
                },
              },
            },
            {
              "key": "external_ids",
              "schema": {
                "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "results",
              "schema": {
                "description": "The results of each generation request.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateResponseResultsItem",
                  "nameOverride": undefined,
                  "schema": "GenerateResult",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "data",
              "schema": {
                "description": "An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateResultData",
                  "nameOverride": undefined,
                  "schema": "GenerateResultData",
                  "type": "reference",
                },
              },
            },
            {
              "key": "error",
              "schema": {
                "description": "An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateResultError",
                  "nameOverride": undefined,
                  "schema": "GenerateResultError",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResultData": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResultData",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "completions",
              "schema": {
                "description": "The generated completions. This will generally be a list of length one.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "GenerateResultDataCompletionsItem",
                  "nameOverride": undefined,
                  "schema": "EnrichedNormalizedCompletion",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "GenerateResultError": {
          "allOf": [],
          "description": undefined,
          "generatedName": "GenerateResultError",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "message",
              "schema": {
                "description": "The error message returned by the LLM provider.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "IndexingStateEnum": {
          "description": undefined,
          "generatedName": "IndexingStateEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "AWAITING_PROCESSING",
              "nameOverride": undefined,
              "value": "AWAITING_PROCESSING",
            },
            {
              "generatedName": "QUEUED",
              "nameOverride": undefined,
              "value": "QUEUED",
            },
            {
              "generatedName": "INDEXING",
              "nameOverride": undefined,
              "value": "INDEXING",
            },
            {
              "generatedName": "INDEXED",
              "nameOverride": undefined,
              "value": "INDEXED",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "LogprobsEnum": {
          "description": undefined,
          "generatedName": "LogprobsEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ALL",
              "nameOverride": undefined,
              "value": "ALL",
            },
            {
              "generatedName": "NONE",
              "nameOverride": undefined,
              "value": "NONE",
            },
          ],
        },
        "ModelTypeEnum": {
          "description": undefined,
          "generatedName": "ModelTypeEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "GENERATE",
              "nameOverride": undefined,
              "value": "GENERATE",
            },
            {
              "generatedName": "CLASSIFY",
              "nameOverride": undefined,
              "value": "CLASSIFY",
            },
          ],
        },
        "ModelVersionBuildConfig": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionBuildConfig",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "base_model",
              "schema": {
                "description": "The name of the base model used to create this model version, as identified by the LLM provider.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "sandbox_snapshot",
              "schema": {
                "description": "Information about the sandbox snapshot that was used to create this model version, if applicable.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ModelVersionBuildConfigSandboxSnapshot",
                  "nameOverride": undefined,
                  "schema": "ModelVersionSandboxSnapshot",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionExecConfigParameters": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionExecConfigParameters",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "temperature",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "max_tokens",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "key": "stop",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "top_p",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "top_k",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "frequency_penalty",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "presence_penalty",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "logit_bias",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionExecConfigRead": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionExecConfigRead",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "prompt_template",
              "schema": {
                "description": "The template used to generate prompts for this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "parameters",
              "schema": {
                "description": "The generation parameters that are passed to the LLM provider at runtime.",
                "file": undefined,
                "generatedName": "ModelVersionExecConfigReadParameters",
                "nameOverride": undefined,
                "schema": "ModelVersionExecConfigParameters",
                "type": "reference",
              },
            },
            {
              "key": "input_variables",
              "schema": {
                "description": "Names of the template variables specified in the prompt template.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionRead": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionRead",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "created",
              "schema": {
                "description": "Timestamp of when this model version was created.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "Human-friendly name for this model version.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "model_type",
              "schema": {
                "description": "The type of task this model is used for.",
                "file": undefined,
                "generatedName": "ModelVersionReadModelType",
                "nameOverride": undefined,
                "schema": "ModelTypeEnum",
                "type": "reference",
              },
            },
            {
              "key": "provider",
              "schema": {
                "description": "Which LLM provider this model version is associated with.",
                "file": undefined,
                "generatedName": "ModelVersionReadProvider",
                "nameOverride": undefined,
                "schema": "ProviderEnum",
                "type": "reference",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The unique id of this model version as it exists in the above provider's system.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "build_config",
              "schema": {
                "description": "Configuration used to build this model version.",
                "file": undefined,
                "generatedName": "ModelVersionReadBuildConfig",
                "nameOverride": undefined,
                "schema": "ModelVersionBuildConfig",
                "type": "reference",
              },
            },
            {
              "key": "exec_config",
              "schema": {
                "description": "Configuration used to execute this model version.",
                "file": undefined,
                "generatedName": "ModelVersionReadExecConfig",
                "nameOverride": undefined,
                "schema": "ModelVersionExecConfigRead",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ModelVersionSandboxSnapshot": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ModelVersionSandboxSnapshot",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The ID of the sandbox snapshot.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "prompt_index",
              "schema": {
                "description": "The index of the prompt in the sandbox snapshot.",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NormalizedLogProbs": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NormalizedLogProbs",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "tokens",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "NormalizedLogProbsTokensItem",
                  "nameOverride": undefined,
                  "schema": "NormalizedTokenLogProbs",
                  "type": "reference",
                },
              },
            },
            {
              "key": "likelihood",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "NormalizedTokenLogProbs": {
          "allOf": [],
          "description": undefined,
          "generatedName": "NormalizedTokenLogProbs",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "token",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "logprob",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "top_logprobs",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
            },
            {
              "key": "text_offset",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "PaginatedSlimDocumentList": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PaginatedSlimDocumentList",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "next",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "previous",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "results",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PaginatedSlimDocumentListResultsItem",
                    "nameOverride": undefined,
                    "schema": "SlimDocument",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "ProcessingStateEnum": {
          "description": undefined,
          "generatedName": "ProcessingStateEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "QUEUED",
              "nameOverride": undefined,
              "value": "QUEUED",
            },
            {
              "generatedName": "PROCESSING",
              "nameOverride": undefined,
              "value": "PROCESSING",
            },
            {
              "generatedName": "PROCESSED",
              "nameOverride": undefined,
              "value": "PROCESSED",
            },
            {
              "generatedName": "FAILED",
              "nameOverride": undefined,
              "value": "FAILED",
            },
          ],
        },
        "ProviderEnum": {
          "description": undefined,
          "generatedName": "ProviderEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "OPENAI",
              "nameOverride": undefined,
              "value": "OPENAI",
            },
            {
              "generatedName": "COHERE",
              "nameOverride": undefined,
              "value": "COHERE",
            },
            {
              "generatedName": "ANTHROPIC",
              "nameOverride": undefined,
              "value": "ANTHROPIC",
            },
          ],
        },
        "SearchErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": "Details about why the request failed.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchFiltersRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchFiltersRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "external_ids",
              "schema": {
                "description": "The document external IDs to filter by",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "index_id",
              "schema": {
                "description": "The ID of the index to search against. Must provide either this or index_name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "index_name",
              "schema": {
                "description": "The name of the index to search against. Must provide either this or index_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "query",
              "schema": {
                "description": "The query to search for.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "options",
              "schema": {
                "description": "Configuration options for the search.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SearchRequestBodyRequestOptions",
                  "nameOverride": undefined,
                  "schema": "SearchRequestOptionsRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchRequestOptionsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchRequestOptionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "limit",
              "schema": {
                "description": "The maximum number of results to return.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "weights",
              "schema": {
                "description": "The weights to use for the search. Must add up to 1.0.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SearchRequestOptionsRequestWeights",
                  "nameOverride": undefined,
                  "schema": "SearchWeightsRequest",
                  "type": "reference",
                },
              },
            },
            {
              "key": "result_merging",
              "schema": {
                "description": "The configuration for merging results.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SearchRequestOptionsRequestResultMerging",
                  "nameOverride": undefined,
                  "schema": "SearchResultMergingRequest",
                  "type": "reference",
                },
              },
            },
            {
              "key": "filters",
              "schema": {
                "description": "The filters to apply to the search.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SearchRequestOptionsRequestFilters",
                  "nameOverride": undefined,
                  "schema": "SearchFiltersRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "results",
              "schema": {
                "description": "The results of the search. Each result represents a chunk that matches the search query.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SearchResponseResultsItem",
                  "nameOverride": undefined,
                  "schema": "SearchResult",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "SearchResult": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResult",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "document",
              "schema": {
                "description": "The document that contains the chunk that matched the search query.",
                "file": undefined,
                "generatedName": "SearchResultDocument",
                "nameOverride": undefined,
                "schema": "Document",
                "type": "reference",
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "The text of the chunk that matched the search query.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "score",
              "schema": {
                "description": "A score representing how well the chunk matches the search query.",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchResultMergingRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchResultMergingRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "enabled",
              "schema": {
                "description": "Whether to enable merging results",
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SearchWeightsRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SearchWeightsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "semantic_similarity",
              "schema": {
                "description": "The relative weight to give to semantic similarity",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": "The relative weight to give to keyword matches",
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SlimDocument": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SlimDocument",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "Vellum-generated ID that uniquely identifies this document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The external ID that was originally provided when uploading the document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "last_uploaded_at",
              "schema": {
                "description": "A timestamp representing when this document was most recently uploaded.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "Human-friendly name for this document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "processing_state",
              "schema": {
                "description": "The current processing state of the document",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SlimDocumentProcessingState",
                  "nameOverride": undefined,
                  "schema": "ProcessingStateEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "status",
              "schema": {
                "description": "The document's current status.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SlimDocumentStatus",
                  "nameOverride": undefined,
                  "schema": "StatusEnum",
                  "type": "reference",
                },
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": "A list of keywords associated with this document. Originally provided when uploading the document.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "document_to_document_indexes",
              "schema": {
                "description": undefined,
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SlimDocumentDocumentToDocumentIndexesItem",
                  "nameOverride": undefined,
                  "schema": "DocumentDocumentToDocumentIndex",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "StatusEnum": {
          "description": undefined,
          "generatedName": "StatusEnum",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "generatedName": "ACTIVE",
              "nameOverride": undefined,
              "value": "ACTIVE",
            },
          ],
        },
        "SubmitCompletionActualRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "id",
              "schema": {
                "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "text",
              "schema": {
                "description": "Text representing what the completion _should_ have been.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "quality",
              "schema": {
                "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "timestamp",
              "schema": {
                "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "SubmitCompletionActualsErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualsErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "SubmitCompletionActualsRequestRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SubmitCompletionActualsRequestRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "deployment_id",
              "schema": {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "deployment_name",
              "schema": {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "actuals",
              "schema": {
                "description": "Feedback regarding the quality of previously generated completions",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "SubmitCompletionActualsRequestRequestActualsItem",
                  "nameOverride": undefined,
                  "schema": "SubmitCompletionActualRequest",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentErrorResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentErrorResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "detail",
              "schema": {
                "description": undefined,
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentRequestBodyRequest": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentRequestBodyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "add_to_index_names",
              "schema": {
                "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "key": "external_id",
              "schema": {
                "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "key": "label",
              "schema": {
                "description": "A human-friendly name for this document. Typically the filename.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "contents",
              "schema": {
                "description": "The file contents of the document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "key": "keywords",
              "schema": {
                "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "UploadDocumentResponse": {
          "allOf": [],
          "description": undefined,
          "generatedName": "UploadDocumentResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "key": "document_id",
              "schema": {
                "description": "The ID of the newly created document.",
                "schema": {
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "apiKeyAuth": {
          "headerName": "X_API_KEY",
          "type": "header",
        },
      },
      "servers": [
        {
          "description": "Default Server",
          "name": "Default",
          "url": "https://api.vellum.ai",
        },
      ],
      "tags": [],
      "title": "Vellum Client API",
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

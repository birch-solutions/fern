// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser supertokens parse open api 1`] = `
{
  "description": "This is the API exposed by the SuperTokens Core. To be consumed by your backend only.",
  "endpoints": [
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Add a TOTP device for a user and enable TOTP if not already enabled.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "CreateTotpDeviceRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "createTotpDevice",
      "path": "/recipe/totp/device",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateTotpDeviceRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "createTotpDeviceRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "CreateTotpDeviceRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "createTotpDeviceRequestDeviceName",
              "key": "deviceName",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": "My Authy App",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "createTotpDeviceRequestSkew",
              "key": "skew",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": 0,
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "createTotpDeviceRequestPeriod",
              "key": "period",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": 30,
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status and secret properties",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "CreateTotpDeviceResponse",
            "nameOverride": undefined,
            "schemas": {
              "DEVICE_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateTotpDeviceResponseDeviceAlreadyExistsError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateTotpDeviceResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "createTotpDeviceResponseOkSecret",
                    "key": "secret",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "JBSWY3DPEHPK3PXP",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update the name of a TOTP device for a user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UpdateTotpDeviceNameRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "updateTotpDeviceName",
      "path": "/recipe/totp/device",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UpdateTotpDeviceNameRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "updateTotpDeviceNameRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "updateTotpDeviceNameRequestExistingDeviceName",
              "key": "existingDeviceName",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": "My Authy App",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "updateTotpDeviceNameRequestNewDeviceName",
              "key": "newDeviceName",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": "A better name for my TOTP device",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UpdateTotpDeviceNameResponse",
            "nameOverride": undefined,
            "schemas": {
              "DEVICE_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameResponseDeviceAlreadyExistsError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameResponseOk",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameResponseTotpNotEnabledError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_DEVICE_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameResponseUnknownDeviceError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve a list of TOTP devices for a user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetTotpDevicesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getTotpDevices",
      "path": "/recipe/totp/device/list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "schema": {
              "example": undefined,
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Retrives all TOTP devices",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetTotpDevicesResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetTotpDevicesResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getTotpDevicesResponseOkDevices",
                    "key": "devices",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "type": "array",
                        "value": {
                          "allOf": [],
                          "allOfPropertyConflicts": [],
                          "description": undefined,
                          "generatedName": "GetTotpDevicesResponseOkDevicesItem",
                          "nameOverride": undefined,
                          "properties": [
                            {
                              "conflict": {},
                              "generatedName": "getTotpDevicesResponseOkDevicesItemName",
                              "key": "name",
                              "schema": {
                                "description": undefined,
                                "type": "optional",
                                "value": {
                                  "description": undefined,
                                  "schema": {
                                    "example": undefined,
                                    "maxLength": undefined,
                                    "minLength": undefined,
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            },
                            {
                              "conflict": {},
                              "generatedName": "getTotpDevicesResponseOkDevicesItemPeriod",
                              "key": "period",
                              "schema": {
                                "description": undefined,
                                "type": "optional",
                                "value": {
                                  "description": undefined,
                                  "schema": {
                                    "example": undefined,
                                    "type": "double",
                                  },
                                  "type": "primitive",
                                },
                              },
                            },
                            {
                              "conflict": {},
                              "generatedName": "getTotpDevicesResponseOkDevicesItemSkew",
                              "key": "skew",
                              "schema": {
                                "description": undefined,
                                "type": "optional",
                                "value": {
                                  "description": undefined,
                                  "schema": {
                                    "example": undefined,
                                    "type": "double",
                                  },
                                  "type": "primitive",
                                },
                              },
                            },
                            {
                              "conflict": {},
                              "generatedName": "getTotpDevicesResponseOkDevicesItemVerified",
                              "key": "verified",
                              "schema": {
                                "description": undefined,
                                "type": "optional",
                                "value": {
                                  "description": undefined,
                                  "schema": {
                                    "example": undefined,
                                    "type": "boolean",
                                  },
                                  "type": "primitive",
                                },
                              },
                            },
                          ],
                          "type": "object",
                        },
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetTotpDevicesResponseTotpNotEnabledError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Remove a TOTP device for a user. If all devices are removed, TOTP is disabled for the user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "RemoveTotpDeviceRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "removeTotpDevice",
      "path": "/recipe/totp/device/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveTotpDeviceRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "removeTotpDeviceRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveTotpDeviceRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "removeTotpDeviceRequestDeviceName",
              "key": "deviceName",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": "My Authy App",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RemoveTotpDeviceResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RemoveTotpDeviceResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "removeTotpDeviceResponseOkDidDeviceExist",
                    "key": "didDeviceExist",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": true,
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RemoveTotpDeviceResponseTotpNotEnabledError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Check if a TOTP code is valid against any of the TOTP devices for a user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "VerifyTotpCodeRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "verifyTotpCode",
      "path": "/recipe/totp/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "VerifyTotpCodeRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "verifyTotpCodeRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyTotpCodeRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "verifyTotpCodeRequestTotp",
              "key": "totp",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": "123456",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "verifyTotpCodeRequestAllowUnverifiedDevices",
              "key": "allowUnverifiedDevices",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": false,
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "VerifyTotpCodeResponse",
            "nameOverride": undefined,
            "schemas": {
              "INVALID_TOTP_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpCodeResponseInvalidTotpError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "LIMIT_REACHED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpCodeResponseLimitReachedError",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "verifyTotpCodeResponseLimitReachedErrorRetryAfterMs",
                    "key": "retryAfterMs",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": 90000,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpCodeResponseOk",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpCodeResponseTotpNotEnabledError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Mark a TOTP device as verified if the given TOTP code is valid for that device.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "VerifyTotpDeviceRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "verifyTotpDevice",
      "path": "/recipe/totp/device/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "VerifyTotpDeviceRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "verifyTotpDeviceRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyTotpDeviceRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "verifyTotpDeviceRequestDeviceName",
              "key": "deviceName",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": "My Authy App",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "verifyTotpDeviceRequestTotp",
              "key": "totp",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": "123456",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "VerifyTotpDeviceResponse",
            "nameOverride": undefined,
            "schemas": {
              "INVALID_TOTP_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseInvalidTotpError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "LIMIT_REACHED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseLimitReachedError",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "verifyTotpDeviceResponseLimitReachedErrorRetryAfterMs",
                    "key": "retryAfterMs",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": 90000,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "verifyTotpDeviceResponseOkWasAlreadyVerified",
                    "key": "wasAlreadyVerified",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": false,
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseTotpNotEnabledError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_DEVICE_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseUnknownDeviceError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve a UserIdMapping
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UserIdMappingGetMappingRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "userIdMappingGetMapping",
      "path": "/recipe/userid/map",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "schema": {
              "example": undefined,
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": undefined,
          "name": "userIdType",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "example": undefined,
              "generatedName": "UserIdMappingGetMappingRequestUserIdType",
              "nameOverride": undefined,
              "type": "enum",
              "values": [
                {
                  "description": undefined,
                  "generatedName": "SUPERTOKENS",
                  "nameOverride": undefined,
                  "value": "SUPERTOKENS",
                },
                {
                  "description": undefined,
                  "generatedName": "EXTERNAL",
                  "nameOverride": undefined,
                  "value": "EXTERNAL",
                },
                {
                  "description": undefined,
                  "generatedName": "ANY",
                  "nameOverride": undefined,
                  "value": "ANY",
                },
              ],
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Retrives a userId mapping",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UserIdMappingGetMappingResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingGetMappingResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "userIdMappingGetMappingResponseOkSuperTokensUserId",
                    "key": "superTokensUserId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "UserIdMappingGetMappingResponseOkSuperTokensUserId",
                      "nameOverride": undefined,
                      "schema": "userId",
                      "type": "reference",
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "userIdMappingGetMappingResponseOkExternalUserId",
                    "key": "externalUserId",
                    "schema": {
                      "description": undefined,
                      "schema": {
                        "example": "externalId",
                        "maxLength": undefined,
                        "minLength": undefined,
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "userIdMappingGetMappingResponseOkExternalUserIdInfo",
                    "key": "externalUserIdInfo",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "Info about external userId",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_MAPPING_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingGetMappingResponseUnknownMappingError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "UserIdMapping Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Create a mapping between a SuperTokens userId and an external userId.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UserIdMappingCreateMappingRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "userIdMappingCreateMapping",
      "path": "/recipe/userid/map",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserIdMappingCreateMappingRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userIdMappingCreateMappingRequestSuperTokensUserId",
              "key": "superTokensUserId",
              "schema": {
                "description": undefined,
                "generatedName": "UserIdMappingCreateMappingRequestSuperTokensUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "userIdMappingCreateMappingRequestExternalUserId",
              "key": "externalUserId",
              "schema": {
                "description": undefined,
                "schema": {
                  "example": "externalId",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "userIdMappingCreateMappingRequestExternalUserIdInfo",
              "key": "externalUserIdInfo",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "Info about external userId",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userIdMappingCreateMappingRequestForce",
              "key": "force",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": undefined,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UserIdMappingCreateMappingResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingCreateMappingResponseOk",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_SUPERTOKENS_USER_ID_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingCreateMappingResponseUnknownSupertokensUserIdError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "USER_ID_MAPPING_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingCreateMappingResponseUserIdMappingAlreadyExistsError",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "userIdMappingCreateMappingResponseUserIdMappingAlreadyExistsErrorDoesSuperTokensUserIdExist",
                    "key": "doesSuperTokensUserIdExist",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": undefined,
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "userIdMappingCreateMappingResponseUserIdMappingAlreadyExistsErrorDoesExternalUserIdExist",
                    "key": "doesExternalUserIdExist",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": undefined,
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "UserIdMapping Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete a mapping between a SuperTokens userId and an external userId.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UserIdMappingRemoveMappingRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "userIdMappingRemoveMapping",
      "path": "/recipe/userid/map/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserIdMappingRemoveMappingRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "UserIdMappingRemoveMappingRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingRequestUserIdType",
              "key": "userIdType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "example": undefined,
                  "generatedName": "UserIdMappingRemoveMappingRequestUserIdType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "description": undefined,
                      "generatedName": "SUPERTOKENS",
                      "nameOverride": undefined,
                      "value": "SUPERTOKENS",
                    },
                    {
                      "description": undefined,
                      "generatedName": "EXTERNAL",
                      "nameOverride": undefined,
                      "value": "EXTERNAL",
                    },
                    {
                      "description": undefined,
                      "generatedName": "ANY",
                      "nameOverride": undefined,
                      "value": "ANY",
                    },
                  ],
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingRequestForce",
              "key": "force",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": undefined,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserIdMappingRemoveMappingResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserIdMappingRemoveMappingResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingResponseDidMappingExist",
              "key": "didMappingExist",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": undefined,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "UserIdMapping Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update or delete externalUserIdInfo
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UserIdMappingUpateExternalUserIdInfoRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "userIdMappingUpateExternalUserIdInfo",
      "path": "/recipe/userid/external-user-id-info",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserIdMappingUpateExternalUserIdInfoRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userIdMappingUpateExternalUserIdInfoRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "userIdMappingUpateExternalUserIdInfoRequestUserIdType",
              "key": "userIdType",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "example": undefined,
                  "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestUserIdType",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "description": undefined,
                      "generatedName": "SUPERTOKENS",
                      "nameOverride": undefined,
                      "value": "SUPERTOKENS",
                    },
                    {
                      "description": undefined,
                      "generatedName": "EXTERNAL",
                      "nameOverride": undefined,
                      "value": "EXTERNAL",
                    },
                    {
                      "description": undefined,
                      "generatedName": "ANY",
                      "nameOverride": undefined,
                      "value": "ANY",
                    },
                  ],
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userIdMappingUpateExternalUserIdInfoRequestExternalUserIdInfo",
              "key": "externalUserIdInfo",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "new external userId info",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UserIdMappingUpateExternalUserIdInfoResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingUpateExternalUserIdInfoResponseOk",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_MAPPING_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingUpateExternalUserIdInfoResponseUnknownMappingError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "UserIdMapping Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Tries to consume the passed userInputCode+deviceId combo or the linkCode to sign the user in
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PasswordlessTryUseCodeRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "passwordlessTryUseCode",
      "path": "/recipe/signinup/code/consume",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessTryUseCodeRequestBody",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeRequestBodyLinkCode",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyLinkCodePreAuthSessionId",
                    "key": "preAuthSessionId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyLinkCodePreAuthSessionId",
                      "nameOverride": undefined,
                      "schema": "preAuthSessionId",
                      "type": "reference",
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyLinkCodeLinkCode",
                    "key": "linkCode",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyLinkCodeLinkCode",
                      "nameOverride": undefined,
                      "schema": "linkCode",
                      "type": "reference",
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeRequestBodyDeviceId",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyDeviceIdPreAuthSessionId",
                    "key": "preAuthSessionId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyDeviceIdPreAuthSessionId",
                      "nameOverride": undefined,
                      "schema": "preAuthSessionId",
                      "type": "reference",
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyDeviceIdDeviceId",
                    "key": "deviceId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyDeviceIdDeviceId",
                      "nameOverride": undefined,
                      "schema": "deviceId",
                      "type": "reference",
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyDeviceIdUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyDeviceIdUserInputCode",
                      "nameOverride": undefined,
                      "schema": "userInputCode",
                      "type": "reference",
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessTryUseCodeResponse",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeResponseCreatedNewUser",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseCreatedNewUserStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseCreatedNewUserStatus",
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseCreatedNewUserCreatedNewUser",
                    "key": "createdNewUser",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": true,
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseCreatedNewUserUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseCreatedNewUserUser",
                        "nameOverride": undefined,
                        "schema": "passwordlessUser",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeResponseFailedCodeInputAttemptCount",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseFailedCodeInputAttemptCountStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "example": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseFailedCodeInputAttemptCountStatus",
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "description": undefined,
                            "generatedName": "INCORRECT_USER_INPUT_CODE_ERROR",
                            "nameOverride": undefined,
                            "value": "INCORRECT_USER_INPUT_CODE_ERROR",
                          },
                          {
                            "description": undefined,
                            "generatedName": "EXPIRED_USER_INPUT_CODE_ERROR",
                            "nameOverride": undefined,
                            "value": "EXPIRED_USER_INPUT_CODE_ERROR",
                          },
                        ],
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseFailedCodeInputAttemptCountFailedCodeInputAttemptCount",
                    "key": "failedCodeInputAttemptCount",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": 2,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseFailedCodeInputAttemptCountMaximumCodeInputAttempts",
                    "key": "maximumCodeInputAttempts",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": 5,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeResponseStatus",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseStatusStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "type": "literal",
                        "value": "RESTART_FLOW_ERROR",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Starts a sign in process by requesting a linkCode and a deviceId + userInputCode combination the user can use to sign in.
Passing the optional deviceId signifies a resend code flow.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PasswordlessStartSignInRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "passwordlessStartSignIn",
      "path": "/recipe/signinup/code",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessStartSignInRequestBody",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInRequestBodyEmail",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyEmailEmail",
                    "key": "email",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessStartSignInRequestBodyEmailEmail",
                      "nameOverride": undefined,
                      "schema": "email",
                      "type": "reference",
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyEmailUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInRequestBodyEmailUserInputCode",
                        "nameOverride": undefined,
                        "schema": "userInputCode",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInRequestBodyPhoneNumber",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyPhoneNumberPhoneNumber",
                    "key": "phoneNumber",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessStartSignInRequestBodyPhoneNumberPhoneNumber",
                      "nameOverride": undefined,
                      "schema": "phoneNumber",
                      "type": "reference",
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyPhoneNumberUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInRequestBodyPhoneNumberUserInputCode",
                        "nameOverride": undefined,
                        "schema": "userInputCode",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInRequestBodyDeviceId",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyDeviceIdDeviceId",
                    "key": "deviceId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessStartSignInRequestBodyDeviceIdDeviceId",
                      "nameOverride": undefined,
                      "schema": "deviceId",
                      "type": "reference",
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyDeviceIdUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInRequestBodyDeviceIdUserInputCode",
                        "nameOverride": undefined,
                        "schema": "userInputCode",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Starts the passwordless login process",
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessStartSignInResponse",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInResponseCodeId",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdStatus",
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdPreAuthSessionId",
                    "key": "preAuthSessionId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdPreAuthSessionId",
                        "nameOverride": undefined,
                        "schema": "preAuthSessionId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdCodeId",
                    "key": "codeId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdCodeId",
                        "nameOverride": undefined,
                        "schema": "codeId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdDeviceId",
                    "key": "deviceId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdDeviceId",
                        "nameOverride": undefined,
                        "schema": "deviceId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdUserInputCode",
                        "nameOverride": undefined,
                        "schema": "userInputCode",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdLinkCode",
                    "key": "linkCode",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdLinkCode",
                        "nameOverride": undefined,
                        "schema": "linkCode",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdTimeCreated",
                    "key": "timeCreated",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdTimeCreated",
                        "nameOverride": undefined,
                        "schema": "timeCreated",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdCodeLifetime",
                    "key": "codeLifetime",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdCodeLifetime",
                        "nameOverride": undefined,
                        "schema": "codeLifetime",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInResponseOne",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseOneStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "example": undefined,
                        "generatedName": "PasswordlessStartSignInResponseOneStatus",
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "description": undefined,
                            "generatedName": "RESTART_FLOW_ERROR",
                            "nameOverride": undefined,
                            "value": "RESTART_FLOW_ERROR",
                          },
                          {
                            "description": undefined,
                            "generatedName": "USER_INPUT_CODE_ALREADY_USED_ERROR",
                            "nameOverride": undefined,
                            "value": "USER_INPUT_CODE_ALREADY_USED_ERROR",
                          },
                        ],
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Revokes a code by id
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PasswordlessRevokeCodeRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "passwordlessRevokeCode",
      "path": "/recipe/signinup/code/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessRevokeCodeRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "passwordlessRevokeCodeRequestCodeId",
              "key": "codeId",
              "schema": {
                "description": undefined,
                "generatedName": "PasswordlessRevokeCodeRequestCodeId",
                "nameOverride": undefined,
                "schema": "codeId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessRevokeCodeResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "passwordlessRevokeCodeResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PasswordlessRevokeCodeResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Lists all active passwordless codes of the user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PasswordlessListCodesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "passwordlessListCodes",
      "path": "/recipe/signinup/codes",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Use this parameter to get information about all devices associated with an email (without the other query params)",
          "name": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Use this parameter to get information about all devices associated with a phoneNumber (without the other query params)",
          "name": "phoneNumber",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestPhoneNumber",
              "nameOverride": undefined,
              "schema": "phoneNumber",
              "type": "reference",
            },
          },
        },
        {
          "description": "Use this parameter to get information about a single device (without the other query params)",
          "name": "deviceId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestDeviceId",
              "nameOverride": undefined,
              "schema": "deviceId",
              "type": "reference",
            },
          },
        },
        {
          "description": "Use this parameter to get information about a single device (without the other query params)",
          "name": "preAuthSessionId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestPreAuthSessionId",
              "nameOverride": undefined,
              "schema": "preAuthSessionId",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "List of all active passwordless codes of the user",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessListCodesResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "passwordlessListCodesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PasswordlessListCodesResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "passwordlessListCodesResponseDevices",
              "key": "devices",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "allOf": [],
                    "allOfPropertyConflicts": [],
                    "description": undefined,
                    "generatedName": "PasswordlessListCodesResponseDevicesItem",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemPreAuthSessionId",
                        "key": "preAuthSessionId",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "PasswordlessListCodesResponseDevicesItemPreAuthSessionId",
                            "nameOverride": undefined,
                            "schema": "preAuthSessionId",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemFailedCodeInputAttemptCount",
                        "key": "failedCodeInputAttemptCount",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "schema": {
                              "example": 2,
                              "type": "double",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemEmail",
                        "key": "email",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "PasswordlessListCodesResponseDevicesItemEmail",
                            "nameOverride": undefined,
                            "schema": "email",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemPhoneNumber",
                        "key": "phoneNumber",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "PasswordlessListCodesResponseDevicesItemPhoneNumber",
                            "nameOverride": undefined,
                            "schema": "phoneNumber",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemCodes",
                        "key": "codes",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "type": "array",
                            "value": {
                              "allOf": [],
                              "allOfPropertyConflicts": [],
                              "description": undefined,
                              "generatedName": "PasswordlessListCodesResponseDevicesItemCodesItem",
                              "nameOverride": undefined,
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "passwordlessListCodesResponseDevicesItemCodesItemCodeId",
                                  "key": "codeId",
                                  "schema": {
                                    "description": undefined,
                                    "type": "optional",
                                    "value": {
                                      "description": undefined,
                                      "generatedName": "PasswordlessListCodesResponseDevicesItemCodesItemCodeId",
                                      "nameOverride": undefined,
                                      "schema": "codeId",
                                      "type": "reference",
                                    },
                                  },
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "passwordlessListCodesResponseDevicesItemCodesItemTimeCreated",
                                  "key": "timeCreated",
                                  "schema": {
                                    "description": undefined,
                                    "type": "optional",
                                    "value": {
                                      "description": undefined,
                                      "generatedName": "PasswordlessListCodesResponseDevicesItemCodesItemTimeCreated",
                                      "nameOverride": undefined,
                                      "schema": "timeCreated",
                                      "type": "reference",
                                    },
                                  },
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "passwordlessListCodesResponseDevicesItemCodesItemCodeLifetime",
                                  "key": "codeLifetime",
                                  "schema": {
                                    "description": undefined,
                                    "type": "optional",
                                    "value": {
                                      "description": undefined,
                                      "generatedName": "PasswordlessListCodesResponseDevicesItemCodesItemCodeLifetime",
                                      "nameOverride": undefined,
                                      "schema": "codeLifetime",
                                      "type": "reference",
                                    },
                                  },
                                },
                              ],
                              "type": "object",
                            },
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Revokes all codes issued for the user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PasswordlessRevokeAllCodesOfUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "passwordlessRevokeAllCodesOfUser",
      "path": "/recipe/signinup/codes/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBody",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBodyEmail",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessRevokeAllCodesOfUserRequestBodyEmailEmail",
                    "key": "email",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBodyEmailEmail",
                      "nameOverride": undefined,
                      "schema": "email",
                      "type": "reference",
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBodyPhoneNumber",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessRevokeAllCodesOfUserRequestBodyPhoneNumberPhoneNumber",
                    "key": "phoneNumber",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBodyPhoneNumberPhoneNumber",
                      "nameOverride": undefined,
                      "schema": "phoneNumber",
                      "type": "reference",
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessRevokeAllCodesOfUserResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "passwordlessRevokeAllCodesOfUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PasswordlessRevokeAllCodesOfUserResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a user's information.
Note that there is an invisible character at the end of the path, this was to avoid a conflict with the OpenAPI spec.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PasswordlessGetUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "passwordlessGetUser",
      "path": "/recipe/user⠀⠀",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "fa7a0841-b533-4478-9253-0fde890c576",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Use exactly one of phoneNumber, email or userId",
          "name": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessGetUserRequestEmail",
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "description": "Use exactly one of phoneNumber, email or userId",
          "name": "phoneNumber",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessGetUserRequestPhoneNumber",
              "nameOverride": undefined,
              "schema": "phoneNumber",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get a user's information.",
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessGetUserResponse",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessGetUserResponseUser",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessGetUserResponseUserStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessGetUserResponseUserStatus",
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "passwordlessGetUserResponseUserUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessGetUserResponseUserUser",
                        "nameOverride": undefined,
                        "schema": "passwordlessUser",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessGetUserResponseOne",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "passwordlessGetUserResponseOneStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "example": undefined,
                        "generatedName": "PasswordlessGetUserResponseOneStatus",
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "description": undefined,
                            "generatedName": "UNKNOWN_USER_ID_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_USER_ID_ERROR",
                          },
                          {
                            "description": undefined,
                            "generatedName": "UNKNOWN_EMAIL_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_EMAIL_ERROR",
                          },
                          {
                            "description": undefined,
                            "generatedName": "UNKNOWN_PHONE_NUMBER_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_PHONE_NUMBER_ERROR",
                          },
                        ],
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update a user's information. 
If the email or phoneNumber is set to null the previous value will be deleted. If they are not set (i.e., undefined/missing from the request), they are left as-is.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PasswordlessPutUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "passwordlessPutUser",
      "path": "/recipe/user⠀⠀",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessPutUserRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "passwordlessPutUserRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "PasswordlessPutUserRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "passwordlessPutUserRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "allOf": [
                    {
                      "description": undefined,
                      "generatedName": "Email",
                      "nameOverride": undefined,
                      "schema": "email",
                      "type": "reference",
                    },
                  ],
                  "allOfPropertyConflicts": [],
                  "description": undefined,
                  "generatedName": "PasswordlessPutUserRequestEmail",
                  "nameOverride": undefined,
                  "properties": [],
                  "type": "object",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "passwordlessPutUserRequestPhoneNumber",
              "key": "phoneNumber",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "allOf": [
                    {
                      "description": undefined,
                      "generatedName": "PhoneNumber",
                      "nameOverride": undefined,
                      "schema": "phoneNumber",
                      "type": "reference",
                    },
                  ],
                  "allOfPropertyConflicts": [],
                  "description": undefined,
                  "generatedName": "PasswordlessPutUserRequestPhoneNumber",
                  "nameOverride": undefined,
                  "properties": [],
                  "type": "object",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "update user's information",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessPutUserResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "passwordlessPutUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "example": undefined,
                  "generatedName": "PasswordlessPutUserResponseStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "description": undefined,
                      "generatedName": "OK",
                      "nameOverride": undefined,
                      "value": "OK",
                    },
                    {
                      "description": undefined,
                      "generatedName": "UNKNOWN_USER_ID_ERROR",
                      "nameOverride": undefined,
                      "value": "UNKNOWN_USER_ID_ERROR",
                    },
                    {
                      "description": undefined,
                      "generatedName": "EMAIL_ALREADY_EXISTS_ERROR",
                      "nameOverride": undefined,
                      "value": "EMAIL_ALREADY_EXISTS_ERROR",
                    },
                    {
                      "description": undefined,
                      "generatedName": "PHONE_NUMBER_ALREADY_EXISTS_ERROR",
                      "nameOverride": undefined,
                      "value": "PHONE_NUMBER_ALREADY_EXISTS_ERROR",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Signin a user with email ID and password
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailPasswordSigninRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailPasswordSignin",
      "path": "/recipe/signin",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordSigninRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailPasswordSigninRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordSigninRequestEmail",
                  "nameOverride": undefined,
                  "schema": "email",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailPasswordSigninRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordSigninRequestPassword",
                  "nameOverride": undefined,
                  "schema": "password",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "signin response",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailPasswordSigninResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordSigninResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "emailPasswordSigninResponseOkUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordSigninResponseOkUser",
                        "nameOverride": undefined,
                        "schema": "user",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "WRONG_CREDENTIALS_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasWrongCredentialsResponse",
                "nameOverride": undefined,
                "schema": "wrongCredentialsResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Signup a user with email ID and password
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailPasswordSignupRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailPasswordSignup",
      "path": "/recipe/signup",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordSignupRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailPasswordSignupRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordSignupRequestEmail",
                  "nameOverride": undefined,
                  "schema": "email",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailPasswordSignupRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordSignupRequestPassword",
                  "nameOverride": undefined,
                  "schema": "password",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "signup response",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailPasswordSignupResponse",
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordSignupResponseEmailAlreadyExistsError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordSignupResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "emailPasswordSignupResponseOkUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordSignupResponseOkUser",
                        "nameOverride": undefined,
                        "schema": "user",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a user's information
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailPasswordGetUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "emailPasswordGetUser",
      "path": "/recipe/user",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "use either email or userId, not both",
          "name": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserRequestEmail",
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "description": "use either email or userId, not both",
          "name": "userId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserRequestUserId",
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get user's information",
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserResponse",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetUserResponseUser",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "emailPasswordGetUserResponseUserStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordGetUserResponseUserStatus",
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "emailPasswordGetUserResponseUserUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordGetUserResponseUserUser",
                        "nameOverride": undefined,
                        "schema": "user",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetUserResponseOne",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "emailPasswordGetUserResponseOneStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "example": undefined,
                        "generatedName": "EmailPasswordGetUserResponseOneStatus",
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "description": undefined,
                            "generatedName": "UNKNOWN_USER_ID_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_USER_ID_ERROR",
                          },
                          {
                            "description": undefined,
                            "generatedName": "UNKNOWN_EMAIL_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_EMAIL_ERROR",
                          },
                        ],
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update a user's information
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailPasswordPutUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "emailPasswordPutUser",
      "path": "/recipe/user",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordPutUserRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailPasswordPutUserRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordPutUserRequestUserId",
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailPasswordPutUserRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordPutUserRequestEmail",
                  "nameOverride": undefined,
                  "schema": "email",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailPasswordPutUserRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordPutUserRequestPassword",
                  "nameOverride": undefined,
                  "schema": "password",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "update user's information",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordPutUserResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailPasswordPutUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "example": undefined,
                  "generatedName": "EmailPasswordPutUserResponseStatus",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "description": undefined,
                      "generatedName": "OK",
                      "nameOverride": undefined,
                      "value": "OK",
                    },
                    {
                      "description": undefined,
                      "generatedName": "UNKNOWN_USER_ID_ERROR",
                      "nameOverride": undefined,
                      "value": "UNKNOWN_USER_ID_ERROR",
                    },
                    {
                      "description": undefined,
                      "generatedName": "EMAIL_ALREADY_EXISTS_ERROR",
                      "nameOverride": undefined,
                      "value": "EMAIL_ALREADY_EXISTS_ERROR",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Generate a new reset password token for this user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailPasswordGetPasswordResetTokenRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailPasswordGetPasswordResetToken",
      "path": "/recipe/user/password/reset/token",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordGetPasswordResetTokenRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailPasswordGetPasswordResetTokenRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetPasswordResetTokenRequestUserId",
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Generate a new reset password token for this user",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailPasswordGetPasswordResetTokenResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetPasswordResetTokenResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "emailPasswordGetPasswordResetTokenResponseOkToken",
                    "key": "token",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordGetPasswordResetTokenResponseOkToken",
                        "nameOverride": undefined,
                        "schema": "token",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_USER_ID_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownUserIdResponse",
                "nameOverride": undefined,
                "schema": "unknownUserIdResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "User Pagination API
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailPasswordGetUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "emailPasswordGetUsers",
      "path": "/recipe/users",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "paginationToken",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "limit",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "timeJoinedOrder",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "example": undefined,
              "generatedName": "EmailPasswordGetUsersRequestTimeJoinedOrder",
              "nameOverride": undefined,
              "type": "enum",
              "values": [
                {
                  "description": undefined,
                  "generatedName": "ASC",
                  "nameOverride": undefined,
                  "value": "ASC",
                },
                {
                  "description": undefined,
                  "generatedName": "DESC",
                  "nameOverride": undefined,
                  "value": "DESC",
                },
              ],
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get user's information",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordGetUsersResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailPasswordGetUsersResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetUsersResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailPasswordGetUsersResponseUsers",
              "key": "users",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "EmailPasswordGetUsersResponseUsersItem",
                    "nameOverride": undefined,
                    "schema": "user",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailPasswordGetUsersResponseNextPaginationToken",
              "key": "nextPaginationToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetUsersResponseNextPaginationToken",
                  "nameOverride": undefined,
                  "schema": "paginationToken",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Reset a password using password reset token
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailPasswordGetPasswordResetRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailPasswordGetPasswordReset",
      "path": "/recipe/user/password/reset",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordGetPasswordResetRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailPasswordGetPasswordResetRequestMethod",
              "key": "method",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "literal",
                  "value": "token",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailPasswordGetPasswordResetRequestToken",
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetPasswordResetRequestToken",
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailPasswordGetPasswordResetRequestNewPassword",
              "key": "newPassword",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "newpassword123",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Reset a password using password reset token",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailPasswordGetPasswordResetResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetPasswordResetResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "emailPasswordGetPasswordResetResponseOkUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordGetPasswordResetResponseOkUserId",
                        "nameOverride": undefined,
                        "schema": "userId",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "RESET_PASSWORD_INVALID_TOKEN_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetPasswordResetResponseResetPasswordInvalidTokenError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get number of users
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailPasswordGetUserCountRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "emailPasswordGetUserCount",
      "path": "/recipe/users/count",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get number of users",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordGetUserCountResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailPasswordGetUserCountResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetUserCountResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailPasswordGetUserCountResponseCount",
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": 10,
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Import a user with email ID and password hash
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UserImportRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "userImport",
      "path": "/recipe/user/passwordhash/import",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserImportRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userImportRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserImportRequestEmail",
                  "nameOverride": undefined,
                  "schema": "email",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userImportRequestPasswordHash",
              "key": "passwordHash",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "passwordHash",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userImportRequestHashingAlgorithm",
              "key": "hashingAlgorithm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "example": undefined,
                  "generatedName": "UserImportRequestHashingAlgorithm",
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "description": undefined,
                      "generatedName": "argon2",
                      "nameOverride": undefined,
                      "value": "argon2",
                    },
                    {
                      "description": undefined,
                      "generatedName": "bcrypt",
                      "nameOverride": undefined,
                      "value": "bcrypt",
                    },
                    {
                      "description": undefined,
                      "generatedName": "firebase_scrypt",
                      "nameOverride": undefined,
                      "value": "firebase_scrypt",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "import user response",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserImportResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userImportResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserImportResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userImportResponseUser",
              "key": "user",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserImportResponseUser",
                  "nameOverride": undefined,
                  "schema": "user",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userImportResponseDidUserAlreadyExist",
              "key": "didUserAlreadyExist",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": undefined,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Signin/up a user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "ThirdPartySigninupRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "thirdPartySigninup",
      "path": "/recipe/signinup",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartySigninupRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "thirdPartySigninupRequestThirdPartyId",
              "key": "thirdPartyId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupRequestThirdPartyId",
                  "nameOverride": undefined,
                  "schema": "thirdPartyId",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "thirdPartySigninupRequestThirdPartyUserId",
              "key": "thirdPartyUserId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupRequestThirdPartyUserId",
                  "nameOverride": undefined,
                  "schema": "thirdPartyUserId",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "thirdPartySigninupRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupRequestEmail",
                  "nameOverride": undefined,
                  "schema": "thirdPartyEmail",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Signin/up a user",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartySigninupResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "thirdPartySigninupResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "thirdPartySigninupResponseCreatedNewUser",
              "key": "createdNewUser",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": true,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "thirdPartySigninupResponseUser",
              "key": "user",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupResponseUser",
                  "nameOverride": undefined,
                  "schema": "thirdPartyUser",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a user's information.
Note that there is an invisible character at the end of the path, this was to avoid a conflict with the OpenAPI spec.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "ThirdPartyGetUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "thirdPartyGetUser",
      "path": "/recipe/user⠀",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "fa7a0841-b533-4478-9253-0fde890c576",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Either use userId or thirdPartyId and thirdPartyUserId",
          "name": "thirdPartyId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserRequestThirdPartyId",
              "nameOverride": undefined,
              "schema": "thirdPartyId",
              "type": "reference",
            },
          },
        },
        {
          "description": "Either use userId or thirdPartyId and thirdPartyUserId",
          "name": "thirdPartyUserId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserRequestThirdPartyUserId",
              "nameOverride": undefined,
              "schema": "thirdPartyUserId",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get a user's information.",
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserResponse",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "ThirdPartyGetUserResponseUser",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "thirdPartyGetUserResponseUserStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "ThirdPartyGetUserResponseUserStatus",
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "thirdPartyGetUserResponseUserUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "ThirdPartyGetUserResponseUserUser",
                        "nameOverride": undefined,
                        "schema": "thirdPartyUser",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "ThirdPartyGetUserResponseOne",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "thirdPartyGetUserResponseOneStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "example": undefined,
                        "generatedName": "ThirdPartyGetUserResponseOneStatus",
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "description": undefined,
                            "generatedName": "UNKNOWN_USER_ID_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_USER_ID_ERROR",
                          },
                          {
                            "description": undefined,
                            "generatedName": "UNKNOWN_THIRD_PARTY_USER_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_THIRD_PARTY_USER_ERROR",
                          },
                        ],
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get all users accounts associated with given email
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [],
      "generatedRequestName": "ThirdPartyGetUsersByEmailRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "thirdPartyGetUsersByEmail",
      "path": "/recipe/users/by-email",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "User's email",
          "name": "email",
          "schema": {
            "description": undefined,
            "schema": {
              "example": "john.doe@example.com",
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get all users associated with given email",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartyGetUsersByEmailResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "thirdPartyGetUsersByEmailResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUsersByEmailResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "thirdPartyGetUsersByEmailResponseUsers",
              "key": "users",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "ThirdPartyGetUsersByEmailResponseUsersItem",
                    "nameOverride": undefined,
                    "schema": "thirdPartyUser",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get User Pagination data.
Note that there is an invisible character at the end of the path, this was to avoid a conflict with the OpenAPI spec.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "ThirdPartyGetUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "thirdPartyGetUsers",
      "path": "/recipe/users⠀",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "paginationToken",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "timeJoinedOrder",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "example": undefined,
              "generatedName": "ThirdPartyGetUsersRequestTimeJoinedOrder",
              "nameOverride": undefined,
              "type": "enum",
              "values": [
                {
                  "description": undefined,
                  "generatedName": "ASC",
                  "nameOverride": undefined,
                  "value": "ASC",
                },
                {
                  "description": undefined,
                  "generatedName": "DESC",
                  "nameOverride": undefined,
                  "value": "DESC",
                },
              ],
            },
          },
        },
        {
          "description": undefined,
          "name": "limit",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get user's information.",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartyGetUsersResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "thirdPartyGetUsersResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUsersResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "thirdPartyGetUsersResponseUser",
              "key": "user",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "ThirdPartyGetUsersResponseUserItem",
                    "nameOverride": undefined,
                    "schema": "thirdPartyUser",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "thirdPartyGetUsersResponseNextPaginationToken",
              "key": "nextPaginationToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUsersResponseNextPaginationToken",
                  "nameOverride": undefined,
                  "schema": "paginationToken",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get number of users.
Note that there is an invisible character at the end of the path, this was to avoid a conflict with the OpenAPI spec
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "ThirdPartyGetUserCountRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "thirdPartyGetUserCount",
      "path": "/recipe/users/count⠀",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get number of users",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartyGetUserCountResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "thirdPartyGetUserCountResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUserCountResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "thirdPartyGetUserCountResponseCount",
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": 10,
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Generate a new email verification token for this user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "headers": [],
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": undefined,
        },
      ],
      "generatedRequestName": "EmailVerificationVerifyTokenRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailVerificationVerifyToken",
      "path": "/recipe/user/email/verify/token",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "description": undefined,
          "generatedName": "EmailVerificationVerifyTokenRequestBody",
          "nameOverride": undefined,
          "schema": "emailVerificationVerifyTokenRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Generate a new email verification token for this user",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailVerificationVerifyTokenResponse",
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_ALREADY_VERIFIED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailVerificationVerifyTokenResponseEmailAlreadyVerifiedError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailVerificationVerifyTokenResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "emailVerificationVerifyTokenResponseOkToken",
                    "key": "token",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailVerificationVerifyTokenResponseOkToken",
                        "nameOverride": undefined,
                        "schema": "token",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Remove all unused email verification tokens for this user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "headers": [],
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": undefined,
        },
      ],
      "generatedRequestName": "EmailVerificationVerifyTokenRemoveRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailVerificationVerifyTokenRemove",
      "path": "/recipe/user/email/verify/token/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "description": undefined,
          "generatedName": "EmailVerificationVerifyTokenRemoveRequestBody",
          "nameOverride": undefined,
          "schema": "emailVerificationVerifyTokenRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "OK response",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailVerificationVerifyTokenRemoveResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailVerificationVerifyTokenRemoveResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "literal",
                  "value": "OK",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Check if an email is verified
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailVerificationVerifyGetRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "emailVerificationVerifyGet",
      "path": "/recipe/user/email/verify",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "fa7a0841-b533-4478-9253-0fde890c576",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "johndoe@gmail.com",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Verify an email",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailVerificationVerifyGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailVerificationVerifyGetResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailVerificationVerifyGetResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailVerificationVerifyGetResponseIsVerified",
              "key": "isVerified",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailVerificationVerifyGetResponseIsVerified",
                  "nameOverride": undefined,
                  "schema": "isVerified",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Verify an email
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "EmailVerificationVerifyRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailVerificationVerify",
      "path": "/recipe/user/email/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailVerificationVerifyRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailVerificationVerifyRequestMethod",
              "key": "method",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "literal",
                  "value": "token",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "emailVerificationVerifyRequestToken",
              "key": "token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailVerificationVerifyRequestToken",
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Verify an email",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailVerificationVerifyResponse",
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_VERIFICATION_INVALID_TOKEN_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailVerificationVerifyResponseEmailVerificationInvalidTokenError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailVerificationVerifyResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "emailVerificationVerifyResponseOkUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailVerificationVerifyResponseOkUserId",
                        "nameOverride": undefined,
                        "schema": "userId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "emailVerificationVerifyResponseOkEmail",
                    "key": "email",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailVerificationVerifyResponseOkEmail",
                        "nameOverride": undefined,
                        "schema": "email",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Unverify an email
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "headers": [],
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": undefined,
        },
      ],
      "generatedRequestName": "EmailVerificationVerifyRemoveRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailVerificationVerifyRemove",
      "path": "/recipe/user/email/verify/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "description": undefined,
          "generatedName": "EmailVerificationVerifyRemoveRequestBody",
          "nameOverride": undefined,
          "schema": "emailVerificationVerifyTokenRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "OK response",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailVerificationVerifyRemoveResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailVerificationVerifyRemoveResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "literal",
                  "value": "OK",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Gets the stored metadata object of the user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UserMetadataReadRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "userMetadataRead",
      "path": "/recipe/user/metadata",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "schema": {
              "example": "fa7a0841-b533-4478-9253-0fde890c576",
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataReadResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userMetadataReadResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataReadResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userMetadataReadResponseMetadata",
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataReadResponseMetadata",
                  "nameOverride": undefined,
                  "schema": "userMetadata",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Metadata Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Updates the metadata object stored about the user by doing a shallow merge of the stored and the update JSONs
and removing properties set to null on the root level of the update object. The merged object is then reserialized and stored.

e.g.:
  - stored: \`{ "preferences": { "theme":"dark" }, "notifications": { "email": true }, "todos": ["example"] }\`

  - update: \`{ "notifications": { "sms": true }, "todos": null }\`

  - result: \`{ "preferences": { "theme":"dark" }, "notifications": { "sms": true } }\`
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UserMetadataUpdateRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "userMetadataUpdate",
      "path": "/recipe/user/metadata",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userMetadataUpdateRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataUpdateRequestUserId",
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userMetadataUpdateRequestMetadataUpdate",
              "key": "metadataUpdate",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataUpdateRequestMetadataUpdate",
                  "nameOverride": undefined,
                  "schema": "userMetadataUpdate",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userMetadataUpdateResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataUpdateResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userMetadataUpdateResponseMetadata",
              "key": "metadata",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataUpdateResponseMetadata",
                  "nameOverride": undefined,
                  "schema": "userMetadata",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Metadata Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Removes the entire metadata JSON stored about the user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UserMetadataDeleteRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "userMetadataDelete",
      "path": "/recipe/user/metadata/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userMetadataDeleteRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataDeleteRequestUserId",
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataDeleteResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userMetadataDeleteResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataDeleteResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Metadata Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Creates a User Role mapping
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "AddUserRoleRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "addUserRole",
      "path": "/recipe/user/role",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "AddUserRoleRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "addUserRoleRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "AddUserRoleRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "addUserRoleRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "AddUserRoleRequestRole",
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "AddUserRoleResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "AddUserRoleResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "addUserRoleResponseOkDidUserAlreadyHaveRole",
                    "key": "didUserAlreadyHaveRole",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": true,
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Removes a User Role mapping
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "RemoveUserRoleRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "removeUserRole",
      "path": "/recipe/user/role/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveUserRoleRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "removeUserRoleRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveUserRoleRequestUserId",
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "removeUserRoleRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveUserRoleRequestRole",
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RemoveUserRoleResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RemoveUserRoleResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "removeUserRoleResponseOkDidUserHaveRole",
                    "key": "didUserHaveRole",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": true,
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive the roles associated with the user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetUserRolesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getUserRoles",
      "path": "/recipe/user/roles",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "schema": {
              "example": "fa7a0841-b533-4478-9253-0fde890c576",
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetUserRolesResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getUserRolesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUserRolesResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getUserRolesResponseRoles",
              "key": "roles",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "GetUserRolesResponseRolesItem",
                    "nameOverride": undefined,
                    "schema": "role",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive the users associated with the role.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetRoleUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getRoleUsers",
      "path": "/recipe/role/users",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "role",
          "schema": {
            "description": undefined,
            "schema": {
              "example": "admin",
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetRoleUsersResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetRoleUsersResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getRoleUsersResponseOkUsers",
                    "key": "users",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "type": "array",
                        "value": {
                          "description": undefined,
                          "generatedName": "GetRoleUsersResponseOkUsersItem",
                          "nameOverride": undefined,
                          "schema": "userId",
                          "type": "reference",
                        },
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Creates a role with permissions, can also be used to add permissions to a role
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PutRoleRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "putRole",
      "path": "/recipe/role",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PutRoleRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "putRoleRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "PutRoleRequestRole",
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "putRoleRequestPermissions",
              "key": "permissions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "example": "permission",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PutRoleResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "putRoleResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutRoleResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "putRoleResponseCreatedNewRole",
              "key": "createdNewRole",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": true,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive the permissions associated with a role
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetRolePermissionsRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getRolePermissions",
      "path": "/recipe/role/permissions",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "role",
          "schema": {
            "description": undefined,
            "schema": {
              "example": "admin",
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetRolePermissionsResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetRolePermissionsResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getRolePermissionsResponseOkPermissions",
                    "key": "permissions",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "type": "array",
                        "value": {
                          "description": undefined,
                          "schema": {
                            "example": "permission",
                            "maxLength": undefined,
                            "minLength": undefined,
                            "type": "string",
                          },
                          "type": "primitive",
                        },
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Removes permissions mapped to a role, if no permissions are passed all permissions mapped to the role are removed
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "RemoveRolePermissionsRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "removeRolePermissions",
      "path": "/recipe/role/permissions/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveRolePermissionsRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "removeRolePermissionsRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveRolePermissionsRequestRole",
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "removeRolePermissionsRequestPermissions",
              "key": "permissions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "example": "permission",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RemoveRolePermissionsResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RemoveRolePermissionsResponseOk",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive the roles associated with the permission
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetPermissionRolesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getPermissionRoles",
      "path": "/recipe/permission/roles",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "permission",
          "schema": {
            "description": undefined,
            "schema": {
              "example": "permission",
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetPermissionRolesResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getPermissionRolesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetPermissionRolesResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getPermissionRolesResponseRoles",
              "key": "roles",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "example": "admin",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Deletes a role
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "RemoveRoleRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "removeRole",
      "path": "/recipe/role/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveRoleRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "removeRoleRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveRoleRequestRole",
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveRoleResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "removeRoleResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RemoveRoleResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "removeRoleResponseDidRoleExist",
              "key": "didRoleExist",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": true,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive all created roles
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetRolesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getRoles",
      "path": "/recipe/roles",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetRolesResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getRolesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetRolesResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getRolesResponseRoles",
              "key": "roles",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "example": "admin",
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get user and session information for a given session handle
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetSessionInfoRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getSessionInfo",
      "path": "/recipe/session",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "sessionHandle",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionInfoRequestSessionHandle",
              "nameOverride": undefined,
              "schema": "handle",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get user and session information for a given session handle",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetSessionInfoResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetSessionInfoResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkUserDataInDatabase",
                    "key": "userDataInDatabase",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkUserDataInDatabase",
                        "nameOverride": undefined,
                        "schema": "userDataInDatabase",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkUserDataInJwt",
                    "key": "userDataInJWT",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkUserDataInJwt",
                        "nameOverride": undefined,
                        "schema": "userDataInJWT",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkUserId",
                        "nameOverride": undefined,
                        "schema": "userId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkExpiry",
                    "key": "expiry",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkExpiry",
                        "nameOverride": undefined,
                        "schema": "expiry",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkTimeCreated",
                    "key": "timeCreated",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkTimeCreated",
                        "nameOverride": undefined,
                        "schema": "timeCreated",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkSessionHandle",
                    "key": "sessionHandle",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkSessionHandle",
                        "nameOverride": undefined,
                        "schema": "handle",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Create a new Session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "CreateNewSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "createNewSession",
      "path": "/recipe/session",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateNewSessionRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "createNewSessionRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionRequestUserId",
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createNewSessionRequestUserDataInJwt",
              "key": "userDataInJWT",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionRequestUserDataInJwt",
                  "nameOverride": undefined,
                  "schema": "userDataInJWT",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createNewSessionRequestUserDataInDatabase",
              "key": "userDataInDatabase",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionRequestUserDataInDatabase",
                  "nameOverride": undefined,
                  "schema": "userDataInDatabase",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createNewSessionRequestEnableAntiCsrf",
              "key": "enableAntiCsrf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionRequestEnableAntiCsrf",
                  "nameOverride": undefined,
                  "schema": "enableAntiCsrf",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createNewSessionRequestUseDynamicSigningKey",
              "key": "useDynamicSigningKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Decides if the token should be signed with a dynamic or static key, defaults to true",
                  "schema": {
                    "example": false,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Create a new Session",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateNewSessionResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "createNewSessionResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createNewSessionResponseSession",
              "key": "session",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseSession",
                  "nameOverride": undefined,
                  "schema": "session",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createNewSessionResponseAccessToken",
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseAccessToken",
                  "nameOverride": undefined,
                  "schema": "cookieInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createNewSessionResponseRefreshToken",
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseRefreshToken",
                  "nameOverride": undefined,
                  "schema": "cookieInfo",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createNewSessionResponseAntiCsrfToken",
              "key": "antiCsrfToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseAntiCsrfToken",
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete a sesion
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "DeleteSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "deleteSession",
      "path": "/recipe/session/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "DeleteSessionRequestBody",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "DeleteSessionRequestBodySessionHandles",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "deleteSessionRequestBodySessionHandlesSessionHandles",
                    "key": "sessionHandles",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "DeleteSessionRequestBodySessionHandlesSessionHandles",
                        "nameOverride": undefined,
                        "schema": "sessionHandles",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "DeleteSessionRequestBodyUserId",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "deleteSessionRequestBodyUserIdUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "DeleteSessionRequestBodyUserIdUserId",
                        "nameOverride": undefined,
                        "schema": "userId",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Delete a session",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteSessionResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteSessionResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteSessionResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "deleteSessionResponseSessionHandlesRevoked",
              "key": "sessionHandlesRevoked",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteSessionResponseSessionHandlesRevoked",
                  "nameOverride": undefined,
                  "schema": "sessionHandles",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Verify a Session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "VerifySessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "verifySession",
      "path": "/recipe/session/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "VerifySessionRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "verifySessionRequestAccessToken",
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "VerifySessionRequestAccessToken",
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "verifySessionRequestEnableAntiCsrf",
              "key": "enableAntiCsrf",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "VerifySessionRequestEnableAntiCsrf",
                  "nameOverride": undefined,
                  "schema": "enableAntiCsrf",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "verifySessionRequestDoAntiCsrfCheck",
              "key": "doAntiCsrfCheck",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": false,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "verifySessionRequestCheckDatabase",
              "key": "checkDatabase",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Decides if we always check if the session exists in the DB or just do token validation, defaults to false.",
                  "schema": {
                    "example": false,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "verifySessionRequestAntiCsrfToken",
              "key": "antiCsrfToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "VerifySessionRequestAntiCsrfToken",
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Verify a session",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "VerifySessionResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifySessionResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "verifySessionResponseOkSession",
                    "key": "session",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifySessionResponseOkSession",
                        "nameOverride": undefined,
                        "schema": "session",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "verifySessionResponseOkAccessToken",
                    "key": "accessToken",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifySessionResponseOkAccessToken",
                        "nameOverride": undefined,
                        "schema": "cookieInfo",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TRY_REFRESH_TOKEN": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifySessionResponseTryRefreshToken",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "verifySessionResponseTryRefreshTokenMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifySessionResponseTryRefreshTokenMessage",
                        "nameOverride": undefined,
                        "schema": "message",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Refresh a Session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "RefreshSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "refreshSession",
      "path": "/recipe/session/refresh",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RefreshSessionRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "refreshSessionRequestRefreshToken",
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "generatedName": "RefreshSessionRequestRefreshToken",
                "nameOverride": undefined,
                "schema": "token",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "refreshSessionRequestEnableAntiCsrf",
              "key": "enableAntiCsrf",
              "schema": {
                "description": undefined,
                "generatedName": "RefreshSessionRequestEnableAntiCsrf",
                "nameOverride": undefined,
                "schema": "enableAntiCsrf",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "refreshSessionRequestAntiCsrfToken",
              "key": "antiCsrfToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RefreshSessionRequestAntiCsrfToken",
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Refresh a session",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RefreshSessionResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RefreshSessionResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "refreshSessionResponseOkSession",
                    "key": "session",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseOkSession",
                        "nameOverride": undefined,
                        "schema": "session",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "refreshSessionResponseOkAccessToken",
                    "key": "accessToken",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseOkAccessToken",
                        "nameOverride": undefined,
                        "schema": "cookieInfo",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "refreshSessionResponseOkRefreshToken",
                    "key": "refreshToken",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseOkRefreshToken",
                        "nameOverride": undefined,
                        "schema": "cookieInfo",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "refreshSessionResponseOkAntiCsrfToken",
                    "key": "antiCsrfToken",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseOkAntiCsrfToken",
                        "nameOverride": undefined,
                        "schema": "token",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TOKEN_THEFT_DETECTED": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RefreshSessionResponseTokenTheftDetected",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "refreshSessionResponseTokenTheftDetectedSession",
                    "key": "session",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "allOfPropertyConflicts": [],
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseTokenTheftDetectedSession",
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "refreshSessionResponseTokenTheftDetectedSessionHandle",
                            "key": "handle",
                            "schema": {
                              "description": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "RefreshSessionResponseTokenTheftDetectedSessionHandle",
                                "nameOverride": undefined,
                                "schema": "handle",
                                "type": "reference",
                              },
                            },
                          },
                          {
                            "conflict": {},
                            "generatedName": "refreshSessionResponseTokenTheftDetectedSessionUserId",
                            "key": "userId",
                            "schema": {
                              "description": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "RefreshSessionResponseTokenTheftDetectedSessionUserId",
                                "nameOverride": undefined,
                                "schema": "userId",
                                "type": "reference",
                              },
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get session handles for a user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetUserSessionHandlesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getUserSessionHandles",
      "path": "/recipe/session/user",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "fa7a0841-b533-4478-9253-0fde890c576",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get user Session Handles",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetUserSessionHandlesResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getUserSessionHandlesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUserSessionHandlesResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getUserSessionHandlesResponseSessionHandles",
              "key": "sessionHandles",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUserSessionHandlesResponseSessionHandles",
                  "nameOverride": undefined,
                  "schema": "sessionHandles",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Regenerate a session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "RegenerateSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "regenerateSession",
      "path": "/recipe/session/regenerate",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RegenerateSessionRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "regenerateSessionRequestAccessToken",
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RegenerateSessionRequestAccessToken",
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "regenerateSessionRequestUserDataInJwt",
              "key": "userDataInJWT",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RegenerateSessionRequestUserDataInJwt",
                  "nameOverride": undefined,
                  "schema": "userDataInJWT",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Regenerate user session",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RegenerateSessionResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RegenerateSessionResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "regenerateSessionResponseOkSession",
                    "key": "session",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RegenerateSessionResponseOkSession",
                        "nameOverride": undefined,
                        "schema": "session",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "regenerateSessionResponseOkAccessToken",
                    "key": "accessToken",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RegenerateSessionResponseOkAccessToken",
                        "nameOverride": undefined,
                        "schema": "cookieInfo",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get session data
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetSessionDataRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getSessionData",
      "path": "/recipe/session/data",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Users session handle",
          "name": "sessionHandle",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionDataRequestSessionHandle",
              "nameOverride": undefined,
              "schema": "handle",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get Session Data",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetSessionDataResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetSessionDataResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getSessionDataResponseOkUserDataInDatabase",
                    "key": "userDataInDatabase",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionDataResponseOkUserDataInDatabase",
                        "nameOverride": undefined,
                        "schema": "userDataInDatabase",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Change session data
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PutSessionDataRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "putSessionData",
      "path": "/recipe/session/data",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PutSessionDataRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "putSessionDataRequestSessionHandle",
              "key": "sessionHandle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutSessionDataRequestSessionHandle",
                  "nameOverride": undefined,
                  "schema": "handle",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "putSessionDataRequestUserDataInDatabase",
              "key": "userDataInDatabase",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutSessionDataRequestUserDataInDatabase",
                  "nameOverride": undefined,
                  "schema": "userDataInDatabase",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Change Session Data",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "PutSessionDataResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "description": undefined,
                "generatedName": "ComponentsSchemasStatusOkResponse",
                "nameOverride": undefined,
                "schema": "statusOKResponse",
                "type": "reference",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Create a signed JWT
",
      "errorStatusCode": [
        400,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "CreateSignedJwtRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "createSignedJWT",
      "path": "/recipe/jwt",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateSignedJwtRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "createSignedJwtRequestPayload",
              "key": "payload",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateSignedJwtRequestPayload",
                  "nameOverride": undefined,
                  "schema": "createJWTPayload",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createSignedJwtRequestAlgorithm",
              "key": "algorithm",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateSignedJwtRequestAlgorithm",
                  "nameOverride": undefined,
                  "schema": "createJWTAlgorithm",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createSignedJwtRequestJwksDomain",
              "key": "jwksDomain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateSignedJwtRequestJwksDomain",
                  "nameOverride": undefined,
                  "schema": "jwksDomain",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createSignedJwtRequestValidity",
              "key": "validity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateSignedJwtRequestValidity",
                  "nameOverride": undefined,
                  "schema": "jwtValidity",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createSignedJwtRequestUseStaticSigningKey",
              "key": "useStaticSigningKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Decides if the token should be signed with a dynamic or static key, defaults to true",
                  "schema": {
                    "example": true,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Create a signed JWT",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "CreateSignedJwtResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateSignedJwtResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "createSignedJwtResponseOkJwt",
                    "key": "jwt",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNSUPPORTED_ALGORITHM_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateSignedJwtResponseUnsupportedAlgorithmError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "JWT Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve JWKs for JWT verification, containing both static and dynamic keys.
",
      "errorStatusCode": [
        400,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "RetrieveJwksRequest",
      "headers": [],
      "internal": undefined,
      "method": "GET",
      "operationId": "retrieveJwks",
      "path": "/.well-known/jwks.jsonx",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Retrieve JWKs for JWT verification, containing both static and dynamic keys.",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RetrieveJwksResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "retrieveJwksResponseKeys",
              "key": "keys",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "RetrieveJwksResponseKeysItem",
                    "nameOverride": undefined,
                    "schema": "jwk",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get JWT data for a session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetJwtDataRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getJWTData",
      "path": "/recipe/jwt/data",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Users session handle",
          "name": "sessionHandle",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetJwtDataRequestSessionHandle",
              "nameOverride": undefined,
              "schema": "handle",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get JWT Data",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetJwtDataResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetJwtDataResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getJwtDataResponseOkUserDataInJwt",
                    "key": "userDataInJWT",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetJwtDataResponseOkUserDataInJwt",
                        "nameOverride": undefined,
                        "schema": "userDataInJWT",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Change JWT data for a session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PutJwtDataRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "putJWTData",
      "path": "/recipe/jwt/data",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PutJwtDataRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "putJwtDataRequestSessionHandle",
              "key": "sessionHandle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutJwtDataRequestSessionHandle",
                  "nameOverride": undefined,
                  "schema": "handle",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "putJwtDataRequestUserDataInJwt",
              "key": "userDataInJWT",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutJwtDataRequestUserDataInJwt",
                  "nameOverride": undefined,
                  "schema": "userDataInJWT",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Change JWT Data for a session",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "PutJwtDataResponse",
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "description": undefined,
                "generatedName": "ComponentsSchemasStatusOkResponse",
                "nameOverride": undefined,
                "schema": "statusOKResponse",
                "type": "reference",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Create a dashboard user
",
      "errorStatusCode": [
        400,
        401,
        402,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "CreateDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "createDashboardUser",
      "path": "/recipe/dashboard/user",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateDashboardUserRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "createDashboardUserRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "test@example.com",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "createDashboardUserRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "password@123",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "CreateDashboardUserResponse",
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateDashboardUserResponseEmailAlreadyExistsError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "INVALID_EMAIL_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateDashboardUserResponseInvalidEmailError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateDashboardUserResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "createDashboardUserResponseOkUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "allOfPropertyConflicts": [],
                        "description": undefined,
                        "generatedName": "CreateDashboardUserResponseOkUser",
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "createDashboardUserResponseOkUserUserId",
                            "key": "userId",
                            "schema": {
                              "description": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "schema": {
                                  "example": "example-userid",
                                  "maxLength": undefined,
                                  "minLength": undefined,
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                          {
                            "conflict": {},
                            "generatedName": "createDashboardUserResponseOkUserEmail",
                            "key": "email",
                            "schema": {
                              "description": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "schema": {
                                  "example": "test@example.com",
                                  "maxLength": undefined,
                                  "minLength": undefined,
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                          {
                            "conflict": {},
                            "generatedName": "createDashboardUserResponseOkUserTimeCreated",
                            "key": "timeCreated",
                            "schema": {
                              "description": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "schema": {
                                  "example": 1231321231,
                                  "type": "double",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "PASSWORD_WEAK_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateDashboardUserResponsePasswordWeakError",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "createDashboardUserResponsePasswordWeakErrorMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "Your password must have at least 8 characters",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update a user's email or password
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "UpdateDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "updateDashboardUser",
      "path": "/recipe/dashboard/user",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "UpdateDashboardUserRequestBody",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserRequestBodyEmail",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyEmailEmail",
                    "key": "email",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "test@example.com",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyEmailNewPassword",
                    "key": "newPassword",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "password@123",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyEmailNewEmail",
                    "key": "newEmail",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "test2@example.com",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserRequestBodyUserId",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyUserIdUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "ue21r-fw32r3-d121-d1",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyUserIdNewPassword",
                    "key": "newPassword",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "password@123",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyUserIdNewEmail",
                    "key": "newEmail",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "test2@example.com",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UpdateDashboardUserResponse",
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponseEmailAlreadyExistsError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "INVALID_EMAIL_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponseInvalidEmailError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "updateDashboardUserResponseOkUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "allOfPropertyConflicts": [],
                        "description": undefined,
                        "generatedName": "UpdateDashboardUserResponseOkUser",
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "updateDashboardUserResponseOkUserUserId",
                            "key": "userId",
                            "schema": {
                              "description": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "schema": {
                                  "example": "r23r-f235th54-g3413gf-r32dr2",
                                  "maxLength": undefined,
                                  "minLength": undefined,
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                          {
                            "conflict": {},
                            "generatedName": "updateDashboardUserResponseOkUserEmail",
                            "key": "email",
                            "schema": {
                              "description": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "schema": {
                                  "example": "test@example.com",
                                  "maxLength": undefined,
                                  "minLength": undefined,
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                          {
                            "conflict": {},
                            "generatedName": "updateDashboardUserResponseOkUserTimeCreated",
                            "key": "timeCreated",
                            "schema": {
                              "description": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "schema": {
                                  "example": 391238234792,
                                  "type": "double",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "PASSWORD_WEAK_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponsePasswordWeakError",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "updateDashboardUserResponsePasswordWeakErrorMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "Your password must have at least 8 characters",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_USER_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponseUnknownUserError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete a dashboard user with their userId or email
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "DeleteDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "DELETE",
      "operationId": "deleteDashboardUser",
      "path": "/recipe/dashboard/user",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "test@example.com",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "ue1231-f32f290f2-f23r23f-323f2",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteDashboardUserResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteDashboardUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteDashboardUserResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "deleteDashboardUserResponseDidUserExist",
              "key": "didUserExist",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": undefined,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a list of call the dashboard users
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetAllDashboardUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getAllDashboardUsers",
      "path": "/recipe/dashboard/users",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get a list of dashboard users",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetAllDashboardUsersResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getAllDashboardUsersResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "literal",
                  "value": "OK",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getAllDashboardUsersResponseUsers",
              "key": "users",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "allOf": [],
                    "allOfPropertyConflicts": [],
                    "description": undefined,
                    "generatedName": "GetAllDashboardUsersResponseUsersItem",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "getAllDashboardUsersResponseUsersItemEmail",
                        "key": "email",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "schema": {
                              "example": "test@example.com",
                              "maxLength": undefined,
                              "minLength": undefined,
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "getAllDashboardUsersResponseUsersItemUserId",
                        "key": "userId",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "schema": {
                              "example": "uf2323-f223r233-f23-f23-f2f32",
                              "maxLength": undefined,
                              "minLength": undefined,
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "getAllDashboardUsersResponseUsersItemTimeCreated",
                        "key": "timeCreated",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "schema": {
                              "example": 16382348324,
                              "type": "double",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "getAllDashboardUsersResponseUsersItemIsSuspended",
                        "key": "isSuspended",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "schema": {
                              "example": false,
                              "type": "boolean",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Verify a Dashboard user's sessionId
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "VerifyDashboardUserSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "verifyDashboardUserSession",
      "path": "/recipe/dashboard/session/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "VerifyDashboardUserSessionRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "verifyDashboardUserSessionRequestSessionId",
              "key": "sessionId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "rf32f-f32342f-32f-323r2f3-23",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "VerifyDashboardUserSessionResponse",
            "nameOverride": undefined,
            "schemas": {
              "INVAlID_SESSION_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyDashboardUserSessionResponseInvAlIdSessionError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyDashboardUserSessionResponseOk",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "USER_SUSPENDED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyDashboardUserSessionResponseUserSuspendedError",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "verifyDashboardUserSessionResponseUserSuspendedErrorMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "You have crossed the free dashboard user limit. Please purchase the dashboard feature or login with a valid user account",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Revoke a Dashboard user's session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "RevokeDashboardUsersSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "DELETE",
      "operationId": "RevokeDashboardUsersSession",
      "path": "/recipe/dashboard/session",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "sessionId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "ue1231-f32f290f2-f23r23f-323f2",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RevokeDashboardUsersSessionResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revokeDashboardUsersSessionResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RevokeDashboardUsersSessionResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Signin a Dashboard user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "SignInDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "signInDashboardUser",
      "path": "/recipe/dashboard/signin",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "SignInDashboardUserRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "signInDashboardUserRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "test@example.com",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "signInDashboardUserRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "password@123",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "SignInDashboardUserResponse",
            "nameOverride": undefined,
            "schemas": {
              "INVAlID_CREDENTIALS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SignInDashboardUserResponseInvAlIdCredentialsError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SignInDashboardUserResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "signInDashboardUserResponseOkSessionId",
                    "key": "sessionId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": undefined,
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "USER_SUSPENDED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SignInDashboardUserResponseUserSuspendedError",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "signInDashboardUserResponseUserSuspendedErrorMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "You have crossed the free dashboard user limit. Please purchase the dashboard feature or login with a valid user account",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a list of the sessions for the dashboard user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetAllSessionsForDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getAllSessionsForDashboardUser",
      "path": "/recipe/dashboard/user/sessions",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "ue1231-f32f290f2-f23r23f-323f2",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get a list of sessions for dashboard user",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetAllSessionsForDashboardUserResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getAllSessionsForDashboardUserResponseSessions",
              "key": "sessions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "allOf": [],
                    "allOfPropertyConflicts": [],
                    "description": undefined,
                    "generatedName": "GetAllSessionsForDashboardUserResponseSessionsItem",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemUserId",
                        "key": "userId",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "GetAllSessionsForDashboardUserResponseSessionsItemUserId",
                            "nameOverride": undefined,
                            "schema": "userId",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemSessionId",
                        "key": "sessionId",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "schema": {
                              "example": "fni29f-f23f23-f2fq32qt-h35evf",
                              "maxLength": undefined,
                              "minLength": undefined,
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemTimeCreated",
                        "key": "timeCreated",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "schema": {
                              "example": 16382348324,
                              "type": "double",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemExpiry",
                        "key": "expiry",
                        "schema": {
                          "description": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "schema": {
                              "example": 16382348324,
                              "type": "double",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a list of compatible CDI versions
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetApiVersionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getApiVersion",
      "path": "/apiversion",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get api version",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetApiVersionResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getApiVersionResponseVersions",
              "key": "versions",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "example": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get path to the loaded config file
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetConfigRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getConfig",
      "path": "/config",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "pid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get api version",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetConfigResponse",
            "nameOverride": undefined,
            "schemas": {
              "NOT_ALLOWED": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetConfigResponseNotAllowed",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetConfigResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getConfigResponseOkPath",
                    "key": "path",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "/usr/lib/supertokens/config.yaml",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "headers": [],
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": "Hello",
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "GetHelloOnRootPathRequest",
      "headers": [],
      "internal": undefined,
      "method": "GET",
      "operationId": "getHelloOnRootPath",
      "path": "",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "schema": {
          "description": undefined,
          "generatedName": "GetHelloOnRootPathResponse",
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "headers": [],
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": "Hello",
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "GetHelloRequest",
      "headers": [],
      "internal": undefined,
      "method": "GET",
      "operationId": "getHello",
      "path": "/hello",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "schema": {
          "description": undefined,
          "generatedName": "GetHelloResponse",
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "headers": [],
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": "Hello",
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "PostHelloRequest",
      "headers": [],
      "internal": undefined,
      "method": "POST",
      "operationId": "postHello",
      "path": "/hello",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "schema": {
          "description": undefined,
          "generatedName": "PostHelloResponse",
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "headers": [],
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": "Hello",
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "PutHelloRequest",
      "headers": [],
      "internal": undefined,
      "method": "PUT",
      "operationId": "putHello",
      "path": "/hello",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "schema": {
          "description": undefined,
          "generatedName": "PutHelloResponse",
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "headers": [],
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": "Hello",
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "DeleteHelloRequest",
      "headers": [],
      "internal": undefined,
      "method": "DELETE",
      "operationId": "deleteHello",
      "path": "/hello",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "schema": {
          "description": undefined,
          "generatedName": "DeleteHelloResponse",
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Returns the telemetryID if it exists
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetTelemetryRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getTelemetry",
      "path": "/telemetry",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Returns the telemetryID if it exists",
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "GetTelemetryResponse",
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetTelemetryResponseTelemetryId",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getTelemetryResponseTelemetryIdExists",
                    "key": "exists",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": undefined,
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "conflict": {},
                    "generatedName": "getTelemetryResponseTelemetryIdTelemetryId",
                    "key": "telemetryId",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "99c87c72-1807-22d-9b39-7a88f95re56c",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetTelemetryResponseOne",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getTelemetryResponseOneExists",
                    "key": "exists",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": undefined,
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get number of users.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetUsersCountRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getUsersCount",
      "path": "/users/count",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The param should take an array of comma seperated strings",
          "name": "includeRecipeIds",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "val1,val2,val3..",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get number of users",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetUsersCountResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getUsersCountResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUsersCountResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getUsersCountResponseCount",
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": 1000000,
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get number of active users.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetActiveUsersCountRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getActiveUsersCount",
      "path": "/users/count/active",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "since",
          "schema": {
            "description": undefined,
            "schema": {
              "example": 1679875200000,
              "type": "double",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get number of active users",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetActiveUsersCountResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getActiveUsersCountResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetActiveUsersCountResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getActiveUsersCountResponseCount",
              "key": "count",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": 100000,
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "User Pagination
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getUsers",
      "path": "/users",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The param should take an array of comma seperated strings",
          "name": "includeRecipeIds",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "val1,val2,val3..",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "paginationToken",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "limit",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "timeJoinedOrder",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "example": undefined,
              "generatedName": "GetUsersRequestTimeJoinedOrder",
              "nameOverride": undefined,
              "type": "enum",
              "values": [
                {
                  "description": undefined,
                  "generatedName": "ASC",
                  "nameOverride": undefined,
                  "value": "ASC",
                },
                {
                  "description": undefined,
                  "generatedName": "DESC",
                  "nameOverride": undefined,
                  "value": "DESC",
                },
              ],
            },
          },
        },
        {
          "description": undefined,
          "name": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "test@example.com",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "phone",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": 911234567890,
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "recipe",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "emailpassword",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "provider",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": "google",
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "User Pagination",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetUsersResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getUsersResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUsersResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getUsersResponseUsers",
              "key": "users",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "allOf": [],
                    "allOfPropertyConflicts": [],
                    "description": undefined,
                    "generatedName": "GetUsersResponseUsersItem",
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "getUsersResponseUsersItemRecipeId",
                        "key": "recipeId",
                        "schema": {
                          "description": undefined,
                          "example": undefined,
                          "generatedName": "GetUsersResponseUsersItemRecipeId",
                          "nameOverride": undefined,
                          "type": "enum",
                          "values": [
                            {
                              "description": undefined,
                              "generatedName": "emailpassword",
                              "nameOverride": undefined,
                              "value": "emailpassword",
                            },
                            {
                              "description": undefined,
                              "generatedName": "thirdparty",
                              "nameOverride": undefined,
                              "value": "thirdparty",
                            },
                            {
                              "description": undefined,
                              "generatedName": "passwordless",
                              "nameOverride": undefined,
                              "value": "passwordless",
                            },
                          ],
                        },
                      },
                      {
                        "conflict": {},
                        "generatedName": "getUsersResponseUsersItemUser",
                        "key": "user",
                        "schema": {
                          "oneOf": {
                            "description": undefined,
                            "generatedName": "GetUsersResponseUsersItemUser",
                            "nameOverride": undefined,
                            "schemas": [
                              {
                                "description": undefined,
                                "generatedName": "GetUsersResponseUsersItemUserZero",
                                "nameOverride": undefined,
                                "schema": "user",
                                "type": "reference",
                              },
                              {
                                "description": undefined,
                                "generatedName": "GetUsersResponseUsersItemUserOne",
                                "nameOverride": undefined,
                                "schema": "thirdPartyUser",
                                "type": "reference",
                              },
                              {
                                "description": undefined,
                                "generatedName": "GetUsersResponseUsersItemUserTwo",
                                "nameOverride": undefined,
                                "schema": "passwordlessUser",
                                "type": "reference",
                              },
                            ],
                            "type": "undisciminated",
                          },
                          "type": "oneOf",
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getUsersResponseNextPaginationToken",
              "key": "nextPaginationToken",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUsersResponseNextPaginationToken",
                  "nameOverride": undefined,
                  "schema": "paginationToken",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete user
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [],
      "generatedRequestName": "DeleteUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "deleteUser",
      "path": "/user/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteUserRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteUserRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteUserRequestUserId",
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Returns OK if the operation succeeded (even if the user didn't exist before the call)",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteUserResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteUserResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve available tags for search
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetSearchTagsRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getSearchTags",
      "path": "/user/search/tags",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Returns available tags for search",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetSearchTagsResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getSearchTagsResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetSearchTagsResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getSearchTagsResponseTags",
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "example": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a list of the enabled enterprise features
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetFeatureFlagRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getFeatureFlag",
      "path": "/ee/featureflag",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetFeatureFlagResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "getFeatureFlagResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetFeatureFlagResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getFeatureFlagResponseFeatures",
              "key": "features",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "example": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "getFeatureFlagResponseUsageStats",
              "key": "usageStats",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "key": {
                    "description": undefined,
                    "schema": {
                      "example": undefined,
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                  },
                  "type": "map",
                  "value": {
                    "description": undefined,
                    "example": undefined,
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve license key
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GetLicenseRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getLicense",
      "path": "/ee/license",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetLicenseResponse",
            "nameOverride": undefined,
            "schemas": {
              "NO_LICENSE_KEY_FOUND_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetLicenseResponseNoLicenseKeyFoundError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetLicenseResponseOk",
                "nameOverride": undefined,
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "getLicenseResponseOkLicenseKey",
                    "key": "licenseKey",
                    "schema": {
                      "description": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "schema": {
                          "example": "eyJhbGciOiJIUzI1NiIsIn...",
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Set or sync license key
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [],
      "generatedRequestName": "SetLicenseRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "setLicense",
      "path": "/ee/license",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "SetLicenseRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "setLicenseRequestLicenseKey",
              "key": "licenseKey",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "schema": {
                    "example": "eyJhbGciOiJIUzI1NiIsIn...",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "SetLicenseResponse",
            "nameOverride": undefined,
            "schemas": {
              "INVALID_LICENSE_KEY_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SetLicenseResponseInvalidLicenseKeyError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "MISSING_EE_FOLDER_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SetLicenseResponseMissingEeFolderError",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SetLicenseResponseOk",
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete license key
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [],
      "generatedRequestName": "DeleteLicenseRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "example": undefined,
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "DELETE",
      "operationId": "deleteLicense",
      "path": "/ee/license",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteLicenseResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "deleteLicenseResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteLicenseResponseStatus",
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
  ],
  "errors": {
    "400": {
      "description": undefined,
      "generatedName": "BadRequestError",
      "nameOverride": null,
      "schema": {
        "description": undefined,
        "example": undefined,
        "type": "unknown",
      },
    },
    "401": {
      "description": undefined,
      "generatedName": "UnauthorizedError",
      "nameOverride": null,
      "schema": {
        "description": undefined,
        "example": undefined,
        "type": "unknown",
      },
    },
    "404": {
      "description": undefined,
      "generatedName": "NotFoundError",
      "nameOverride": null,
      "schema": {
        "description": undefined,
        "example": undefined,
        "type": "unknown",
      },
    },
    "500": {
      "description": undefined,
      "generatedName": "InternalServerError",
      "nameOverride": null,
      "schema": {
        "description": undefined,
        "example": undefined,
        "type": "unknown",
      },
    },
  },
  "hasEndpointsMarkedInternal": false,
  "nonRequestReferencedSchemas": [
    "userId",
    "statusOK",
    "preAuthSessionId",
    "linkCode",
    "deviceId",
    "userInputCode",
    "passwordlessUser",
    "email",
    "phoneNumber",
    "codeId",
    "timeCreated",
    "codeLifetime",
    "password",
    "user",
    "token",
    "paginationToken",
    "thirdPartyId",
    "thirdPartyUserId",
    "thirdPartyEmail",
    "thirdPartyUser",
    "isVerified",
    "userMetadata",
    "userMetadataUpdate",
    "role",
    "handle",
    "userDataInDatabase",
    "userDataInJWT",
    "expiry",
    "enableAntiCsrf",
    "session",
    "cookieInfo",
    "sessionHandles",
    "tryRefreshTokenResponse",
    "message",
    "tokenTheftResponse",
    "createJWTPayload",
    "createJWTAlgorithm",
    "jwksDomain",
    "jwtValidity",
    "jwk",
    "helloResponse",
    "timeJoined",
    "unauthorisedResponse",
    "emailVerificationVerifyTokenRequest",
  ],
  "schemas": {
    "codeId": {
      "description": "Uniquely identifies a code",
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "codeLifetime": {
      "description": "The maximum lifetime of the code in milliseconds",
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "cookieInfo": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "CookieInfo",
      "nameOverride": undefined,
      "properties": [
        {
          "conflict": {},
          "generatedName": "cookieInfoToken",
          "key": "token",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CookieInfoToken",
              "nameOverride": undefined,
              "schema": "token",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "cookieInfoExpiry",
          "key": "expiry",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CookieInfoExpiry",
              "nameOverride": undefined,
              "schema": "expiry",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "cookieInfoCreatedTime",
          "key": "createdTime",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CookieInfoCreatedTime",
              "nameOverride": undefined,
              "schema": "timeCreated",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "createJWTAlgorithm": {
      "description": "The algorithm to use when creating the JWT.",
      "type": "literal",
      "value": "RS256",
    },
    "createJWTPayload": {
      "description": "The payload of the JWT, should be a JSON object.",
      "key": {
        "description": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "type": "map",
      "value": {
        "type": "unknown",
      },
    },
    "deviceId": {
      "description": "A random identifier that should be stored on the device that started the sign in process.",
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "email": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "emailVerificationVerifyTokenRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "EmailVerificationVerifyTokenRequest",
      "nameOverride": undefined,
      "properties": [
        {
          "conflict": {},
          "generatedName": "emailVerificationVerifyTokenRequestUserId",
          "key": "userId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRequestUserId",
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "emailVerificationVerifyTokenRequestEmail",
          "key": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRequestEmail",
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "enableAntiCsrf": {
      "description": undefined,
      "schema": {
        "type": "boolean",
      },
      "type": "primitive",
    },
    "expiry": {
      "description": undefined,
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "handle": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "helloResponse": {
      "description": undefined,
      "type": "literal",
      "value": "Hello",
    },
    "internalError": {
      "description": undefined,
      "type": "literal",
      "value": "Internal Error",
    },
    "invalidJSON": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "isVerified": {
      "description": undefined,
      "schema": {
        "type": "boolean",
      },
      "type": "primitive",
    },
    "jwk": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A JWK that can be used to verify a JWT",
      "generatedName": "Jwk",
      "nameOverride": undefined,
      "properties": [
        {
          "conflict": {},
          "generatedName": "jwkAlg",
          "key": "alg",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "JwkAlg",
              "nameOverride": undefined,
              "schema": "createJWTAlgorithm",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "jwkKty",
          "key": "kty",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "jwkUse",
          "key": "use",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "jwkKid",
          "key": "kid",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": "Unique identifier for the JWK",
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "jwkX5C",
          "key": "x5c",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": "X.509 Certificate Chain",
              "type": "array",
              "value": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "jwksDomain": {
      "description": "This is used as the value for the issuer claim in the JWT payload.",
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "jwtValidity": {
      "description": "Duration in seconds, used to calculate JWT expiry",
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "linkCode": {
      "description": "URL-safe string that can be used to authenticate the user, without the deviceId",
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "message": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "methodNotSupported": {
      "description": undefined,
      "type": "literal",
      "value": "Method not supported",
    },
    "notFound": {
      "description": undefined,
      "type": "literal",
      "value": "Not Found",
    },
    "paginationToken": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "password": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "passwordlessUser": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "PasswordlessUser",
      "nameOverride": undefined,
      "properties": [
        {
          "conflict": {},
          "generatedName": "passwordlessUserId",
          "key": "id",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessUserId",
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "passwordlessUserEmail",
          "key": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessUserEmail",
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "passwordlessUserPhoneNumber",
          "key": "phoneNumber",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessUserPhoneNumber",
              "nameOverride": undefined,
              "schema": "phoneNumber",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "passwordlessUserTimeJoined",
          "key": "timeJoined",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessUserTimeJoined",
              "nameOverride": undefined,
              "schema": "timeJoined",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "phoneNumber": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "preAuthSessionId": {
      "description": "A random identifier that can be used to identify the login attempt/device.",
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "requestUnauthorised": {
      "description": undefined,
      "type": "literal",
      "value": "Invalid API key",
    },
    "role": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "session": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "Session",
      "nameOverride": undefined,
      "properties": [
        {
          "conflict": {},
          "generatedName": "sessionHandle",
          "key": "handle",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "SessionHandle",
              "nameOverride": undefined,
              "schema": "handle",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "sessionUserId",
          "key": "userId",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "SessionUserId",
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "sessionUserDataInJwt",
          "key": "userDataInJWT",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "SessionUserDataInJwt",
              "nameOverride": undefined,
              "schema": "userDataInJWT",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "sessionHandles": {
      "description": undefined,
      "type": "array",
      "value": {
        "description": undefined,
        "generatedName": "SessionHandlesItem",
        "nameOverride": undefined,
        "schema": "handle",
        "type": "reference",
      },
    },
    "statusOK": {
      "description": undefined,
      "type": "literal",
      "value": "OK",
    },
    "statusOKResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "StatusOkResponse",
      "nameOverride": undefined,
      "properties": [],
      "type": "object",
    },
    "thirdPartyEmail": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "ThirdPartyEmail",
      "nameOverride": undefined,
      "properties": [
        {
          "conflict": {},
          "generatedName": "thirdPartyEmailId",
          "key": "id",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyEmailId",
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "thirdPartyId": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "thirdPartyUser": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "ThirdPartyUser",
      "nameOverride": undefined,
      "properties": [
        {
          "conflict": {},
          "generatedName": "thirdPartyUserId",
          "key": "id",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyUserId",
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "thirdPartyUserTimeJoined",
          "key": "timeJoined",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyUserTimeJoined",
              "nameOverride": undefined,
              "schema": "timeJoined",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "thirdPartyUserEmail",
          "key": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyUserEmail",
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "thirdPartyUserThirdParty",
          "key": "thirdParty",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "allOf": [],
              "allOfPropertyConflicts": [],
              "description": undefined,
              "generatedName": "ThirdPartyUserThirdParty",
              "nameOverride": undefined,
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "thirdPartyUserThirdPartyId",
                  "key": "id",
                  "schema": {
                    "description": undefined,
                    "type": "nullable",
                    "value": {
                      "description": undefined,
                      "generatedName": "ThirdPartyUserThirdPartyId",
                      "nameOverride": undefined,
                      "schema": "thirdPartyId",
                      "type": "reference",
                    },
                  },
                },
                {
                  "conflict": {},
                  "generatedName": "thirdPartyUserThirdPartyUserId",
                  "key": "userId",
                  "schema": {
                    "description": undefined,
                    "type": "nullable",
                    "value": {
                      "description": undefined,
                      "generatedName": "ThirdPartyUserThirdPartyUserId",
                      "nameOverride": undefined,
                      "schema": "thirdPartyUserId",
                      "type": "reference",
                    },
                  },
                },
              ],
              "type": "object",
            },
          },
        },
      ],
      "type": "object",
    },
    "thirdPartyUserId": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "timeCreated": {
      "description": undefined,
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "timeJoined": {
      "description": undefined,
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "token": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "tokenTheftResponse": {
      "description": undefined,
      "type": "literal",
      "value": "TOKEN_THEFT_DETECTED",
    },
    "tryRefreshTokenResponse": {
      "description": undefined,
      "type": "literal",
      "value": "TRY_REFRESH_TOKEN",
    },
    "unauthorisedMessageResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "UnauthorisedMessageResponse",
      "nameOverride": undefined,
      "properties": [
        {
          "conflict": {},
          "generatedName": "unauthorisedMessageResponseMessage",
          "key": "message",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UnauthorisedMessageResponseMessage",
              "nameOverride": undefined,
              "schema": "message",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "unauthorisedResponse": {
      "description": undefined,
      "type": "literal",
      "value": "UNAUTHORISED",
    },
    "unknownRoleResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "UnknownRoleResponse",
      "nameOverride": undefined,
      "properties": [],
      "type": "object",
    },
    "unknownUserIdResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "UnknownUserIdResponse",
      "nameOverride": undefined,
      "properties": [],
      "type": "object",
    },
    "user": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "User",
      "nameOverride": undefined,
      "properties": [
        {
          "conflict": {},
          "generatedName": "userId",
          "key": "id",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserId",
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "userEmail",
          "key": "email",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserEmail",
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "conflict": {},
          "generatedName": "userTimeJoined",
          "key": "timeJoined",
          "schema": {
            "description": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserTimeJoined",
              "nameOverride": undefined,
              "schema": "timeJoined",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "userDataInDatabase": {
      "description": "should be a JSON object (not a JSON literal nor an array)",
      "key": {
        "description": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "type": "map",
      "value": {
        "type": "unknown",
      },
    },
    "userDataInJWT": {
      "description": "should be a JSON object (not a JSON literal nor an array)",
      "key": {
        "description": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "type": "map",
      "value": {
        "type": "unknown",
      },
    },
    "userId": {
      "description": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "userInputCode": {
      "description": "This can be used to authenticate the user when paired with the deviceId",
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "userMetadata": {
      "description": "should be a JSON object (not a JSON literal nor an array)",
      "key": {
        "description": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "type": "map",
      "value": {
        "type": "unknown",
      },
    },
    "userMetadataUpdate": {
      "description": "should be a JSON object (not a JSON literal nor an array)",
      "key": {
        "description": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "type": "map",
      "value": {
        "type": "unknown",
      },
    },
    "wrongCredentialsResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "WrongCredentialsResponse",
      "nameOverride": undefined,
      "properties": [],
      "type": "object",
    },
  },
  "securitySchemes": {},
  "servers": [],
  "tags": {
    "Core": {
      "description": undefined,
      "id": "Core",
    },
    "Dashboard Recipe": {
      "description": undefined,
      "id": "Dashboard Recipe",
    },
    "EmailPassword Recipe": {
      "description": undefined,
      "id": "EmailPassword Recipe",
    },
    "EmailVerification Recipe": {
      "description": undefined,
      "id": "EmailVerification Recipe",
    },
    "Passwordless Recipe": {
      "description": undefined,
      "id": "Passwordless Recipe",
    },
    "Session Recipe": {
      "description": undefined,
      "id": "Session Recipe",
    },
    "ThirdParty Recipe": {
      "description": undefined,
      "id": "ThirdParty Recipe",
    },
    "Totp Recipe": {
      "description": undefined,
      "id": "Totp Recipe",
    },
    "User Metadata Recipe": {
      "description": undefined,
      "id": "User Metadata Recipe",
    },
    "User Roles Recipe": {
      "description": undefined,
      "id": "User Roles Recipe",
    },
    "UserIdMapping Recipe": {
      "description": undefined,
      "id": "UserIdMapping Recipe",
    },
  },
  "title": "Core Driver Interface",
  "variables": {},
  "webhooks": [],
}
`;
